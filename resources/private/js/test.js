if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


            ;
var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this || self;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && typeof cur.execScript != "undefined") {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && opt_object !== undefined) {
      cur[part] = opt_object;
    } else {
      if (cur[part] && cur[part] !== Object.prototype[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;
    var defines = goog.global.CLOSURE_DEFINES;
    if (uncompiledDefines && uncompiledDefines.nodeType === undefined && Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {
      value = uncompiledDefines[name];
    } else {
      if (defines && defines.nodeType === undefined && Object.prototype.hasOwnProperty.call(defines, name)) {
        value = defines[name];
      }
    }
  }
  return value;
};
goog.FEATURESET_YEAR = goog.define("goog.FEATURESET_YEAR", 2012);
goog.DEBUG = goog.define("goog.DEBUG", true);
goog.LOCALE = goog.define("goog.LOCALE", "en");
goog.TRUSTED_SITE = goog.define("goog.TRUSTED_SITE", true);
goog.STRICT_MODE_COMPATIBLE = goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.DISALLOW_TEST_ONLY_CODE = goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.provide cannot be used within a module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, opt_obj) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, opt_obj);
};
goog.getScriptNonce = function(opt_window) {
  if (opt_window && opt_window != goog.global) {
    return goog.getScriptNonce_(opt_window.document);
  }
  if (goog.cspNonce_ === null) {
    goog.cspNonce_ = goog.getScriptNonce_(goog.global.document);
  }
  return goog.cspNonce_;
};
goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
goog.cspNonce_ = null;
goog.getScriptNonce_ = function(doc) {
  var script = doc.querySelector && doc.querySelector("script[nonce]");
  if (script) {
    var nonce = script["nonce"] || script.getAttribute("nonce");
    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {
      return nonce;
    }
  }
  return "";
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (typeof name !== "string" || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw new Error("Invalid module identifier");
  }
  if (!goog.isInGoogModuleLoader_()) {
    throw new Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name].exports;
    } else {
      if (!goog.implicitNamespaces_[name]) {
        var ns = goog.getObjectByName(name);
        return ns != null ? ns : null;
      }
    }
  }
  return null;
};
goog.ModuleType = {ES6:"es6", GOOG:"goog"};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
};
goog.isInGoogModuleLoader_ = function() {
  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
};
goog.isInEs6ModuleLoader_ = function() {
  var inLoader = !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6;
  if (inLoader) {
    return true;
  }
  var jscomp = goog.global["$jscomp"];
  if (jscomp) {
    if (typeof jscomp.getCurrentModulePath != "function") {
      return false;
    }
    return !!jscomp.getCurrentModulePath();
  }
  return false;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInGoogModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.declareModuleId = function(namespace) {
  if (!COMPILED) {
    if (!goog.isInEs6ModuleLoader_()) {
      throw new Error("goog.declareModuleId may only be called from " + "within an ES6 module");
    }
    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {
      throw new Error("goog.declareModuleId may only be called once per module.");
    }
    if (namespace in goog.loadedModules_) {
      throw new Error('Module with namespace "' + namespace + '" already exists.');
    }
  }
  if (goog.moduleLoaderState_) {
    goog.moduleLoaderState_.moduleName = namespace;
  } else {
    var jscomp = goog.global["$jscomp"];
    if (!jscomp || typeof jscomp.getCurrentModulePath != "function") {
      throw new Error('Module with namespace "' + namespace + '" has been loaded incorrectly.');
    }
    var exports = jscomp.require(jscomp.getCurrentModulePath());
    goog.loadedModules_[namespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:namespace};
  }
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw new Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.getObjectByName(name) != null;
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var i = 0; i < parts.length; i++) {
    cur = cur[parts[i]];
    if (cur == null) {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);
  }
};
goog.ENABLE_DEBUG_LOADER = goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(namespace) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER) {
      goog.debugLoader_.requested(namespace);
    }
    if (goog.isProvided_(namespace)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(namespace);
      }
    } else {
      if (goog.ENABLE_DEBUG_LOADER) {
        var moduleLoaderState = goog.moduleLoaderState_;
        goog.moduleLoaderState_ = null;
        try {
          goog.debugLoader_.load_(namespace);
        } finally {
          goog.moduleLoaderState_ = moduleLoaderState;
        }
      }
    }
    return null;
  }
};
goog.requireType = function(namespace) {
  return {};
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw new Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.SEAL_MODULE_EXPORTS = goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE = goog.define("goog.TRANSPILE", "detect");
goog.ASSUME_ES_MODULES_TRANSPILED = goog.define("goog.ASSUME_ES_MODULES_TRANSPILED", false);
goog.TRANSPILE_TO_LANGUAGE = goog.define("goog.TRANSPILE_TO_LANGUAGE", "");
goog.TRANSPILER = goog.define("goog.TRANSPILER", "transpile.js");
goog.hasBadLetScoping = null;
goog.useSafari10Workaround = function() {
  if (goog.hasBadLetScoping == null) {
    var hasBadLetScoping;
    try {
      hasBadLetScoping = !eval('"use strict";' + "let x \x3d 1; function f() { return typeof x; };" + 'f() \x3d\x3d "number";');
    } catch (e) {
      hasBadLetScoping = false;
    }
    goog.hasBadLetScoping = hasBadLetScoping;
  }
  return goog.hasBadLetScoping;
};
goog.workaroundSafari10EvalBug = function(moduleDef) {
  return "(function(){" + moduleDef + "\n" + ";" + "})();\n";
};
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:"", declareLegacyNamespace:false, type:goog.ModuleType.GOOG};
    var exports;
    if (goog.isFunction(moduleDef)) {
      exports = moduleDef.call(undefined, {});
    } else {
      if (typeof moduleDef === "string") {
        if (goog.useSafari10Workaround()) {
          moduleDef = goog.workaroundSafari10EvalBug(moduleDef);
        }
        exports = goog.loadModuleFromSource_.call(undefined, moduleDef);
      } else {
        throw new Error("Invalid module definition");
      }
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (typeof moduleName === "string" && moduleName) {
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        goog.constructNamespace_(moduleName, exports);
      } else {
        if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
          Object.seal(exports);
        }
      }
      var data = {exports:exports, type:goog.ModuleType.GOOG, moduleId:goog.moduleLoaderState_.moduleName};
      goog.loadedModules_[moduleName] = data;
    } else {
      throw new Error('Invalid module name "' + moduleName + '"');
    }
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function() {
  var exports = {};
  eval(arguments[0]);
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else {
      if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
        components.splice(--i, 2);
      } else {
        i++;
      }
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"];
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.transpile_ = function(code, path, target) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      (function() {
        (0, eval)(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      }).call(goog.global);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path, target);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call(value);
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (typeof obj.clone === "function") {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return +new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        try {
          goog.global.eval("var _evalTest_ \x3d 1;");
        } catch (ignore) {
        }
        if (typeof goog.global["_evalTest_"] != "undefined") {
          try {
            delete goog.global["_evalTest_"];
          } catch (ignore) {
          }
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.head.appendChild(scriptElt);
        doc.head.removeChild(scriptElt);
      }
    } else {
      throw new Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values, opt_options) {
  if (opt_options && opt_options.html) {
    str = str.replace(/</g, "\x26lt;");
  }
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw new Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (typeof caller.superClass_ !== "undefined") {
    var ctorArgs = new Array(arguments.length - 1);
    for (var i = 1; i < arguments.length; i++) {
      ctorArgs[i - 1] = arguments[i];
    }
    return caller.superClass_.constructor.apply(me, ctorArgs);
  }
  if (typeof opt_methodName != "string" && typeof opt_methodName != "symbol") {
    throw new Error("method names provided to goog.base must be a string or a symbol");
  }
  var args = new Array(arguments.length - 2);
  for (var i = 2; i < arguments.length; i++) {
    args[i - 2] = arguments[i];
  }
  var foundCaller = false;
  for (var proto = me.constructor.prototype; proto; proto = Object.getPrototypeOf(proto)) {
    if (proto[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return proto[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw new Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.scope is not supported within a module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw new Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.defineClass.SEAL_CLASS_INSTANCES = goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var superclassSealable = !goog.defineClass.isUnsealable_(superClass);
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    if (this.constructor === wrappedCtr && superclassSealable && Object.seal instanceof Function) {
      Object.seal(instance);
    }
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.isUnsealable_ = function(ctr) {
  return ctr && ctr.prototype && ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_];
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.isDocumentLoading_ = function() {
    var doc = goog.global.document;
    return doc.attachEvent ? doc.readyState != "complete" : doc.readyState == "loading";
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH != undefined && typeof goog.global.CLOSURE_BASE_PATH === "string") {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.findBasePath_();
  goog.Transpiler = function() {
    this.requiresTranspilation_ = null;
    this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;
  };
  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {
    var transpilationTarget = "es3";
    var requiresTranspilation = {"es3":false};
    var transpilationRequiredForAllLaterModes = false;
    function addNewerLanguageTranspilationCheck(modeName, isSupported) {
      if (transpilationRequiredForAllLaterModes) {
        requiresTranspilation[modeName] = true;
      } else {
        if (isSupported()) {
          transpilationTarget = modeName;
          requiresTranspilation[modeName] = false;
        } else {
          requiresTranspilation[modeName] = true;
          transpilationRequiredForAllLaterModes = true;
        }
      }
    }
    function evalCheck(code) {
      try {
        return !!eval(code);
      } catch (ignored) {
        return false;
      }
    }
    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
    addNewerLanguageTranspilationCheck("es5", function() {
      return evalCheck("[1,].length\x3d\x3d1");
    });
    addNewerLanguageTranspilationCheck("es6", function() {
      var re = /Edge\/(\d+)(\.\d)*/i;
      var edgeUserAgent = userAgent.match(re);
      if (edgeUserAgent) {
        return false;
      }
      var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
      return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
    });
    addNewerLanguageTranspilationCheck("es7", function() {
      return evalCheck("2 ** 2 \x3d\x3d 4");
    });
    addNewerLanguageTranspilationCheck("es8", function() {
      return evalCheck("async () \x3d\x3e 1, true");
    });
    addNewerLanguageTranspilationCheck("es9", function() {
      return evalCheck("({...rest} \x3d {}), true");
    });
    addNewerLanguageTranspilationCheck("es_next", function() {
      return false;
    });
    return {target:transpilationTarget, map:requiresTranspilation};
  };
  goog.Transpiler.prototype.needsTranspile = function(lang, module) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else {
      if (goog.TRANSPILE == "never") {
        return false;
      } else {
        if (!this.requiresTranspilation_) {
          var obj = this.createRequiresTranspilation_();
          this.requiresTranspilation_ = obj.map;
          this.transpilationTarget_ = this.transpilationTarget_ || obj.target;
        }
      }
    }
    if (lang in this.requiresTranspilation_) {
      if (this.requiresTranspilation_[lang]) {
        return true;
      } else {
        if (goog.inHtmlDocument_() && module == "es6" && !("noModule" in goog.global.document.createElement("script"))) {
          return true;
        } else {
          return false;
        }
      }
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.Transpiler.prototype.transpile = function(code, path) {
    return goog.transpile_(code, path, this.transpilationTarget_);
  };
  goog.transpiler_ = new goog.Transpiler;
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.DebugLoader_ = function() {
    this.dependencies_ = {};
    this.idToPath_ = {};
    this.written_ = {};
    this.loadingDeps_ = [];
    this.depsToLoad_ = [];
    this.paused_ = false;
    this.factory_ = new goog.DependencyFactory(goog.transpiler_);
    this.deferredCallbacks_ = {};
    this.deferredQueue_ = [];
  };
  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {
    var cb = callback;
    function resolve() {
      if (cb) {
        goog.global.setTimeout(cb, 0);
        cb = null;
      }
    }
    if (!namespaces.length) {
      resolve();
      return;
    }
    var deps = [];
    for (var i = 0; i < namespaces.length; i++) {
      var path = this.getPathFromDeps_(namespaces[i]);
      if (!path) {
        throw new Error("Unregonized namespace: " + namespaces[i]);
      }
      deps.push(this.dependencies_[path]);
    }
    var require = goog.require;
    var loaded = 0;
    for (var i = 0; i < namespaces.length; i++) {
      require(namespaces[i]);
      deps[i].onLoad(function() {
        if (++loaded == namespaces.length) {
          resolve();
        }
      });
    }
  };
  goog.DebugLoader_.prototype.loadClosureDeps = function() {
    var relPath = "deps.js";
    this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {}, false));
    this.loadDeps_();
  };
  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {
    var path = this.getPathFromDeps_(absPathOrId);
    if (path && (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {
      var callback = this.deferredCallbacks_[path];
      if (callback) {
        delete this.deferredCallbacks_[path];
        callback();
      }
    }
  };
  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {
    this.factory_ = factory;
  };
  goog.DebugLoader_.prototype.load_ = function(namespace) {
    if (!this.getPathFromDeps_(namespace)) {
      var errorMessage = "goog.require could not find: " + namespace;
      goog.logToConsole_(errorMessage);
      throw Error(errorMessage);
    } else {
      var loader = this;
      var deps = [];
      var visit = function(namespace) {
        var path = loader.getPathFromDeps_(namespace);
        if (!path) {
          throw new Error("Bad dependency path or symbol: " + namespace);
        }
        if (loader.written_[path]) {
          return;
        }
        loader.written_[path] = true;
        var dep = loader.dependencies_[path];
        for (var i = 0; i < dep.requires.length; i++) {
          if (!goog.isProvided_(dep.requires[i])) {
            visit(dep.requires[i]);
          }
        }
        deps.push(dep);
      };
      visit(namespace);
      var wasLoading = !!this.depsToLoad_.length;
      this.depsToLoad_ = this.depsToLoad_.concat(deps);
      if (!this.paused_ && !wasLoading) {
        this.loadDeps_();
      }
    }
  };
  goog.DebugLoader_.prototype.loadDeps_ = function() {
    var loader = this;
    var paused = this.paused_;
    while (this.depsToLoad_.length && !paused) {
      (function() {
        var loadCallDone = false;
        var dep = loader.depsToLoad_.shift();
        var loaded = false;
        loader.loading_(dep);
        var controller = {pause:function() {
          if (loadCallDone) {
            throw new Error("Cannot call pause after the call to load.");
          } else {
            paused = true;
          }
        }, resume:function() {
          if (loadCallDone) {
            loader.resume_();
          } else {
            paused = false;
          }
        }, loaded:function() {
          if (loaded) {
            throw new Error("Double call to loaded.");
          }
          loaded = true;
          loader.loaded_(dep);
        }, pending:function() {
          var pending = [];
          for (var i = 0; i < loader.loadingDeps_.length; i++) {
            pending.push(loader.loadingDeps_[i]);
          }
          return pending;
        }, setModuleState:function(type) {
          goog.moduleLoaderState_ = {type:type, moduleName:"", declareLegacyNamespace:false};
        }, registerEs6ModuleExports:function(path, exports, opt_closureNamespace) {
          if (opt_closureNamespace) {
            goog.loadedModules_[opt_closureNamespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:opt_closureNamespace || ""};
          }
        }, registerGoogModuleExports:function(moduleId, exports) {
          goog.loadedModules_[moduleId] = {exports:exports, type:goog.ModuleType.GOOG, moduleId:moduleId};
        }, clearModuleState:function() {
          goog.moduleLoaderState_ = null;
        }, defer:function(callback) {
          if (loadCallDone) {
            throw new Error("Cannot register with defer after the call to load.");
          }
          loader.defer_(dep, callback);
        }, areDepsLoaded:function() {
          return loader.areDepsLoaded_(dep.requires);
        }};
        try {
          dep.load(controller);
        } finally {
          loadCallDone = true;
        }
      })();
    }
    if (paused) {
      this.pause_();
    }
  };
  goog.DebugLoader_.prototype.pause_ = function() {
    this.paused_ = true;
  };
  goog.DebugLoader_.prototype.resume_ = function() {
    if (this.paused_) {
      this.paused_ = false;
      this.loadDeps_();
    }
  };
  goog.DebugLoader_.prototype.loading_ = function(dep) {
    this.loadingDeps_.push(dep);
  };
  goog.DebugLoader_.prototype.loaded_ = function(dep) {
    for (var i = 0; i < this.loadingDeps_.length; i++) {
      if (this.loadingDeps_[i] == dep) {
        this.loadingDeps_.splice(i, 1);
        break;
      }
    }
    for (var i = 0; i < this.deferredQueue_.length; i++) {
      if (this.deferredQueue_[i] == dep.path) {
        this.deferredQueue_.splice(i, 1);
        break;
      }
    }
    if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length) {
      while (this.deferredQueue_.length) {
        this.requested(this.deferredQueue_.shift(), true);
      }
    }
    dep.loaded();
  };
  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {
    for (var i = 0; i < pathsOrIds.length; i++) {
      var path = this.getPathFromDeps_(pathsOrIds[i]);
      if (!path || !(path in this.deferredCallbacks_) && !goog.isProvided_(pathsOrIds[i])) {
        return false;
      }
    }
    return true;
  };
  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {
    if (absPathOrId in this.idToPath_) {
      return this.idToPath_[absPathOrId];
    } else {
      if (absPathOrId in this.dependencies_) {
        return absPathOrId;
      } else {
        return null;
      }
    }
  };
  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {
    this.deferredCallbacks_[dependency.path] = callback;
    this.deferredQueue_.push(dependency.path);
  };
  goog.LoadController = function() {
  };
  goog.LoadController.prototype.pause = function() {
  };
  goog.LoadController.prototype.resume = function() {
  };
  goog.LoadController.prototype.loaded = function() {
  };
  goog.LoadController.prototype.pending = function() {
  };
  goog.LoadController.prototype.registerEs6ModuleExports = function(path, exports, opt_closureNamespace) {
  };
  goog.LoadController.prototype.setModuleState = function(type) {
  };
  goog.LoadController.prototype.clearModuleState = function() {
  };
  goog.LoadController.prototype.defer = function(callback) {
  };
  goog.LoadController.prototype.areDepsLoaded = function() {
  };
  goog.Dependency = function(path, relativePath, provides, requires, loadFlags) {
    this.path = path;
    this.relativePath = relativePath;
    this.provides = provides;
    this.requires = requires;
    this.loadFlags = loadFlags;
    this.loaded_ = false;
    this.loadCallbacks_ = [];
  };
  goog.Dependency.prototype.getPathName = function() {
    var pathName = this.path;
    var protocolIndex = pathName.indexOf("://");
    if (protocolIndex >= 0) {
      pathName = pathName.substring(protocolIndex + 3);
      var slashIndex = pathName.indexOf("/");
      if (slashIndex >= 0) {
        pathName = pathName.substring(slashIndex + 1);
      }
    }
    return pathName;
  };
  goog.Dependency.prototype.onLoad = function(callback) {
    if (this.loaded_) {
      callback();
    } else {
      this.loadCallbacks_.push(callback);
    }
  };
  goog.Dependency.prototype.loaded = function() {
    this.loaded_ = true;
    var callbacks = this.loadCallbacks_;
    this.loadCallbacks_ = [];
    for (var i = 0; i < callbacks.length; i++) {
      callbacks[i]();
    }
  };
  goog.Dependency.defer_ = false;
  goog.Dependency.callbackMap_ = {};
  goog.Dependency.registerCallback_ = function(callback) {
    var key = Math.random().toString(32);
    goog.Dependency.callbackMap_[key] = callback;
    return key;
  };
  goog.Dependency.unregisterCallback_ = function(key) {
    delete goog.Dependency.callbackMap_[key];
  };
  goog.Dependency.callback_ = function(key, var_args) {
    if (key in goog.Dependency.callbackMap_) {
      var callback = goog.Dependency.callbackMap_[key];
      var args = [];
      for (var i = 1; i < arguments.length; i++) {
        args.push(arguments[i]);
      }
      callback.apply(undefined, args);
    } else {
      var errorMessage = "Callback key " + key + " does not exist (was base.js loaded more than once?).";
      throw Error(errorMessage);
    }
  };
  goog.Dependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      if (this.relativePath == "deps.js") {
        goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, " + "or setting CLOSURE_NO_DEPS to true.");
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var doc = goog.global.document;
    if (doc.readyState == "complete" && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
      var isDeps = /\bdeps.js$/.test(this.path);
      if (isDeps) {
        controller.loaded();
        return;
      } else {
        throw Error('Cannot write "' + this.path + '" after document load');
      }
    }
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
      var key = goog.Dependency.registerCallback_(function(script) {
        if (!goog.DebugLoader_.IS_OLD_IE_ || script.readyState == "complete") {
          goog.Dependency.unregisterCallback_(key);
          controller.loaded();
        }
      });
      var nonceAttr = !goog.DebugLoader_.IS_OLD_IE_ && goog.getScriptNonce() ? ' nonce\x3d"' + goog.getScriptNonce() + '"' : "";
      var event = goog.DebugLoader_.IS_OLD_IE_ ? "onreadystatechange" : "onload";
      var defer = goog.Dependency.defer_ ? "defer" : "";
      var script = '\x3cscript src\x3d"' + this.path + '" ' + event + "\x3d\"goog.Dependency.callback_('" + key + '\', this)" type\x3d"text/javascript" ' + defer + nonceAttr + "\x3e\x3c" + "/script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    } else {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = goog.Dependency.defer_;
      scriptEl.async = false;
      scriptEl.type = "text/javascript";
      var nonce = goog.getScriptNonce();
      if (nonce) {
        scriptEl.setAttribute("nonce", nonce);
      }
      if (goog.DebugLoader_.IS_OLD_IE_) {
        controller.pause();
        scriptEl.onreadystatechange = function() {
          if (scriptEl.readyState == "loaded" || scriptEl.readyState == "complete") {
            controller.loaded();
            controller.resume();
          }
        };
      } else {
        scriptEl.onload = function() {
          scriptEl.onload = null;
          controller.loaded();
        };
      }
      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path;
      doc.head.appendChild(scriptEl);
    }
  };
  goog.Es6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.Es6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);
  goog.Es6ModuleDependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      controller.pause();
      return;
    }
    var doc = goog.global.document;
    var dep = this;
    function write(src, contents) {
      if (contents) {
        var script = '\x3cscript type\x3d"module" crossorigin\x3e' + contents + "\x3c/" + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      } else {
        var script = '\x3cscript type\x3d"module" crossorigin src\x3d"' + src + '"\x3e\x3c/' + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      }
    }
    function append(src, contents) {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = true;
      scriptEl.async = false;
      scriptEl.type = "module";
      scriptEl.setAttribute("crossorigin", true);
      var nonce = goog.getScriptNonce();
      if (nonce) {
        scriptEl.setAttribute("nonce", nonce);
      }
      if (contents) {
        scriptEl.textContent = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(contents) : contents;
      } else {
        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) : src;
      }
      doc.head.appendChild(scriptEl);
    }
    var create;
    if (goog.isDocumentLoading_()) {
      create = write;
      goog.Dependency.defer_ = true;
    } else {
      create = append;
    }
    var beforeKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(beforeKey);
      controller.setModuleState(goog.ModuleType.ES6);
    });
    create(undefined, 'goog.Dependency.callback_("' + beforeKey + '")');
    create(this.path, undefined);
    var registerKey = goog.Dependency.registerCallback_(function(exports) {
      goog.Dependency.unregisterCallback_(registerKey);
      controller.registerEs6ModuleExports(dep.path, exports, goog.moduleLoaderState_.moduleName);
    });
    create(undefined, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + registerKey + '", m)');
    var afterKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(afterKey);
      controller.clearModuleState();
      controller.loaded();
    });
    create(undefined, 'goog.Dependency.callback_("' + afterKey + '")');
  };
  goog.TransformedDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.TransformedDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.contents_ = null;
    this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script"));
  };
  goog.inherits(goog.TransformedDependency, goog.Dependency);
  goog.TransformedDependency.prototype.load = function(controller) {
    var dep = this;
    function fetch() {
      dep.contents_ = goog.loadFileSync_(dep.path);
      if (dep.contents_) {
        dep.contents_ = dep.transform(dep.contents_);
        if (dep.contents_) {
          dep.contents_ += "\n//# sourceURL\x3d" + dep.path;
        }
      }
    }
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      fetch();
      if (this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_)) {
        this.contents_ = null;
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var isEs6 = this.loadFlags["module"] == goog.ModuleType.ES6;
    if (!this.lazyFetch_) {
      fetch();
    }
    function load() {
      if (dep.lazyFetch_) {
        fetch();
      }
      if (!dep.contents_) {
        return;
      }
      if (isEs6) {
        controller.setModuleState(goog.ModuleType.ES6);
      }
      var namespace;
      try {
        var contents = dep.contents_;
        dep.contents_ = null;
        goog.globalEval(contents);
        if (isEs6) {
          namespace = goog.moduleLoaderState_.moduleName;
        }
      } finally {
        if (isEs6) {
          controller.clearModuleState();
        }
      }
      if (isEs6) {
        goog.global["$jscomp"]["require"]["ensure"]([dep.getPathName()], function() {
          controller.registerEs6ModuleExports(dep.path, goog.global["$jscomp"]["require"](dep.getPathName()), namespace);
        });
      }
      controller.loaded();
    }
    function fetchInOwnScriptThenLoad() {
      var doc = goog.global.document;
      var key = goog.Dependency.registerCallback_(function() {
        goog.Dependency.unregisterCallback_(key);
        load();
      });
      var script = '\x3cscript type\x3d"text/javascript"\x3e' + goog.protectScriptTag_('goog.Dependency.callback_("' + key + '");') + "\x3c/" + "script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    }
    var anythingElsePending = controller.pending().length > 1;
    var useOldIeWorkAround = anythingElsePending && goog.DebugLoader_.IS_OLD_IE_;
    var needsAsyncLoading = goog.Dependency.defer_ && (anythingElsePending || goog.isDocumentLoading_());
    if (useOldIeWorkAround || needsAsyncLoading) {
      controller.defer(function() {
        load();
      });
      return;
    }
    var doc = goog.global.document;
    var isInternetExplorer = goog.inHtmlDocument_() && "ActiveXObject" in goog.global;
    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !isInternetExplorer) {
      goog.Dependency.defer_ = true;
      controller.pause();
      var oldCallback = doc.onreadystatechange;
      doc.onreadystatechange = function() {
        if (doc.readyState == "interactive") {
          doc.onreadystatechange = oldCallback;
          load();
          controller.resume();
        }
        if (goog.isFunction(oldCallback)) {
          oldCallback.apply(undefined, arguments);
        }
      };
    } else {
      if (goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() || !goog.isDocumentLoading_()) {
        load();
      } else {
        fetchInOwnScriptThenLoad();
      }
    }
  };
  goog.TransformedDependency.prototype.transform = function(contents) {
  };
  goog.TranspiledDependency = function(path, relativePath, provides, requires, loadFlags, transpiler) {
    goog.TranspiledDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.transpiler = transpiler;
  };
  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);
  goog.TranspiledDependency.prototype.transform = function(contents) {
    return this.transpiler.transpile(contents, this.getPathName());
  };
  goog.PreTranspiledEs6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.PreTranspiledEs6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);
  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(contents) {
    return contents;
  };
  goog.GoogModuleDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile, transpiler) {
    goog.GoogModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.needsTranspile_ = needsTranspile;
    this.transpiler_ = transpiler;
  };
  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);
  goog.GoogModuleDependency.prototype.transform = function(contents) {
    if (this.needsTranspile_) {
      contents = this.transpiler_.transpile(contents, this.getPathName());
    }
    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + contents + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + this.path + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(contents + "\n//# sourceURL\x3d" + this.path + "\n") + ");";
    }
  };
  goog.DebugLoader_.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document["all"]);
  goog.DebugLoader_.prototype.addDependency = function(relPath, provides, requires, opt_loadFlags) {
    provides = provides || [];
    relPath = relPath.replace(/\\/g, "/");
    var path = goog.normalizePath_(goog.basePath + relPath);
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":goog.ModuleType.GOOG} : {};
    }
    var dep = this.factory_.createDependency(path, relPath, provides, requires, opt_loadFlags, goog.transpiler_.needsTranspile(opt_loadFlags["lang"] || "es3", opt_loadFlags["module"]));
    this.dependencies_[path] = dep;
    for (var i = 0; i < provides.length; i++) {
      this.idToPath_[provides[i]] = path;
    }
    this.idToPath_[relPath] = path;
  };
  goog.DependencyFactory = function(transpiler) {
    this.transpiler = transpiler;
  };
  goog.DependencyFactory.prototype.createDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile) {
    if (loadFlags["module"] == goog.ModuleType.GOOG) {
      return new goog.GoogModuleDependency(path, relativePath, provides, requires, loadFlags, needsTranspile, this.transpiler);
    } else {
      if (needsTranspile) {
        return new goog.TranspiledDependency(path, relativePath, provides, requires, loadFlags, this.transpiler);
      } else {
        if (loadFlags["module"] == goog.ModuleType.ES6) {
          if (goog.TRANSPILE == "never" && goog.ASSUME_ES_MODULES_TRANSPILED) {
            return new goog.PreTranspiledEs6ModuleDependency(path, relativePath, provides, requires, loadFlags);
          } else {
            return new goog.Es6ModuleDependency(path, relativePath, provides, requires, loadFlags);
          }
        } else {
          return new goog.Dependency(path, relativePath, provides, requires, loadFlags);
        }
      }
    }
  };
  goog.debugLoader_ = new goog.DebugLoader_;
  goog.loadClosureDeps = function() {
    goog.debugLoader_.loadClosureDeps();
  };
  goog.setDependencyFactory = function(factory) {
    goog.debugLoader_.setDependencyFactory(factory);
  };
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.debugLoader_.loadClosureDeps();
  }
  goog.bootstrap = function(namespaces, callback) {
    goog.debugLoader_.bootstrap(namespaces, callback);
  };
}
goog.TRUSTED_TYPES_POLICY_NAME = goog.define("goog.TRUSTED_TYPES_POLICY_NAME", "");
goog.identity_ = function(s) {
  return s;
};
goog.createTrustedTypesPolicy = function(name) {
  var policy = null;
  var policyFactory = goog.global.trustedTypes || goog.global.TrustedTypes;
  if (!policyFactory || !policyFactory.createPolicy) {
    return policy;
  }
  try {
    policy = policyFactory.createPolicy(name, {createHTML:goog.identity_, createScript:goog.identity_, createScriptURL:goog.identity_, createURL:goog.identity_});
  } catch (e) {
    goog.logToConsole_(e.message);
  }
  return policy;
};
goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    const stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
  this.reportErrorToServer = true;
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.asserts.ENABLE_ASSERTS = goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  goog.debug.Error.call(this, goog.asserts.subs_(messagePattern, messageArgs));
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.subs_ = function(pattern, subs) {
  var splitParts = pattern.split("%s");
  var returnString = "";
  var subLast = splitParts.length - 1;
  for (var i = 0; i < subLast; i++) {
    var sub = i < subs.length ? subs[i] : "%s";
    returnString += splitParts[i] + sub;
  }
  return returnString + splitParts[subLast];
};
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.assertExists = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && value == null) {
    goog.asserts.doAssertFailure_("Expected to exist: %s.", [value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "number") {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "string") {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && typeof value !== "boolean") {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("Expected instanceof %s but got %s.", [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertFinite = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (typeof value != "number" || !isFinite(value))) {
    goog.asserts.doAssertFailure_("Expected %s to be a finite number but it is not.", [value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.asserts.getType_ = function(value) {
  if (value instanceof Function) {
    return value.displayName || value.name || "unknown type name";
  } else {
    if (value instanceof Object) {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } else {
      return value === null ? "null" : typeof value;
    }
  }
};
goog.provide("goog.dom.asserts");
goog.require("goog.asserts");
goog.dom.asserts.assertIsLocation = function(o) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (win) {
      if (!o || !(o instanceof win.Location) && o instanceof win.Element) {
        goog.asserts.fail("Argument is not a Location (or a non-Element mock); got: %s", goog.dom.asserts.debugStringForType_(o));
      }
    }
  }
  return o;
};
goog.dom.asserts.assertIsElementType_ = function(o, typename) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var win = goog.dom.asserts.getWindow_(o);
    if (win && typeof win[typename] != "undefined") {
      if (!o || !(o instanceof win[typename]) && (o instanceof win.Location || o instanceof win.Element)) {
        goog.asserts.fail("Argument is not a %s (or a non-Element, non-Location mock); " + "got: %s", typename, goog.dom.asserts.debugStringForType_(o));
      }
    }
  }
  return o;
};
goog.dom.asserts.assertIsHTMLAnchorElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLAnchorElement");
};
goog.dom.asserts.assertIsHTMLButtonElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLButtonElement");
};
goog.dom.asserts.assertIsHTMLLinkElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLLinkElement");
};
goog.dom.asserts.assertIsHTMLImageElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLImageElement");
};
goog.dom.asserts.assertIsHTMLAudioElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLAudioElement");
};
goog.dom.asserts.assertIsHTMLVideoElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLVideoElement");
};
goog.dom.asserts.assertIsHTMLInputElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLInputElement");
};
goog.dom.asserts.assertIsHTMLTextAreaElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLTextAreaElement");
};
goog.dom.asserts.assertIsHTMLCanvasElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLCanvasElement");
};
goog.dom.asserts.assertIsHTMLEmbedElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLEmbedElement");
};
goog.dom.asserts.assertIsHTMLFormElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFormElement");
};
goog.dom.asserts.assertIsHTMLFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLFrameElement");
};
goog.dom.asserts.assertIsHTMLIFrameElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLIFrameElement");
};
goog.dom.asserts.assertIsHTMLObjectElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLObjectElement");
};
goog.dom.asserts.assertIsHTMLScriptElement = function(o) {
  return goog.dom.asserts.assertIsElementType_(o, "HTMLScriptElement");
};
goog.dom.asserts.debugStringForType_ = function(value) {
  if (goog.isObject(value)) {
    try {
      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);
    } catch (e) {
      return "\x3cobject could not be stringified\x3e";
    }
  } else {
    return value === undefined ? "undefined" : value === null ? "null" : typeof value;
  }
};
goog.dom.asserts.getWindow_ = function(o) {
  try {
    var doc = o && o.ownerDocument;
    var win = doc && (doc.defaultView || doc.parentWindow);
    win = win || goog.global;
    if (win.Element && win.Location) {
      return win;
    }
  } catch (ex) {
  }
  return null;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = function() {
  return false;
};
goog.functions.TRUE = function() {
  return true;
};
goog.functions.NULL = function() {
  return null;
};
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw new Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    const self = this;
    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.partialRight = function(fn, var_args) {
  const rightArgs = Array.prototype.slice.call(arguments, 1);
  return function() {
    const self = this;
    const newArgs = Array.prototype.slice.call(arguments);
    newArgs.push.apply(newArgs, rightArgs);
    return fn.apply(self, newArgs);
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.equalTo = function(value, opt_useLooseComparison) {
  return function(other) {
    return opt_useLooseComparison ? value == other : value === other;
  };
};
goog.functions.compose = function(fn, var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    let result;
    if (length) {
      result = functions[length - 1].apply(self, arguments);
    }
    for (let i = length - 2; i >= 0; i--) {
      result = functions[i].call(self, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    let result;
    for (let i = 0; i < length; i++) {
      result = functions[i].apply(self, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    for (let i = 0; i < length; i++) {
      if (!functions[i].apply(self, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  const functions = arguments;
  const length = functions.length;
  return function() {
    const self = this;
    for (let i = 0; i < length; i++) {
      if (functions[i].apply(self, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    const self = this;
    return !f.apply(self, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  const temp = function() {
  };
  temp.prototype = constructor.prototype;
  const obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.functions.CACHE_RETURN_VALUE = goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  let called = false;
  let value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.functions.once = function(f) {
  let inner = f;
  return function() {
    if (inner) {
      const tmp = inner;
      inner = null;
      tmp();
    }
  };
};
goog.functions.debounce = function(f, interval, opt_scope) {
  let timeout = 0;
  return function(var_args) {
    goog.global.clearTimeout(timeout);
    const args = arguments;
    timeout = goog.global.setTimeout(function() {
      f.apply(opt_scope, args);
    }, interval);
  };
};
goog.functions.throttle = function(f, interval, opt_scope) {
  let timeout = 0;
  let shouldFire = false;
  let args = [];
  const handleTimeout = function() {
    timeout = 0;
    if (shouldFire) {
      shouldFire = false;
      fire();
    }
  };
  const fire = function() {
    timeout = goog.global.setTimeout(handleTimeout, interval);
    f.apply(opt_scope, args);
  };
  return function(var_args) {
    args = arguments;
    if (!timeout) {
      fire();
    } else {
      shouldFire = true;
    }
  };
};
goog.functions.rateLimit = function(f, interval, opt_scope) {
  let timeout = 0;
  const handleTimeout = function() {
    timeout = 0;
  };
  return function(var_args) {
    if (!timeout) {
      timeout = goog.global.setTimeout(handleTimeout, interval);
      f.apply(opt_scope, arguments);
    }
  };
};
goog.provide("goog.array");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.array.ASSUME_NATIVE_FUNCTIONS = goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", goog.FEATURESET_YEAR > 2012);
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (typeof arr === "string") {
    if (typeof obj !== "string" || obj.length != 1) {
      return -1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i < arr.length; i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (typeof arr === "string") {
    if (typeof obj !== "string" || obj.length != 1) {
      return -1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex; i >= 0; i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return -1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  Array.prototype.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; --i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.asserts.assert(f != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return Array.prototype.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : typeof arr === "string" ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = 0; i < l; i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : typeof arr === "string" ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = typeof arr === "string" ? arr.split("") : arr;
  for (var i = l - 1; i >= 0; i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return -1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1; i >= 0; i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeLast = function(arr, obj) {
  var i = goog.array.lastIndexOf(arr, obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.removeAllIf = function(arr, f, opt_obj) {
  var removedCount = 0;
  goog.array.forEachRight(arr, function(val, index) {
    if (f.call(opt_obj, val, index, arr)) {
      if (goog.array.removeAt(arr, index)) {
        removedCount++;
      }
    }
  });
  return removedCount;
};
goog.array.concat = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.join = function(var_args) {
  return Array.prototype.concat.apply([], arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0; i < length; i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return [];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1; i < arguments.length; i++) {
    var arr2 = arguments[i];
    if (goog.isArrayLike(arr2)) {
      var len1 = arr1.length || 0;
      var len2 = arr2.length || 0;
      arr1.length = len1 + len2;
      for (var j = 0; j < len2; j++) {
        arr1[len1 + j] = arr2[j];
      }
    } else {
      arr1.push(arr2);
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return Array.prototype.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return Array.prototype.slice.call(arr, start);
  } else {
    return Array.prototype.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(item) ? "o" + goog.getUid(item) : (typeof item).charAt(0) + item;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + (right - left >>> 1);
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : -left - 1;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  var compArr = new Array(arr.length);
  for (var i = 0; i < arr.length; i++) {
    compArr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(compArr, stableCompareFn);
  for (var i = 0; i < arr.length; i++) {
    arr[i] = compArr[i].value;
  }
};
goog.array.sortByKey = function(arr, keyFn, opt_compareFn) {
  var keyCompareFn = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return keyCompareFn(keyFn(a), keyFn(b));
  });
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  goog.array.sortByKey(arr, function(obj) {
    return obj[key];
  }, opt_compareFn);
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1; i < arr.length; i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0; i < l; i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0; i < l; i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.inverseDefaultCompare = function(a, b) {
  return -goog.array.defaultCompare(a, b);
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0; i < array.length; i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (key !== undefined) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return [];
  }
  if (step > 0) {
    for (var i = start; i < end; i += step) {
      array.push(i);
    }
  } else {
    for (var i = start; i > end; i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0; i < n; i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var CHUNK_SIZE = 8192;
  var result = [];
  for (var i = 0; i < arguments.length; i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      for (var c = 0; c < element.length; c += CHUNK_SIZE) {
        var chunk = goog.array.slice(element, c, c + CHUNK_SIZE);
        var recurseResult = goog.array.flatten.apply(null, chunk);
        for (var r = 0; r < recurseResult.length; r++) {
          result.push(recurseResult[r]);
        }
      }
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      Array.prototype.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        Array.prototype.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = Array.prototype.splice.call(arr, fromIndex, 1);
  Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return [];
  }
  var result = [];
  var minLen = arguments[0].length;
  for (var i = 1; i < arguments.length; i++) {
    if (arguments[i].length < minLen) {
      minLen = arguments[i].length;
    }
  }
  for (var i = 0; i < minLen; i++) {
    var value = [];
    for (var j = 0; j < arguments.length; j++) {
      value.push(arguments[j][i]);
    }
    result.push(value);
  }
  return result;
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1; i > 0; i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.array.copyByIndex = function(arr, index_arr) {
  var result = [];
  goog.array.forEach(index_arr, function(index) {
    result.push(arr[index]);
  });
  return result;
};
goog.array.concatMap = function(arr, f, opt_obj) {
  return goog.array.concat.apply([], goog.array.map(arr, f, opt_obj));
};
goog.provide("goog.dom.HtmlElement");
goog.dom.HtmlElement = function() {
};
goog.provide("goog.dom.TagName");
goog.require("goog.dom.HtmlElement");
goog.dom.TagName = function(tagName) {
  this.tagName_ = tagName;
};
goog.dom.TagName.prototype.toString = function() {
  return this.tagName_;
};
goog.dom.TagName.A = new goog.dom.TagName("A");
goog.dom.TagName.ABBR = new goog.dom.TagName("ABBR");
goog.dom.TagName.ACRONYM = new goog.dom.TagName("ACRONYM");
goog.dom.TagName.ADDRESS = new goog.dom.TagName("ADDRESS");
goog.dom.TagName.APPLET = new goog.dom.TagName("APPLET");
goog.dom.TagName.AREA = new goog.dom.TagName("AREA");
goog.dom.TagName.ARTICLE = new goog.dom.TagName("ARTICLE");
goog.dom.TagName.ASIDE = new goog.dom.TagName("ASIDE");
goog.dom.TagName.AUDIO = new goog.dom.TagName("AUDIO");
goog.dom.TagName.B = new goog.dom.TagName("B");
goog.dom.TagName.BASE = new goog.dom.TagName("BASE");
goog.dom.TagName.BASEFONT = new goog.dom.TagName("BASEFONT");
goog.dom.TagName.BDI = new goog.dom.TagName("BDI");
goog.dom.TagName.BDO = new goog.dom.TagName("BDO");
goog.dom.TagName.BIG = new goog.dom.TagName("BIG");
goog.dom.TagName.BLOCKQUOTE = new goog.dom.TagName("BLOCKQUOTE");
goog.dom.TagName.BODY = new goog.dom.TagName("BODY");
goog.dom.TagName.BR = new goog.dom.TagName("BR");
goog.dom.TagName.BUTTON = new goog.dom.TagName("BUTTON");
goog.dom.TagName.CANVAS = new goog.dom.TagName("CANVAS");
goog.dom.TagName.CAPTION = new goog.dom.TagName("CAPTION");
goog.dom.TagName.CENTER = new goog.dom.TagName("CENTER");
goog.dom.TagName.CITE = new goog.dom.TagName("CITE");
goog.dom.TagName.CODE = new goog.dom.TagName("CODE");
goog.dom.TagName.COL = new goog.dom.TagName("COL");
goog.dom.TagName.COLGROUP = new goog.dom.TagName("COLGROUP");
goog.dom.TagName.COMMAND = new goog.dom.TagName("COMMAND");
goog.dom.TagName.DATA = new goog.dom.TagName("DATA");
goog.dom.TagName.DATALIST = new goog.dom.TagName("DATALIST");
goog.dom.TagName.DD = new goog.dom.TagName("DD");
goog.dom.TagName.DEL = new goog.dom.TagName("DEL");
goog.dom.TagName.DETAILS = new goog.dom.TagName("DETAILS");
goog.dom.TagName.DFN = new goog.dom.TagName("DFN");
goog.dom.TagName.DIALOG = new goog.dom.TagName("DIALOG");
goog.dom.TagName.DIR = new goog.dom.TagName("DIR");
goog.dom.TagName.DIV = new goog.dom.TagName("DIV");
goog.dom.TagName.DL = new goog.dom.TagName("DL");
goog.dom.TagName.DT = new goog.dom.TagName("DT");
goog.dom.TagName.EM = new goog.dom.TagName("EM");
goog.dom.TagName.EMBED = new goog.dom.TagName("EMBED");
goog.dom.TagName.FIELDSET = new goog.dom.TagName("FIELDSET");
goog.dom.TagName.FIGCAPTION = new goog.dom.TagName("FIGCAPTION");
goog.dom.TagName.FIGURE = new goog.dom.TagName("FIGURE");
goog.dom.TagName.FONT = new goog.dom.TagName("FONT");
goog.dom.TagName.FOOTER = new goog.dom.TagName("FOOTER");
goog.dom.TagName.FORM = new goog.dom.TagName("FORM");
goog.dom.TagName.FRAME = new goog.dom.TagName("FRAME");
goog.dom.TagName.FRAMESET = new goog.dom.TagName("FRAMESET");
goog.dom.TagName.H1 = new goog.dom.TagName("H1");
goog.dom.TagName.H2 = new goog.dom.TagName("H2");
goog.dom.TagName.H3 = new goog.dom.TagName("H3");
goog.dom.TagName.H4 = new goog.dom.TagName("H4");
goog.dom.TagName.H5 = new goog.dom.TagName("H5");
goog.dom.TagName.H6 = new goog.dom.TagName("H6");
goog.dom.TagName.HEAD = new goog.dom.TagName("HEAD");
goog.dom.TagName.HEADER = new goog.dom.TagName("HEADER");
goog.dom.TagName.HGROUP = new goog.dom.TagName("HGROUP");
goog.dom.TagName.HR = new goog.dom.TagName("HR");
goog.dom.TagName.HTML = new goog.dom.TagName("HTML");
goog.dom.TagName.I = new goog.dom.TagName("I");
goog.dom.TagName.IFRAME = new goog.dom.TagName("IFRAME");
goog.dom.TagName.IMG = new goog.dom.TagName("IMG");
goog.dom.TagName.INPUT = new goog.dom.TagName("INPUT");
goog.dom.TagName.INS = new goog.dom.TagName("INS");
goog.dom.TagName.ISINDEX = new goog.dom.TagName("ISINDEX");
goog.dom.TagName.KBD = new goog.dom.TagName("KBD");
goog.dom.TagName.KEYGEN = new goog.dom.TagName("KEYGEN");
goog.dom.TagName.LABEL = new goog.dom.TagName("LABEL");
goog.dom.TagName.LEGEND = new goog.dom.TagName("LEGEND");
goog.dom.TagName.LI = new goog.dom.TagName("LI");
goog.dom.TagName.LINK = new goog.dom.TagName("LINK");
goog.dom.TagName.MAIN = new goog.dom.TagName("MAIN");
goog.dom.TagName.MAP = new goog.dom.TagName("MAP");
goog.dom.TagName.MARK = new goog.dom.TagName("MARK");
goog.dom.TagName.MATH = new goog.dom.TagName("MATH");
goog.dom.TagName.MENU = new goog.dom.TagName("MENU");
goog.dom.TagName.MENUITEM = new goog.dom.TagName("MENUITEM");
goog.dom.TagName.META = new goog.dom.TagName("META");
goog.dom.TagName.METER = new goog.dom.TagName("METER");
goog.dom.TagName.NAV = new goog.dom.TagName("NAV");
goog.dom.TagName.NOFRAMES = new goog.dom.TagName("NOFRAMES");
goog.dom.TagName.NOSCRIPT = new goog.dom.TagName("NOSCRIPT");
goog.dom.TagName.OBJECT = new goog.dom.TagName("OBJECT");
goog.dom.TagName.OL = new goog.dom.TagName("OL");
goog.dom.TagName.OPTGROUP = new goog.dom.TagName("OPTGROUP");
goog.dom.TagName.OPTION = new goog.dom.TagName("OPTION");
goog.dom.TagName.OUTPUT = new goog.dom.TagName("OUTPUT");
goog.dom.TagName.P = new goog.dom.TagName("P");
goog.dom.TagName.PARAM = new goog.dom.TagName("PARAM");
goog.dom.TagName.PICTURE = new goog.dom.TagName("PICTURE");
goog.dom.TagName.PRE = new goog.dom.TagName("PRE");
goog.dom.TagName.PROGRESS = new goog.dom.TagName("PROGRESS");
goog.dom.TagName.Q = new goog.dom.TagName("Q");
goog.dom.TagName.RP = new goog.dom.TagName("RP");
goog.dom.TagName.RT = new goog.dom.TagName("RT");
goog.dom.TagName.RTC = new goog.dom.TagName("RTC");
goog.dom.TagName.RUBY = new goog.dom.TagName("RUBY");
goog.dom.TagName.S = new goog.dom.TagName("S");
goog.dom.TagName.SAMP = new goog.dom.TagName("SAMP");
goog.dom.TagName.SCRIPT = new goog.dom.TagName("SCRIPT");
goog.dom.TagName.SECTION = new goog.dom.TagName("SECTION");
goog.dom.TagName.SELECT = new goog.dom.TagName("SELECT");
goog.dom.TagName.SMALL = new goog.dom.TagName("SMALL");
goog.dom.TagName.SOURCE = new goog.dom.TagName("SOURCE");
goog.dom.TagName.SPAN = new goog.dom.TagName("SPAN");
goog.dom.TagName.STRIKE = new goog.dom.TagName("STRIKE");
goog.dom.TagName.STRONG = new goog.dom.TagName("STRONG");
goog.dom.TagName.STYLE = new goog.dom.TagName("STYLE");
goog.dom.TagName.SUB = new goog.dom.TagName("SUB");
goog.dom.TagName.SUMMARY = new goog.dom.TagName("SUMMARY");
goog.dom.TagName.SUP = new goog.dom.TagName("SUP");
goog.dom.TagName.SVG = new goog.dom.TagName("SVG");
goog.dom.TagName.TABLE = new goog.dom.TagName("TABLE");
goog.dom.TagName.TBODY = new goog.dom.TagName("TBODY");
goog.dom.TagName.TD = new goog.dom.TagName("TD");
goog.dom.TagName.TEMPLATE = new goog.dom.TagName("TEMPLATE");
goog.dom.TagName.TEXTAREA = new goog.dom.TagName("TEXTAREA");
goog.dom.TagName.TFOOT = new goog.dom.TagName("TFOOT");
goog.dom.TagName.TH = new goog.dom.TagName("TH");
goog.dom.TagName.THEAD = new goog.dom.TagName("THEAD");
goog.dom.TagName.TIME = new goog.dom.TagName("TIME");
goog.dom.TagName.TITLE = new goog.dom.TagName("TITLE");
goog.dom.TagName.TR = new goog.dom.TagName("TR");
goog.dom.TagName.TRACK = new goog.dom.TagName("TRACK");
goog.dom.TagName.TT = new goog.dom.TagName("TT");
goog.dom.TagName.U = new goog.dom.TagName("U");
goog.dom.TagName.UL = new goog.dom.TagName("UL");
goog.dom.TagName.VAR = new goog.dom.TagName("VAR");
goog.dom.TagName.VIDEO = new goog.dom.TagName("VIDEO");
goog.dom.TagName.WBR = new goog.dom.TagName("WBR");
goog.provide("goog.object");
goog.object.is = function(v, v2) {
  if (v === v2) {
    return v !== 0 || 1 / v === 1 / v2;
  }
  return v !== v && v2 !== v2;
};
goog.object.forEach = function(obj, f, opt_obj) {
  for (const key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  const res = {};
  for (const key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  const res = {};
  for (const key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (const key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (const key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  let rv = 0;
  for (const key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (const key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (const key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  const res = [];
  let i = 0;
  for (const key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  const res = [];
  let i = 0;
  for (const key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  const isArrayLike = goog.isArrayLike(var_args);
  const keys = isArrayLike ? var_args : arguments;
  for (let i = isArrayLike ? 0 : 1; i < keys.length; i++) {
    if (obj == null) {
      return undefined;
    }
    obj = obj[keys[i]];
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return obj !== null && key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (const key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (const key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  const key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (const key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (const i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  let rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (obj !== null && key in obj) {
    throw new Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (obj !== null && key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.setWithReturnValueIfNotSet = function(obj, key, f) {
  if (key in obj) {
    return obj[key];
  }
  const val = f();
  obj[key] = val;
  return val;
};
goog.object.equals = function(a, b) {
  for (const k in a) {
    if (!(k in b) || a[k] !== b[k]) {
      return false;
    }
  }
  for (const k in b) {
    if (!(k in a)) {
      return false;
    }
  }
  return true;
};
goog.object.clone = function(obj) {
  const res = {};
  for (const key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  const type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (goog.isFunction(obj.clone)) {
      return obj.clone();
    }
    const clone = type == "array" ? [] : {};
    for (const key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  const transposed = {};
  for (const key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  let key;
  let source;
  for (let i = 1; i < arguments.length; i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (let j = 0; j < goog.object.PROTOTYPE_FIELDS_.length; j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  const argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw new Error("Uneven number of arguments");
  }
  const rv = {};
  for (let i = 0; i < argLength; i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  const argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  const rv = {};
  for (let i = 0; i < argLength; i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  let result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return !!Object.isFrozen && Object.isFrozen(obj);
};
goog.object.getAllPropertyNames = function(obj, opt_includeObjectPrototype, opt_includeFunctionPrototype) {
  if (!obj) {
    return [];
  }
  if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {
    return goog.object.getKeys(obj);
  }
  const visitedSet = {};
  let proto = obj;
  while (proto && (proto !== Object.prototype || !!opt_includeObjectPrototype) && (proto !== Function.prototype || !!opt_includeFunctionPrototype)) {
    const names = Object.getOwnPropertyNames(proto);
    for (let i = 0; i < names.length; i++) {
      visitedSet[names[i]] = true;
    }
    proto = Object.getPrototypeOf(proto);
  }
  return goog.object.getKeys(visitedSet);
};
goog.object.getSuperClass = function(constructor) {
  var proto = Object.getPrototypeOf(constructor.prototype);
  return proto && proto.constructor;
};
goog.provide("goog.dom.tags");
goog.require("goog.object");
goog.dom.tags.VOID_TAGS_ = goog.object.createSet("area", "base", "br", "col", "command", "embed", "hr", "img", "input", "keygen", "link", "meta", "param", "source", "track", "wbr");
goog.dom.tags.isVoidTag = function(tagName) {
  return goog.dom.tags.VOID_TAGS_[tagName] === true;
};
goog.provide("goog.html.trustedtypes");
goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#html") : null;
goog.provide("goog.string.TypedString");
goog.string.TypedString = function() {
};
goog.string.TypedString.prototype.implementsGoogStringTypedString;
goog.string.TypedString.prototype.getTypedStringValue;
goog.provide("goog.string.Const");
goog.require("goog.asserts");
goog.require("goog.string.TypedString");
goog.string.Const = function(opt_token, opt_content) {
  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ = opt_token === goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ = goog.string.Const.TYPE_MARKER_;
};
goog.string.Const.prototype.implementsGoogStringTypedString = true;
goog.string.Const.prototype.getTypedStringValue = function() {
  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
};
if (goog.DEBUG) {
  goog.string.Const.prototype.toString = function() {
    return "Const{" + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + "}";
  };
}
goog.string.Const.unwrap = function(stringConst) {
  if (stringConst instanceof goog.string.Const && stringConst.constructor === goog.string.Const && stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ === goog.string.Const.TYPE_MARKER_) {
    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;
  } else {
    goog.asserts.fail("expected object of type Const, got '" + stringConst + "'");
    return "type_error:Const";
  }
};
goog.string.Const.from = function(s) {
  return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, s);
};
goog.string.Const.TYPE_MARKER_ = {};
goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.string.Const.EMPTY = goog.string.Const.from("");
goog.provide("goog.html.SafeScript");
goog.require("goog.asserts");
goog.require("goog.html.trustedtypes");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.SafeScript = function() {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = "";
  this.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeScript.prototype.implementsGoogStringTypedString = true;
goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeScript.fromConstant = function(script) {
  var scriptString = goog.string.Const.unwrap(script);
  if (scriptString.length === 0) {
    return goog.html.SafeScript.EMPTY;
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);
};
goog.html.SafeScript.fromConstantAndArgs = function(code, var_args) {
  var args = [];
  for (var i = 1; i < arguments.length; i++) {
    args.push(goog.html.SafeScript.stringify_(arguments[i]));
  }
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("(" + goog.string.Const.unwrap(code) + ")(" + args.join(", ") + ");");
};
goog.html.SafeScript.fromJson = function(val) {
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(goog.html.SafeScript.stringify_(val));
};
goog.html.SafeScript.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();
};
if (goog.DEBUG) {
  goog.html.SafeScript.prototype.toString = function() {
    return "SafeScript{" + this.privateDoNotAccessOrElseSafeScriptWrappedValue_ + "}";
  };
}
goog.html.SafeScript.unwrap = function(safeScript) {
  return goog.html.SafeScript.unwrapTrustedScript(safeScript).toString();
};
goog.html.SafeScript.unwrapTrustedScript = function(safeScript) {
  if (safeScript instanceof goog.html.SafeScript && safeScript.constructor === goog.html.SafeScript && safeScript.SAFE_SCRIPT_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeScript.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeScript, got '" + safeScript + "' of type " + goog.typeOf(safeScript));
    return "type_error:SafeScript";
  }
};
goog.html.SafeScript.stringify_ = function(val) {
  var json = JSON.stringify(val);
  return json.replace(/</g, "\\x3c");
};
goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse = function(script) {
  return (new goog.html.SafeScript).initSecurityPrivateDoNotAccessOrElse_(script);
};
goog.html.SafeScript.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(script) {
  this.privateDoNotAccessOrElseSafeScriptWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScript(script) : script;
  return this;
};
goog.html.SafeScript.EMPTY = goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.fs.url");
goog.fs.url.createObjectUrl = function(blob) {
  return goog.fs.url.getUrlObject_().createObjectURL(blob);
};
goog.fs.url.revokeObjectUrl = function(url) {
  goog.fs.url.getUrlObject_().revokeObjectURL(url);
};
goog.fs.url.UrlObject_;
goog.fs.url.getUrlObject_ = function() {
  const urlObject = goog.fs.url.findUrlObject_();
  if (urlObject != null) {
    return urlObject;
  } else {
    throw new Error("This browser doesn't seem to support blob URLs");
  }
};
goog.fs.url.findUrlObject_ = function() {
  if (goog.global.URL !== undefined && goog.global.URL.createObjectURL !== undefined) {
    return goog.global.URL;
  } else {
    if (goog.global.webkitURL !== undefined && goog.global.webkitURL.createObjectURL !== undefined) {
      return goog.global.webkitURL;
    } else {
      if (goog.global.createObjectURL !== undefined) {
        return goog.global;
      } else {
        return null;
      }
    }
  }
};
goog.fs.url.browserSupportsObjectUrls = function() {
  return goog.fs.url.findUrlObject_() != null;
};
goog.provide("goog.i18n.bidi");
goog.provide("goog.i18n.bidi.Dir");
goog.provide("goog.i18n.bidi.DirectionalString");
goog.provide("goog.i18n.bidi.Format");
goog.i18n.bidi.FORCE_RTL = goog.define("goog.i18n.bidi.FORCE_RTL", false);
goog.i18n.bidi.IS_RTL = goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() == "ar" || goog.LOCALE.substring(0, 2).toLowerCase() == "fa" || goog.LOCALE.substring(0, 2).toLowerCase() == "he" || goog.LOCALE.substring(0, 2).toLowerCase() == "iw" || goog.LOCALE.substring(0, 2).toLowerCase() == "ps" || goog.LOCALE.substring(0, 2).toLowerCase() == "sd" || goog.LOCALE.substring(0, 2).toLowerCase() == "ug" || goog.LOCALE.substring(0, 2).toLowerCase() == "ur" || goog.LOCALE.substring(0, 
2).toLowerCase() == "yi") && (goog.LOCALE.length == 2 || goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") || goog.LOCALE.length >= 3 && goog.LOCALE.substring(0, 3).toLowerCase() == "ckb" && (goog.LOCALE.length == 3 || goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") || goog.LOCALE.length >= 7 && ((goog.LOCALE.substring(2, 3) == "-" || goog.LOCALE.substring(2, 3) == "_") && (goog.LOCALE.substring(3, 7).toLowerCase() == "adlm" || goog.LOCALE.substring(3, 
7).toLowerCase() == "arab" || goog.LOCALE.substring(3, 7).toLowerCase() == "hebr" || goog.LOCALE.substring(3, 7).toLowerCase() == "nkoo" || goog.LOCALE.substring(3, 7).toLowerCase() == "rohg" || goog.LOCALE.substring(3, 7).toLowerCase() == "thaa")) || goog.LOCALE.length >= 8 && ((goog.LOCALE.substring(3, 4) == "-" || goog.LOCALE.substring(3, 4) == "_") && (goog.LOCALE.substring(4, 8).toLowerCase() == "adlm" || goog.LOCALE.substring(4, 8).toLowerCase() == "arab" || goog.LOCALE.substring(4, 8).toLowerCase() == 
"hebr" || goog.LOCALE.substring(4, 8).toLowerCase() == "nkoo" || goog.LOCALE.substring(4, 8).toLowerCase() == "rohg" || goog.LOCALE.substring(4, 8).toLowerCase() == "thaa"));
goog.i18n.bidi.Format = {LRE:"‪", RLE:"‫", PDF:"‬", LRM:"‎", RLM:"‏"};
goog.i18n.bidi.Dir = {LTR:1, RTL:-1, NEUTRAL:0};
goog.i18n.bidi.RIGHT = "right";
goog.i18n.bidi.LEFT = "left";
goog.i18n.bidi.I18N_RIGHT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;
goog.i18n.bidi.I18N_LEFT = goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
goog.i18n.bidi.toDir = function(givenDir, opt_noNeutral) {
  if (typeof givenDir == "number") {
    return givenDir > 0 ? goog.i18n.bidi.Dir.LTR : givenDir < 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;
  } else {
    if (givenDir == null) {
      return null;
    } else {
      return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
    }
  }
};
goog.i18n.bidi.ltrChars_ = "A-Za-zÀ-ÖØ-öø-ʸ̀-֐ऀ-῿" + "‎Ⰰ-\ud801\ud804-\ud839\ud83c-\udbff" + "豈-﬜︀-﹯﻽-￿";
goog.i18n.bidi.rtlChars_ = "֑-ۯۺ-ࣿ‏\ud802-\ud803\ud83a-\ud83b" + "יִ-﷿ﹰ-ﻼ";
goog.i18n.bidi.htmlSkipReg_ = /<[^>]*>|&[^;]+;/g;
goog.i18n.bidi.stripHtmlIfNeeded_ = function(str, opt_isStripNeeded) {
  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, "") : str;
};
goog.i18n.bidi.rtlCharReg_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.ltrCharReg_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.hasAnyRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.hasRtlChar = goog.i18n.bidi.hasAnyRtl;
goog.i18n.bidi.hasAnyLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.ltrRe_ = new RegExp("^[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlRe_ = new RegExp("^[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.isRtlChar = function(str) {
  return goog.i18n.bidi.rtlRe_.test(str);
};
goog.i18n.bidi.isLtrChar = function(str) {
  return goog.i18n.bidi.ltrRe_.test(str);
};
goog.i18n.bidi.isNeutralChar = function(str) {
  return !goog.i18n.bidi.isLtrChar(str) && !goog.i18n.bidi.isRtlChar(str);
};
goog.i18n.bidi.ltrDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.rtlChars_ + "]*[" + goog.i18n.bidi.ltrChars_ + "]");
goog.i18n.bidi.rtlDirCheckRe_ = new RegExp("^[^" + goog.i18n.bidi.ltrChars_ + "]*[" + goog.i18n.bidi.rtlChars_ + "]");
goog.i18n.bidi.startsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlText = goog.i18n.bidi.startsWithRtl;
goog.i18n.bidi.startsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrText = goog.i18n.bidi.startsWithLtr;
goog.i18n.bidi.isRequiredLtrRe_ = /^http:\/\/.*/;
goog.i18n.bidi.isNeutralText = function(str, opt_isHtml) {
  str = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);
  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) && !goog.i18n.bidi.hasAnyRtl(str);
};
goog.i18n.bidi.ltrExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.ltrChars_ + "]" + "[^" + goog.i18n.bidi.rtlChars_ + "]*$");
goog.i18n.bidi.rtlExitDirCheckRe_ = new RegExp("[" + goog.i18n.bidi.rtlChars_ + "]" + "[^" + goog.i18n.bidi.ltrChars_ + "]*$");
goog.i18n.bidi.endsWithLtr = function(str, opt_isHtml) {
  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isLtrExitText = goog.i18n.bidi.endsWithLtr;
goog.i18n.bidi.endsWithRtl = function(str, opt_isHtml) {
  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));
};
goog.i18n.bidi.isRtlExitText = goog.i18n.bidi.endsWithRtl;
goog.i18n.bidi.rtlLocalesRe_ = new RegExp("^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|" + ".*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))" + "(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)", "i");
goog.i18n.bidi.isRtlLanguage = function(lang) {
  return goog.i18n.bidi.rtlLocalesRe_.test(lang);
};
goog.i18n.bidi.bracketGuardTextRe_ = /(\(.*?\)+)|(\[.*?\]+)|(\{.*?\}+)|(<.*?>+)/g;
goog.i18n.bidi.guardBracketInText = function(s, opt_isRtlContext) {
  const useRtl = opt_isRtlContext === undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;
  const mark = useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;
  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + "$\x26" + mark);
};
goog.i18n.bidi.enforceRtlInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3drtl");
  }
  return "\n\x3cspan dir\x3drtl\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceRtlInText = function(text) {
  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.enforceLtrInHtml = function(html) {
  if (html.charAt(0) == "\x3c") {
    return html.replace(/<\w+/, "$\x26 dir\x3dltr");
  }
  return "\n\x3cspan dir\x3dltr\x3e" + html + "\x3c/span\x3e";
};
goog.i18n.bidi.enforceLtrInText = function(text) {
  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;
};
goog.i18n.bidi.dimensionsRe_ = /:\s*([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)\s+([.\d][.\w]*)/g;
goog.i18n.bidi.leftRe_ = /left/gi;
goog.i18n.bidi.rightRe_ = /right/gi;
goog.i18n.bidi.tempRe_ = /%%%%/g;
goog.i18n.bidi.mirrorCSS = function(cssStr) {
  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, ":$1 $4 $3 $2").replace(goog.i18n.bidi.leftRe_, "%%%%").replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);
};
goog.i18n.bidi.doubleQuoteSubstituteRe_ = /([\u0591-\u05f2])"/g;
goog.i18n.bidi.singleQuoteSubstituteRe_ = /([\u0591-\u05f2])'/g;
goog.i18n.bidi.normalizeHebrewQuote = function(str) {
  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, "$1״").replace(goog.i18n.bidi.singleQuoteSubstituteRe_, "$1׳");
};
goog.i18n.bidi.wordSeparatorRe_ = /\s+/;
goog.i18n.bidi.hasNumeralsRe_ = /[\d\u06f0-\u06f9]/;
goog.i18n.bidi.rtlDetectionThreshold_ = 0.40;
goog.i18n.bidi.estimateDirection = function(str, opt_isHtml) {
  let rtlCount = 0;
  let totalCount = 0;
  let hasWeaklyLtr = false;
  const tokens = goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);
  for (let i = 0; i < tokens.length; i++) {
    const token = tokens[i];
    if (goog.i18n.bidi.startsWithRtl(token)) {
      rtlCount++;
      totalCount++;
    } else {
      if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {
        hasWeaklyLtr = true;
      } else {
        if (goog.i18n.bidi.hasAnyLtr(token)) {
          totalCount++;
        } else {
          if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {
            hasWeaklyLtr = true;
          }
        }
      }
    }
  }
  return totalCount == 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount > goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;
};
goog.i18n.bidi.detectRtlDirectionality = function(str, opt_isHtml) {
  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) == goog.i18n.bidi.Dir.RTL;
};
goog.i18n.bidi.setElementDirAndAlign = function(element, dir) {
  if (element) {
    const htmlElement = element;
    dir = goog.i18n.bidi.toDir(dir);
    if (dir) {
      htmlElement.style.textAlign = dir == goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;
      htmlElement.dir = dir == goog.i18n.bidi.Dir.RTL ? "rtl" : "ltr";
    }
  }
};
goog.i18n.bidi.setElementDirByTextDirectionality = function(element, text) {
  const htmlElement = element;
  switch(goog.i18n.bidi.estimateDirection(text)) {
    case goog.i18n.bidi.Dir.LTR:
      htmlElement.dir = "ltr";
      break;
    case goog.i18n.bidi.Dir.RTL:
      htmlElement.dir = "rtl";
      break;
    default:
      htmlElement.removeAttribute("dir");
  }
};
goog.i18n.bidi.DirectionalString = function() {
};
goog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;
goog.i18n.bidi.DirectionalString.prototype.getDirection;
goog.provide("goog.html.TrustedResourceUrl");
goog.require("goog.asserts");
goog.require("goog.html.trustedtypes");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.html.TrustedResourceUrl = function(opt_token, opt_content) {
  this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ = opt_token === goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString = true;
goog.html.TrustedResourceUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();
};
goog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.TrustedResourceUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
goog.html.TrustedResourceUrl.prototype.cloneWithParams = function(searchParams, opt_hashParams) {
  var url = goog.html.TrustedResourceUrl.unwrap(this);
  var parts = goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(url);
  var urlBase = parts[1];
  var urlSearch = parts[2] || "";
  var urlHash = parts[3] || "";
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(urlBase + goog.html.TrustedResourceUrl.stringifyParams_("?", urlSearch, searchParams) + goog.html.TrustedResourceUrl.stringifyParams_("#", urlHash, opt_hashParams));
};
if (goog.DEBUG) {
  goog.html.TrustedResourceUrl.prototype.toString = function() {
    return "TrustedResourceUrl{" + this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + "}";
  };
}
goog.html.TrustedResourceUrl.unwrap = function(trustedResourceUrl) {
  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(trustedResourceUrl).toString();
};
goog.html.TrustedResourceUrl.unwrapTrustedScriptURL = function(trustedResourceUrl) {
  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl && trustedResourceUrl.constructor === goog.html.TrustedResourceUrl && trustedResourceUrl.TRUSTED_RESOURCE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type TrustedResourceUrl, got '" + trustedResourceUrl + "' of type " + goog.typeOf(trustedResourceUrl));
    return "type_error:TrustedResourceUrl";
  }
};
goog.html.TrustedResourceUrl.format = function(format, args) {
  var formatStr = goog.string.Const.unwrap(format);
  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {
    throw new Error("Invalid TrustedResourceUrl format: " + formatStr);
  }
  var result = formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {
    if (!Object.prototype.hasOwnProperty.call(args, id)) {
      throw new Error('Found marker, "' + id + '", in format string, "' + formatStr + '", but no valid label mapping found ' + "in args: " + JSON.stringify(args));
    }
    var arg = args[id];
    if (arg instanceof goog.string.Const) {
      return goog.string.Const.unwrap(arg);
    } else {
      return encodeURIComponent(String(arg));
    }
  });
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.TrustedResourceUrl.FORMAT_MARKER_ = /%{(\w+)}/g;
goog.html.TrustedResourceUrl.BASE_URL_ = new RegExp("^((https:)?//[0-9a-z.:[\\]-]+/" + "|/[^/\\\\]" + "|[^:/\\\\%]+/" + "|[^:/\\\\%]*[?#]" + "|about:blank#" + ")", "i");
goog.html.TrustedResourceUrl.URL_PARAM_PARSER_ = /^([^?#]*)(\?[^#]*)?(#[\s\S]*)?/;
goog.html.TrustedResourceUrl.formatWithParams = function(format, args, searchParams, opt_hashParams) {
  var url = goog.html.TrustedResourceUrl.format(format, args);
  return url.cloneWithParams(searchParams, opt_hashParams);
};
goog.html.TrustedResourceUrl.fromConstant = function(url) {
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.TrustedResourceUrl.fromConstants = function(parts) {
  var unwrapped = "";
  for (var i = 0; i < parts.length; i++) {
    unwrapped += goog.string.Const.unwrap(parts[i]);
  }
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);
};
goog.html.TrustedResourceUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  var value = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createScriptURL(url) : url;
  return new goog.html.TrustedResourceUrl(goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_, value);
};
goog.html.TrustedResourceUrl.stringifyParams_ = function(prefix, currentString, params) {
  if (params == null) {
    return currentString;
  }
  if (typeof params === "string") {
    return params ? prefix + encodeURIComponent(params) : "";
  }
  for (var key in params) {
    var value = params[key];
    var outputValues = goog.isArray(value) ? value : [value];
    for (var i = 0; i < outputValues.length; i++) {
      var outputValue = outputValues[i];
      if (outputValue != null) {
        if (!currentString) {
          currentString = prefix;
        }
        currentString += (currentString.length > prefix.length ? "\x26" : "") + encodeURIComponent(key) + "\x3d" + encodeURIComponent(String(outputValue));
      }
    }
  }
  return currentString;
};
goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.provide("goog.string.internal");
goog.string.internal.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.internal.endsWith = function(str, suffix) {
  const l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.internal.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.internal.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.internal.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.internal.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.internal.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.internal.isEmptyOrWhitespace = function(str) {
  return /^[\s\xa0]*$/.test(str);
};
goog.string.internal.trim = goog.TRUSTED_SITE && String.prototype.trim ? function(str) {
  return str.trim();
} : function(str) {
  return /^[\s\xa0]*([\s\S]*?)[\s\xa0]*$/.exec(str)[1];
};
goog.string.internal.caseInsensitiveCompare = function(str1, str2) {
  const test1 = String(str1).toLowerCase();
  const test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return -1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.internal.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.internal.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.internal.AMP_RE_, "\x26amp;").replace(goog.string.internal.LT_RE_, "\x26lt;").replace(goog.string.internal.GT_RE_, "\x26gt;").replace(goog.string.internal.QUOT_RE_, "\x26quot;").replace(goog.string.internal.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.internal.NULL_RE_, "\x26#0;");
    return str;
  } else {
    if (!goog.string.internal.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.internal.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.internal.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.internal.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.internal.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.internal.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.internal.NULL_RE_, "\x26#0;");
    }
    return str;
  }
};
goog.string.internal.AMP_RE_ = /&/g;
goog.string.internal.LT_RE_ = /</g;
goog.string.internal.GT_RE_ = />/g;
goog.string.internal.QUOT_RE_ = /"/g;
goog.string.internal.SINGLE_QUOTE_RE_ = /'/g;
goog.string.internal.NULL_RE_ = /\x00/g;
goog.string.internal.ALL_RE_ = /[\x00&<>"']/;
goog.string.internal.whitespaceEscape = function(str, opt_xml) {
  return goog.string.internal.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.internal.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.internal.caseInsensitiveContains = function(str, subString) {
  return goog.string.internal.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.internal.compareVersions = function(version1, version2) {
  let order = 0;
  const v1Subs = goog.string.internal.trim(String(version1)).split(".");
  const v2Subs = goog.string.internal.trim(String(version2)).split(".");
  const subCount = Math.max(v1Subs.length, v2Subs.length);
  for (let subIdx = 0; order == 0 && subIdx < subCount; subIdx++) {
    let v1Sub = v1Subs[subIdx] || "";
    let v2Sub = v2Subs[subIdx] || "";
    do {
      const v1Comp = /(\d*)(\D*)(.*)/.exec(v1Sub) || ["", "", "", ""];
      const v2Comp = /(\d*)(\D*)(.*)/.exec(v2Sub) || ["", "", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      const v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      const v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.internal.compareElements_(v1CompNum, v2CompNum) || goog.string.internal.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);
      v1Sub = v1Comp[3];
      v2Sub = v2Comp[3];
    } while (order == 0);
  }
  return order;
};
goog.string.internal.compareElements_ = function(left, right) {
  if (left < right) {
    return -1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.provide("goog.html.SafeUrl");
goog.require("goog.asserts");
goog.require("goog.fs.url");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.require("goog.string.internal");
goog.html.SafeUrl = function(opt_token, opt_content) {
  this.privateDoNotAccessOrElseSafeUrlWrappedValue_ = opt_token === goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ && opt_content || "";
  this.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeUrl.INNOCUOUS_STRING = "about:invalid#zClosurez";
goog.html.SafeUrl.prototype.implementsGoogStringTypedString = true;
goog.html.SafeUrl.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();
};
goog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeUrl.prototype.getDirection = function() {
  return goog.i18n.bidi.Dir.LTR;
};
if (goog.DEBUG) {
  goog.html.SafeUrl.prototype.toString = function() {
    return "SafeUrl{" + this.privateDoNotAccessOrElseSafeUrlWrappedValue_ + "}";
  };
}
goog.html.SafeUrl.unwrap = function(safeUrl) {
  if (safeUrl instanceof goog.html.SafeUrl && safeUrl.constructor === goog.html.SafeUrl && safeUrl.SAFE_URL_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeUrl.privateDoNotAccessOrElseSafeUrlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeUrl, got '" + safeUrl + "' of type " + goog.typeOf(safeUrl));
    return "type_error:SafeUrl";
  }
};
goog.html.SafeUrl.fromConstant = function(url) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));
};
goog.html.SAFE_MIME_TYPE_PATTERN_ = new RegExp("^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-wav|wav|webm)|" + "image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|" + "text/csv|" + "video/(?:mpeg|mp4|ogg|webm|quicktime))" + '(?:;\\w+\x3d(?:\\w+|"[\\w;\x3d]+"))*$', "i");
goog.html.SafeUrl.isSafeMimeType = function(mimeType) {
  return goog.html.SAFE_MIME_TYPE_PATTERN_.test(mimeType);
};
goog.html.SafeUrl.fromBlob = function(blob) {
  var url = goog.html.SAFE_MIME_TYPE_PATTERN_.test(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.DATA_URL_PATTERN_ = /^data:([^,]*);base64,[a-z0-9+\/]+=*$/i;
goog.html.SafeUrl.fromDataUrl = function(dataUrl) {
  var filteredDataUrl = dataUrl.replace(/(%0A|%0D)/g, "");
  var match = filteredDataUrl.match(goog.html.DATA_URL_PATTERN_);
  var valid = match && goog.html.SAFE_MIME_TYPE_PATTERN_.test(match[1]);
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(valid ? filteredDataUrl : goog.html.SafeUrl.INNOCUOUS_STRING);
};
goog.html.SafeUrl.fromTelUrl = function(telUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(telUrl, "tel:")) {
    telUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);
};
goog.html.SIP_URL_PATTERN_ = new RegExp("^sip[s]?:[+a-z0-9_.!$%\x26'*\\/\x3d^`{|}~-]+@([a-z0-9-]+\\.)+[a-z0-9]{2,63}$", "i");
goog.html.SafeUrl.fromSipUrl = function(sipUrl) {
  if (!goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(sipUrl))) {
    sipUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sipUrl);
};
goog.html.SafeUrl.fromFacebookMessengerUrl = function(facebookMessengerUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(facebookMessengerUrl, "fb-messenger://share")) {
    facebookMessengerUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(facebookMessengerUrl);
};
goog.html.SafeUrl.fromWhatsAppUrl = function(whatsAppUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(whatsAppUrl, "whatsapp://send")) {
    whatsAppUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(whatsAppUrl);
};
goog.html.SafeUrl.fromSmsUrl = function(smsUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(smsUrl, "sms:") || !goog.html.SafeUrl.isSmsUrlBodyValid_(smsUrl)) {
    smsUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(smsUrl);
};
goog.html.SafeUrl.isSmsUrlBodyValid_ = function(smsUrl) {
  var hash = smsUrl.indexOf("#");
  if (hash > 0) {
    smsUrl = smsUrl.substring(0, hash);
  }
  var bodyParams = smsUrl.match(/[?&]body=/gi);
  if (!bodyParams) {
    return true;
  }
  if (bodyParams.length > 1) {
    return false;
  }
  var bodyValue = smsUrl.match(/[?&]body=([^&]*)/)[1];
  if (!bodyValue) {
    return true;
  }
  try {
    decodeURIComponent(bodyValue);
  } catch (error) {
    return false;
  }
  return /^(?:[a-z0-9\-_.~]|%[0-9a-f]{2})+$/i.test(bodyValue);
};
goog.html.SafeUrl.fromSshUrl = function(sshUrl) {
  if (!goog.string.internal.caseInsensitiveStartsWith(sshUrl, "ssh://")) {
    sshUrl = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sshUrl);
};
goog.html.SafeUrl.sanitizeChromeExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeFirefoxExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeEdgeExtensionUrl = function(url, extensionId) {
  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\/\/([^\/]+)\//, url, extensionId);
};
goog.html.SafeUrl.sanitizeExtensionUrl_ = function(scheme, url, extensionId) {
  var matches = scheme.exec(url);
  if (!matches) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  } else {
    var extractedExtensionId = matches[1];
    var acceptedExtensionIds;
    if (extensionId instanceof goog.string.Const) {
      acceptedExtensionIds = [goog.string.Const.unwrap(extensionId)];
    } else {
      acceptedExtensionIds = extensionId.map(function unwrap(x) {
        return goog.string.Const.unwrap(x);
      });
    }
    if (acceptedExtensionIds.indexOf(extractedExtensionId) == -1) {
      url = goog.html.SafeUrl.INNOCUOUS_STRING;
    }
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.fromTrustedResourceUrl = function(trustedResourceUrl) {
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));
};
goog.html.SAFE_URL_PATTERN_ = /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;
goog.html.SafeUrl.SAFE_URL_PATTERN = goog.html.SAFE_URL_PATTERN_;
goog.html.SafeUrl.sanitize = function(url) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (typeof url == "object" && url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.sanitizeAssertUnchanged = function(url, opt_allowDataUrl) {
  if (url instanceof goog.html.SafeUrl) {
    return url;
  } else {
    if (typeof url == "object" && url.implementsGoogStringTypedString) {
      url = url.getTypedStringValue();
    } else {
      url = String(url);
    }
  }
  if (opt_allowDataUrl && /^data:/i.test(url)) {
    var safeUrl = goog.html.SafeUrl.fromDataUrl(url);
    if (safeUrl.getTypedStringValue() == url) {
      return safeUrl;
    }
  }
  if (!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url), "%s does not match the safe URL pattern", url)) {
    url = goog.html.SafeUrl.INNOCUOUS_STRING;
  }
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.SafeUrl.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse = function(url) {
  return new goog.html.SafeUrl(goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_, url);
};
goog.html.SafeUrl.ABOUT_BLANK = goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse("about:blank");
goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ = {};
goog.provide("goog.html.SafeStyle");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.html.SafeUrl");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.require("goog.string.internal");
goog.html.SafeStyle = function() {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = "";
  this.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyle.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyle.fromConstant = function(style) {
  var styleString = goog.string.Const.unwrap(style);
  if (styleString.length === 0) {
    return goog.html.SafeStyle.EMPTY;
  }
  goog.asserts.assert(goog.string.internal.endsWith(styleString, ";"), "Last character of style string is not ';': " + styleString);
  goog.asserts.assert(goog.string.internal.contains(styleString, ":"), "Style string must contain at least one ':', to " + 'specify a "name: value" pair: ' + styleString);
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);
};
goog.html.SafeStyle.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyle.prototype.toString = function() {
    return "SafeStyle{" + this.privateDoNotAccessOrElseSafeStyleWrappedValue_ + "}";
  };
}
goog.html.SafeStyle.unwrap = function(safeStyle) {
  if (safeStyle instanceof goog.html.SafeStyle && safeStyle.constructor === goog.html.SafeStyle && safeStyle.SAFE_STYLE_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyle.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyle, got '" + safeStyle + "' of type " + goog.typeOf(safeStyle));
    return "type_error:SafeStyle";
  }
};
goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse = function(style) {
  return (new goog.html.SafeStyle).initSecurityPrivateDoNotAccessOrElse_(style);
};
goog.html.SafeStyle.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(style) {
  this.privateDoNotAccessOrElseSafeStyleWrappedValue_ = style;
  return this;
};
goog.html.SafeStyle.EMPTY = goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse("");
goog.html.SafeStyle.INNOCUOUS_STRING = "zClosurez";
goog.html.SafeStyle.PropertyValue;
goog.html.SafeStyle.PropertyMap;
goog.html.SafeStyle.create = function(map) {
  var style = "";
  for (var name in map) {
    if (!/^[-_a-zA-Z0-9]+$/.test(name)) {
      throw new Error("Name allows only [-_a-zA-Z0-9], got: " + name);
    }
    var value = map[name];
    if (value == null) {
      continue;
    }
    if (goog.isArray(value)) {
      value = goog.array.map(value, goog.html.SafeStyle.sanitizePropertyValue_).join(" ");
    } else {
      value = goog.html.SafeStyle.sanitizePropertyValue_(value);
    }
    style += name + ":" + value + ";";
  }
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.SafeStyle.sanitizePropertyValue_ = function(value) {
  if (value instanceof goog.html.SafeUrl) {
    var url = goog.html.SafeUrl.unwrap(value);
    return 'url("' + url.replace(/</g, "%3c").replace(/[\\"]/g, "\\$\x26") + '")';
  }
  var result = value instanceof goog.string.Const ? goog.string.Const.unwrap(value) : goog.html.SafeStyle.sanitizePropertyValueString_(String(value));
  if (/[{;}]/.test(result)) {
    throw new goog.asserts.AssertionError("Value does not allow [{;}], got: %s.", [result]);
  }
  return result;
};
goog.html.SafeStyle.sanitizePropertyValueString_ = function(value) {
  var valueWithoutFunctions = value.replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.FUNCTIONS_RE_, "$1").replace(goog.html.SafeStyle.URL_RE_, "url");
  if (!goog.html.SafeStyle.VALUE_RE_.test(valueWithoutFunctions)) {
    goog.asserts.fail("String value allows only " + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + " and simple functions, got: " + value);
    return goog.html.SafeStyle.INNOCUOUS_STRING;
  } else {
    if (goog.html.SafeStyle.COMMENT_RE_.test(value)) {
      goog.asserts.fail("String value disallows comments, got: " + value);
      return goog.html.SafeStyle.INNOCUOUS_STRING;
    } else {
      if (!goog.html.SafeStyle.hasBalancedQuotes_(value)) {
        goog.asserts.fail("String value requires balanced quotes, got: " + value);
        return goog.html.SafeStyle.INNOCUOUS_STRING;
      } else {
        if (!goog.html.SafeStyle.hasBalancedSquareBrackets_(value)) {
          goog.asserts.fail("String value requires balanced square brackets and one" + " identifier per pair of brackets, got: " + value);
          return goog.html.SafeStyle.INNOCUOUS_STRING;
        }
      }
    }
  }
  return goog.html.SafeStyle.sanitizeUrl_(value);
};
goog.html.SafeStyle.hasBalancedQuotes_ = function(value) {
  var outsideSingle = true;
  var outsideDouble = true;
  for (var i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    if (c == "'" && outsideDouble) {
      outsideSingle = !outsideSingle;
    } else {
      if (c == '"' && outsideSingle) {
        outsideDouble = !outsideDouble;
      }
    }
  }
  return outsideSingle && outsideDouble;
};
goog.html.SafeStyle.hasBalancedSquareBrackets_ = function(value) {
  var outside = true;
  var tokenRe = /^[-_a-zA-Z0-9]$/;
  for (var i = 0; i < value.length; i++) {
    var c = value.charAt(i);
    if (c == "]") {
      if (outside) {
        return false;
      }
      outside = true;
    } else {
      if (c == "[") {
        if (!outside) {
          return false;
        }
        outside = false;
      } else {
        if (!outside && !tokenRe.test(c)) {
          return false;
        }
      }
    }
  }
  return outside;
};
goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ = "[-,.\"'%_!# a-zA-Z0-9\\[\\]]";
goog.html.SafeStyle.VALUE_RE_ = new RegExp("^" + goog.html.SafeStyle.VALUE_ALLOWED_CHARS_ + "+$");
goog.html.SafeStyle.URL_RE_ = new RegExp("\\b(url\\([ \t\n]*)(" + "'[ -\x26(-\\[\\]-~]*'" + '|"[ !#-\\[\\]-~]*"' + "|[!#-\x26*-\\[\\]-~]*" + ")([ \t\n]*\\))", "g");
goog.html.SafeStyle.ALLOWED_FUNCTIONS_ = ["calc", "cubic-bezier", "fit-content", "hsl", "hsla", "matrix", "minmax", "repeat", "rgb", "rgba", "(rotate|scale|translate)(X|Y|Z|3d)?"];
goog.html.SafeStyle.FUNCTIONS_RE_ = new RegExp("\\b(" + goog.html.SafeStyle.ALLOWED_FUNCTIONS_.join("|") + ")" + "\\([-+*/0-9a-z.%\\[\\], ]+\\)", "g");
goog.html.SafeStyle.COMMENT_RE_ = /\/\*/;
goog.html.SafeStyle.sanitizeUrl_ = function(value) {
  return value.replace(goog.html.SafeStyle.URL_RE_, function(match, before, url, after) {
    var quote = "";
    url = url.replace(/^(['"])(.*)\1$/, function(match, start, inside) {
      quote = start;
      return inside;
    });
    var sanitized = goog.html.SafeUrl.sanitize(url).getTypedStringValue();
    return before + quote + sanitized + quote + after;
  });
};
goog.html.SafeStyle.concat = function(var_args) {
  var style = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      style += goog.html.SafeStyle.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  if (!style) {
    return goog.html.SafeStyle.EMPTY;
  }
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.provide("goog.html.SafeStyleSheet");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.html.SafeStyle");
goog.require("goog.object");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.require("goog.string.internal");
goog.html.SafeStyleSheet = function() {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = "";
  this.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
};
goog.html.SafeStyleSheet.prototype.implementsGoogStringTypedString = true;
goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeStyleSheet.createRule = function(selector, style) {
  if (goog.string.internal.contains(selector, "\x3c")) {
    throw new Error("Selector does not allow '\x3c', got: " + selector);
  }
  var selectorToCheck = selector.replace(/('|")((?!\1)[^\r\n\f\\]|\\[\s\S])*\1/g, "");
  if (!/^[-_a-zA-Z0-9#.:* ,>+~[\]()=^$|]+$/.test(selectorToCheck)) {
    throw new Error("Selector allows only [-_a-zA-Z0-9#.:* ,\x3e+~[\\]()\x3d^$|] and " + "strings, got: " + selector);
  }
  if (!goog.html.SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {
    throw new Error("() and [] in selector must be balanced, got: " + selector);
  }
  if (!(style instanceof goog.html.SafeStyle)) {
    style = goog.html.SafeStyle.create(style);
  }
  var styleSheet = selector + "{" + goog.html.SafeStyle.unwrap(style).replace(/</g, "\\3C ") + "}";
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.SafeStyleSheet.hasBalancedBrackets_ = function(s) {
  var brackets = {"(":")", "[":"]"};
  var expectedBrackets = [];
  for (var i = 0; i < s.length; i++) {
    var ch = s[i];
    if (brackets[ch]) {
      expectedBrackets.push(brackets[ch]);
    } else {
      if (goog.object.contains(brackets, ch)) {
        if (expectedBrackets.pop() != ch) {
          return false;
        }
      }
    }
  }
  return expectedBrackets.length == 0;
};
goog.html.SafeStyleSheet.concat = function(var_args) {
  var result = "";
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      result += goog.html.SafeStyleSheet.unwrap(argument);
    }
  };
  goog.array.forEach(arguments, addArgument);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);
};
goog.html.SafeStyleSheet.fromConstant = function(styleSheet) {
  var styleSheetString = goog.string.Const.unwrap(styleSheet);
  if (styleSheetString.length === 0) {
    return goog.html.SafeStyleSheet.EMPTY;
  }
  goog.asserts.assert(!goog.string.internal.contains(styleSheetString, "\x3c"), "Forbidden '\x3c' character in style sheet string: " + styleSheetString);
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);
};
goog.html.SafeStyleSheet.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
};
if (goog.DEBUG) {
  goog.html.SafeStyleSheet.prototype.toString = function() {
    return "SafeStyleSheet{" + this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ + "}";
  };
}
goog.html.SafeStyleSheet.unwrap = function(safeStyleSheet) {
  if (safeStyleSheet instanceof goog.html.SafeStyleSheet && safeStyleSheet.constructor === goog.html.SafeStyleSheet && safeStyleSheet.SAFE_STYLE_SHEET_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeStyleSheet.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeStyleSheet, got '" + safeStyleSheet + "' of type " + goog.typeOf(safeStyleSheet));
    return "type_error:SafeStyleSheet";
  }
};
goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse = function(styleSheet) {
  return (new goog.html.SafeStyleSheet).initSecurityPrivateDoNotAccessOrElse_(styleSheet);
};
goog.html.SafeStyleSheet.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(styleSheet) {
  this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ = styleSheet;
  return this;
};
goog.html.SafeStyleSheet.EMPTY = goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse("");
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string.internal");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.internal.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.internal.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.object");
goog.require("goog.string.internal");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchEdgeHtml_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edge");
};
goog.labs.userAgent.browser.matchEdgeChromium_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Edg/");
};
goog.labs.userAgent.browser.matchOperaChromium_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox") || goog.labs.userAgent.util.matchUserAgent("FxiOS");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !(goog.labs.userAgent.browser.matchChrome_() || goog.labs.userAgent.browser.matchCoast_() || goog.labs.userAgent.browser.matchOpera_() || goog.labs.userAgent.browser.matchEdgeHtml_() || goog.labs.userAgent.browser.matchEdgeChromium_() || goog.labs.userAgent.browser.matchOperaChromium_() || goog.labs.userAgent.browser.matchFirefox_() || goog.labs.userAgent.browser.isSilk() || goog.labs.userAgent.util.matchUserAgent("Android"));
};
goog.labs.userAgent.browser.matchCoast_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Coast");
};
goog.labs.userAgent.browser.matchIosWebview_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("iPad") || goog.labs.userAgent.util.matchUserAgent("iPhone")) && !goog.labs.userAgent.browser.matchSafari_() && !goog.labs.userAgent.browser.matchChrome_() && !goog.labs.userAgent.browser.matchCoast_() && !goog.labs.userAgent.browser.matchFirefox_() && goog.labs.userAgent.util.matchUserAgent("AppleWebKit");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return (goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS")) && !goog.labs.userAgent.browser.matchEdgeHtml_();
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !(goog.labs.userAgent.browser.isChrome() || goog.labs.userAgent.browser.isFirefox() || goog.labs.userAgent.browser.isOpera() || goog.labs.userAgent.browser.isSilk());
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isEdge = goog.labs.userAgent.browser.matchEdgeHtml_;
goog.labs.userAgent.browser.isEdgeChromium = goog.labs.userAgent.browser.matchEdgeChromium_;
goog.labs.userAgent.browser.isOperaChromium = goog.labs.userAgent.browser.matchOperaChromium_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isCoast = goog.labs.userAgent.browser.matchCoast_;
goog.labs.userAgent.browser.isIosWebview = goog.labs.userAgent.browser.matchIosWebview_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  var versionMap = {};
  goog.array.forEach(versionTuples, function(tuple) {
    var key = tuple[0];
    var value = tuple[1];
    versionMap[key] = value;
  });
  var versionMapHasKey = goog.partial(goog.object.containsKey, versionMap);
  function lookUpValueWithKeys(keys) {
    var key = goog.array.find(keys, versionMapHasKey);
    return versionMap[key] || "";
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return lookUpValueWithKeys(["Version", "Opera"]);
  }
  if (goog.labs.userAgent.browser.isEdge()) {
    return lookUpValueWithKeys(["Edge"]);
  }
  if (goog.labs.userAgent.browser.isEdgeChromium()) {
    return lookUpValueWithKeys(["Edg"]);
  }
  if (goog.labs.userAgent.browser.isChrome()) {
    return lookUpValueWithKeys(["Chrome", "CriOS"]);
  }
  var tuple = versionTuples[2];
  return tuple && tuple[1] || "";
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.internal.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.provide("goog.html.SafeHtml");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.TagName");
goog.require("goog.dom.tags");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.html.trustedtypes");
goog.require("goog.i18n.bidi.Dir");
goog.require("goog.i18n.bidi.DirectionalString");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.object");
goog.require("goog.string.Const");
goog.require("goog.string.TypedString");
goog.require("goog.string.internal");
goog.html.SafeHtml = function() {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = "";
  this.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_;
  this.dir_ = null;
};
goog.html.SafeHtml.ENABLE_ERROR_MESSAGES = goog.define("goog.html.SafeHtml.ENABLE_ERROR_MESSAGES", goog.DEBUG);
goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE = goog.define("goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE", true);
goog.html.SafeHtml.prototype.implementsGoogI18nBidiDirectionalString = true;
goog.html.SafeHtml.prototype.getDirection = function() {
  return this.dir_;
};
goog.html.SafeHtml.prototype.implementsGoogStringTypedString = true;
goog.html.SafeHtml.prototype.getTypedStringValue = function() {
  return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();
};
if (goog.DEBUG) {
  goog.html.SafeHtml.prototype.toString = function() {
    return "SafeHtml{" + this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ + "}";
  };
}
goog.html.SafeHtml.unwrap = function(safeHtml) {
  return goog.html.SafeHtml.unwrapTrustedHTML(safeHtml).toString();
};
goog.html.SafeHtml.unwrapTrustedHTML = function(safeHtml) {
  if (safeHtml instanceof goog.html.SafeHtml && safeHtml.constructor === goog.html.SafeHtml && safeHtml.SAFE_HTML_TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ === goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_) {
    return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;
  } else {
    goog.asserts.fail("expected object of type SafeHtml, got '" + safeHtml + "' of type " + goog.typeOf(safeHtml));
    return "type_error:SafeHtml";
  }
};
goog.html.SafeHtml.TextOrHtml_;
goog.html.SafeHtml.htmlEscape = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var textIsObject = typeof textOrHtml == "object";
  var dir = null;
  if (textIsObject && textOrHtml.implementsGoogI18nBidiDirectionalString) {
    dir = textOrHtml.getDirection();
  }
  var textAsString;
  if (textIsObject && textOrHtml.implementsGoogStringTypedString) {
    textAsString = textOrHtml.getTypedStringValue();
  } else {
    textAsString = String(textOrHtml);
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.htmlEscape(textAsString), dir);
};
goog.html.SafeHtml.htmlEscapePreservingNewlines = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.newLineToBr(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.htmlEscapePreservingNewlinesAndSpaces = function(textOrHtml) {
  if (textOrHtml instanceof goog.html.SafeHtml) {
    return textOrHtml;
  }
  var html = goog.html.SafeHtml.htmlEscape(textOrHtml);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(goog.string.internal.whitespaceEscape(goog.html.SafeHtml.unwrap(html)), html.getDirection());
};
goog.html.SafeHtml.from = goog.html.SafeHtml.htmlEscape;
goog.html.SafeHtml.VALID_NAMES_IN_TAG_ = /^[a-zA-Z0-9-]+$/;
goog.html.SafeHtml.URL_ATTRIBUTES_ = goog.object.createSet("action", "cite", "data", "formaction", "href", "manifest", "poster", "src");
goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_ = goog.object.createSet(goog.dom.TagName.APPLET, goog.dom.TagName.BASE, goog.dom.TagName.EMBED, goog.dom.TagName.IFRAME, goog.dom.TagName.LINK, goog.dom.TagName.MATH, goog.dom.TagName.META, goog.dom.TagName.OBJECT, goog.dom.TagName.SCRIPT, goog.dom.TagName.STYLE, goog.dom.TagName.SVG, goog.dom.TagName.TEMPLATE);
goog.html.SafeHtml.AttributeValue;
goog.html.SafeHtml.create = function(tagName, opt_attributes, opt_content) {
  goog.html.SafeHtml.verifyTagName(String(tagName));
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), opt_attributes, opt_content);
};
goog.html.SafeHtml.verifyTagName = function(tagName) {
  if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(tagName)) {
    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Invalid tag name \x3c" + tagName + "\x3e." : "");
  }
  if (tagName.toUpperCase() in goog.html.SafeHtml.NOT_ALLOWED_TAG_NAMES_) {
    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "Tag name \x3c" + tagName + "\x3e is not allowed for SafeHtml." : "");
  }
};
goog.html.SafeHtml.createIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (opt_src) {
    goog.html.TrustedResourceUrl.unwrap(opt_src);
  }
  var fixedAttributes = {};
  fixedAttributes["src"] = opt_src || null;
  fixedAttributes["srcdoc"] = opt_srcdoc && goog.html.SafeHtml.unwrap(opt_srcdoc);
  var defaultAttributes = {"sandbox":""};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.createSandboxIframe = function(opt_src, opt_srcdoc, opt_attributes, opt_content) {
  if (!goog.html.SafeHtml.canUseSandboxIframe()) {
    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? "The browser does not support sandboxed iframes." : "");
  }
  var fixedAttributes = {};
  if (opt_src) {
    fixedAttributes["src"] = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(opt_src));
  } else {
    fixedAttributes["src"] = null;
  }
  fixedAttributes["srcdoc"] = opt_srcdoc || null;
  fixedAttributes["sandbox"] = "";
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, {}, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("iframe", attributes, opt_content);
};
goog.html.SafeHtml.canUseSandboxIframe = function() {
  return goog.global["HTMLIFrameElement"] && "sandbox" in goog.global["HTMLIFrameElement"].prototype;
};
goog.html.SafeHtml.createScriptSrc = function(src, opt_attributes) {
  goog.html.TrustedResourceUrl.unwrap(src);
  var fixedAttributes = {"src":src};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", attributes);
};
goog.html.SafeHtml.createScript = function(script, opt_attributes) {
  for (var attr in opt_attributes) {
    var attrLower = attr.toLowerCase();
    if (attrLower == "language" || attrLower == "src" || attrLower == "text" || attrLower == "type") {
      throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot set "' + attrLower + '" attribute' : "");
    }
  }
  var content = "";
  script = goog.array.concat(script);
  for (var i = 0; i < script.length; i++) {
    content += goog.html.SafeScript.unwrap(script[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("script", opt_attributes, htmlContent);
};
goog.html.SafeHtml.createStyle = function(styleSheet, opt_attributes) {
  var fixedAttributes = {"type":"text/css"};
  var defaultAttributes = {};
  var attributes = goog.html.SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, opt_attributes);
  var content = "";
  styleSheet = goog.array.concat(styleSheet);
  for (var i = 0; i < styleSheet.length; i++) {
    content += goog.html.SafeStyleSheet.unwrap(styleSheet[i]);
  }
  var htmlContent = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, goog.i18n.bidi.Dir.NEUTRAL);
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("style", attributes, htmlContent);
};
goog.html.SafeHtml.createMetaRefresh = function(url, opt_secs) {
  var unwrappedUrl = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitize(url));
  if (goog.labs.userAgent.browser.isIE() || goog.labs.userAgent.browser.isEdge()) {
    if (goog.string.internal.contains(unwrappedUrl, ";")) {
      unwrappedUrl = "'" + unwrappedUrl.replace(/'/g, "%27") + "'";
    }
  }
  var attributes = {"http-equiv":"refresh", "content":(opt_secs || 0) + "; url\x3d" + unwrappedUrl};
  return goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse("meta", attributes);
};
goog.html.SafeHtml.getAttrNameAndValue_ = function(tagName, name, value) {
  if (value instanceof goog.string.Const) {
    value = goog.string.Const.unwrap(value);
  } else {
    if (name.toLowerCase() == "style") {
      if (goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {
        value = goog.html.SafeHtml.getStyleValue_(value);
      } else {
        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "style" not supported.' : "");
      }
    } else {
      if (/^on/i.test(name)) {
        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + name + '" requires goog.string.Const value, "' + value + '" given.' : "");
      } else {
        if (name.toLowerCase() in goog.html.SafeHtml.URL_ATTRIBUTES_) {
          if (value instanceof goog.html.TrustedResourceUrl) {
            value = goog.html.TrustedResourceUrl.unwrap(value);
          } else {
            if (value instanceof goog.html.SafeUrl) {
              value = goog.html.SafeUrl.unwrap(value);
            } else {
              if (typeof value === "string") {
                value = goog.html.SafeUrl.sanitize(value).getTypedStringValue();
              } else {
                throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Attribute "' + name + '" on tag "' + tagName + '" requires goog.html.SafeUrl, goog.string.Const, or' + ' string, value "' + value + '" given.' : "");
              }
            }
          }
        }
      }
    }
  }
  if (value.implementsGoogStringTypedString) {
    value = value.getTypedStringValue();
  }
  goog.asserts.assert(typeof value === "string" || typeof value === "number", "String or number value expected, got " + typeof value + " with value: " + value);
  return name + '\x3d"' + goog.string.internal.htmlEscape(String(value)) + '"';
};
goog.html.SafeHtml.getStyleValue_ = function(value) {
  if (!goog.isObject(value)) {
    throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'The "style" attribute requires goog.html.SafeStyle or map ' + "of style properties, " + typeof value + " given: " + value : "");
  }
  if (!(value instanceof goog.html.SafeStyle)) {
    value = goog.html.SafeStyle.create(value);
  }
  return goog.html.SafeStyle.unwrap(value);
};
goog.html.SafeHtml.createWithDir = function(dir, tagName, opt_attributes, opt_content) {
  var html = goog.html.SafeHtml.create(tagName, opt_attributes, opt_content);
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.join = function(separator, parts) {
  var separatorHtml = goog.html.SafeHtml.htmlEscape(separator);
  var dir = separatorHtml.getDirection();
  var content = [];
  var addArgument = function(argument) {
    if (goog.isArray(argument)) {
      goog.array.forEach(argument, addArgument);
    } else {
      var html = goog.html.SafeHtml.htmlEscape(argument);
      content.push(goog.html.SafeHtml.unwrap(html));
      var htmlDir = html.getDirection();
      if (dir == goog.i18n.bidi.Dir.NEUTRAL) {
        dir = htmlDir;
      } else {
        if (htmlDir != goog.i18n.bidi.Dir.NEUTRAL && dir != htmlDir) {
          dir = null;
        }
      }
    }
  };
  goog.array.forEach(parts, addArgument);
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content.join(goog.html.SafeHtml.unwrap(separatorHtml)), dir);
};
goog.html.SafeHtml.concat = function(var_args) {
  return goog.html.SafeHtml.join(goog.html.SafeHtml.EMPTY, Array.prototype.slice.call(arguments));
};
goog.html.SafeHtml.concatWithDir = function(dir, var_args) {
  var html = goog.html.SafeHtml.concat(goog.array.slice(arguments, 1));
  html.dir_ = dir;
  return html;
};
goog.html.SafeHtml.TYPE_MARKER_GOOG_HTML_SECURITY_PRIVATE_ = {};
goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse = function(html, dir) {
  return (new goog.html.SafeHtml).initSecurityPrivateDoNotAccessOrElse_(html, dir);
};
goog.html.SafeHtml.prototype.initSecurityPrivateDoNotAccessOrElse_ = function(html, dir) {
  this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ = goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY ? goog.html.trustedtypes.PRIVATE_DO_NOT_ACCESS_OR_ELSE_POLICY.createHTML(html) : html;
  this.dir_ = dir;
  return this;
};
goog.html.SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse = function(tagName, opt_attributes, opt_content) {
  var dir = null;
  var result = "\x3c" + tagName;
  result += goog.html.SafeHtml.stringifyAttributes(tagName, opt_attributes);
  var content = opt_content;
  if (content == null) {
    content = [];
  } else {
    if (!goog.isArray(content)) {
      content = [content];
    }
  }
  if (goog.dom.tags.isVoidTag(tagName.toLowerCase())) {
    goog.asserts.assert(!content.length, "Void tag \x3c" + tagName + "\x3e does not allow content.");
    result += "\x3e";
  } else {
    var html = goog.html.SafeHtml.concat(content);
    result += "\x3e" + goog.html.SafeHtml.unwrap(html) + "\x3c/" + tagName + "\x3e";
    dir = html.getDirection();
  }
  var dirAttribute = opt_attributes && opt_attributes["dir"];
  if (dirAttribute) {
    if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {
      dir = goog.i18n.bidi.Dir.NEUTRAL;
    } else {
      dir = null;
    }
  }
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);
};
goog.html.SafeHtml.stringifyAttributes = function(tagName, opt_attributes) {
  var result = "";
  if (opt_attributes) {
    for (var name in opt_attributes) {
      if (!goog.html.SafeHtml.VALID_NAMES_IN_TAG_.test(name)) {
        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Invalid attribute name "' + name + '".' : "");
      }
      var value = opt_attributes[name];
      if (value == null) {
        continue;
      }
      result += " " + goog.html.SafeHtml.getAttrNameAndValue_(tagName, name, value);
    }
  }
  return result;
};
goog.html.SafeHtml.combineAttributes = function(fixedAttributes, defaultAttributes, opt_attributes) {
  var combinedAttributes = {};
  var name;
  for (name in fixedAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = fixedAttributes[name];
  }
  for (name in defaultAttributes) {
    goog.asserts.assert(name.toLowerCase() == name, "Must be lower case");
    combinedAttributes[name] = defaultAttributes[name];
  }
  if (opt_attributes) {
    for (name in opt_attributes) {
      var nameLower = name.toLowerCase();
      if (nameLower in fixedAttributes) {
        throw new Error(goog.html.SafeHtml.ENABLE_ERROR_MESSAGES ? 'Cannot override "' + nameLower + '" attribute, got "' + name + '" with value "' + opt_attributes[name] + '"' : "");
      }
      if (nameLower in defaultAttributes) {
        delete combinedAttributes[nameLower];
      }
      combinedAttributes[name] = opt_attributes[name];
    }
  }
  return combinedAttributes;
};
goog.html.SafeHtml.DOCTYPE_HTML = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3c!DOCTYPE html\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.EMPTY = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("", goog.i18n.bidi.Dir.NEUTRAL);
goog.html.SafeHtml.BR = goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse("\x3cbr\x3e", goog.i18n.bidi.Dir.NEUTRAL);
goog.provide("goog.html.uncheckedconversions");
goog.require("goog.asserts");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeStyleSheet");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.string.Const");
goog.require("goog.string.internal");
goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract = function(justification, html, opt_dir) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);
};
goog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract = function(justification, script) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);
};
goog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract = function(justification, style) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);
};
goog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract = function(justification, styleSheet) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);
};
goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract = function(justification, url) {
  goog.asserts.assertString(goog.string.Const.unwrap(justification), "must provide justification");
  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), "must provide non-empty justification");
  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);
};
goog.provide("goog.dom.safe");
goog.provide("goog.dom.safe.InsertAdjacentHtmlPosition");
goog.require("goog.asserts");
goog.require("goog.dom.asserts");
goog.require("goog.functions");
goog.require("goog.html.SafeHtml");
goog.require("goog.html.SafeScript");
goog.require("goog.html.SafeStyle");
goog.require("goog.html.SafeUrl");
goog.require("goog.html.TrustedResourceUrl");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.string.Const");
goog.require("goog.string.internal");
goog.dom.safe.InsertAdjacentHtmlPosition = {AFTERBEGIN:"afterbegin", AFTEREND:"afterend", BEFOREBEGIN:"beforebegin", BEFOREEND:"beforeend"};
goog.dom.safe.insertAdjacentHtml = function(node, position, html) {
  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrapTrustedHTML(html));
};
goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ = {"MATH":true, "SCRIPT":true, "STYLE":true, "SVG":true, "TEMPLATE":true};
goog.dom.safe.isInnerHtmlCleanupRecursive_ = goog.functions.cacheReturnValue(function() {
  if (goog.DEBUG && typeof document === "undefined") {
    return false;
  }
  var div = document.createElement("div");
  var childDiv = document.createElement("div");
  childDiv.appendChild(document.createElement("div"));
  div.appendChild(childDiv);
  if (goog.DEBUG && !div.firstChild) {
    return false;
  }
  var innerChild = div.firstChild.firstChild;
  div.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);
  return !innerChild.parentElement;
});
goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse = function(elem, html) {
  if (goog.dom.safe.isInnerHtmlCleanupRecursive_()) {
    while (elem.lastChild) {
      elem.removeChild(elem.lastChild);
    }
  }
  elem.innerHTML = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setInnerHtml = function(elem, html) {
  if (goog.asserts.ENABLE_ASSERTS) {
    var tagName = elem.tagName.toUpperCase();
    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {
      throw new Error("goog.dom.safe.setInnerHtml cannot be used to set content of " + elem.tagName + ".");
    }
  }
  goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(elem, html);
};
goog.dom.safe.setOuterHtml = function(elem, html) {
  elem.outerHTML = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setFormElementAction = function(form, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  goog.dom.asserts.assertIsHTMLFormElement(form).action = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setButtonFormAction = function(button, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  goog.dom.asserts.assertIsHTMLButtonElement(button).formAction = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setInputFormAction = function(input, url) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  goog.dom.asserts.assertIsHTMLInputElement(input).formAction = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setStyle = function(elem, style) {
  elem.style.cssText = goog.html.SafeStyle.unwrap(style);
};
goog.dom.safe.documentWrite = function(doc, html) {
  doc.write(goog.html.SafeHtml.unwrapTrustedHTML(html));
};
goog.dom.safe.setAnchorHref = function(anchor, url) {
  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  anchor.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setImageSrc = function(imageElement, url) {
  goog.dom.asserts.assertIsHTMLImageElement(imageElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    var allowDataUrl = /^data:image\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  imageElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setAudioSrc = function(audioElement, url) {
  goog.dom.asserts.assertIsHTMLAudioElement(audioElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    var allowDataUrl = /^data:audio\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  audioElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setVideoSrc = function(videoElement, url) {
  goog.dom.asserts.assertIsHTMLVideoElement(videoElement);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    var allowDataUrl = /^data:video\//i.test(url);
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);
  }
  videoElement.src = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.setEmbedSrc = function(embed, url) {
  goog.dom.asserts.assertIsHTMLEmbedElement(embed);
  embed.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
};
goog.dom.safe.setFrameSrc = function(frame, url) {
  goog.dom.asserts.assertIsHTMLFrameElement(frame);
  frame.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrc = function(iframe, url) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.src = goog.html.TrustedResourceUrl.unwrap(url);
};
goog.dom.safe.setIframeSrcdoc = function(iframe, html) {
  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);
  iframe.srcdoc = goog.html.SafeHtml.unwrapTrustedHTML(html);
};
goog.dom.safe.setLinkHrefAndRel = function(link, url, rel) {
  goog.dom.asserts.assertIsHTMLLinkElement(link);
  link.rel = rel;
  if (goog.string.internal.caseInsensitiveContains(rel, "stylesheet")) {
    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, 'URL must be TrustedResourceUrl because "rel" contains "stylesheet"');
    link.href = goog.html.TrustedResourceUrl.unwrap(url);
  } else {
    if (url instanceof goog.html.TrustedResourceUrl) {
      link.href = goog.html.TrustedResourceUrl.unwrap(url);
    } else {
      if (url instanceof goog.html.SafeUrl) {
        link.href = goog.html.SafeUrl.unwrap(url);
      } else {
        link.href = goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(url));
      }
    }
  }
};
goog.dom.safe.setObjectData = function(object, url) {
  goog.dom.asserts.assertIsHTMLObjectElement(object);
  object.data = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
};
goog.dom.safe.setScriptSrc = function(script, url) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.src = goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);
  var nonce = goog.getScriptNonce();
  if (nonce) {
    script.setAttribute("nonce", nonce);
  }
};
goog.dom.safe.setScriptContent = function(script, content) {
  goog.dom.asserts.assertIsHTMLScriptElement(script);
  script.text = goog.html.SafeScript.unwrapTrustedScript(content);
  var nonce = goog.getScriptNonce();
  if (nonce) {
    script.setAttribute("nonce", nonce);
  }
};
goog.dom.safe.setLocationHref = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.href = goog.html.SafeUrl.unwrap(safeUrl);
};
goog.dom.safe.assignLocation = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.assign(goog.html.SafeUrl.unwrap(safeUrl));
};
goog.dom.safe.replaceLocation = function(loc, url) {
  goog.dom.asserts.assertIsLocation(loc);
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  loc.replace(goog.html.SafeUrl.unwrap(safeUrl));
};
goog.dom.safe.openInWindow = function(url, opt_openerWin, opt_name, opt_specs, opt_replace) {
  var safeUrl;
  if (url instanceof goog.html.SafeUrl) {
    safeUrl = url;
  } else {
    safeUrl = goog.html.SafeUrl.sanitizeAssertUnchanged(url);
  }
  var win = opt_openerWin || goog.global;
  return win.open(goog.html.SafeUrl.unwrap(safeUrl), opt_name ? goog.string.Const.unwrap(opt_name) : "", opt_specs, opt_replace);
};
goog.dom.safe.parseFromStringHtml = function(parser, html) {
  return goog.dom.safe.parseFromString(parser, html, "text/html");
};
goog.dom.safe.parseFromString = function(parser, content, type) {
  return parser.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(content), type);
};
goog.dom.safe.createImageFromBlob = function(blob) {
  if (!/^image\/.*/g.test(blob.type)) {
    throw new Error("goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.");
  }
  var objectUrl = goog.global.URL.createObjectURL(blob);
  var image = new goog.global.Image;
  image.onload = function() {
    goog.global.URL.revokeObjectURL(objectUrl);
  };
  goog.dom.safe.setImageSrc(image, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Image blob URL."), objectUrl));
  return image;
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.require("goog.dom.safe");
goog.require("goog.html.uncheckedconversions");
goog.require("goog.string.Const");
goog.require("goog.string.internal");
goog.string.DETECT_DOUBLE_ESCAPING = goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.FORCE_NON_DOM_HTML_UNESCAPING = goog.define("goog.string.FORCE_NON_DOM_HTML_UNESCAPING", false);
goog.string.Unicode = {NBSP:" "};
goog.string.startsWith = goog.string.internal.startsWith;
goog.string.endsWith = goog.string.internal.endsWith;
goog.string.caseInsensitiveStartsWith = goog.string.internal.caseInsensitiveStartsWith;
goog.string.caseInsensitiveEndsWith = goog.string.internal.caseInsensitiveEndsWith;
goog.string.caseInsensitiveEquals = goog.string.internal.caseInsensitiveEquals;
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmptyOrWhitespace = goog.string.internal.isEmptyOrWhitespace;
goog.string.isEmptyString = function(str) {
  return str.length == 0;
};
goog.string.isEmpty = goog.string.isEmptyOrWhitespace;
goog.string.isEmptyOrWhitespaceSafe = function(str) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));
};
goog.string.isEmptySafe = goog.string.isEmptyOrWhitespaceSafe;
goog.string.isBreakingWhitespace = function(str) {
  return !/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return !/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return !/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return !/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "" && ch <= "�";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = goog.string.internal.trim;
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = goog.string.internal.caseInsensitiveCompare;
goog.string.numberAwareCompare_ = function(str1, str2, tokenizerRegExp) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return -1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(tokenizerRegExp);
  var tokens2 = str2.toLowerCase().match(tokenizerRegExp);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0; i < count; i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.intAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\D+/g);
};
goog.string.floatAwareCompare = function(str1, str2) {
  return goog.string.numberAwareCompare_(str1, str2, /\d+|\.\d+|\D+/g);
};
goog.string.numerateCompare = goog.string.floatAwareCompare;
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = goog.string.internal.newLineToBr;
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  str = goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);
  if (goog.string.DETECT_DOUBLE_ESCAPING) {
    str = str.replace(goog.string.E_RE_, "\x26#101;");
  }
  return str;
};
goog.string.E_RE_ = /e/g;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING && "document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      goog.dom.safe.setInnerHtml(div, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from("Single HTML entity."), s + " "));
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return '"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0; i < length; i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\", "\x3c":"\\u003C"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  var sb = ['"'];
  for (var i = 0; i < s.length; i++) {
    var ch = s.charAt(i);
    var cc = ch.charCodeAt(0);
    sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
  }
  sb.push('"');
  return sb.join("");
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0; i < str.length; i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.contains = goog.string.internal.contains;
goog.string.caseInsensitiveContains = goog.string.internal.caseInsensitiveContains;
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(str, substr) {
  return str.replace(substr, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.replaceAll = function(s, ss, replacement) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, replacement.replace(/\$/g, "$$$$"));
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = String.prototype.repeat ? function(string, length) {
  return string.repeat(length);
} : function(string, length) {
  return (new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = opt_precision !== undefined ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = goog.string.internal.compareVersions;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0; i < str.length; ++i) {
    result = 31 * result + str.charCodeAt(i) >>> 0;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmptyOrWhitespace(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return /^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = typeof opt_delimiters === "string" ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.capitalize = function(str) {
  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (typeof value === "string") {
    return /^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.string.lastComponent = function(str, separators) {
  if (!separators) {
    return str;
  } else {
    if (typeof separators == "string") {
      separators = [separators];
    }
  }
  var lastSeparatorIndex = -1;
  for (var i = 0; i < separators.length; i++) {
    if (separators[i] == "") {
      continue;
    }
    var currentSeparatorIndex = str.lastIndexOf(separators[i]);
    if (currentSeparatorIndex > lastSeparatorIndex) {
      lastSeparatorIndex = currentSeparatorIndex;
    }
  }
  if (lastSeparatorIndex == -1) {
    return str;
  }
  return str.slice(lastSeparatorIndex + 1);
};
goog.string.editDistance = function(a, b) {
  var v0 = [];
  var v1 = [];
  if (a == b) {
    return 0;
  }
  if (!a.length || !b.length) {
    return Math.max(a.length, b.length);
  }
  for (var i = 0; i < b.length + 1; i++) {
    v0[i] = i;
  }
  for (var i = 0; i < a.length; i++) {
    v1[0] = i + 1;
    for (var j = 0; j < b.length; j++) {
      var cost = Number(a[i] != b[j]);
      v1[j + 1] = Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);
    }
    for (var j = 0; j < v0.length; j++) {
      v0[j] = v1[j];
    }
  }
  return v1[b.length];
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (col.getCount && typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (col.getValues && typeof col.getValues == "function") {
    return col.getValues();
  }
  if (typeof col === "string") {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (col.getKeys && typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (col.getValues && typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    var rv = [];
    var l = col.length;
    for (var i = 0; i < l; i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (col.contains && typeof col.contains == "function") {
    return col.contains(val);
  }
  if (col.containsValue && typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.contains(col, val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (col.isEmpty && typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.isEmpty(col);
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (col.clear && typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear(col);
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (col.forEach && typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || typeof col === "string") {
      goog.array.forEach(col, f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0; i < l; i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.filter(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.map(col, f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0; i < l; i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0; i < l; i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.some(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || typeof col === "string") {
    return goog.array.every(col, f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0; i < l; i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 0.000001);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  if (x > 0) {
    return 1;
  }
  if (x < 0) {
    return -1;
  }
  return x;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0; i < length1 + 1; i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0; j < length2 + 1; j++) {
    arr[0][j] = 0;
  }
  for (i = 1; i <= length1; i++) {
    for (j = 1; j <= length2; j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0);
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num);
};
goog.math.isNegativeZero = function(num) {
  return num == 0 && 1 / num < 0;
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num ? 1 : 0);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(opt_epsilon === undefined || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2e-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(opt_epsilon === undefined || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2e-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
goog.iter.StopIteration = "StopIteration" in goog.global ? goog.global["StopIteration"] : {message:"StopIteration", stack:""};
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var like = iterable;
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= like.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in like)) {
          i++;
          continue;
        }
        return like[i++];
      }
    };
    return newIter;
  }
  throw new Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = +opt_stop;
  }
  if (step == 0) {
    throw new Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  return goog.iter.chainFromIterable(arguments);
};
goog.iter.chainFromIterable = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var val = iterator.next();
    if (f.call(opt_obj, val, undefined, iterator)) {
      return val;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable);
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2, opt_equalsFn) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  return goog.iter.every(pairs, function(pair) {
    return equalsFn(pair[0], pair[1]);
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return !arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1; i >= 0; i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = opt_step !== undefined ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return !!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return [this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = typeof opt_num === "number" ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return [];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (typeof opt_end === "number") {
    goog.asserts.assert(goog.math.isInt(opt_end) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = typeof opt_length === "number" ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return !goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map(sortedIndexIterator.next(), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw new Error("Uneven number of arguments");
    }
    for (var i = 0; i < argLength; i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll(opt_map);
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat();
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0; key = this.keys_[i]; i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  if (map instanceof goog.structs.Map) {
    var keys = map.getKeys();
    for (var i = 0; i < keys.length; i++) {
      this.set(keys[i], map.get(keys[i]));
    }
  } else {
    for (var key in map) {
      this.set(key, map[key]);
    }
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0; i < this.keys_.length; i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (version != selfObj.version_) {
      throw new Error("The map has changed since the iterator was created");
    }
    if (i >= selfObj.keys_.length) {
      throw goog.iter.StopIteration;
    }
    var key = selfObj.keys_[i++];
    return opt_keys ? key : selfObj.map_[key];
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#([\\s\\S]*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_);
};
goog.uri.utils.decodeIfPossible_ = function(uri, opt_preserveReserved) {
  if (!uri) {
    return uri;
  }
  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && goog.global.self && goog.global.self.location) {
    var protocol = goog.global.self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getOrigin = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  goog.asserts.assert(uri.indexOf("#") < 0 && uri.indexOf("?") < 0, "goog.uri.utils: Fragment or query identifiers are not supported: [%s]", uri);
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.parseQueryData = function(encodedQuery, callback) {
  if (!encodedQuery) {
    return;
  }
  var pairs = encodedQuery.split("\x26");
  for (var i = 0; i < pairs.length; i++) {
    var indexOfEquals = pairs[i].indexOf("\x3d");
    var name = null;
    var value = null;
    if (indexOfEquals >= 0) {
      name = pairs[i].substring(0, indexOfEquals);
      value = pairs[i].substring(indexOfEquals + 1);
    } else {
      name = pairs[i];
    }
    callback(name, value ? goog.string.urlDecode(value) : "");
  }
};
goog.uri.utils.splitQueryData_ = function(uri) {
  var hashIndex = uri.indexOf("#");
  if (hashIndex < 0) {
    hashIndex = uri.length;
  }
  var questionIndex = uri.indexOf("?");
  var queryData;
  if (questionIndex < 0 || questionIndex > hashIndex) {
    questionIndex = hashIndex;
    queryData = "";
  } else {
    queryData = uri.substring(questionIndex + 1, hashIndex);
  }
  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];
};
goog.uri.utils.joinQueryData_ = function(parts) {
  return parts[0] + (parts[1] ? "?" + parts[1] : "") + parts[2];
};
goog.uri.utils.appendQueryData_ = function(queryData, newData) {
  if (!newData) {
    return queryData;
  }
  return queryData ? queryData + "\x26" + newData : newData;
};
goog.uri.utils.appendQueryDataToUri_ = function(uri, queryData) {
  if (!queryData) {
    return uri;
  }
  var parts = goog.uri.utils.splitQueryData_(uri);
  parts[1] = goog.uri.utils.appendQueryData_(parts[1], queryData);
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  goog.asserts.assertString(key);
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0; j < value.length; j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push(key + (value === "" ? "" : "\x3d" + goog.string.urlEncode(value)));
    }
  }
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  var params = [];
  for (var i = opt_startIndex || 0; i < keysAndValues.length; i += 2) {
    var key = keysAndValues[i];
    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);
  }
  return params.join("\x26");
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var params = [];
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);
  }
  return params.join("\x26");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  var queryData = arguments.length == 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  var queryData = goog.uri.utils.buildQueryDataFromMap(map);
  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var value = opt_value != null ? "\x3d" + goog.string.urlEncode(opt_value) : "";
  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return -1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.setParamsFromMap = function(uri, params) {
  var parts = goog.uri.utils.splitQueryData_(uri);
  var queryData = parts[1];
  var buffer = [];
  if (queryData) {
    goog.array.forEach(queryData.split("\x26"), function(pair) {
      var indexOfEquals = pair.indexOf("\x3d");
      var name = indexOfEquals >= 0 ? pair.substr(0, indexOfEquals) : pair;
      if (!params.hasOwnProperty(name)) {
        buffer.push(pair);
      }
    });
  }
  parts[1] = goog.uri.utils.appendQueryData_(buffer.join("\x26"), goog.uri.utils.buildQueryDataFromMap(params));
  return goog.uri.utils.joinQueryData_(parts);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  this.scheme_ = "";
  this.userInfo_ = "";
  this.domain_ = "";
  this.port_ = null;
  this.path_ = "";
  this.fragment_ = "";
  this.isReadOnly_ = false;
  this.ignoreCase_ = false;
  this.queryData_;
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = opt_ignoreCase !== undefined ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), ":");
  }
  var domain = this.getDomain();
  if (domain || scheme == "file") {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), "@");
    }
    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getQueryData().clone());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return !!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return !!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return !!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw new Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return !!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, values);
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName);
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return !!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return (!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw new Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0; pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val, opt_preserveReserved) {
  if (!val) {
    return "";
  }
  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, "%2525")) : decodeURIComponent(val);
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra, opt_removeDoubleEncoding) {
  if (typeof unescapedPart === "string") {
    var encoded = encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
    if (opt_removeDoubleEncoding) {
      encoded = goog.Uri.removeDoubleEncoding_(encoded);
    }
    return encoded;
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.removeDoubleEncoding_ = function(doubleEncodedString) {
  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, "%$1");
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.keyMap_ = null;
  this.count_ = null;
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var self = this;
      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {
        self.add(goog.string.urlDecode(name), value);
      });
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw new Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw new Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0; i < keys.length; i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.forEach = function(f, opt_scope) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(values, key) {
    goog.array.forEach(values, function(value) {
      f.call(opt_scope, value, key, this);
    }, this);
  }, this);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0; i < keys.length; i++) {
    var val = vals[i];
    for (var j = 0; j < val.length; j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (typeof opt_key === "string") {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = this.keyMap_.getValues();
    for (var i = 0; i < values.length; i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ = goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_ = goog.asserts.assertNumber(this.count_) + 1;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  if (!key) {
    return opt_default;
  }
  var values = this.getValues(key);
  return values.length > 0 ? String(values[0]) : opt_default;
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ = goog.asserts.assertNumber(this.count_) + values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0; j < val.length; j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0; i < arguments.length; i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object;
};
goog.reflect.objectProperty = function(prop, object) {
  return prop;
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x;
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true;
  } catch (e) {
  }
  return false;
};
goog.reflect.cache = function(cacheObj, key, valueFn, opt_keyFn) {
  const storedKey = opt_keyFn ? opt_keyFn(key) : key;
  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {
    return cacheObj[storedKey];
  }
  return cacheObj[storedKey] = valueFn(key);
};
goog.provide("goog.math.Integer");
goog.require("goog.reflect");
goog.math.Integer = function(bits, sign) {
  this.sign_ = sign;
  var localBits = [];
  var top = true;
  for (var i = bits.length - 1; i >= 0; i--) {
    var val = bits[i] | 0;
    if (!top || val != sign) {
      localBits[i] = val;
      top = false;
    }
  }
  this.bits_ = localBits;
};
goog.math.Integer.IntCache_ = {};
goog.math.Integer.fromInt = function(value) {
  if (-128 <= value && value < 128) {
    return goog.reflect.cache(goog.math.Integer.IntCache_, value, function(val) {
      return new goog.math.Integer([val | 0], val < 0 ? -1 : 0);
    });
  }
  return new goog.math.Integer([value | 0], value < 0 ? -1 : 0);
};
goog.math.Integer.fromNumber = function(value) {
  if (isNaN(value) || !isFinite(value)) {
    return goog.math.Integer.ZERO;
  } else {
    if (value < 0) {
      return goog.math.Integer.fromNumber(-value).negate();
    } else {
      var bits = [];
      var pow = 1;
      for (var i = 0; value >= pow; i++) {
        bits[i] = value / pow | 0;
        pow *= goog.math.Integer.TWO_PWR_32_DBL_;
      }
      return new goog.math.Integer(bits, 0);
    }
  }
};
goog.math.Integer.fromBits = function(bits) {
  var high = bits[bits.length - 1];
  return new goog.math.Integer(bits, high & 1 << 31 ? -1 : 0);
};
goog.math.Integer.fromString = function(str, opt_radix) {
  if (str.length == 0) {
    throw new Error("number format error: empty string");
  }
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw new Error("radix out of range: " + radix);
  }
  if (str.charAt(0) == "-") {
    return goog.math.Integer.fromString(str.substring(1), radix).negate();
  } else {
    if (str.indexOf("-") >= 0) {
      throw new Error('number format error: interior "-" character');
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 8));
  var result = goog.math.Integer.ZERO;
  for (var i = 0; i < str.length; i += 8) {
    var size = Math.min(8, str.length - i);
    var value = parseInt(str.substring(i, i + size), radix);
    if (size < 8) {
      var power = goog.math.Integer.fromNumber(Math.pow(radix, size));
      result = result.multiply(power).add(goog.math.Integer.fromNumber(value));
    } else {
      result = result.multiply(radixToPower);
      result = result.add(goog.math.Integer.fromNumber(value));
    }
  }
  return result;
};
goog.math.Integer.TWO_PWR_32_DBL_ = (1 << 16) * (1 << 16);
goog.math.Integer.ZERO = goog.math.Integer.fromInt(0);
goog.math.Integer.ONE = goog.math.Integer.fromInt(1);
goog.math.Integer.TWO_PWR_24_ = goog.math.Integer.fromInt(1 << 24);
goog.math.Integer.prototype.toInt = function() {
  return this.bits_.length > 0 ? this.bits_[0] : this.sign_;
};
goog.math.Integer.prototype.toNumber = function() {
  if (this.isNegative()) {
    return -this.negate().toNumber();
  } else {
    var val = 0;
    var pow = 1;
    for (var i = 0; i < this.bits_.length; i++) {
      val += this.getBitsUnsigned(i) * pow;
      pow *= goog.math.Integer.TWO_PWR_32_DBL_;
    }
    return val;
  }
};
goog.math.Integer.prototype.toString = function(opt_radix) {
  var radix = opt_radix || 10;
  if (radix < 2 || 36 < radix) {
    throw new Error("radix out of range: " + radix);
  }
  if (this.isZero()) {
    return "0";
  } else {
    if (this.isNegative()) {
      return "-" + this.negate().toString(radix);
    }
  }
  var radixToPower = goog.math.Integer.fromNumber(Math.pow(radix, 6));
  var rem = this;
  var result = "";
  while (true) {
    var remDiv = rem.divide(radixToPower);
    var intval = rem.subtract(remDiv.multiply(radixToPower)).toInt() >>> 0;
    var digits = intval.toString(radix);
    rem = remDiv;
    if (rem.isZero()) {
      return digits + result;
    } else {
      while (digits.length < 6) {
        digits = "0" + digits;
      }
      result = "" + digits + result;
    }
  }
};
goog.math.Integer.prototype.getBits = function(index) {
  if (index < 0) {
    return 0;
  } else {
    if (index < this.bits_.length) {
      return this.bits_[index];
    } else {
      return this.sign_;
    }
  }
};
goog.math.Integer.prototype.getBitsUnsigned = function(index) {
  var val = this.getBits(index);
  return val >= 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;
};
goog.math.Integer.prototype.getSign = function() {
  return this.sign_;
};
goog.math.Integer.prototype.isZero = function() {
  if (this.sign_ != 0) {
    return false;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    if (this.bits_[i] != 0) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.isNegative = function() {
  return this.sign_ == -1;
};
goog.math.Integer.prototype.isOdd = function() {
  return this.bits_.length == 0 && this.sign_ == -1 || this.bits_.length > 0 && (this.bits_[0] & 1) != 0;
};
goog.math.Integer.prototype.equals = function(other) {
  if (this.sign_ != other.sign_) {
    return false;
  }
  var len = Math.max(this.bits_.length, other.bits_.length);
  for (var i = 0; i < len; i++) {
    if (this.getBits(i) != other.getBits(i)) {
      return false;
    }
  }
  return true;
};
goog.math.Integer.prototype.notEquals = function(other) {
  return !this.equals(other);
};
goog.math.Integer.prototype.greaterThan = function(other) {
  return this.compare(other) > 0;
};
goog.math.Integer.prototype.greaterThanOrEqual = function(other) {
  return this.compare(other) >= 0;
};
goog.math.Integer.prototype.lessThan = function(other) {
  return this.compare(other) < 0;
};
goog.math.Integer.prototype.lessThanOrEqual = function(other) {
  return this.compare(other) <= 0;
};
goog.math.Integer.prototype.compare = function(other) {
  var diff = this.subtract(other);
  if (diff.isNegative()) {
    return -1;
  } else {
    if (diff.isZero()) {
      return 0;
    } else {
      return +1;
    }
  }
};
goog.math.Integer.prototype.shorten = function(numBits) {
  var arr_index = numBits - 1 >> 5;
  var bit_index = (numBits - 1) % 32;
  var bits = [];
  for (var i = 0; i < arr_index; i++) {
    bits[i] = this.getBits(i);
  }
  var sigBits = bit_index == 31 ? 4294967295 : (1 << bit_index + 1) - 1;
  var val = this.getBits(arr_index) & sigBits;
  if (val & 1 << bit_index) {
    val |= 4294967295 - sigBits;
    bits[arr_index] = val;
    return new goog.math.Integer(bits, -1);
  } else {
    bits[arr_index] = val;
    return new goog.math.Integer(bits, 0);
  }
};
goog.math.Integer.prototype.negate = function() {
  return this.not().add(goog.math.Integer.ONE);
};
goog.math.Integer.prototype.abs = function() {
  return this.isNegative() ? this.negate() : this;
};
goog.math.Integer.prototype.add = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  var carry = 0;
  for (var i = 0; i <= len; i++) {
    var a1 = this.getBits(i) >>> 16;
    var a0 = this.getBits(i) & 65535;
    var b1 = other.getBits(i) >>> 16;
    var b0 = other.getBits(i) & 65535;
    var c0 = carry + a0 + b0;
    var c1 = (c0 >>> 16) + a1 + b1;
    carry = c1 >>> 16;
    c0 &= 65535;
    c1 &= 65535;
    arr[i] = c1 << 16 | c0;
  }
  return goog.math.Integer.fromBits(arr);
};
goog.math.Integer.prototype.subtract = function(other) {
  return this.add(other.negate());
};
goog.math.Integer.prototype.multiply = function(other) {
  if (this.isZero()) {
    return goog.math.Integer.ZERO;
  } else {
    if (other.isZero()) {
      return goog.math.Integer.ZERO;
    }
  }
  if (this.isNegative()) {
    if (other.isNegative()) {
      return this.negate().multiply(other.negate());
    } else {
      return this.negate().multiply(other).negate();
    }
  } else {
    if (other.isNegative()) {
      return this.multiply(other.negate()).negate();
    }
  }
  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) && other.lessThan(goog.math.Integer.TWO_PWR_24_)) {
    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());
  }
  var len = this.bits_.length + other.bits_.length;
  var arr = [];
  for (var i = 0; i < 2 * len; i++) {
    arr[i] = 0;
  }
  for (var i = 0; i < this.bits_.length; i++) {
    for (var j = 0; j < other.bits_.length; j++) {
      var a1 = this.getBits(i) >>> 16;
      var a0 = this.getBits(i) & 65535;
      var b1 = other.getBits(j) >>> 16;
      var b0 = other.getBits(j) & 65535;
      arr[2 * i + 2 * j] += a0 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);
      arr[2 * i + 2 * j + 1] += a1 * b0;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 1] += a0 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);
      arr[2 * i + 2 * j + 2] += a1 * b1;
      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);
    }
  }
  for (var i = 0; i < len; i++) {
    arr[i] = arr[2 * i + 1] << 16 | arr[2 * i];
  }
  for (var i = len; i < 2 * len; i++) {
    arr[i] = 0;
  }
  return new goog.math.Integer(arr, 0);
};
goog.math.Integer.carry16_ = function(bits, index) {
  while ((bits[index] & 65535) != bits[index]) {
    bits[index + 1] += bits[index] >>> 16;
    bits[index] &= 65535;
    index++;
  }
};
goog.math.Integer.prototype.slowDivide_ = function(other) {
  if (this.isNegative() || other.isNegative()) {
    throw new Error("slowDivide_ only works with positive integers.");
  }
  var twoPower = goog.math.Integer.ONE;
  var multiple = other;
  while (multiple.lessThanOrEqual(this)) {
    twoPower = twoPower.shiftLeft(1);
    multiple = multiple.shiftLeft(1);
  }
  var res = twoPower.shiftRight(1);
  var total = multiple.shiftRight(1);
  var total2;
  multiple = multiple.shiftRight(2);
  twoPower = twoPower.shiftRight(2);
  while (!multiple.isZero()) {
    total2 = total.add(multiple);
    if (total2.lessThanOrEqual(this)) {
      res = res.add(twoPower);
      total = total2;
    }
    multiple = multiple.shiftRight(1);
    twoPower = twoPower.shiftRight(1);
  }
  var remainder = this.subtract(res.multiply(other));
  return new goog.math.Integer.DivisionResult(res, remainder);
};
goog.math.Integer.prototype.divide = function(other) {
  return this.divideAndRemainder(other).quotient;
};
goog.math.Integer.DivisionResult = function(quotient, remainder) {
  this.quotient = quotient;
  this.remainder = remainder;
};
goog.math.Integer.prototype.divideAndRemainder = function(other) {
  if (other.isZero()) {
    throw new Error("division by zero");
  } else {
    if (this.isZero()) {
      return new goog.math.Integer.DivisionResult(goog.math.Integer.ZERO, goog.math.Integer.ZERO);
    }
  }
  if (this.isNegative()) {
    var result = this.negate().divideAndRemainder(other);
    return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder.negate());
  } else {
    if (other.isNegative()) {
      var result = this.divideAndRemainder(other.negate());
      return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder);
    }
  }
  if (this.bits_.length > 30) {
    return this.slowDivide_(other);
  }
  var res = goog.math.Integer.ZERO;
  var rem = this;
  while (rem.greaterThanOrEqual(other)) {
    var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
    var log2 = Math.ceil(Math.log(approx) / Math.LN2);
    var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
    var approxRes = goog.math.Integer.fromNumber(approx);
    var approxRem = approxRes.multiply(other);
    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
      approx -= delta;
      approxRes = goog.math.Integer.fromNumber(approx);
      approxRem = approxRes.multiply(other);
    }
    if (approxRes.isZero()) {
      approxRes = goog.math.Integer.ONE;
    }
    res = res.add(approxRes);
    rem = rem.subtract(approxRem);
  }
  return new goog.math.Integer.DivisionResult(res, rem);
};
goog.math.Integer.prototype.modulo = function(other) {
  return this.divideAndRemainder(other).remainder;
};
goog.math.Integer.prototype.not = function() {
  var len = this.bits_.length;
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = ~this.bits_[i];
  }
  return new goog.math.Integer(arr, ~this.sign_);
};
goog.math.Integer.prototype.and = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) & other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ & other.sign_);
};
goog.math.Integer.prototype.or = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) | other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ | other.sign_);
};
goog.math.Integer.prototype.xor = function(other) {
  var len = Math.max(this.bits_.length, other.bits_.length);
  var arr = [];
  for (var i = 0; i < len; i++) {
    arr[i] = this.getBits(i) ^ other.getBits(i);
  }
  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);
};
goog.math.Integer.prototype.shiftLeft = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length + arr_delta + (bit_delta > 0 ? 1 : 0);
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i - arr_delta) << bit_delta | this.getBits(i - arr_delta - 1) >>> 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i - arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.math.Integer.prototype.shiftRight = function(numBits) {
  var arr_delta = numBits >> 5;
  var bit_delta = numBits % 32;
  var len = this.bits_.length - arr_delta;
  var arr = [];
  for (var i = 0; i < len; i++) {
    if (bit_delta > 0) {
      arr[i] = this.getBits(i + arr_delta) >>> bit_delta | this.getBits(i + arr_delta + 1) << 32 - bit_delta;
    } else {
      arr[i] = this.getBits(i + arr_delta);
    }
  }
  return new goog.math.Integer(arr, this.sign_);
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += String(a1);
  if (opt_a2 != null) {
    for (let i = 1; i < arguments.length; i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.loadModule(function(exports) {
  "use strict";
  goog.module("goog.math.Long");
  goog.module.declareLegacyNamespace();
  const asserts = goog.require("goog.asserts");
  const reflect = goog.require("goog.reflect");
  class Long {
    constructor(low, high) {
      this.low_ = low | 0;
      this.high_ = high | 0;
    }
    toInt() {
      return this.low_;
    }
    toNumber() {
      return this.high_ * TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();
    }
    isSafeInteger() {
      var top11Bits = this.high_ >> 21;
      return top11Bits == 0 || top11Bits == -1 && !(this.low_ == 0 && this.high_ == (4292870144 | 0));
    }
    toString(opt_radix) {
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw new Error("radix out of range: " + radix);
      }
      if (this.isSafeInteger()) {
        var asNumber = this.toNumber();
        return radix == 10 ? "" + asNumber : asNumber.toString(radix);
      }
      var safeDigits = 14 - (radix >> 2);
      var radixPowSafeDigits = Math.pow(radix, safeDigits);
      var radixToPower = Long.fromBits(radixPowSafeDigits, radixPowSafeDigits / TWO_PWR_32_DBL_);
      var remDiv = this.div(radixToPower);
      var val = Math.abs(this.subtract(remDiv.multiply(radixToPower)).toNumber());
      var digits = radix == 10 ? "" + val : val.toString(radix);
      if (digits.length < safeDigits) {
        digits = "0000000000000".substr(digits.length - safeDigits) + digits;
      }
      val = remDiv.toNumber();
      return (radix == 10 ? val : val.toString(radix)) + digits;
    }
    getHighBits() {
      return this.high_;
    }
    getLowBits() {
      return this.low_;
    }
    getLowBitsUnsigned() {
      return this.low_ >>> 0;
    }
    getNumBitsAbs() {
      if (this.isNegative()) {
        if (this.equals(Long.getMinValue())) {
          return 64;
        } else {
          return this.negate().getNumBitsAbs();
        }
      } else {
        var val = this.high_ != 0 ? this.high_ : this.low_;
        for (var bit = 31; bit > 0; bit--) {
          if ((val & 1 << bit) != 0) {
            break;
          }
        }
        return this.high_ != 0 ? bit + 33 : bit + 1;
      }
    }
    isZero() {
      return this.low_ == 0 && this.high_ == 0;
    }
    isNegative() {
      return this.high_ < 0;
    }
    isOdd() {
      return (this.low_ & 1) == 1;
    }
    equals(other) {
      return this.low_ == other.low_ && this.high_ == other.high_;
    }
    notEquals(other) {
      return !this.equals(other);
    }
    lessThan(other) {
      return this.compare(other) < 0;
    }
    lessThanOrEqual(other) {
      return this.compare(other) <= 0;
    }
    greaterThan(other) {
      return this.compare(other) > 0;
    }
    greaterThanOrEqual(other) {
      return this.compare(other) >= 0;
    }
    compare(other) {
      if (this.high_ == other.high_) {
        if (this.low_ == other.low_) {
          return 0;
        }
        return this.getLowBitsUnsigned() > other.getLowBitsUnsigned() ? 1 : -1;
      }
      return this.high_ > other.high_ ? 1 : -1;
    }
    negate() {
      var negLow = ~this.low_ + 1 | 0;
      var overflowFromLow = !negLow;
      var negHigh = ~this.high_ + overflowFromLow | 0;
      return Long.fromBits(negLow, negHigh);
    }
    add(other) {
      var a48 = this.high_ >>> 16;
      var a32 = this.high_ & 65535;
      var a16 = this.low_ >>> 16;
      var a00 = this.low_ & 65535;
      var b48 = other.high_ >>> 16;
      var b32 = other.high_ & 65535;
      var b16 = other.low_ >>> 16;
      var b00 = other.low_ & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 + b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 + b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 + b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 + b48;
      c48 &= 65535;
      return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
    }
    subtract(other) {
      return this.add(other.negate());
    }
    multiply(other) {
      if (this.isZero()) {
        return this;
      }
      if (other.isZero()) {
        return other;
      }
      var a48 = this.high_ >>> 16;
      var a32 = this.high_ & 65535;
      var a16 = this.low_ >>> 16;
      var a00 = this.low_ & 65535;
      var b48 = other.high_ >>> 16;
      var b32 = other.high_ & 65535;
      var b16 = other.low_ >>> 16;
      var b00 = other.low_ & 65535;
      var c48 = 0, c32 = 0, c16 = 0, c00 = 0;
      c00 += a00 * b00;
      c16 += c00 >>> 16;
      c00 &= 65535;
      c16 += a16 * b00;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c16 += a00 * b16;
      c32 += c16 >>> 16;
      c16 &= 65535;
      c32 += a32 * b00;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a16 * b16;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c32 += a00 * b32;
      c48 += c32 >>> 16;
      c32 &= 65535;
      c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;
      c48 &= 65535;
      return Long.fromBits(c16 << 16 | c00, c48 << 16 | c32);
    }
    div(other) {
      if (other.isZero()) {
        throw new Error("division by zero");
      }
      if (this.isNegative()) {
        if (this.equals(Long.getMinValue())) {
          if (other.equals(Long.getOne()) || other.equals(Long.getNegOne())) {
            return Long.getMinValue();
          }
          if (other.equals(Long.getMinValue())) {
            return Long.getOne();
          }
          var halfThis = this.shiftRight(1);
          var approx = halfThis.div(other).shiftLeft(1);
          if (approx.equals(Long.getZero())) {
            return other.isNegative() ? Long.getOne() : Long.getNegOne();
          }
          var rem = this.subtract(other.multiply(approx));
          var result = approx.add(rem.div(other));
          return result;
        }
        if (other.isNegative()) {
          return this.negate().div(other.negate());
        }
        return this.negate().div(other).negate();
      }
      if (this.isZero()) {
        return Long.getZero();
      }
      if (other.isNegative()) {
        if (other.equals(Long.getMinValue())) {
          return Long.getZero();
        }
        return this.div(other.negate()).negate();
      }
      var res = Long.getZero();
      var rem = this;
      while (rem.greaterThanOrEqual(other)) {
        var approx = Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));
        var log2 = Math.ceil(Math.log(approx) / Math.LN2);
        var delta = log2 <= 48 ? 1 : Math.pow(2, log2 - 48);
        var approxRes = Long.fromNumber(approx);
        var approxRem = approxRes.multiply(other);
        while (approxRem.isNegative() || approxRem.greaterThan(rem)) {
          approx -= delta;
          approxRes = Long.fromNumber(approx);
          approxRem = approxRes.multiply(other);
        }
        if (approxRes.isZero()) {
          approxRes = Long.getOne();
        }
        res = res.add(approxRes);
        rem = rem.subtract(approxRem);
      }
      return res;
    }
    modulo(other) {
      return this.subtract(this.div(other).multiply(other));
    }
    not() {
      return Long.fromBits(~this.low_, ~this.high_);
    }
    and(other) {
      return Long.fromBits(this.low_ & other.low_, this.high_ & other.high_);
    }
    or(other) {
      return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);
    }
    xor(other) {
      return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);
    }
    shiftLeft(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var low = this.low_;
        if (numBits < 32) {
          var high = this.high_;
          return Long.fromBits(low << numBits, high << numBits | low >>> 32 - numBits);
        } else {
          return Long.fromBits(0, low << numBits - 32);
        }
      }
    }
    shiftRight(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var high = this.high_;
        if (numBits < 32) {
          var low = this.low_;
          return Long.fromBits(low >>> numBits | high << 32 - numBits, high >> numBits);
        } else {
          return Long.fromBits(high >> numBits - 32, high >= 0 ? 0 : -1);
        }
      }
    }
    shiftRightUnsigned(numBits) {
      numBits &= 63;
      if (numBits == 0) {
        return this;
      } else {
        var high = this.high_;
        if (numBits < 32) {
          var low = this.low_;
          return Long.fromBits(low >>> numBits | high << 32 - numBits, high >>> numBits);
        } else {
          if (numBits == 32) {
            return Long.fromBits(high, 0);
          } else {
            return Long.fromBits(high >>> numBits - 32, 0);
          }
        }
      }
    }
    static fromInt(value) {
      var intValue = value | 0;
      asserts.assert(value === intValue, "value should be a 32-bit integer");
      if (-128 <= intValue && intValue < 128) {
        return getCachedIntValue_(intValue);
      } else {
        return new Long(intValue, intValue < 0 ? -1 : 0);
      }
    }
    static fromNumber(value) {
      if (value > 0) {
        if (value >= TWO_PWR_63_DBL_) {
          return Long.getMaxValue();
        }
        return new Long(value, value / TWO_PWR_32_DBL_);
      } else {
        if (value < 0) {
          if (value <= -TWO_PWR_63_DBL_) {
            return Long.getMinValue();
          }
          return (new Long(-value, -value / TWO_PWR_32_DBL_)).negate();
        } else {
          return Long.getZero();
        }
      }
    }
    static fromBits(lowBits, highBits) {
      return new Long(lowBits, highBits);
    }
    static fromString(str, opt_radix) {
      if (str.charAt(0) == "-") {
        return Long.fromString(str.substring(1), opt_radix).negate();
      }
      var numberValue = parseInt(str, opt_radix || 10);
      if (numberValue <= MAX_SAFE_INTEGER_) {
        return new Long(numberValue % TWO_PWR_32_DBL_ | 0, numberValue / TWO_PWR_32_DBL_ | 0);
      }
      if (str.length == 0) {
        throw new Error("number format error: empty string");
      }
      if (str.indexOf("-") >= 0) {
        throw new Error('number format error: interior "-" character: ' + str);
      }
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw new Error("radix out of range: " + radix);
      }
      var radixToPower = Long.fromNumber(Math.pow(radix, 8));
      var result = Long.getZero();
      for (var i = 0; i < str.length; i += 8) {
        var size = Math.min(8, str.length - i);
        var value = parseInt(str.substring(i, i + size), radix);
        if (size < 8) {
          var power = Long.fromNumber(Math.pow(radix, size));
          result = result.multiply(power).add(Long.fromNumber(value));
        } else {
          result = result.multiply(radixToPower);
          result = result.add(Long.fromNumber(value));
        }
      }
      return result;
    }
    static isStringInRange(str, opt_radix) {
      var radix = opt_radix || 10;
      if (radix < 2 || 36 < radix) {
        throw new Error("radix out of range: " + radix);
      }
      var extremeValue = str.charAt(0) == "-" ? MIN_VALUE_FOR_RADIX_[radix] : MAX_VALUE_FOR_RADIX_[radix];
      if (str.length < extremeValue.length) {
        return true;
      } else {
        if (str.length == extremeValue.length && str <= extremeValue) {
          return true;
        } else {
          return false;
        }
      }
    }
    static getZero() {
      return ZERO_;
    }
    static getOne() {
      return ONE_;
    }
    static getNegOne() {
      return NEG_ONE_;
    }
    static getMaxValue() {
      return MAX_VALUE_;
    }
    static getMinValue() {
      return MIN_VALUE_;
    }
    static getTwoPwr24() {
      return TWO_PWR_24_;
    }
  }
  exports = Long;
  const IntCache_ = {};
  function getCachedIntValue_(value) {
    return reflect.cache(IntCache_, value, function(val) {
      return new Long(val, val < 0 ? -1 : 0);
    });
  }
  const MAX_VALUE_FOR_RADIX_ = ["", "", "111111111111111111111111111111111111111111111111111111111111111", "2021110011022210012102010021220101220221", "13333333333333333333333333333333", "1104332401304422434310311212", "1540241003031030222122211", "22341010611245052052300", "777777777777777777777", "67404283172107811827", "9223372036854775807", "1728002635214590697", "41a792678515120367", "10b269549075433c37", "4340724c6c71dc7a7", "160e2ad3246366807", "7fffffffffffffff", "33d3d8307b214008", "16agh595df825fa7", 
  "ba643dci0ffeehh", "5cbfjia3fh26ja7", "2heiciiie82dh97", "1adaibb21dckfa7", "i6k448cf4192c2", "acd772jnc9l0l7", "64ie1focnn5g77", "3igoecjbmca687", "27c48l5b37oaop", "1bk39f3ah3dmq7", "q1se8f0m04isb", "hajppbc1fc207", "bm03i95hia437", "7vvvvvvvvvvvv", "5hg4ck9jd4u37", "3tdtk1v8j6tpp", "2pijmikexrxp7", "1y2p0ij32e8e7"];
  const MIN_VALUE_FOR_RADIX_ = ["", "", "-1000000000000000000000000000000000000000000000000000000000000000", "-2021110011022210012102010021220101220222", "-20000000000000000000000000000000", "-1104332401304422434310311213", "-1540241003031030222122212", "-22341010611245052052301", "-1000000000000000000000", "-67404283172107811828", "-9223372036854775808", "-1728002635214590698", "-41a792678515120368", "-10b269549075433c38", "-4340724c6c71dc7a8", "-160e2ad3246366808", "-8000000000000000", "-33d3d8307b214009", 
  "-16agh595df825fa8", "-ba643dci0ffeehi", "-5cbfjia3fh26ja8", "-2heiciiie82dh98", "-1adaibb21dckfa8", "-i6k448cf4192c3", "-acd772jnc9l0l8", "-64ie1focnn5g78", "-3igoecjbmca688", "-27c48l5b37oaoq", "-1bk39f3ah3dmq8", "-q1se8f0m04isc", "-hajppbc1fc208", "-bm03i95hia438", "-8000000000000", "-5hg4ck9jd4u38", "-3tdtk1v8j6tpq", "-2pijmikexrxp8", "-1y2p0ij32e8e8"];
  const MAX_SAFE_INTEGER_ = 9007199254740991;
  const TWO_PWR_32_DBL_ = 4294967296;
  const TWO_PWR_63_DBL_ = 0x7fffffffffffffff;
  const ZERO_ = Long.fromBits(0, 0);
  const ONE_ = Long.fromBits(1, 0);
  const NEG_ONE_ = Long.fromBits(-1, -1);
  const MAX_VALUE_ = Long.fromBits(4294967295, 2147483647);
  const MIN_VALUE_ = Long.fromBits(0, 2147483648);
  const TWO_PWR_24_ = Long.fromBits(1 << 24, 0);
  return exports;
});
goog.provide("cljs.core");
goog.require("goog.math.Long");
goog.require("goog.math.Integer");
goog.require("goog.string");
goog.require("goog.object");
goog.require("goog.array");
goog.require("goog.Uri");
goog.require("goog.string.StringBuffer");
cljs.core._STAR_clojurescript_version_STAR_ = "1.10.773";
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_unchecked_arrays_STAR_ = false;
cljs.core._STAR_warn_on_infer_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.PROTOCOL_SENTINEL !== "undefined") {
} else {
  cljs.core.PROTOCOL_SENTINEL = {};
}
cljs.core.MODULE_URIS = null;
cljs.core.MODULE_INFOS = null;
cljs.core._STAR_target_STAR_ = goog.define("cljs.core._STAR_target_STAR_", "default");
cljs.core._STAR_global_STAR_ = goog.define("cljs.core._STAR_global_STAR_", "default");
cljs.core._STAR_ns_STAR_ = null;
cljs.core._STAR_out_STAR_ = null;
cljs.core._STAR_assert_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = null;
}
cljs.core._STAR_exec_tap_fn_STAR_ = function cljs$core$_STAR_exec_tap_fn_STAR_(f) {
  if (typeof setTimeout !== "undefined") {
    var and__4115__auto__ = setTimeout(f, 0);
    if (cljs.core.truth_(and__4115__auto__)) {
      return true;
    } else {
      return and__4115__auto__;
    }
  } else {
    return false;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_print_err_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_err_fn_STAR_ = null;
}
cljs.core.set_print_fn_BANG_ = function cljs$core$set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core.set_print_err_fn_BANG_ = function cljs$core$set_print_err_fn_BANG_(f) {
  return cljs.core._STAR_print_err_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_namespace_maps_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
cljs.core._STAR_print_fn_bodies_STAR_ = false;
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function cljs$core$pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function cljs$core$enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  cljs.core.set_print_fn_BANG_(function() {
    var xs = arguments;
    return console.log.apply(console, goog.array.clone(xs));
  });
  cljs.core.set_print_err_fn_BANG_(function() {
    var xs = arguments;
    return console.error.apply(console, goog.array.clone(xs));
  });
  return null;
};
cljs.core.truth_ = function cljs$core$truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function cljs$core$identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function cljs$core$nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function cljs$core$array_QMARK_(x) {
  if (cljs.core._STAR_target_STAR_ === "nodejs") {
    return Array.isArray(x);
  } else {
    return x instanceof Array;
  }
};
cljs.core.number_QMARK_ = function cljs$core$number_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.not = function cljs$core$not(x) {
  if (x == null) {
    return true;
  } else {
    if (x === false) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.some_QMARK_ = function cljs$core$some_QMARK_(x) {
  return !(x == null);
};
cljs.core.object_QMARK_ = function cljs$core$object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function cljs$core$string_QMARK_(x) {
  return goog.isString(x);
};
cljs.core.char_QMARK_ = function cljs$core$char_QMARK_(x) {
  return typeof x === "string" && 1 === x.length;
};
cljs.core.any_QMARK_ = function cljs$core$any_QMARK_(x) {
  return true;
};
cljs.core.native_satisfies_QMARK_ = function cljs$core$native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[goog.typeOf(x__$1)]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function cljs$core$is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core._STAR_command_line_args_STAR_ = null;
cljs.core.type = function cljs$core$type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function cljs$core$missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__4115__auto__ = ty;
    if (cljs.core.truth_(and__4115__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__4115__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : goog.typeOf(obj);
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function cljs$core$type__GT_str(ty) {
  var temp__5733__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__5733__auto__)) {
    var s = temp__5733__auto__;
    return s;
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);
  }
};
cljs.core.load_file = function cljs$core$load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.nodeGlobalRequire(file);
  }
};
if (typeof Symbol !== "undefined" && goog.typeOf(Symbol) === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.CHAR_MAP = {"]":"_RBRACK_", "'":"_SINGLEQUOTE_", "\x3d":"_EQ_", '"':"_DOUBLEQUOTE_", "!":"_BANG_", "*":"_STAR_", "%":"_PERCENT_", "|":"_BAR_", "~":"_TILDE_", "/":"_SLASH_", "\\":"_BSLASH_", "-":"_", "?":"_QMARK_", "\x26":"_AMPERSAND_", ":":"_COLON_", "\x3c":"_LT_", "{":"_LBRACE_", "}":"_RBRACE_", "[":"_LBRACK_", "#":"_SHARP_", "^":"_CARET_", "+":"_PLUS_", "@":"_CIRCA_", "\x3e":"_GT_"};
cljs.core.DEMUNGE_MAP = {"_RBRACE_":"}", "_COLON_":":", "_BANG_":"!", "_QMARK_":"?", "_BSLASH_":"\\\\", "_SLASH_":"/", "_PERCENT_":"%", "_PLUS_":"+", "_SHARP_":"#", "_LBRACE_":"{", "_BAR_":"|", "_LBRACK_":"[", "_EQ_":"\x3d", "_":"-", "_TILDE_":"~", "_RBRACK_":"]", "_GT_":"\x3e", "_SINGLEQUOTE_":"'", "_CIRCA_":"@", "_AMPERSAND_":"\x26", "_DOUBLEQUOTE_":'\\"', "_CARET_":"^", "_LT_":"\x3c", "_STAR_":"*"};
cljs.core.DEMUNGE_PATTERN = null;
cljs.core.system_time = function cljs$core$system_time() {
  if (typeof performance !== "undefined" && !(performance.now == null)) {
    return performance.now();
  } else {
    if (typeof process !== "undefined" && !(process.hrtime == null)) {
      var t = process.hrtime();
      return (t[0] * 1.0E9 + t[1]) / 1000000.0;
    } else {
      return (new Date).getTime();
    }
  }
};
cljs.core.make_array = function cljs$core$make_array(var_args) {
  var G__12599 = arguments.length;
  switch(G__12599) {
    case 1:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12601 = arguments.length;
      var i__4737__auto___12602 = 0;
      while (true) {
        if (i__4737__auto___12602 < len__4736__auto___12601) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12602]);
          var G__12603 = i__4737__auto___12602 + 1;
          i__4737__auto___12602 = G__12603;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 = function(size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 = function(type, size) {
  return new Array(size);
};
cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic = function(type, size, more_sizes) {
  var dims = more_sizes;
  var dimarray = new Array(size);
  var n__4613__auto___12604 = dimarray.length;
  var i_12605 = 0;
  while (true) {
    if (i_12605 < n__4613__auto___12604) {
      dimarray[i_12605] = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array, null, dims);
      var G__12606 = i_12605 + 1;
      i_12605 = G__12606;
      continue;
    } else {
    }
    break;
  }
  return dimarray;
};
cljs.core.make_array.cljs$lang$applyTo = function(seq12596) {
  var G__12597 = cljs.core.first(seq12596);
  var seq12596__$1 = cljs.core.next(seq12596);
  var G__12598 = cljs.core.first(seq12596__$1);
  var seq12596__$2 = cljs.core.next(seq12596__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12597, G__12598, seq12596__$2);
};
cljs.core.make_array.cljs$lang$maxFixedArity = 2;
cljs.core.aclone = function cljs$core$aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4613__auto___12607 = len;
  var i_12608 = 0;
  while (true) {
    if (i_12608 < n__4613__auto___12607) {
      new_arr[i_12608] = arr[i_12608];
      var G__12609 = i_12608 + 1;
      i_12608 = G__12609;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function cljs$core$array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__12610 = i + 1;
      i = G__12610;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.maybe_warn = function cljs$core$maybe_warn(e) {
  if (cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)) {
    return cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_err_fn_STAR_.cljs$core$IFn$_invoke$arity$1(e) : cljs.core._STAR_print_err_fn_STAR_.call(null, e);
  } else {
    return null;
  }
};
cljs.core.checked_aget = function cljs$core$checked_aget(var_args) {
  var G__12615 = arguments.length;
  switch(G__12615) {
    case 2:
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12618 = arguments.length;
      var i__4737__auto___12619 = 0;
      while (true) {
        if (i__4737__auto___12619 < len__4736__auto___12618) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12619]);
          var G__12620 = i__4737__auto___12619 + 1;
          i__4737__auto___12619 = G__12620;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  try {
    if (cljs.core.truth_(function() {
      var or__4126__auto__ = cljs.core.array_QMARK_(array);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e12616) {
    var e_12621 = e12616;
    cljs.core.maybe_warn(e_12621);
  }
  return array[idx];
};
cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget.cljs$lang$applyTo = function(seq12612) {
  var G__12613 = cljs.core.first(seq12612);
  var seq12612__$1 = cljs.core.next(seq12612);
  var G__12614 = cljs.core.first(seq12612__$1);
  var seq12612__$2 = cljs.core.next(seq12612__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12613, G__12614, seq12612__$2);
};
cljs.core.checked_aget.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset = function cljs$core$checked_aset(var_args) {
  var G__12627 = arguments.length;
  switch(G__12627) {
    case 3:
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12630 = arguments.length;
      var i__4737__auto___12631 = 0;
      while (true) {
        if (i__4737__auto___12631 < len__4736__auto___12630) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12631]);
          var G__12632 = i__4737__auto___12631 + 1;
          i__4737__auto___12631 = G__12632;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  try {
    if (cljs.core.truth_(function() {
      var or__4126__auto__ = cljs.core.array_QMARK_(array);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return goog.isArrayLike(array);
      }
    }())) {
    } else {
      throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
    }
    if (typeof idx === "number") {
    } else {
      throw new Error("Assert failed: (number? idx)");
    }
    if (!(idx < 0)) {
    } else {
      throw new Error("Assert failed: (not (neg? idx))");
    }
    if (idx < array.length) {
    } else {
      throw new Error("Assert failed: (\x3c idx (alength array))");
    }
  } catch (e12628) {
    var e_12633 = e12628;
    cljs.core.maybe_warn(e_12633);
  }
  return array[idx] = val;
};
cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset, cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset.cljs$lang$applyTo = function(seq12623) {
  var G__12624 = cljs.core.first(seq12623);
  var seq12623__$1 = cljs.core.next(seq12623);
  var G__12625 = cljs.core.first(seq12623__$1);
  var seq12623__$2 = cljs.core.next(seq12623__$1);
  var G__12626 = cljs.core.first(seq12623__$2);
  var seq12623__$3 = cljs.core.next(seq12623__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12624, G__12625, G__12626, seq12623__$3);
};
cljs.core.checked_aset.cljs$lang$maxFixedArity = 3;
cljs.core.checked_aget_SINGLEQUOTE_ = function cljs$core$checked_aget_SINGLEQUOTE_(var_args) {
  var G__12638 = arguments.length;
  switch(G__12638) {
    case 2:
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12640 = arguments.length;
      var i__4737__auto___12641 = 0;
      while (true) {
        if (i__4737__auto___12641 < len__4736__auto___12640) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12641]);
          var G__12642 = i__4737__auto___12641 + 1;
          i__4737__auto___12641 = G__12642;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = cljs.core.array_QMARK_(array);
    if (or__4126__auto__) {
      return or__4126__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx];
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.checked_aget_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idxs);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo = function(seq12635) {
  var G__12636 = cljs.core.first(seq12635);
  var seq12635__$1 = cljs.core.next(seq12635);
  var G__12637 = cljs.core.first(seq12635__$1);
  var seq12635__$2 = cljs.core.next(seq12635__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12636, G__12637, seq12635__$2);
};
cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity = 2;
cljs.core.checked_aset_SINGLEQUOTE_ = function cljs$core$checked_aset_SINGLEQUOTE_(var_args) {
  var G__12648 = arguments.length;
  switch(G__12648) {
    case 3:
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12650 = arguments.length;
      var i__4737__auto___12651 = 0;
      while (true) {
        if (i__4737__auto___12651 < len__4736__auto___12650) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12651]);
          var G__12652 = i__4737__auto___12651 + 1;
          i__4737__auto___12651 = G__12652;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = cljs.core.array_QMARK_(array);
    if (or__4126__auto__) {
      return or__4126__auto__;
    } else {
      return goog.isArrayLike(array);
    }
  }())) {
  } else {
    throw new Error("Assert failed: (or (array? array) (goog/isArrayLike array))");
  }
  if (typeof idx === "number") {
  } else {
    throw new Error("Assert failed: (number? idx)");
  }
  if (!(idx < 0)) {
  } else {
    throw new Error("Assert failed: (not (neg? idx))");
  }
  if (idx < array.length) {
  } else {
    throw new Error("Assert failed: (\x3c idx (alength array))");
  }
  return array[idx] = val;
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.checked_aset_SINGLEQUOTE_, cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array, idx), idx2, idxv);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo = function(seq12644) {
  var G__12645 = cljs.core.first(seq12644);
  var seq12644__$1 = cljs.core.next(seq12644);
  var G__12646 = cljs.core.first(seq12644__$1);
  var seq12644__$2 = cljs.core.next(seq12644__$1);
  var G__12647 = cljs.core.first(seq12644__$2);
  var seq12644__$3 = cljs.core.next(seq12644__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12645, G__12646, G__12647, seq12644__$3);
};
cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity = 3;
cljs.core.aget = function cljs$core$aget(var_args) {
  var G__12657 = arguments.length;
  switch(G__12657) {
    case 2:
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12659 = arguments.length;
      var i__4737__auto___12660 = 0;
      while (true) {
        if (i__4737__auto___12660 < len__4736__auto___12659) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12660]);
          var G__12661 = i__4737__auto___12660 + 1;
          i__4737__auto___12660 = G__12661;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$2 = function(array, idx) {
  return array[idx];
};
cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idxs) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.aget, array[idx], idxs);
};
cljs.core.aget.cljs$lang$applyTo = function(seq12654) {
  var G__12655 = cljs.core.first(seq12654);
  var seq12654__$1 = cljs.core.next(seq12654);
  var G__12656 = cljs.core.first(seq12654__$1);
  var seq12654__$2 = cljs.core.next(seq12654__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12655, G__12656, seq12654__$2);
};
cljs.core.aget.cljs$lang$maxFixedArity = 2;
cljs.core.aset = function cljs$core$aset(var_args) {
  var G__12667 = arguments.length;
  switch(G__12667) {
    case 3:
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12669 = arguments.length;
      var i__4737__auto___12670 = 0;
      while (true) {
        if (i__4737__auto___12670 < len__4736__auto___12669) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12670]);
          var G__12671 = i__4737__auto___12670 + 1;
          i__4737__auto___12670 = G__12671;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$3 = function(array, idx, val) {
  return array[idx] = val;
};
cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic = function(array, idx, idx2, idxv) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.aset, array[idx], idx2, idxv);
};
cljs.core.aset.cljs$lang$applyTo = function(seq12663) {
  var G__12664 = cljs.core.first(seq12663);
  var seq12663__$1 = cljs.core.next(seq12663);
  var G__12665 = cljs.core.first(seq12663__$1);
  var seq12663__$2 = cljs.core.next(seq12663__$1);
  var G__12666 = cljs.core.first(seq12663__$2);
  var seq12663__$3 = cljs.core.next(seq12663__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12664, G__12665, G__12666, seq12663__$3);
};
cljs.core.aset.cljs$lang$maxFixedArity = 3;
cljs.core.alength = function cljs$core$alength(array) {
  return array.length;
};
cljs.core.into_array = function cljs$core$into_array(var_args) {
  var G__12673 = arguments.length;
  switch(G__12673) {
    case 1:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 = function(aseq) {
  return cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
};
cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 = function(type, aseq) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(a, x) {
    a.push(x);
    return a;
  }, [], aseq);
};
cljs.core.into_array.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke = function cljs$core$js_invoke(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___12678 = arguments.length;
  var i__4737__auto___12679 = 0;
  while (true) {
    if (i__4737__auto___12679 < len__4736__auto___12678) {
      args__4742__auto__.push(arguments[i__4737__auto___12679]);
      var G__12680 = i__4737__auto___12679 + 1;
      i__4737__auto___12679 = G__12680;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 2 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(2), 0, null) : null;
  return cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4743__auto__);
};
cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic = function(obj, s, args) {
  return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
cljs.core.js_invoke.cljs$lang$maxFixedArity = 2;
cljs.core.js_invoke.cljs$lang$applyTo = function(seq12675) {
  var G__12676 = cljs.core.first(seq12675);
  var seq12675__$1 = cljs.core.next(seq12675);
  var G__12677 = cljs.core.first(seq12675__$1);
  var seq12675__$2 = cljs.core.next(seq12675__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12676, G__12677, seq12675__$2);
};
cljs.core.js_symbol_QMARK_ = function cljs$core$js_symbol_QMARK_(x) {
  return goog.typeOf(x) === "symbol" || typeof Symbol !== "undefined" && x instanceof Symbol;
};
cljs.core.Fn = function() {
};
cljs.core.IFn = function() {
};
var cljs$core$IFn$_invoke$dyn_12683 = function() {
  var G__12684 = null;
  var G__12684__1 = function(this$) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4429__auto__.call(null, this$);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__4426__auto__.call(null, this$);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__2 = function(this$, a) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4429__auto__.call(null, this$, a);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(this$, a) : m__4426__auto__.call(null, this$, a);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__3 = function(this$, a, b) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4429__auto__.call(null, this$, a, b);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(this$, a, b) : m__4426__auto__.call(null, this$, a, b);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__4 = function(this$, a, b, c) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4429__auto__.call(null, this$, a, b, c);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$4(this$, a, b, c) : m__4426__auto__.call(null, this$, a, b, c);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__5 = function(this$, a, b, c, d) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4429__auto__.call(null, this$, a, b, c, d);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d) : m__4426__auto__.call(null, this$, a, b, c, d);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__6 = function(this$, a, b, c, d, e) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4429__auto__.call(null, this$, a, b, c, d, e);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$6 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e) : m__4426__auto__.call(null, this$, a, b, c, d, e);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__7 = function(this$, a, b, c, d, e, f) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4429__auto__.call(null, this$, a, b, c, d, e, f);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$7 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f) : m__4426__auto__.call(null, this$, a, b, c, d, e, f);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__8 = function(this$, a, b, c, d, e, f, g) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$8 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__9 = function(this$, a, b, c, d, e, f, g, h) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$9 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$10 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$11 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$12 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$13 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$14 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$15 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$16 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$17 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$18 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$19 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$20 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$21 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  var G__12684__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var x__4428__auto__ = this$ == null ? null : this$;
    var m__4429__auto__ = cljs.core._invoke[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4429__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var m__4426__auto__ = cljs.core._invoke["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$22 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) : m__4426__auto__.call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
      } else {
        throw cljs.core.missing_protocol("IFn.-invoke", this$);
      }
    }
  };
  G__12684 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12684__1.call(this, this$);
      case 2:
        return G__12684__2.call(this, this$, a);
      case 3:
        return G__12684__3.call(this, this$, a, b);
      case 4:
        return G__12684__4.call(this, this$, a, b, c);
      case 5:
        return G__12684__5.call(this, this$, a, b, c, d);
      case 6:
        return G__12684__6.call(this, this$, a, b, c, d, e);
      case 7:
        return G__12684__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return G__12684__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return G__12684__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return G__12684__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12684__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12684__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12684__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12684__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12684__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12684__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12684__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12684__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12684__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12684__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12684__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12684__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12684.cljs$core$IFn$_invoke$arity$1 = G__12684__1;
  G__12684.cljs$core$IFn$_invoke$arity$2 = G__12684__2;
  G__12684.cljs$core$IFn$_invoke$arity$3 = G__12684__3;
  G__12684.cljs$core$IFn$_invoke$arity$4 = G__12684__4;
  G__12684.cljs$core$IFn$_invoke$arity$5 = G__12684__5;
  G__12684.cljs$core$IFn$_invoke$arity$6 = G__12684__6;
  G__12684.cljs$core$IFn$_invoke$arity$7 = G__12684__7;
  G__12684.cljs$core$IFn$_invoke$arity$8 = G__12684__8;
  G__12684.cljs$core$IFn$_invoke$arity$9 = G__12684__9;
  G__12684.cljs$core$IFn$_invoke$arity$10 = G__12684__10;
  G__12684.cljs$core$IFn$_invoke$arity$11 = G__12684__11;
  G__12684.cljs$core$IFn$_invoke$arity$12 = G__12684__12;
  G__12684.cljs$core$IFn$_invoke$arity$13 = G__12684__13;
  G__12684.cljs$core$IFn$_invoke$arity$14 = G__12684__14;
  G__12684.cljs$core$IFn$_invoke$arity$15 = G__12684__15;
  G__12684.cljs$core$IFn$_invoke$arity$16 = G__12684__16;
  G__12684.cljs$core$IFn$_invoke$arity$17 = G__12684__17;
  G__12684.cljs$core$IFn$_invoke$arity$18 = G__12684__18;
  G__12684.cljs$core$IFn$_invoke$arity$19 = G__12684__19;
  G__12684.cljs$core$IFn$_invoke$arity$20 = G__12684__20;
  G__12684.cljs$core$IFn$_invoke$arity$21 = G__12684__21;
  G__12684.cljs$core$IFn$_invoke$arity$22 = G__12684__22;
  return G__12684;
}();
cljs.core._invoke = function cljs$core$_invoke(var_args) {
  var G__12682 = arguments.length;
  switch(G__12682) {
    case 1:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    case 8:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$8(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7]);
      break;
    case 9:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$9(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8]);
      break;
    case 10:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$10(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9]);
      break;
    case 11:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$11(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10]);
      break;
    case 12:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$12(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11]);
      break;
    case 13:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$13(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12]);
      break;
    case 14:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$14(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13]);
      break;
    case 15:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$15(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14]);
      break;
    case 16:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$16(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15]);
      break;
    case 17:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$17(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16]);
      break;
    case 18:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$18(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17]);
      break;
    case 19:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$19(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18]);
      break;
    case 20:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$20(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19]);
      break;
    case 21:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$21(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20]);
      break;
    case 22:
      return cljs.core._invoke.cljs$core$IFn$_invoke$arity$22(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6], arguments[7], arguments[8], arguments[9], arguments[10], arguments[11], arguments[12], arguments[13], arguments[14], arguments[15], arguments[16], arguments[17], arguments[18], arguments[19], arguments[20], arguments[21]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 = function(this$) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$1 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$1(this$);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$1(this$);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 = function(this$, a) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$2 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$2(this$, a);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 = function(this$, a, b) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$3 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$3(this$, a, b);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 = function(this$, a, b, c) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$4 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 = function(this$, a, b, c, d) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$5 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 = function(this$, a, b, c, d, e) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$6 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 = function(this$, a, b, c, d, e, f) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$7 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 = function(this$, a, b, c, d, e, f, g) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$8 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 = function(this$, a, b, c, d, e, f, g, h) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$9 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 = function(this$, a, b, c, d, e, f, g, h, i) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$10 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$11 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$12 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$13 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$14 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$15 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$16 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$17 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$18 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$19 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$20 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$21 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  }
};
cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  if (!(this$ == null) && !(this$.cljs$core$IFn$_invoke$arity$22 == null)) {
    return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  } else {
    return cljs$core$IFn$_invoke$dyn_12683.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
  }
};
cljs.core._invoke.cljs$lang$maxFixedArity = 22;
cljs.core.ICloneable = function() {
};
var cljs$core$ICloneable$_clone$dyn_12686 = function(value) {
  var x__4428__auto__ = value == null ? null : value;
  var m__4429__auto__ = cljs.core._clone[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4429__auto__.call(null, value);
  } else {
    var m__4426__auto__ = cljs.core._clone["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__4426__auto__.call(null, value);
    } else {
      throw cljs.core.missing_protocol("ICloneable.-clone", value);
    }
  }
};
cljs.core._clone = function cljs$core$_clone(value) {
  if (!(value == null) && !(value.cljs$core$ICloneable$_clone$arity$1 == null)) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    return cljs$core$ICloneable$_clone$dyn_12686(value);
  }
};
cljs.core.ICounted = function() {
};
var cljs$core$ICounted$_count$dyn_12687 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._count[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._count["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ICounted.-count", coll);
    }
  }
};
cljs.core._count = function cljs$core$_count(coll) {
  if (!(coll == null) && !(coll.cljs$core$ICounted$_count$arity$1 == null)) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    return cljs$core$ICounted$_count$dyn_12687(coll);
  }
};
cljs.core.IEmptyableCollection = function() {
};
var cljs$core$IEmptyableCollection$_empty$dyn_12688 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._empty[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._empty["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
    }
  }
};
cljs.core._empty = function cljs$core$_empty(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEmptyableCollection$_empty$arity$1 == null)) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    return cljs$core$IEmptyableCollection$_empty$dyn_12688(coll);
  }
};
cljs.core.ICollection = function() {
};
var cljs$core$ICollection$_conj$dyn_12689 = function(coll, o) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._conj[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4429__auto__.call(null, coll, o);
  } else {
    var m__4426__auto__ = cljs.core._conj["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, o) : m__4426__auto__.call(null, coll, o);
    } else {
      throw cljs.core.missing_protocol("ICollection.-conj", coll);
    }
  }
};
cljs.core._conj = function cljs$core$_conj(coll, o) {
  if (!(coll == null) && !(coll.cljs$core$ICollection$_conj$arity$2 == null)) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    return cljs$core$ICollection$_conj$dyn_12689(coll, o);
  }
};
cljs.core.IIndexed = function() {
};
var cljs$core$IIndexed$_nth$dyn_12692 = function() {
  var G__12693 = null;
  var G__12693__2 = function(coll, n) {
    var x__4428__auto__ = coll == null ? null : coll;
    var m__4429__auto__ = cljs.core._nth[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4429__auto__.call(null, coll, n);
    } else {
      var m__4426__auto__ = cljs.core._nth["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, n) : m__4426__auto__.call(null, coll, n);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  };
  var G__12693__3 = function(coll, n, not_found) {
    var x__4428__auto__ = coll == null ? null : coll;
    var m__4429__auto__ = cljs.core._nth[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4429__auto__.call(null, coll, n, not_found);
    } else {
      var m__4426__auto__ = cljs.core._nth["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, not_found) : m__4426__auto__.call(null, coll, n, not_found);
      } else {
        throw cljs.core.missing_protocol("IIndexed.-nth", coll);
      }
    }
  };
  G__12693 = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12693__2.call(this, coll, n);
      case 3:
        return G__12693__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12693.cljs$core$IFn$_invoke$arity$2 = G__12693__2;
  G__12693.cljs$core$IFn$_invoke$arity$3 = G__12693__3;
  return G__12693;
}();
cljs.core._nth = function cljs$core$_nth(var_args) {
  var G__12691 = arguments.length;
  switch(G__12691) {
    case 2:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$2 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
  } else {
    return cljs$core$IIndexed$_nth$dyn_12692.cljs$core$IFn$_invoke$arity$2(coll, n);
  }
};
cljs.core._nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(coll == null) && !(coll.cljs$core$IIndexed$_nth$arity$3 == null)) {
    return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
  } else {
    return cljs$core$IIndexed$_nth$dyn_12692.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
  }
};
cljs.core._nth.cljs$lang$maxFixedArity = 3;
cljs.core.ASeq = function() {
};
cljs.core.ISeq = function() {
};
var cljs$core$ISeq$_first$dyn_12695 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._first[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._first["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ISeq.-first", coll);
    }
  }
};
cljs.core._first = function cljs$core$_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_first$arity$1 == null)) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    return cljs$core$ISeq$_first$dyn_12695(coll);
  }
};
var cljs$core$ISeq$_rest$dyn_12696 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._rest[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._rest["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ISeq.-rest", coll);
    }
  }
};
cljs.core._rest = function cljs$core$_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISeq$_rest$arity$1 == null)) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    return cljs$core$ISeq$_rest$dyn_12696(coll);
  }
};
cljs.core.INext = function() {
};
var cljs$core$INext$_next$dyn_12697 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._next[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._next["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("INext.-next", coll);
    }
  }
};
cljs.core._next = function cljs$core$_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$INext$_next$arity$1 == null)) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    return cljs$core$INext$_next$dyn_12697(coll);
  }
};
cljs.core.ILookup = function() {
};
var cljs$core$ILookup$_lookup$dyn_12700 = function() {
  var G__12701 = null;
  var G__12701__2 = function(o, k) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._lookup[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4429__auto__.call(null, o, k);
    } else {
      var m__4426__auto__ = cljs.core._lookup["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, k) : m__4426__auto__.call(null, o, k);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  };
  var G__12701__3 = function(o, k, not_found) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._lookup[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4429__auto__.call(null, o, k, not_found);
    } else {
      var m__4426__auto__ = cljs.core._lookup["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(o, k, not_found) : m__4426__auto__.call(null, o, k, not_found);
      } else {
        throw cljs.core.missing_protocol("ILookup.-lookup", o);
      }
    }
  };
  G__12701 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12701__2.call(this, o, k);
      case 3:
        return G__12701__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12701.cljs$core$IFn$_invoke$arity$2 = G__12701__2;
  G__12701.cljs$core$IFn$_invoke$arity$3 = G__12701__3;
  return G__12701;
}();
cljs.core._lookup = function cljs$core$_lookup(var_args) {
  var G__12699 = arguments.length;
  switch(G__12699) {
    case 2:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$2 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$2(o, k);
  } else {
    return cljs$core$ILookup$_lookup$dyn_12700.cljs$core$IFn$_invoke$arity$2(o, k);
  }
};
cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null) && !(o.cljs$core$ILookup$_lookup$arity$3 == null)) {
    return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
  } else {
    return cljs$core$ILookup$_lookup$dyn_12700.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
  }
};
cljs.core._lookup.cljs$lang$maxFixedArity = 3;
cljs.core.IAssociative = function() {
};
var cljs$core$IAssociative$_contains_key_QMARK_$dyn_12703 = function(coll, k) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._contains_key_QMARK_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4429__auto__.call(null, coll, k);
  } else {
    var m__4426__auto__ = cljs.core._contains_key_QMARK_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4426__auto__.call(null, coll, k);
    } else {
      throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
    }
  }
};
cljs.core._contains_key_QMARK_ = function cljs$core$_contains_key_QMARK_(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 == null)) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    return cljs$core$IAssociative$_contains_key_QMARK_$dyn_12703(coll, k);
  }
};
var cljs$core$IAssociative$_assoc$dyn_12704 = function(coll, k, v) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._assoc[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4429__auto__.call(null, coll, k, v);
  } else {
    var m__4426__auto__ = cljs.core._assoc["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, v) : m__4426__auto__.call(null, coll, k, v);
    } else {
      throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
    }
  }
};
cljs.core._assoc = function cljs$core$_assoc(coll, k, v) {
  if (!(coll == null) && !(coll.cljs$core$IAssociative$_assoc$arity$3 == null)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    return cljs$core$IAssociative$_assoc$dyn_12704(coll, k, v);
  }
};
cljs.core.IFind = function() {
};
var cljs$core$IFind$_find$dyn_12705 = function(coll, k) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._find[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4429__auto__.call(null, coll, k);
  } else {
    var m__4426__auto__ = cljs.core._find["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4426__auto__.call(null, coll, k);
    } else {
      throw cljs.core.missing_protocol("IFind.-find", coll);
    }
  }
};
cljs.core._find = function cljs$core$_find(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IFind$_find$arity$2 == null)) {
    return coll.cljs$core$IFind$_find$arity$2(coll, k);
  } else {
    return cljs$core$IFind$_find$dyn_12705(coll, k);
  }
};
cljs.core.IMap = function() {
};
var cljs$core$IMap$_dissoc$dyn_12706 = function(coll, k) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._dissoc[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4429__auto__.call(null, coll, k);
  } else {
    var m__4426__auto__ = cljs.core._dissoc["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, k) : m__4426__auto__.call(null, coll, k);
    } else {
      throw cljs.core.missing_protocol("IMap.-dissoc", coll);
    }
  }
};
cljs.core._dissoc = function cljs$core$_dissoc(coll, k) {
  if (!(coll == null) && !(coll.cljs$core$IMap$_dissoc$arity$2 == null)) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    return cljs$core$IMap$_dissoc$dyn_12706(coll, k);
  }
};
cljs.core.IMapEntry = function() {
};
var cljs$core$IMapEntry$_key$dyn_12707 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._key[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._key["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IMapEntry.-key", coll);
    }
  }
};
cljs.core._key = function cljs$core$_key(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_key$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    return cljs$core$IMapEntry$_key$dyn_12707(coll);
  }
};
var cljs$core$IMapEntry$_val$dyn_12708 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._val[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._val["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IMapEntry.-val", coll);
    }
  }
};
cljs.core._val = function cljs$core$_val(coll) {
  if (!(coll == null) && !(coll.cljs$core$IMapEntry$_val$arity$1 == null)) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    return cljs$core$IMapEntry$_val$dyn_12708(coll);
  }
};
cljs.core.ISet = function() {
};
var cljs$core$ISet$_disjoin$dyn_12709 = function(coll, v) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._disjoin[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4429__auto__.call(null, coll, v);
  } else {
    var m__4426__auto__ = cljs.core._disjoin["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, v) : m__4426__auto__.call(null, coll, v);
    } else {
      throw cljs.core.missing_protocol("ISet.-disjoin", coll);
    }
  }
};
cljs.core._disjoin = function cljs$core$_disjoin(coll, v) {
  if (!(coll == null) && !(coll.cljs$core$ISet$_disjoin$arity$2 == null)) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    return cljs$core$ISet$_disjoin$dyn_12709(coll, v);
  }
};
cljs.core.IStack = function() {
};
var cljs$core$IStack$_peek$dyn_12710 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._peek[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._peek["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IStack.-peek", coll);
    }
  }
};
cljs.core._peek = function cljs$core$_peek(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_peek$arity$1 == null)) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    return cljs$core$IStack$_peek$dyn_12710(coll);
  }
};
var cljs$core$IStack$_pop$dyn_12711 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._pop[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._pop["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IStack.-pop", coll);
    }
  }
};
cljs.core._pop = function cljs$core$_pop(coll) {
  if (!(coll == null) && !(coll.cljs$core$IStack$_pop$arity$1 == null)) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    return cljs$core$IStack$_pop$dyn_12711(coll);
  }
};
cljs.core.IVector = function() {
};
var cljs$core$IVector$_assoc_n$dyn_12712 = function(coll, n, val) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._assoc_n[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4429__auto__.call(null, coll, n, val);
  } else {
    var m__4426__auto__ = cljs.core._assoc_n["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, n, val) : m__4426__auto__.call(null, coll, n, val);
    } else {
      throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
    }
  }
};
cljs.core._assoc_n = function cljs$core$_assoc_n(coll, n, val) {
  if (!(coll == null) && !(coll.cljs$core$IVector$_assoc_n$arity$3 == null)) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    return cljs$core$IVector$_assoc_n$dyn_12712(coll, n, val);
  }
};
cljs.core.IDeref = function() {
};
var cljs$core$IDeref$_deref$dyn_12713 = function(o) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._deref[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4429__auto__.call(null, o);
  } else {
    var m__4426__auto__ = cljs.core._deref["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4426__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("IDeref.-deref", o);
    }
  }
};
cljs.core._deref = function cljs$core$_deref(o) {
  if (!(o == null) && !(o.cljs$core$IDeref$_deref$arity$1 == null)) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    return cljs$core$IDeref$_deref$dyn_12713(o);
  }
};
cljs.core.IDerefWithTimeout = function() {
};
var cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_12714 = function(o, msec, timeout_val) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._deref_with_timeout[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4429__auto__.call(null, o, msec, timeout_val);
  } else {
    var m__4426__auto__ = cljs.core._deref_with_timeout["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(o, msec, timeout_val) : m__4426__auto__.call(null, o, msec, timeout_val);
    } else {
      throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
    }
  }
};
cljs.core._deref_with_timeout = function cljs$core$_deref_with_timeout(o, msec, timeout_val) {
  if (!(o == null) && !(o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 == null)) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    return cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_12714(o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
};
var cljs$core$IMeta$_meta$dyn_12715 = function(o) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._meta[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4429__auto__.call(null, o);
  } else {
    var m__4426__auto__ = cljs.core._meta["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4426__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("IMeta.-meta", o);
    }
  }
};
cljs.core._meta = function cljs$core$_meta(o) {
  if (!(o == null) && !(o.cljs$core$IMeta$_meta$arity$1 == null)) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    return cljs$core$IMeta$_meta$dyn_12715(o);
  }
};
cljs.core.IWithMeta = function() {
};
var cljs$core$IWithMeta$_with_meta$dyn_12716 = function(o, meta) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._with_meta[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4429__auto__.call(null, o, meta);
  } else {
    var m__4426__auto__ = cljs.core._with_meta["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, meta) : m__4426__auto__.call(null, o, meta);
    } else {
      throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
    }
  }
};
cljs.core._with_meta = function cljs$core$_with_meta(o, meta) {
  if (!(o == null) && !(o.cljs$core$IWithMeta$_with_meta$arity$2 == null)) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    return cljs$core$IWithMeta$_with_meta$dyn_12716(o, meta);
  }
};
cljs.core.IReduce = function() {
};
var cljs$core$IReduce$_reduce$dyn_12719 = function() {
  var G__12720 = null;
  var G__12720__2 = function(coll, f) {
    var x__4428__auto__ = coll == null ? null : coll;
    var m__4429__auto__ = cljs.core._reduce[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4429__auto__.call(null, coll, f);
    } else {
      var m__4426__auto__ = cljs.core._reduce["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, f) : m__4426__auto__.call(null, coll, f);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  };
  var G__12720__3 = function(coll, f, start) {
    var x__4428__auto__ = coll == null ? null : coll;
    var m__4429__auto__ = cljs.core._reduce[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4429__auto__.call(null, coll, f, start);
    } else {
      var m__4426__auto__ = cljs.core._reduce["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, start) : m__4426__auto__.call(null, coll, f, start);
      } else {
        throw cljs.core.missing_protocol("IReduce.-reduce", coll);
      }
    }
  };
  G__12720 = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return G__12720__2.call(this, coll, f);
      case 3:
        return G__12720__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12720.cljs$core$IFn$_invoke$arity$2 = G__12720__2;
  G__12720.cljs$core$IFn$_invoke$arity$3 = G__12720__3;
  return G__12720;
}();
cljs.core._reduce = function cljs$core$_reduce(var_args) {
  var G__12718 = arguments.length;
  switch(G__12718) {
    case 2:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$2 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
  } else {
    return cljs$core$IReduce$_reduce$dyn_12719.cljs$core$IFn$_invoke$arity$2(coll, f);
  }
};
cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, start) {
  if (!(coll == null) && !(coll.cljs$core$IReduce$_reduce$arity$3 == null)) {
    return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
  } else {
    return cljs$core$IReduce$_reduce$dyn_12719.cljs$core$IFn$_invoke$arity$3(coll, f, start);
  }
};
cljs.core._reduce.cljs$lang$maxFixedArity = 3;
cljs.core.IKVReduce = function() {
};
var cljs$core$IKVReduce$_kv_reduce$dyn_12722 = function(coll, f, init) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._kv_reduce[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4429__auto__.call(null, coll, f, init);
  } else {
    var m__4426__auto__ = cljs.core._kv_reduce["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, f, init) : m__4426__auto__.call(null, coll, f, init);
    } else {
      throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
    }
  }
};
cljs.core._kv_reduce = function cljs$core$_kv_reduce(coll, f, init) {
  if (!(coll == null) && !(coll.cljs$core$IKVReduce$_kv_reduce$arity$3 == null)) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    return cljs$core$IKVReduce$_kv_reduce$dyn_12722(coll, f, init);
  }
};
cljs.core.IEquiv = function() {
};
var cljs$core$IEquiv$_equiv$dyn_12723 = function(o, other) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._equiv[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4429__auto__.call(null, o, other);
  } else {
    var m__4426__auto__ = cljs.core._equiv["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, other) : m__4426__auto__.call(null, o, other);
    } else {
      throw cljs.core.missing_protocol("IEquiv.-equiv", o);
    }
  }
};
cljs.core._equiv = function cljs$core$_equiv(o, other) {
  if (!(o == null) && !(o.cljs$core$IEquiv$_equiv$arity$2 == null)) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    return cljs$core$IEquiv$_equiv$dyn_12723(o, other);
  }
};
cljs.core.IHash = function() {
};
var cljs$core$IHash$_hash$dyn_12724 = function(o) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._hash[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4429__auto__.call(null, o);
  } else {
    var m__4426__auto__ = cljs.core._hash["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4426__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("IHash.-hash", o);
    }
  }
};
cljs.core._hash = function cljs$core$_hash(o) {
  if (!(o == null) && !(o.cljs$core$IHash$_hash$arity$1 == null)) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    return cljs$core$IHash$_hash$dyn_12724(o);
  }
};
cljs.core.ISeqable = function() {
};
var cljs$core$ISeqable$_seq$dyn_12725 = function(o) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._seq[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4429__auto__.call(null, o);
  } else {
    var m__4426__auto__ = cljs.core._seq["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__4426__auto__.call(null, o);
    } else {
      throw cljs.core.missing_protocol("ISeqable.-seq", o);
    }
  }
};
cljs.core._seq = function cljs$core$_seq(o) {
  if (!(o == null) && !(o.cljs$core$ISeqable$_seq$arity$1 == null)) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    return cljs$core$ISeqable$_seq$dyn_12725(o);
  }
};
cljs.core.ISequential = function() {
};
cljs.core.IList = function() {
};
cljs.core.IRecord = function() {
};
cljs.core.IReversible = function() {
};
var cljs$core$IReversible$_rseq$dyn_12726 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._rseq[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._rseq["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IReversible.-rseq", coll);
    }
  }
};
cljs.core._rseq = function cljs$core$_rseq(coll) {
  if (!(coll == null) && !(coll.cljs$core$IReversible$_rseq$arity$1 == null)) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    return cljs$core$IReversible$_rseq$dyn_12726(coll);
  }
};
cljs.core.ISorted = function() {
};
var cljs$core$ISorted$_sorted_seq$dyn_12727 = function(coll, ascending_QMARK_) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._sorted_seq[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4429__auto__.call(null, coll, ascending_QMARK_);
  } else {
    var m__4426__auto__ = cljs.core._sorted_seq["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, ascending_QMARK_) : m__4426__auto__.call(null, coll, ascending_QMARK_);
    } else {
      throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
    }
  }
};
cljs.core._sorted_seq = function cljs$core$_sorted_seq(coll, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq$arity$2 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    return cljs$core$ISorted$_sorted_seq$dyn_12727(coll, ascending_QMARK_);
  }
};
var cljs$core$ISorted$_sorted_seq_from$dyn_12728 = function(coll, k, ascending_QMARK_) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._sorted_seq_from[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4429__auto__.call(null, coll, k, ascending_QMARK_);
  } else {
    var m__4426__auto__ = cljs.core._sorted_seq_from["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(coll, k, ascending_QMARK_) : m__4426__auto__.call(null, coll, k, ascending_QMARK_);
    } else {
      throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
    }
  }
};
cljs.core._sorted_seq_from = function cljs$core$_sorted_seq_from(coll, k, ascending_QMARK_) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_sorted_seq_from$arity$3 == null)) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    return cljs$core$ISorted$_sorted_seq_from$dyn_12728(coll, k, ascending_QMARK_);
  }
};
var cljs$core$ISorted$_entry_key$dyn_12729 = function(coll, entry) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._entry_key[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4429__auto__.call(null, coll, entry);
  } else {
    var m__4426__auto__ = cljs.core._entry_key["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(coll, entry) : m__4426__auto__.call(null, coll, entry);
    } else {
      throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
    }
  }
};
cljs.core._entry_key = function cljs$core$_entry_key(coll, entry) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_entry_key$arity$2 == null)) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    return cljs$core$ISorted$_entry_key$dyn_12729(coll, entry);
  }
};
var cljs$core$ISorted$_comparator$dyn_12730 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._comparator[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._comparator["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("ISorted.-comparator", coll);
    }
  }
};
cljs.core._comparator = function cljs$core$_comparator(coll) {
  if (!(coll == null) && !(coll.cljs$core$ISorted$_comparator$arity$1 == null)) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    return cljs$core$ISorted$_comparator$dyn_12730(coll);
  }
};
cljs.core.IWriter = function() {
};
var cljs$core$IWriter$_write$dyn_12731 = function(writer, s) {
  var x__4428__auto__ = writer == null ? null : writer;
  var m__4429__auto__ = cljs.core._write[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4429__auto__.call(null, writer, s);
  } else {
    var m__4426__auto__ = cljs.core._write["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(writer, s) : m__4426__auto__.call(null, writer, s);
    } else {
      throw cljs.core.missing_protocol("IWriter.-write", writer);
    }
  }
};
cljs.core._write = function cljs$core$_write(writer, s) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_write$arity$2 == null)) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    return cljs$core$IWriter$_write$dyn_12731(writer, s);
  }
};
var cljs$core$IWriter$_flush$dyn_12732 = function(writer) {
  var x__4428__auto__ = writer == null ? null : writer;
  var m__4429__auto__ = cljs.core._flush[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4429__auto__.call(null, writer);
  } else {
    var m__4426__auto__ = cljs.core._flush["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__4426__auto__.call(null, writer);
    } else {
      throw cljs.core.missing_protocol("IWriter.-flush", writer);
    }
  }
};
cljs.core._flush = function cljs$core$_flush(writer) {
  if (!(writer == null) && !(writer.cljs$core$IWriter$_flush$arity$1 == null)) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    return cljs$core$IWriter$_flush$dyn_12732(writer);
  }
};
cljs.core.IPrintWithWriter = function() {
};
var cljs$core$IPrintWithWriter$_pr_writer$dyn_12733 = function(o, writer, opts) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._pr_writer[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4429__auto__.call(null, o, writer, opts);
  } else {
    var m__4426__auto__ = cljs.core._pr_writer["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(o, writer, opts) : m__4426__auto__.call(null, o, writer, opts);
    } else {
      throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
    }
  }
};
cljs.core._pr_writer = function cljs$core$_pr_writer(o, writer, opts) {
  if (!(o == null) && !(o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 == null)) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    return cljs$core$IPrintWithWriter$_pr_writer$dyn_12733(o, writer, opts);
  }
};
cljs.core.IPending = function() {
};
var cljs$core$IPending$_realized_QMARK_$dyn_12734 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._realized_QMARK_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._realized_QMARK_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IPending.-realized?", x);
    }
  }
};
cljs.core._realized_QMARK_ = function cljs$core$_realized_QMARK_(x) {
  if (!(x == null) && !(x.cljs$core$IPending$_realized_QMARK_$arity$1 == null)) {
    return x.cljs$core$IPending$_realized_QMARK_$arity$1(x);
  } else {
    return cljs$core$IPending$_realized_QMARK_$dyn_12734(x);
  }
};
cljs.core.IWatchable = function() {
};
var cljs$core$IWatchable$_notify_watches$dyn_12735 = function(this$, oldval, newval) {
  var x__4428__auto__ = this$ == null ? null : this$;
  var m__4429__auto__ = cljs.core._notify_watches[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4429__auto__.call(null, this$, oldval, newval);
  } else {
    var m__4426__auto__ = cljs.core._notify_watches["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(this$, oldval, newval) : m__4426__auto__.call(null, this$, oldval, newval);
    } else {
      throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
    }
  }
};
cljs.core._notify_watches = function cljs$core$_notify_watches(this$, oldval, newval) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_notify_watches$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    return cljs$core$IWatchable$_notify_watches$dyn_12735(this$, oldval, newval);
  }
};
var cljs$core$IWatchable$_add_watch$dyn_12736 = function(this$, key, f) {
  var x__4428__auto__ = this$ == null ? null : this$;
  var m__4429__auto__ = cljs.core._add_watch[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4429__auto__.call(null, this$, key, f);
  } else {
    var m__4426__auto__ = cljs.core._add_watch["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(this$, key, f) : m__4426__auto__.call(null, this$, key, f);
    } else {
      throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
    }
  }
};
cljs.core._add_watch = function cljs$core$_add_watch(this$, key, f) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_add_watch$arity$3 == null)) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    return cljs$core$IWatchable$_add_watch$dyn_12736(this$, key, f);
  }
};
var cljs$core$IWatchable$_remove_watch$dyn_12737 = function(this$, key) {
  var x__4428__auto__ = this$ == null ? null : this$;
  var m__4429__auto__ = cljs.core._remove_watch[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4429__auto__.call(null, this$, key);
  } else {
    var m__4426__auto__ = cljs.core._remove_watch["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(this$, key) : m__4426__auto__.call(null, this$, key);
    } else {
      throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
    }
  }
};
cljs.core._remove_watch = function cljs$core$_remove_watch(this$, key) {
  if (!(this$ == null) && !(this$.cljs$core$IWatchable$_remove_watch$arity$2 == null)) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    return cljs$core$IWatchable$_remove_watch$dyn_12737(this$, key);
  }
};
cljs.core.IEditableCollection = function() {
};
var cljs$core$IEditableCollection$_as_transient$dyn_12738 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._as_transient[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._as_transient["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
    }
  }
};
cljs.core._as_transient = function cljs$core$_as_transient(coll) {
  if (!(coll == null) && !(coll.cljs$core$IEditableCollection$_as_transient$arity$1 == null)) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    return cljs$core$IEditableCollection$_as_transient$dyn_12738(coll);
  }
};
cljs.core.ITransientCollection = function() {
};
var cljs$core$ITransientCollection$_conj_BANG_$dyn_12739 = function(tcoll, val) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._conj_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4429__auto__.call(null, tcoll, val);
  } else {
    var m__4426__auto__ = cljs.core._conj_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, val) : m__4426__auto__.call(null, tcoll, val);
    } else {
      throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
    }
  }
};
cljs.core._conj_BANG_ = function cljs$core$_conj_BANG_(tcoll, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    return cljs$core$ITransientCollection$_conj_BANG_$dyn_12739(tcoll, val);
  }
};
var cljs$core$ITransientCollection$_persistent_BANG_$dyn_12740 = function(tcoll) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._persistent_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4429__auto__.call(null, tcoll);
  } else {
    var m__4426__auto__ = cljs.core._persistent_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4426__auto__.call(null, tcoll);
    } else {
      throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
    }
  }
};
cljs.core._persistent_BANG_ = function cljs$core$_persistent_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    return cljs$core$ITransientCollection$_persistent_BANG_$dyn_12740(tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
};
var cljs$core$ITransientAssociative$_assoc_BANG_$dyn_12741 = function(tcoll, key, val) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._assoc_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4429__auto__.call(null, tcoll, key, val);
  } else {
    var m__4426__auto__ = cljs.core._assoc_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, key, val) : m__4426__auto__.call(null, tcoll, key, val);
    } else {
      throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
    }
  }
};
cljs.core._assoc_BANG_ = function cljs$core$_assoc_BANG_(tcoll, key, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    return cljs$core$ITransientAssociative$_assoc_BANG_$dyn_12741(tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
};
var cljs$core$ITransientMap$_dissoc_BANG_$dyn_12742 = function(tcoll, key) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._dissoc_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4429__auto__.call(null, tcoll, key);
  } else {
    var m__4426__auto__ = cljs.core._dissoc_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, key) : m__4426__auto__.call(null, tcoll, key);
    } else {
      throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
    }
  }
};
cljs.core._dissoc_BANG_ = function cljs$core$_dissoc_BANG_(tcoll, key) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    return cljs$core$ITransientMap$_dissoc_BANG_$dyn_12742(tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
};
var cljs$core$ITransientVector$_assoc_n_BANG_$dyn_12743 = function(tcoll, n, val) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._assoc_n_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4429__auto__.call(null, tcoll, n, val);
  } else {
    var m__4426__auto__ = cljs.core._assoc_n_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(tcoll, n, val) : m__4426__auto__.call(null, tcoll, n, val);
    } else {
      throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
    }
  }
};
cljs.core._assoc_n_BANG_ = function cljs$core$_assoc_n_BANG_(tcoll, n, val) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 == null)) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    return cljs$core$ITransientVector$_assoc_n_BANG_$dyn_12743(tcoll, n, val);
  }
};
var cljs$core$ITransientVector$_pop_BANG_$dyn_12744 = function(tcoll) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._pop_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4429__auto__.call(null, tcoll);
  } else {
    var m__4426__auto__ = cljs.core._pop_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__4426__auto__.call(null, tcoll);
    } else {
      throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
    }
  }
};
cljs.core._pop_BANG_ = function cljs$core$_pop_BANG_(tcoll) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 == null)) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    return cljs$core$ITransientVector$_pop_BANG_$dyn_12744(tcoll);
  }
};
cljs.core.ITransientSet = function() {
};
var cljs$core$ITransientSet$_disjoin_BANG_$dyn_12745 = function(tcoll, v) {
  var x__4428__auto__ = tcoll == null ? null : tcoll;
  var m__4429__auto__ = cljs.core._disjoin_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4429__auto__.call(null, tcoll, v);
  } else {
    var m__4426__auto__ = cljs.core._disjoin_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(tcoll, v) : m__4426__auto__.call(null, tcoll, v);
    } else {
      throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
    }
  }
};
cljs.core._disjoin_BANG_ = function cljs$core$_disjoin_BANG_(tcoll, v) {
  if (!(tcoll == null) && !(tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 == null)) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    return cljs$core$ITransientSet$_disjoin_BANG_$dyn_12745(tcoll, v);
  }
};
cljs.core.IComparable = function() {
};
var cljs$core$IComparable$_compare$dyn_12746 = function(x, y) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._compare[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4429__auto__.call(null, x, y);
  } else {
    var m__4426__auto__ = cljs.core._compare["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(x, y) : m__4426__auto__.call(null, x, y);
    } else {
      throw cljs.core.missing_protocol("IComparable.-compare", x);
    }
  }
};
cljs.core._compare = function cljs$core$_compare(x, y) {
  if (!(x == null) && !(x.cljs$core$IComparable$_compare$arity$2 == null)) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    return cljs$core$IComparable$_compare$dyn_12746(x, y);
  }
};
cljs.core.IChunk = function() {
};
var cljs$core$IChunk$_drop_first$dyn_12747 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._drop_first[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._drop_first["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
    }
  }
};
cljs.core._drop_first = function cljs$core$_drop_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunk$_drop_first$arity$1 == null)) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    return cljs$core$IChunk$_drop_first$dyn_12747(coll);
  }
};
cljs.core.IChunkedSeq = function() {
};
var cljs$core$IChunkedSeq$_chunked_first$dyn_12748 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._chunked_first[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._chunked_first["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
    }
  }
};
cljs.core._chunked_first = function cljs$core$_chunked_first(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    return cljs$core$IChunkedSeq$_chunked_first$dyn_12748(coll);
  }
};
var cljs$core$IChunkedSeq$_chunked_rest$dyn_12749 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._chunked_rest[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._chunked_rest["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
    }
  }
};
cljs.core._chunked_rest = function cljs$core$_chunked_rest(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 == null)) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    return cljs$core$IChunkedSeq$_chunked_rest$dyn_12749(coll);
  }
};
cljs.core.IChunkedNext = function() {
};
var cljs$core$IChunkedNext$_chunked_next$dyn_12750 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._chunked_next[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._chunked_next["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
    }
  }
};
cljs.core._chunked_next = function cljs$core$_chunked_next(coll) {
  if (!(coll == null) && !(coll.cljs$core$IChunkedNext$_chunked_next$arity$1 == null)) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    return cljs$core$IChunkedNext$_chunked_next$dyn_12750(coll);
  }
};
cljs.core.INamed = function() {
};
var cljs$core$INamed$_name$dyn_12751 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._name[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._name["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("INamed.-name", x);
    }
  }
};
cljs.core._name = function cljs$core$_name(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_name$arity$1 == null)) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    return cljs$core$INamed$_name$dyn_12751(x);
  }
};
var cljs$core$INamed$_namespace$dyn_12752 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._namespace[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._namespace["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("INamed.-namespace", x);
    }
  }
};
cljs.core._namespace = function cljs$core$_namespace(x) {
  if (!(x == null) && !(x.cljs$core$INamed$_namespace$arity$1 == null)) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    return cljs$core$INamed$_namespace$dyn_12752(x);
  }
};
cljs.core.IAtom = function() {
};
cljs.core.IReset = function() {
};
var cljs$core$IReset$_reset_BANG_$dyn_12753 = function(o, new_value) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._reset_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4429__auto__.call(null, o, new_value);
  } else {
    var m__4426__auto__ = cljs.core._reset_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4426__auto__.call(null, o, new_value);
    } else {
      throw cljs.core.missing_protocol("IReset.-reset!", o);
    }
  }
};
cljs.core._reset_BANG_ = function cljs$core$_reset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IReset$_reset_BANG_$arity$2 == null)) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    return cljs$core$IReset$_reset_BANG_$dyn_12753(o, new_value);
  }
};
cljs.core.ISwap = function() {
};
var cljs$core$ISwap$_swap_BANG_$dyn_12756 = function() {
  var G__12757 = null;
  var G__12757__2 = function(o, f) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4429__auto__.call(null, o, f);
    } else {
      var m__4426__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, f) : m__4426__auto__.call(null, o, f);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  var G__12757__3 = function(o, f, a) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4429__auto__.call(null, o, f, a);
    } else {
      var m__4426__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(o, f, a) : m__4426__auto__.call(null, o, f, a);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  var G__12757__4 = function(o, f, a, b) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4429__auto__.call(null, o, f, a, b);
    } else {
      var m__4426__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$4 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$4(o, f, a, b) : m__4426__auto__.call(null, o, f, a, b);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  var G__12757__5 = function(o, f, a, b, xs) {
    var x__4428__auto__ = o == null ? null : o;
    var m__4429__auto__ = cljs.core._swap_BANG_[goog.typeOf(x__4428__auto__)];
    if (!(m__4429__auto__ == null)) {
      return m__4429__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4429__auto__.call(null, o, f, a, b, xs);
    } else {
      var m__4426__auto__ = cljs.core._swap_BANG_["_"];
      if (!(m__4426__auto__ == null)) {
        return m__4426__auto__.cljs$core$IFn$_invoke$arity$5 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs) : m__4426__auto__.call(null, o, f, a, b, xs);
      } else {
        throw cljs.core.missing_protocol("ISwap.-swap!", o);
      }
    }
  };
  G__12757 = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return G__12757__2.call(this, o, f);
      case 3:
        return G__12757__3.call(this, o, f, a);
      case 4:
        return G__12757__4.call(this, o, f, a, b);
      case 5:
        return G__12757__5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12757.cljs$core$IFn$_invoke$arity$2 = G__12757__2;
  G__12757.cljs$core$IFn$_invoke$arity$3 = G__12757__3;
  G__12757.cljs$core$IFn$_invoke$arity$4 = G__12757__4;
  G__12757.cljs$core$IFn$_invoke$arity$5 = G__12757__5;
  return G__12757;
}();
cljs.core._swap_BANG_ = function cljs$core$_swap_BANG_(var_args) {
  var G__12755 = arguments.length;
  switch(G__12755) {
    case 2:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(o, f) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$2 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_12756.cljs$core$IFn$_invoke$arity$2(o, f);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(o, f, a) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$3 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_12756.cljs$core$IFn$_invoke$arity$3(o, f, a);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(o, f, a, b) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$4 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_12756.cljs$core$IFn$_invoke$arity$4(o, f, a, b);
  }
};
cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 = function(o, f, a, b, xs) {
  if (!(o == null) && !(o.cljs$core$ISwap$_swap_BANG_$arity$5 == null)) {
    return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
  } else {
    return cljs$core$ISwap$_swap_BANG_$dyn_12756.cljs$core$IFn$_invoke$arity$5(o, f, a, b, xs);
  }
};
cljs.core._swap_BANG_.cljs$lang$maxFixedArity = 5;
cljs.core.IVolatile = function() {
};
var cljs$core$IVolatile$_vreset_BANG_$dyn_12759 = function(o, new_value) {
  var x__4428__auto__ = o == null ? null : o;
  var m__4429__auto__ = cljs.core._vreset_BANG_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4429__auto__.call(null, o, new_value);
  } else {
    var m__4426__auto__ = cljs.core._vreset_BANG_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(o, new_value) : m__4426__auto__.call(null, o, new_value);
    } else {
      throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
    }
  }
};
cljs.core._vreset_BANG_ = function cljs$core$_vreset_BANG_(o, new_value) {
  if (!(o == null) && !(o.cljs$core$IVolatile$_vreset_BANG_$arity$2 == null)) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    return cljs$core$IVolatile$_vreset_BANG_$dyn_12759(o, new_value);
  }
};
cljs.core.IIterable = function() {
};
var cljs$core$IIterable$_iterator$dyn_12760 = function(coll) {
  var x__4428__auto__ = coll == null ? null : coll;
  var m__4429__auto__ = cljs.core._iterator[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4429__auto__.call(null, coll);
  } else {
    var m__4426__auto__ = cljs.core._iterator["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__4426__auto__.call(null, coll);
    } else {
      throw cljs.core.missing_protocol("IIterable.-iterator", coll);
    }
  }
};
cljs.core._iterator = function cljs$core$_iterator(coll) {
  if (!(coll == null) && !(coll.cljs$core$IIterable$_iterator$arity$1 == null)) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    return cljs$core$IIterable$_iterator$dyn_12760(coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "sb", "sb", -1249746442, null)], null);
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function cljs$core$__GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function cljs$core$pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
};
cljs.core.int_rotate_left = function cljs$core$int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math !== "undefined" && typeof Math.imul !== "undefined" && !(Math.imul(4294967295, 5) === 0)) {
  cljs.core.imul = function cljs$core$imul(a, b) {
    return Math.imul(a, b);
  };
} else {
  cljs.core.imul = function cljs$core$imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353 | 0;
cljs.core.m3_C2 = 461845907 | 0;
cljs.core.m3_mix_K1 = function cljs$core$m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1 | 0, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function cljs$core$m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left((h1 | 0) ^ (k1 | 0), 13), 5) + (3864292196 | 0) | 0;
};
cljs.core.m3_fmix = function cljs$core$m3_fmix(h1, len) {
  var h1__$1 = h1 | 0;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507 | 0);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909 | 0);
  return h1__$6 ^ h1__$6 >>> 16;
};
cljs.core.m3_hash_int = function cljs$core$m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function cljs$core$m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__12761 = i + 2;
        var G__12762 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__12761;
        h1 = G__12762;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function cljs$core$hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__12765 = i + 1;
          var G__12766 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__12765;
          hash = G__12766;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function cljs$core$add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  goog.object.set(cljs.core.string_hash_cache, k, h);
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function cljs$core$hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  if (k == null) {
    return 0;
  } else {
    var h = cljs.core.string_hash_cache[k];
    if (typeof h === "number") {
      return h;
    } else {
      return cljs.core.add_to_string_hash_cache(k);
    }
  }
};
cljs.core.hash = function cljs$core$hash(o) {
  if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 4194304 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IHash$ ? true : false : false) {
    return o.cljs$core$IHash$_hash$arity$1(null) ^ 0;
  } else {
    if (typeof o === "number") {
      if (cljs.core.truth_(isFinite(o))) {
        return Math.floor(o) % 2147483647;
      } else {
        var G__12770 = o;
        switch(G__12770) {
          case Infinity:
            return 2146435072;
            break;
          case -Infinity:
            return -1048576;
            break;
          default:
            return 2146959360;
        }
      }
    } else {
      if (o === true) {
        return 1231;
      } else {
        if (o === false) {
          return 1237;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf() ^ 0;
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o) ^ 0;
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function cljs$core$hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function cljs$core$instance_QMARK_(c, x) {
  return x instanceof c;
};
cljs.core.symbol_QMARK_ = function cljs$core$symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function cljs$core$hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function cljs$core$compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(cljs.core.not(a.ns) ? b.ns : false)) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.call = function() {
  var G__12773 = null;
  var G__12773__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
  };
  var G__12773__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__12773 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__12773__2.call(this, self__, coll);
      case 3:
        return G__12773__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12773.cljs$core$IFn$_invoke$arity$2 = G__12773__2;
  G__12773.cljs$core$IFn$_invoke$arity$3 = G__12773__3;
  return G__12773;
}();
cljs.core.Symbol.prototype.apply = function(self__, args12772) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12772)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, sym);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4238__auto__ = self__._hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "str", "str", -1564826950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, 
  "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function cljs$core$__GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.var_QMARK_ = function cljs$core$var_QMARK_(v) {
  return v instanceof cljs.core.Var;
};
cljs.core.symbol = function cljs$core$symbol(var_args) {
  var G__12775 = arguments.length;
  switch(G__12775) {
    case 1:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 = function(name) {
  while (true) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      if (typeof name === "string") {
        var idx = name.indexOf("/");
        if (idx < 1) {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, name);
        } else {
          return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring(0, idx), name.substring(idx + 1, name.length));
        }
      } else {
        if (cljs.core.var_QMARK_(name)) {
          return name.sym;
        } else {
          if (name instanceof cljs.core.Keyword) {
            var G__12777 = name.fqn;
            name = G__12777;
            continue;
          } else {
            throw new Error("no conversion to symbol");
          }
        }
      }
    }
    break;
  }
};
cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var sym_str = !(ns == null) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "/", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join("") : name;
  return new cljs.core.Symbol(ns, name, sym_str, null, null);
};
cljs.core.symbol.cljs$lang$maxFixedArity = 2;
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 6717441;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Var.prototype.isMacro = function() {
  var self__ = this;
  var _ = this;
  return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;
};
cljs.core.Var.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return ["#'", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join("");
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Var(self__.val, self__.sym, new_meta);
};
cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  if (other instanceof cljs.core.Var) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this$__$1.sym, other.sym);
  } else {
    return false;
  }
};
cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash_symbol(self__.sym);
};
cljs.core.Var.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.call = function() {
  var G__12821 = null;
  var G__12821__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12779 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12779.cljs$core$IFn$_invoke$arity$0 ? fexpr__12779.cljs$core$IFn$_invoke$arity$0() : fexpr__12779.call(null);
  };
  var G__12821__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12780 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12780.cljs$core$IFn$_invoke$arity$1 ? fexpr__12780.cljs$core$IFn$_invoke$arity$1(a) : fexpr__12780.call(null, a);
  };
  var G__12821__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12781 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12781.cljs$core$IFn$_invoke$arity$2 ? fexpr__12781.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__12781.call(null, a, b);
  };
  var G__12821__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12782 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12782.cljs$core$IFn$_invoke$arity$3 ? fexpr__12782.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__12782.call(null, a, b, c);
  };
  var G__12821__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12783 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12783.cljs$core$IFn$_invoke$arity$4 ? fexpr__12783.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__12783.call(null, a, b, c, d);
  };
  var G__12821__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12784 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12784.cljs$core$IFn$_invoke$arity$5 ? fexpr__12784.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__12784.call(null, a, b, c, d, e);
  };
  var G__12821__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12785 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12785.cljs$core$IFn$_invoke$arity$6 ? fexpr__12785.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__12785.call(null, a, b, c, d, e, f);
  };
  var G__12821__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12786 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12786.cljs$core$IFn$_invoke$arity$7 ? fexpr__12786.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__12786.call(null, a, b, c, d, e, f, g);
  };
  var G__12821__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12787 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12787.cljs$core$IFn$_invoke$arity$8 ? fexpr__12787.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__12787.call(null, a, b, c, d, e, f, g, h);
  };
  var G__12821__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12788 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12788.cljs$core$IFn$_invoke$arity$9 ? fexpr__12788.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__12788.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__12821__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12789 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12789.cljs$core$IFn$_invoke$arity$10 ? fexpr__12789.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__12789.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__12821__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12790 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12790.cljs$core$IFn$_invoke$arity$11 ? fexpr__12790.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__12790.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__12821__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12791 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12791.cljs$core$IFn$_invoke$arity$12 ? fexpr__12791.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__12791.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__12821__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12792 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12792.cljs$core$IFn$_invoke$arity$13 ? fexpr__12792.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__12792.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__12821__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12793 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12793.cljs$core$IFn$_invoke$arity$14 ? fexpr__12793.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__12793.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__12821__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12794 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12794.cljs$core$IFn$_invoke$arity$15 ? fexpr__12794.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__12794.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__12821__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12795 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12795.cljs$core$IFn$_invoke$arity$16 ? fexpr__12795.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__12795.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__12821__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12796 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12796.cljs$core$IFn$_invoke$arity$17 ? fexpr__12796.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__12796.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__12821__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12797 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12797.cljs$core$IFn$_invoke$arity$18 ? fexpr__12797.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__12797.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__12821__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12798 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12798.cljs$core$IFn$_invoke$arity$19 ? fexpr__12798.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__12798.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__12821__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var fexpr__12799 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    return fexpr__12799.cljs$core$IFn$_invoke$arity$20 ? fexpr__12799.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__12799.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__12821__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__12821 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12821__1.call(this, self__);
      case 2:
        return G__12821__2.call(this, self__, a);
      case 3:
        return G__12821__3.call(this, self__, a, b);
      case 4:
        return G__12821__4.call(this, self__, a, b, c);
      case 5:
        return G__12821__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12821__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12821__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12821__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12821__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12821__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12821__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12821__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12821__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12821__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12821__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12821__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12821__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12821__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12821__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12821__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12821__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12821__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12821.cljs$core$IFn$_invoke$arity$1 = G__12821__1;
  G__12821.cljs$core$IFn$_invoke$arity$2 = G__12821__2;
  G__12821.cljs$core$IFn$_invoke$arity$3 = G__12821__3;
  G__12821.cljs$core$IFn$_invoke$arity$4 = G__12821__4;
  G__12821.cljs$core$IFn$_invoke$arity$5 = G__12821__5;
  G__12821.cljs$core$IFn$_invoke$arity$6 = G__12821__6;
  G__12821.cljs$core$IFn$_invoke$arity$7 = G__12821__7;
  G__12821.cljs$core$IFn$_invoke$arity$8 = G__12821__8;
  G__12821.cljs$core$IFn$_invoke$arity$9 = G__12821__9;
  G__12821.cljs$core$IFn$_invoke$arity$10 = G__12821__10;
  G__12821.cljs$core$IFn$_invoke$arity$11 = G__12821__11;
  G__12821.cljs$core$IFn$_invoke$arity$12 = G__12821__12;
  G__12821.cljs$core$IFn$_invoke$arity$13 = G__12821__13;
  G__12821.cljs$core$IFn$_invoke$arity$14 = G__12821__14;
  G__12821.cljs$core$IFn$_invoke$arity$15 = G__12821__15;
  G__12821.cljs$core$IFn$_invoke$arity$16 = G__12821__16;
  G__12821.cljs$core$IFn$_invoke$arity$17 = G__12821__17;
  G__12821.cljs$core$IFn$_invoke$arity$18 = G__12821__18;
  G__12821.cljs$core$IFn$_invoke$arity$19 = G__12821__19;
  G__12821.cljs$core$IFn$_invoke$arity$20 = G__12821__20;
  G__12821.cljs$core$IFn$_invoke$arity$21 = G__12821__21;
  G__12821.cljs$core$IFn$_invoke$arity$22 = G__12821__22;
  return G__12821;
}();
cljs.core.Var.prototype.apply = function(self__, args12778) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12778)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  var fexpr__12800 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12800.cljs$core$IFn$_invoke$arity$0 ? fexpr__12800.cljs$core$IFn$_invoke$arity$0() : fexpr__12800.call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var fexpr__12801 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12801.cljs$core$IFn$_invoke$arity$1 ? fexpr__12801.cljs$core$IFn$_invoke$arity$1(a) : fexpr__12801.call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var fexpr__12802 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12802.cljs$core$IFn$_invoke$arity$2 ? fexpr__12802.cljs$core$IFn$_invoke$arity$2(a, b) : fexpr__12802.call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var fexpr__12803 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12803.cljs$core$IFn$_invoke$arity$3 ? fexpr__12803.cljs$core$IFn$_invoke$arity$3(a, b, c) : fexpr__12803.call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var fexpr__12804 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12804.cljs$core$IFn$_invoke$arity$4 ? fexpr__12804.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : fexpr__12804.call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var fexpr__12805 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12805.cljs$core$IFn$_invoke$arity$5 ? fexpr__12805.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : fexpr__12805.call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var fexpr__12806 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12806.cljs$core$IFn$_invoke$arity$6 ? fexpr__12806.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : fexpr__12806.call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var fexpr__12807 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12807.cljs$core$IFn$_invoke$arity$7 ? fexpr__12807.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : fexpr__12807.call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var fexpr__12808 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12808.cljs$core$IFn$_invoke$arity$8 ? fexpr__12808.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : fexpr__12808.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var fexpr__12809 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12809.cljs$core$IFn$_invoke$arity$9 ? fexpr__12809.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : fexpr__12809.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var fexpr__12810 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12810.cljs$core$IFn$_invoke$arity$10 ? fexpr__12810.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : fexpr__12810.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var fexpr__12811 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12811.cljs$core$IFn$_invoke$arity$11 ? fexpr__12811.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : fexpr__12811.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var fexpr__12812 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12812.cljs$core$IFn$_invoke$arity$12 ? fexpr__12812.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : fexpr__12812.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var fexpr__12813 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12813.cljs$core$IFn$_invoke$arity$13 ? fexpr__12813.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : fexpr__12813.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var fexpr__12814 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12814.cljs$core$IFn$_invoke$arity$14 ? fexpr__12814.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : fexpr__12814.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var fexpr__12815 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12815.cljs$core$IFn$_invoke$arity$15 ? fexpr__12815.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : fexpr__12815.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var fexpr__12816 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12816.cljs$core$IFn$_invoke$arity$16 ? fexpr__12816.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : fexpr__12816.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var fexpr__12817 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12817.cljs$core$IFn$_invoke$arity$17 ? fexpr__12817.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : fexpr__12817.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var fexpr__12818 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12818.cljs$core$IFn$_invoke$arity$18 ? fexpr__12818.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : fexpr__12818.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var fexpr__12819 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12819.cljs$core$IFn$_invoke$arity$19 ? fexpr__12819.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : fexpr__12819.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var fexpr__12820 = self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  return fexpr__12820.cljs$core$IFn$_invoke$arity$20 ? fexpr__12820.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : fexpr__12820.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null), a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.Var.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "sym", "sym", 195671222, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function cljs$core$__GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function cljs$core$iterable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 131072 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIterable$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, x);
  }
};
cljs.core.js_iterable_QMARK_ = function cljs$core$js_iterable_QMARK_(x) {
  return !(x == null) && !(x[cljs.core.ITER_SYMBOL] == null);
};
cljs.core.clone = function cljs$core$clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cljs$core$cloneable_QMARK_(value) {
  if (!(value == null)) {
    if (value.cljs$lang$protocol_mask$partition1$ & 8192 || cljs.core.PROTOCOL_SENTINEL === value.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!value.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, value);
  }
};
cljs.core.seq = function cljs$core$seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0, null);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0, null);
          }
        } else {
          if (cljs.core.js_iterable_QMARK_(coll)) {
            return cljs.core.es6_iterator_seq(goog.object.get(coll, cljs.core.ITER_SYMBOL).call(coll));
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
              return cljs.core._seq(coll);
            } else {
              throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll), " is not ISeqable"].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.first = function cljs$core$first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function cljs$core$rest(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return s.cljs$core$ISeq$_rest$arity$1(null);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function cljs$core$next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function cljs$core$_EQ_(var_args) {
  var G__12832 = arguments.length;
  switch(G__12832) {
    case 1:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12834 = arguments.length;
      var i__4737__auto___12835 = 0;
      while (true) {
        if (i__4737__auto___12835 < len__4736__auto___12834) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12835]);
          var G__12836 = i__4737__auto___12835 + 1;
          i__4737__auto___12835 = G__12836;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  if (x == null) {
    return y == null;
  } else {
    return x === y || cljs.core._equiv(x, y);
  }
};
cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
      if (cljs.core.next(more)) {
        var G__12837 = y;
        var G__12838 = cljs.core.first(more);
        var G__12839 = cljs.core.next(more);
        x = G__12837;
        y = G__12838;
        more = G__12839;
        continue;
      } else {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ_.cljs$lang$applyTo = function(seq12829) {
  var G__12830 = cljs.core.first(seq12829);
  var seq12829__$1 = cljs.core.next(seq12829);
  var G__12831 = cljs.core.first(seq12829__$1);
  var seq12829__$2 = cljs.core.next(seq12829__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12830, G__12831, seq12829__$2);
};
cljs.core._EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":x, "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6Iterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function cljs$core$__GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function cljs$core$es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = cljs.core.es6_iterator_seq(self__.iter);
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.Symbol(null, "iter", "iter", -1346195486, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_rest", "_rest", -2100466189, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function cljs$core$__GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function cljs$core$es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return null;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function cljs$core$mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function cljs$core$hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__12840 = n + 1;
      var G__12841 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__12842 = cljs.core.next(coll__$1);
      n = G__12840;
      hash_code = G__12841;
      coll__$1 = G__12842;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function cljs$core$hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__12843 = n + 1;
      var G__12844 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__12845 = cljs.core.next(coll__$1);
      n = G__12843;
      hash_code = G__12844;
      coll__$1 = G__12845;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
goog.object.set(cljs.core.ICounted, "null", true);
goog.object.set(cljs.core._count, "null", function(_) {
  return 0;
});
Date.prototype.cljs$core$IEquiv$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.valueOf() === other.valueOf();
};
Date.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$IComparable$_compare$arity$2 = function(this$, other) {
  var this$__$1 = this;
  if (other instanceof Date) {
    return goog.array.defaultCompare(this$__$1.valueOf(), other.valueOf());
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(""));
  }
};
cljs.core.Inst = function() {
};
var cljs$core$Inst$inst_ms_STAR_$dyn_12846 = function(inst) {
  var x__4428__auto__ = inst == null ? null : inst;
  var m__4429__auto__ = cljs.core.inst_ms_STAR_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4429__auto__.call(null, inst);
  } else {
    var m__4426__auto__ = cljs.core.inst_ms_STAR_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__4426__auto__.call(null, inst);
    } else {
      throw cljs.core.missing_protocol("Inst.inst-ms*", inst);
    }
  }
};
cljs.core.inst_ms_STAR_ = function cljs$core$inst_ms_STAR_(inst) {
  if (!(inst == null) && !(inst.cljs$core$Inst$inst_ms_STAR_$arity$1 == null)) {
    return inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);
  } else {
    return cljs$core$Inst$inst_ms_STAR_$dyn_12846(inst);
  }
};
Date.prototype.cljs$core$Inst$ = cljs.core.PROTOCOL_SENTINEL;
Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 = function(inst) {
  var inst__$1 = this;
  return inst__$1.getTime();
};
cljs.core.inst_ms = function cljs$core$inst_ms(inst) {
  return cljs.core.inst_ms_STAR_(inst);
};
cljs.core.inst_QMARK_ = function cljs$core$inst_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$Inst$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.Inst, x);
  }
};
goog.object.set(cljs.core.IEquiv, "number", true);
goog.object.set(cljs.core._equiv, "number", function(x, o) {
  return x === o;
});
goog.object.set(cljs.core.Fn, "function", true);
goog.object.set(cljs.core.IMeta, "function", true);
goog.object.set(cljs.core._meta, "function", function(_) {
  return null;
});
goog.object.set(cljs.core.IHash, "_", true);
goog.object.set(cljs.core._hash, "_", function(o) {
  return goog.getUid(o);
});
cljs.core.inc = function cljs$core$inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "val", "val", 1769233139, null)], null);
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function cljs$core$__GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function cljs$core$reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function cljs$core$reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function cljs$core$ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function cljs$core$unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.deref = function cljs$core$deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function cljs$core$ci_reduce(var_args) {
  var G__12849 = arguments.length;
  switch(G__12849) {
    case 2:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 = function(cicoll, f) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  if (cnt === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = cicoll.cljs$core$IIndexed$_nth$arity$2(null, 0);
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__12850 = val;
          var G__12851 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12850, G__12851) : f.call(null, G__12850, G__12851);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12855 = nval;
          var G__12856 = n + 1;
          val = G__12855;
          n = G__12856;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 = function(cicoll, f, val) {
  var cnt = cicoll.cljs$core$ICounted$_count$arity$1(null);
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__12852 = val__$1;
        var G__12853 = cicoll.cljs$core$IIndexed$_nth$arity$2(null, n);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12852, G__12853) : f.call(null, G__12852, G__12853);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__12857 = nval;
        var G__12858 = n + 1;
        val__$1 = G__12857;
        n = G__12858;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.ci_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.array_reduce = function cljs$core$array_reduce(var_args) {
  var G__12860 = arguments.length;
  switch(G__12860) {
    case 2:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 = function(arr, f) {
  var cnt = arr.length;
  if (arr.length === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var val = arr[0];
    var n = 1;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__12861 = val;
          var G__12862 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12861, G__12862) : f.call(null, G__12861, G__12862);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__12868 = nval;
          var G__12869 = n + 1;
          val = G__12868;
          n = G__12869;
          continue;
        }
      } else {
        return val;
      }
      break;
    }
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 = function(arr, f, val) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = 0;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__12863 = val__$1;
        var G__12864 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12863, G__12864) : f.call(null, G__12863, G__12864);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__12870 = nval;
        var G__12871 = n + 1;
        val__$1 = G__12870;
        n = G__12871;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 = function(arr, f, val, idx) {
  var cnt = arr.length;
  var val__$1 = val;
  var n = idx;
  while (true) {
    if (n < cnt) {
      var nval = function() {
        var G__12865 = val__$1;
        var G__12866 = arr[n];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12865, G__12866) : f.call(null, G__12865, G__12866);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__12872 = nval;
        var G__12873 = n + 1;
        val__$1 = G__12872;
        n = G__12873;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.array_reduce.cljs$lang$maxFixedArity = 4;
cljs.core.counted_QMARK_ = function cljs$core$counted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICounted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, x);
  }
};
cljs.core.indexed_QMARK_ = function cljs$core$indexed_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, x);
  }
};
cljs.core._indexOf = function cljs$core$_indexOf(var_args) {
  var G__12877 = arguments.length;
  switch(G__12877) {
    case 2:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
};
cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (start >= len) {
    return -1;
  } else {
    var idx = start > 0 ? start : start < 0 ? function() {
      var x__4214__auto__ = 0;
      var y__4215__auto__ = start + len;
      return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
    }() : start;
    while (true) {
      if (idx < len) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__12879 = idx + 1;
          idx = G__12879;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._indexOf.cljs$lang$maxFixedArity = 3;
cljs.core._lastIndexOf = function cljs$core$_lastIndexOf(var_args) {
  var G__12881 = arguments.length;
  switch(G__12881) {
    case 2:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
};
cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 = function(coll, x, start) {
  var len = cljs.core.count(coll);
  if (len === 0) {
    return -1;
  } else {
    var idx = start > 0 ? function() {
      var x__4217__auto__ = len - 1;
      var y__4218__auto__ = start;
      return x__4217__auto__ < y__4218__auto__ ? x__4217__auto__ : y__4218__auto__;
    }() : start < 0 ? len + start : start;
    while (true) {
      if (idx >= 0) {
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, idx), x)) {
          return idx;
        } else {
          var G__12883 = idx - 1;
          idx = G__12883;
          continue;
        }
      } else {
        return -1;
      }
      break;
    }
  }
};
cljs.core._lastIndexOf.cljs$lang$maxFixedArity = 3;
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function cljs$core$__GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i, meta) {
  this.arr = arr;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 166592766;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.indexOf = function() {
  var G__12884 = null;
  var G__12884__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12884__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12884 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12884__1.call(this, x);
      case 2:
        return G__12884__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12884.cljs$core$IFn$_invoke$arity$1 = G__12884__1;
  G__12884.cljs$core$IFn$_invoke$arity$2 = G__12884__2;
  return G__12884;
}();
cljs.core.IndexedSeq.prototype.lastIndexOf = function() {
  var G__12885 = null;
  var G__12885__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12885__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12885 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12885__1.call(this, x);
      case 2:
        return G__12885__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12885.cljs$core$IFn$_invoke$arity$1 = G__12885__1;
  G__12885.cljs$core$IFn$_invoke$arity$2 = G__12885__2;
  return G__12885;
}();
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    throw new Error("Index out of bounds");
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (0 <= i__$1 && i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i, self__.meta);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  var x__4214__auto__ = 0;
  var y__4215__auto__ = self__.arr.length - self__.i;
  return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = coll__$1.cljs$core$ICounted$_count$arity$1(null);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.i < self__.arr.length) {
    return this$__$1;
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.IndexedSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.IndexedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function cljs$core$__GT_IndexedSeq(arr, i, meta) {
  return new cljs.core.IndexedSeq(arr, i, meta);
};
goog.object.set(cljs.core.IndexedSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.prim_seq = function cljs$core$prim_seq(var_args) {
  var G__12887 = arguments.length;
  switch(G__12887) {
    case 1:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 = function(prim) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
};
cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 = function(prim, i) {
  if (i < prim.length) {
    return new cljs.core.IndexedSeq(prim, i, null);
  } else {
    return null;
  }
};
cljs.core.prim_seq.cljs$lang$maxFixedArity = 2;
cljs.core.array_seq = function cljs$core$array_seq(var_args) {
  var G__12890 = arguments.length;
  switch(G__12890) {
    case 1:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 = function(array) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
};
cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 = function(array, i) {
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
};
cljs.core.array_seq.cljs$lang$maxFixedArity = 2;
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.indexOf = function() {
  var G__12892 = null;
  var G__12892__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__12892__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12892 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12892__1.call(this, x);
      case 2:
        return G__12892__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12892.cljs$core$IFn$_invoke$arity$1 = G__12892__1;
  G__12892.cljs$core$IFn$_invoke$arity$2 = G__12892__2;
  return G__12892;
}();
cljs.core.RSeq.prototype.lastIndexOf = function() {
  var G__12893 = null;
  var G__12893__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__12893__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__12893 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__12893__1.call(this, x);
      case 2:
        return G__12893__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__12893.cljs$core$IFn$_invoke$arity$1 = G__12893__1;
  G__12893.cljs$core$IFn$_invoke$arity$2 = G__12893__2;
  return G__12893;
}();
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, col__$1);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
  }
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.RSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ci", "ci", 2049808339, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function cljs$core$__GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
goog.object.set(cljs.core.RSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.second = function cljs$core$second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function cljs$core$ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function cljs$core$nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function cljs$core$fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function cljs$core$nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function cljs$core$last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__12894 = sn;
      s = G__12894;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
goog.object.set(cljs.core.IEquiv, "_", true);
goog.object.set(cljs.core._equiv, "_", function(x, o) {
  return x === o;
});
cljs.core.conj = function cljs$core$conj(var_args) {
  var G__12899 = arguments.length;
  switch(G__12899) {
    case 0:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12901 = arguments.length;
      var i__4737__auto___12902 = 0;
      while (true) {
        if (i__4737__auto___12902 < len__4736__auto___12901) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12902]);
          var G__12903 = i__4737__auto___12902 + 1;
          i__4737__auto___12902 = G__12903;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$2 = function(coll, x) {
  if (!(coll == null)) {
    return cljs.core._conj(coll, x);
  } else {
    return new cljs.core.List(null, x, null, 1, null);
  }
};
cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic = function(coll, x, xs) {
  while (true) {
    if (cljs.core.truth_(xs)) {
      var G__12904 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
      var G__12905 = cljs.core.first(xs);
      var G__12906 = cljs.core.next(xs);
      coll = G__12904;
      x = G__12905;
      xs = G__12906;
      continue;
    } else {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll, x);
    }
    break;
  }
};
cljs.core.conj.cljs$lang$applyTo = function(seq12896) {
  var G__12897 = cljs.core.first(seq12896);
  var seq12896__$1 = cljs.core.next(seq12896);
  var G__12898 = cljs.core.first(seq12896__$1);
  var seq12896__$2 = cljs.core.next(seq12896__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12897, G__12898, seq12896__$2);
};
cljs.core.conj.cljs$lang$maxFixedArity = 2;
cljs.core.empty = function cljs$core$empty(coll) {
  if (coll == null) {
    return null;
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : false : false) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 4 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IEmptyableCollection$ ? true : !coll.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection, coll)) {
        return cljs.core._empty(coll);
      } else {
        return null;
      }
    }
  }
};
cljs.core.accumulating_seq_count = function cljs$core$accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__12909 = cljs.core.next(s);
      var G__12910 = acc + 1;
      s = G__12909;
      acc = G__12910;
      continue;
    }
    break;
  }
};
cljs.core.count = function cljs$core$count(coll) {
  if (!(coll == null)) {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 2 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ICounted$ ? true : false : false) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeqable$ ? true : false : false) {
            return cljs.core.accumulating_seq_count(coll);
          } else {
            return cljs.core._count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function cljs$core$linear_traversal_nth(var_args) {
  var G__12914 = arguments.length;
  switch(G__12914) {
    case 2:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  while (true) {
    if (coll == null) {
      throw new Error("Index out of bounds");
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          throw new Error("Index out of bounds");
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
        } else {
          if (cljs.core.seq(coll)) {
            var G__12916 = cljs.core.next(coll);
            var G__12917 = n - 1;
            coll = G__12916;
            n = G__12917;
            continue;
          } else {
            throw new Error("Index out of bounds");
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  while (true) {
    if (coll == null) {
      return not_found;
    } else {
      if (n === 0) {
        if (cljs.core.seq(coll)) {
          return cljs.core.first(coll);
        } else {
          return not_found;
        }
      } else {
        if (cljs.core.indexed_QMARK_(coll)) {
          return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
        } else {
          if (cljs.core.seq(coll)) {
            var G__12918 = cljs.core.next(coll);
            var G__12919 = n - 1;
            var G__12920 = not_found;
            coll = G__12918;
            n = G__12919;
            not_found = G__12920;
            continue;
          } else {
            return not_found;
          }
        }
      }
    }
    break;
  }
};
cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity = 3;
cljs.core.nth = function cljs$core$nth(var_args) {
  var G__12922 = arguments.length;
  switch(G__12922) {
    case 2:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.nth.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$2 = function(coll, n) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number");
  } else {
    if (coll == null) {
      return coll;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              throw new Error("Index out of bounds");
            }
          } else {
            if (function() {
              var or__4126__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4126__auto__) {
                return or__4126__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                throw new Error("Index out of bounds");
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$core$IFn$_invoke$arity$3 = function(coll, n, not_found) {
  if (!(typeof n === "number")) {
    throw new Error("Index argument to nth must be a number.");
  } else {
    if (coll == null) {
      return not_found;
    } else {
      if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 16 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IIndexed$ ? true : false : false) {
        return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          if (-1 < n && n < coll.length) {
            return coll[n | 0];
          } else {
            return not_found;
          }
        } else {
          if (typeof coll === "string") {
            if (-1 < n && n < coll.length) {
              return coll.charAt(n | 0);
            } else {
              return not_found;
            }
          } else {
            if (function() {
              var or__4126__auto__ = !(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false;
              if (or__4126__auto__) {
                return or__4126__auto__;
              } else {
                if (!(coll == null)) {
                  if (coll.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISequential$) {
                    return true;
                  } else {
                    return false;
                  }
                } else {
                  return false;
                }
              }
            }()) {
              if (n < 0) {
                return not_found;
              } else {
                return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
              } else {
                throw new Error(["nth not supported on this type ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.nth.cljs$lang$maxFixedArity = 3;
cljs.core.nthrest = function cljs$core$nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    var temp__5733__auto__ = n__$1 > 0 && cljs.core.seq(xs);
    if (temp__5733__auto__) {
      var xs__$1 = temp__5733__auto__;
      var G__12932 = n__$1 - 1;
      var G__12933 = cljs.core.rest(xs__$1);
      n__$1 = G__12932;
      xs = G__12933;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function cljs$core$get(var_args) {
  var G__12935 = arguments.length;
  switch(G__12935) {
    case 2:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$2 = function(o, k) {
  if (o == null) {
    return null;
  } else {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$2(null, k);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && k < o.length) {
          return o[k | 0];
        } else {
          return null;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return null;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
          } else {
            return null;
          }
        }
      }
    }
  }
};
cljs.core.get.cljs$core$IFn$_invoke$arity$3 = function(o, k, not_found) {
  if (!(o == null)) {
    if (!(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 256 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$ILookup$ ? true : false : false) {
      return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
    } else {
      if (cljs.core.array_QMARK_(o)) {
        if (!(k == null) && (-1 < k && k < o.length)) {
          return o[k | 0];
        } else {
          return not_found;
        }
      } else {
        if (typeof o === "string") {
          if (!(k == null) && (-1 < k && k < o.length)) {
            return o.charAt(k | 0);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
            return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
          } else {
            return not_found;
          }
        }
      }
    }
  } else {
    return not_found;
  }
};
cljs.core.get.cljs$lang$maxFixedArity = 3;
cljs.core.assoc = function cljs$core$assoc(var_args) {
  var G__12944 = arguments.length;
  switch(G__12944) {
    case 3:
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12947 = arguments.length;
      var i__4737__auto___12948 = 0;
      while (true) {
        if (i__4737__auto___12948 < len__4736__auto___12947) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12948]);
          var G__12949 = i__4737__auto___12948 + 1;
          i__4737__auto___12948 = G__12949;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 = function(coll, k, v) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IAssociative$ ? true : false : false) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(null, k, v);
  } else {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentArrayMap.createAsIfByAssoc([k, v]);
    }
  }
};
cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, v, kvs) {
  while (true) {
    var ret = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
    if (cljs.core.truth_(kvs)) {
      var G__12950 = ret;
      var G__12951 = cljs.core.first(kvs);
      var G__12952 = cljs.core.second(kvs);
      var G__12953 = cljs.core.nnext(kvs);
      coll = G__12950;
      k = G__12951;
      v = G__12952;
      kvs = G__12953;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.assoc.cljs$lang$applyTo = function(seq12940) {
  var G__12941 = cljs.core.first(seq12940);
  var seq12940__$1 = cljs.core.next(seq12940);
  var G__12942 = cljs.core.first(seq12940__$1);
  var seq12940__$2 = cljs.core.next(seq12940__$1);
  var G__12943 = cljs.core.first(seq12940__$2);
  var seq12940__$3 = cljs.core.next(seq12940__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12941, G__12942, G__12943, seq12940__$3);
};
cljs.core.assoc.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc = function cljs$core$dissoc(var_args) {
  var G__12958 = arguments.length;
  switch(G__12958) {
    case 1:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12960 = arguments.length;
      var i__4737__auto___12961 = 0;
      while (true) {
        if (i__4737__auto___12961 < len__4736__auto___12960) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12961]);
          var G__12962 = i__4737__auto___12961 + 1;
          i__4737__auto___12961 = G__12962;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._dissoc(coll, k);
  }
};
cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__12963 = ret;
        var G__12964 = cljs.core.first(ks);
        var G__12965 = cljs.core.next(ks);
        coll = G__12963;
        k = G__12964;
        ks = G__12965;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.dissoc.cljs$lang$applyTo = function(seq12955) {
  var G__12956 = cljs.core.first(seq12955);
  var seq12955__$1 = cljs.core.next(seq12955);
  var G__12957 = cljs.core.first(seq12955__$1);
  var seq12955__$2 = cljs.core.next(seq12955__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12956, G__12957, seq12955__$2);
};
cljs.core.dissoc.cljs$lang$maxFixedArity = 2;
cljs.core.fn_QMARK_ = function cljs$core$fn_QMARK_(f) {
  var or__4126__auto__ = goog.isFunction(f);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    if (!(f == null)) {
      if (false || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$Fn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, f);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MetaFn.prototype.call = function() {
  var G__12969 = null;
  var G__12969__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__12969__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
  };
  var G__12969__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
  };
  var G__12969__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
  };
  var G__12969__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
  };
  var G__12969__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
  };
  var G__12969__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
  };
  var G__12969__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
  };
  var G__12969__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__12969__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__12969__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__12969__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__12969__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__12969__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__12969__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__12969__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__12969__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__12969__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__12969__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__12969__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__12969__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__12969__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__12969 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__12969__1.call(this, self__);
      case 2:
        return G__12969__2.call(this, self__, a);
      case 3:
        return G__12969__3.call(this, self__, a, b);
      case 4:
        return G__12969__4.call(this, self__, a, b, c);
      case 5:
        return G__12969__5.call(this, self__, a, b, c, d);
      case 6:
        return G__12969__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__12969__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__12969__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__12969__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__12969__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__12969__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__12969__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__12969__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__12969__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__12969__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__12969__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__12969__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__12969__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__12969__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__12969__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__12969__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__12969__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__12969.cljs$core$IFn$_invoke$arity$1 = G__12969__1;
  G__12969.cljs$core$IFn$_invoke$arity$2 = G__12969__2;
  G__12969.cljs$core$IFn$_invoke$arity$3 = G__12969__3;
  G__12969.cljs$core$IFn$_invoke$arity$4 = G__12969__4;
  G__12969.cljs$core$IFn$_invoke$arity$5 = G__12969__5;
  G__12969.cljs$core$IFn$_invoke$arity$6 = G__12969__6;
  G__12969.cljs$core$IFn$_invoke$arity$7 = G__12969__7;
  G__12969.cljs$core$IFn$_invoke$arity$8 = G__12969__8;
  G__12969.cljs$core$IFn$_invoke$arity$9 = G__12969__9;
  G__12969.cljs$core$IFn$_invoke$arity$10 = G__12969__10;
  G__12969.cljs$core$IFn$_invoke$arity$11 = G__12969__11;
  G__12969.cljs$core$IFn$_invoke$arity$12 = G__12969__12;
  G__12969.cljs$core$IFn$_invoke$arity$13 = G__12969__13;
  G__12969.cljs$core$IFn$_invoke$arity$14 = G__12969__14;
  G__12969.cljs$core$IFn$_invoke$arity$15 = G__12969__15;
  G__12969.cljs$core$IFn$_invoke$arity$16 = G__12969__16;
  G__12969.cljs$core$IFn$_invoke$arity$17 = G__12969__17;
  G__12969.cljs$core$IFn$_invoke$arity$18 = G__12969__18;
  G__12969.cljs$core$IFn$_invoke$arity$19 = G__12969__19;
  G__12969.cljs$core$IFn$_invoke$arity$20 = G__12969__20;
  G__12969.cljs$core$IFn$_invoke$arity$21 = G__12969__21;
  G__12969.cljs$core$IFn$_invoke$arity$22 = G__12969__22;
  return G__12969;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args12968) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args12968)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null, a);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.afn.call(null, a, b);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.afn.call(null, a, b, c);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.afn.call(null, a, b, c, d);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.afn.call(null, a, b, c, d, e);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.afn.call(null, a, b, c, d, e, f);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.afn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.afn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.afn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.afn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.afn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MetaFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "afn", "afn", 216963467, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function cljs$core$__GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function cljs$core$with_meta(o, meta) {
  if (goog.isFunction(o)) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function cljs$core$meta(o) {
  if (!(o == null) ? !(o == null) ? o.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IMeta$ ? true : !o.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, o) : false) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function cljs$core$peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function cljs$core$pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function cljs$core$disj(var_args) {
  var G__12976 = arguments.length;
  switch(G__12976) {
    case 1:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___12978 = arguments.length;
      var i__4737__auto___12979 = 0;
      while (true) {
        if (i__4737__auto___12979 < len__4736__auto___12978) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___12979]);
          var G__12980 = i__4737__auto___12979 + 1;
          i__4737__auto___12979 = G__12980;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return coll;
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$2 = function(coll, k) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._disjoin(coll, k);
  }
};
cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic = function(coll, k, ks) {
  while (true) {
    if (coll == null) {
      return null;
    } else {
      var ret = cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll, k);
      if (cljs.core.truth_(ks)) {
        var G__12981 = ret;
        var G__12982 = cljs.core.first(ks);
        var G__12983 = cljs.core.next(ks);
        coll = G__12981;
        k = G__12982;
        ks = G__12983;
        continue;
      } else {
        return ret;
      }
    }
    break;
  }
};
cljs.core.disj.cljs$lang$applyTo = function(seq12973) {
  var G__12974 = cljs.core.first(seq12973);
  var seq12973__$1 = cljs.core.next(seq12973);
  var G__12975 = cljs.core.first(seq12973__$1);
  var seq12973__$2 = cljs.core.next(seq12973__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12974, G__12975, seq12973__$2);
};
cljs.core.disj.cljs$lang$maxFixedArity = 2;
cljs.core.empty_QMARK_ = function cljs$core$empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function cljs$core$coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 8 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ICollection$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, x);
    }
  }
};
cljs.core.set_QMARK_ = function cljs$core$set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISet$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, x);
    }
  }
};
cljs.core.associative_QMARK_ = function cljs$core$associative_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, x);
  }
};
cljs.core.ifind_QMARK_ = function cljs$core$ifind_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IFind$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IFind, x);
  }
};
cljs.core.sequential_QMARK_ = function cljs$core$sequential_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16777216 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISequential$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, x);
  }
};
cljs.core.sorted_QMARK_ = function cljs$core$sorted_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 268435456 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$ISorted$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, x);
  }
};
cljs.core.reduceable_QMARK_ = function cljs$core$reduceable_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IReduce$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, x);
  }
};
cljs.core.map_QMARK_ = function cljs$core$map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    if (!(x == null)) {
      if (x.cljs$lang$protocol_mask$partition0$ & 1024 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMap$) {
        return true;
      } else {
        if (!x.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, x);
    }
  }
};
cljs.core.record_QMARK_ = function cljs$core$record_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 67108864 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IRecord$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IRecord, x);
  }
};
cljs.core.vector_QMARK_ = function cljs$core$vector_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 16384 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IVector$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, x);
  }
};
cljs.core.chunked_seq_QMARK_ = function cljs$core$chunked_seq_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition1$ & 512 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function cljs$core$js_obj(var_args) {
  var G__12997 = arguments.length;
  switch(G__12997) {
    case 0:
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13001 = arguments.length;
      var i__4737__auto___13002 = 0;
      while (true) {
        if (i__4737__auto___13002 < len__4736__auto___13001) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13002]);
          var G__13003 = i__4737__auto___13002 + 1;
          i__4737__auto___13002 = G__13003;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(0), 0, null);
      return cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__4758__auto__);
  }
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 = function() {
  return {};
};
cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(goog.object.create, keyvals);
};
cljs.core.js_obj.cljs$lang$applyTo = function(seq12996) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12996));
};
cljs.core.js_obj.cljs$lang$maxFixedArity = 0;
cljs.core.js_keys = function cljs$core$js_keys(obj) {
  return goog.object.getKeys(obj);
};
cljs.core.js_delete = function cljs$core$js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function cljs$core$array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__13004 = i__$1 + 1;
      var G__13005 = j__$1 + 1;
      var G__13006 = len__$1 - 1;
      i__$1 = G__13004;
      j__$1 = G__13005;
      len__$1 = G__13006;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function cljs$core$array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__13007 = i__$1 - 1;
      var G__13008 = j__$1 - 1;
      var G__13009 = len__$1 - 1;
      i__$1 = G__13007;
      j__$1 = G__13008;
      len__$1 = G__13009;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function cljs$core$false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function cljs$core$true_QMARK_(x) {
  return x === true;
};
cljs.core.boolean_QMARK_ = function cljs$core$boolean_QMARK_(x) {
  return x === true || x === false;
};
cljs.core.undefined_QMARK_ = function cljs$core$undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function cljs$core$seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    if (!(s == null)) {
      if (s.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeq$) {
        return true;
      } else {
        if (!s.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, s);
    }
  }
};
cljs.core.seqable_QMARK_ = function cljs$core$seqable_QMARK_(s) {
  var or__4126__auto__ = s == null;
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = !(s == null) ? s.cljs$lang$protocol_mask$partition0$ & 8388608 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$ISeqable$ ? true : !s.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s) : false : cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, s);
    if (or__4126__auto____$1) {
      return or__4126__auto____$1;
    } else {
      return cljs.core.array_QMARK_(s) || typeof s === "string";
    }
  }
};
cljs.core.boolean$ = function cljs$core$boolean(x) {
  if (x == null) {
    return false;
  } else {
    if (x === false) {
      return false;
    } else {
      return true;
    }
  }
};
cljs.core.ifn_QMARK_ = function cljs$core$ifn_QMARK_(f) {
  var or__4126__auto__ = cljs.core.fn_QMARK_(f);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    if (!(f == null)) {
      if (f.cljs$lang$protocol_mask$partition0$ & 1 || cljs.core.PROTOCOL_SENTINEL === f.cljs$core$IFn$) {
        return true;
      } else {
        if (!f.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, f);
    }
  }
};
cljs.core.integer_QMARK_ = function cljs$core$integer_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && parseFloat(n) === parseInt(n, 10);
};
cljs.core.int_QMARK_ = function cljs$core$int_QMARK_(x) {
  return cljs.core.integer_QMARK_(x) || x instanceof goog.math.Integer || x instanceof goog.math.Long;
};
cljs.core.pos_int_QMARK_ = function cljs$core$pos_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x > 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative()) && cljs.core.not(x.isZero());
      } else {
        return false;
      }
    }
  }
};
cljs.core.neg_int_QMARK_ = function cljs$core$neg_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return x < 0;
  } else {
    if (x instanceof goog.math.Integer) {
      return x.isNegative();
    } else {
      if (x instanceof goog.math.Long) {
        return x.isNegative();
      } else {
        return false;
      }
    }
  }
};
cljs.core.nat_int_QMARK_ = function cljs$core$nat_int_QMARK_(x) {
  if (cljs.core.integer_QMARK_(x)) {
    return !(x < 0);
  } else {
    if (x instanceof goog.math.Integer) {
      return cljs.core.not(x.isNegative());
    } else {
      if (x instanceof goog.math.Long) {
        return cljs.core.not(x.isNegative());
      } else {
        return false;
      }
    }
  }
};
cljs.core.float_QMARK_ = function cljs$core$float_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.double_QMARK_ = function cljs$core$double_QMARK_(x) {
  return typeof x === "number";
};
cljs.core.infinite_QMARK_ = function cljs$core$infinite_QMARK_(x) {
  return x === Number.POSITIVE_INFINITY || x === Number.NEGATIVE_INFINITY;
};
cljs.core.contains_QMARK_ = function cljs$core$contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function cljs$core$find(coll, k) {
  if (cljs.core.ifind_QMARK_(coll)) {
    return cljs.core._find(coll, k);
  } else {
    if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
      return new cljs.core.MapEntry(k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k), null);
    } else {
      return null;
    }
  }
};
cljs.core.distinct_QMARK_ = function cljs$core$distinct_QMARK_(var_args) {
  var G__13022 = arguments.length;
  switch(G__13022) {
    case 1:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13024 = arguments.length;
      var i__4737__auto___13025 = 0;
      while (true) {
        if (i__4737__auto___13025 < len__4736__auto___13024) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13025]);
          var G__13026 = i__4737__auto___13025 + 1;
          i__4737__auto___13025 = G__13026;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
    var s = cljs.core.PersistentHashSet.createAsIfByAssoc([x, y]);
    var xs = more;
    while (true) {
      var x__$1 = cljs.core.first(xs);
      var etc = cljs.core.next(xs);
      if (cljs.core.truth_(xs)) {
        if (cljs.core.contains_QMARK_(s, x__$1)) {
          return false;
        } else {
          var G__13027 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
          var G__13028 = etc;
          s = G__13027;
          xs = G__13028;
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  } else {
    return false;
  }
};
cljs.core.distinct_QMARK_.cljs$lang$applyTo = function(seq13019) {
  var G__13020 = cljs.core.first(seq13019);
  var seq13019__$1 = cljs.core.next(seq13019);
  var G__13021 = cljs.core.first(seq13019__$1);
  var seq13019__$2 = cljs.core.next(seq13019__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13020, G__13021, seq13019__$2);
};
cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs.core.compare = function cljs$core$compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return -1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (typeof x === "number") {
          if (typeof y === "number") {
            return goog.array.defaultCompare(x, y);
          } else {
            throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
          }
        } else {
          if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IComparable$ ? true : !x.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IComparable, x)) {
            return cljs.core._compare(x, y);
          } else {
            if ((typeof x === "string" || cljs.core.array_QMARK_(x) || x === true || x === false) && cljs.core.type(x) === cljs.core.type(y)) {
              return goog.array.defaultCompare(x, y);
            } else {
              throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
            }
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function cljs$core$compare_indexed(var_args) {
  var G__13031 = arguments.length;
  switch(G__13031) {
    case 2:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 4:
      return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 = function(xs, ys) {
  var xl = cljs.core.count(xs);
  var yl = cljs.core.count(ys);
  if (xl < yl) {
    return -1;
  } else {
    if (xl > yl) {
      return 1;
    } else {
      if (xl === 0) {
        return 0;
      } else {
        return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  }
};
cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 = function(xs, ys, len, n) {
  while (true) {
    var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
    if (d === 0 && n + 1 < len) {
      var G__13033 = xs;
      var G__13034 = ys;
      var G__13035 = len;
      var G__13036 = n + 1;
      xs = G__13033;
      ys = G__13034;
      len = G__13035;
      n = G__13036;
      continue;
    } else {
      return d;
    }
    break;
  }
};
cljs.core.compare_indexed.cljs$lang$maxFixedArity = 4;
cljs.core.fn__GT_comparator = function cljs$core$fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return -1;
        } else {
          if (cljs.core.truth_(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y, x) : f.call(null, y, x))) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function cljs$core$sort(var_args) {
  var G__13038 = arguments.length;
  switch(G__13038) {
    case 1:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
};
cljs.core.sort.cljs$core$IFn$_invoke$arity$2 = function(comp, coll) {
  if (cljs.core.seq(coll)) {
    var a = cljs.core.to_array(coll);
    goog.array.stableSort(a, cljs.core.fn__GT_comparator(comp));
    return cljs.core.seq(a);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sort.cljs$lang$maxFixedArity = 2;
cljs.core.sort_by = function cljs$core$sort_by(var_args) {
  var G__13041 = arguments.length;
  switch(G__13041) {
    case 2:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 = function(keyfn, coll) {
  return cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
};
cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 = function(keyfn, comp, coll) {
  return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
    var G__13043 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null, x);
    var G__13044 = keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null, y);
    var fexpr__13042 = cljs.core.fn__GT_comparator(comp);
    return fexpr__13042.cljs$core$IFn$_invoke$arity$2 ? fexpr__13042.cljs$core$IFn$_invoke$arity$2(G__13043, G__13044) : fexpr__13042.call(null, G__13043, G__13044);
  }, coll);
};
cljs.core.sort_by.cljs$lang$maxFixedArity = 3;
cljs.core.seq_reduce = function cljs$core$seq_reduce(var_args) {
  var G__13047 = arguments.length;
  switch(G__13047) {
    case 2:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var temp__5733__auto__ = cljs.core.seq(coll);
  if (temp__5733__auto__) {
    var s = temp__5733__auto__;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.next(s));
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  var val__$1 = val;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (coll__$1) {
      var nval = function() {
        var G__13048 = val__$1;
        var G__13049 = cljs.core.first(coll__$1);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13048, G__13049) : f.call(null, G__13048, G__13049);
      }();
      if (cljs.core.reduced_QMARK_(nval)) {
        return cljs.core.deref(nval);
      } else {
        var G__13051 = nval;
        var G__13052 = cljs.core.next(coll__$1);
        val__$1 = G__13051;
        coll__$1 = G__13052;
        continue;
      }
    } else {
      return val__$1;
    }
    break;
  }
};
cljs.core.seq_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.shuffle = function cljs$core$shuffle(coll) {
  var a = cljs.core.to_array(coll);
  goog.array.shuffle(a);
  return cljs.core.vec(a);
};
cljs.core.iter_reduce = function cljs$core$iter_reduce(var_args) {
  var G__13054 = arguments.length;
  switch(G__13054) {
    case 2:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 = function(coll, f) {
  var iter = cljs.core._iterator(coll);
  if (cljs.core.truth_(iter.hasNext())) {
    var init = iter.next();
    var acc = init;
    while (true) {
      if (iter.hasNext()) {
        var nacc = function() {
          var G__13055 = acc;
          var G__13056 = iter.next();
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13055, G__13056) : f.call(null, G__13055, G__13056);
        }();
        if (cljs.core.reduced_QMARK_(nacc)) {
          return cljs.core.deref(nacc);
        } else {
          var G__13060 = nacc;
          acc = G__13060;
          continue;
        }
      } else {
        return acc;
      }
      break;
    }
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 = function(coll, f, init) {
  var iter = cljs.core._iterator(coll);
  var acc = init;
  while (true) {
    if (iter.hasNext()) {
      var nacc = function() {
        var G__13057 = acc;
        var G__13058 = iter.next();
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13057, G__13058) : f.call(null, G__13057, G__13058);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__13061 = nacc;
        acc = G__13061;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.iter_reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce = function cljs$core$reduce(var_args) {
  var G__13063 = arguments.length;
  switch(G__13063) {
    case 2:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 = function(f, val, coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 524288 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReduce$ ? true : false : false) {
    return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
  } else {
    if (cljs.core.array_QMARK_(coll)) {
      return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
    } else {
      if (typeof coll === "string") {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
          return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.iterable_QMARK_(coll)) {
            return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  }
};
cljs.core.reduce.cljs$lang$maxFixedArity = 3;
cljs.core.reduce_kv = function cljs$core$reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function cljs$core$identity(x) {
  return x;
};
cljs.core.completing = function cljs$core$completing(var_args) {
  var G__13068 = arguments.length;
  switch(G__13068) {
    case 1:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
};
cljs.core.completing.cljs$core$IFn$_invoke$arity$2 = function(f, cf) {
  return function() {
    var G__13070 = null;
    var G__13070__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    };
    var G__13070__1 = function(x) {
      return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null, x);
    };
    var G__13070__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y);
    };
    G__13070 = function(x, y) {
      switch(arguments.length) {
        case 0:
          return G__13070__0.call(this);
        case 1:
          return G__13070__1.call(this, x);
        case 2:
          return G__13070__2.call(this, x, y);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13070.cljs$core$IFn$_invoke$arity$0 = G__13070__0;
    G__13070.cljs$core$IFn$_invoke$arity$1 = G__13070__1;
    G__13070.cljs$core$IFn$_invoke$arity$2 = G__13070__2;
    return G__13070;
  }();
};
cljs.core.completing.cljs$lang$maxFixedArity = 2;
cljs.core.transduce = function cljs$core$transduce(var_args) {
  var G__13072 = arguments.length;
  switch(G__13072) {
    case 3:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 = function(xform, f, coll) {
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, f, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), coll);
};
cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 = function(xform, f, init, coll) {
  var f__$1 = xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null, f);
  var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
  return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null, ret);
};
cljs.core.transduce.cljs$lang$maxFixedArity = 4;
cljs.core._PLUS_ = function cljs$core$_PLUS_(var_args) {
  var G__13078 = arguments.length;
  switch(G__13078) {
    case 0:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13080 = arguments.length;
      var i__4737__auto___13081 = 0;
      while (true) {
        if (i__4737__auto___13081 < len__4736__auto___13080) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13081]);
          var G__13082 = i__4737__auto___13081 + 1;
          i__4737__auto___13081 = G__13082;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_, x + y, more);
};
cljs.core._PLUS_.cljs$lang$applyTo = function(seq13075) {
  var G__13076 = cljs.core.first(seq13075);
  var seq13075__$1 = cljs.core.next(seq13075);
  var G__13077 = cljs.core.first(seq13075__$1);
  var seq13075__$2 = cljs.core.next(seq13075__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13076, G__13077, seq13075__$2);
};
cljs.core._PLUS_.cljs$lang$maxFixedArity = 2;
cljs.core._ = function cljs$core$_(var_args) {
  var G__13087 = arguments.length;
  switch(G__13087) {
    case 1:
      return cljs.core._.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13089 = arguments.length;
      var i__4737__auto___13090 = 0;
      while (true) {
        if (i__4737__auto___13090 < len__4736__auto___13089) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13090]);
          var G__13091 = i__4737__auto___13090 + 1;
          i__4737__auto___13090 = G__13091;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core._.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core._.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._, x - y, more);
};
cljs.core._.cljs$lang$applyTo = function(seq13084) {
  var G__13085 = cljs.core.first(seq13084);
  var seq13084__$1 = cljs.core.next(seq13084);
  var G__13086 = cljs.core.first(seq13084__$1);
  var seq13084__$2 = cljs.core.next(seq13084__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13085, G__13086, seq13084__$2);
};
cljs.core._.cljs$lang$maxFixedArity = 2;
cljs.core._STAR_ = function cljs$core$_STAR_(var_args) {
  var G__13096 = arguments.length;
  switch(G__13096) {
    case 0:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13098 = arguments.length;
      var i__4737__auto___13099 = 0;
      while (true) {
        if (i__4737__auto___13099 < len__4736__auto___13098) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13099]);
          var G__13100 = i__4737__auto___13099 + 1;
          i__4737__auto___13099 = G__13100;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_, x * y, more);
};
cljs.core._STAR_.cljs$lang$applyTo = function(seq13093) {
  var G__13094 = cljs.core.first(seq13093);
  var seq13093__$1 = cljs.core.next(seq13093);
  var G__13095 = cljs.core.first(seq13093__$1);
  var seq13093__$2 = cljs.core.next(seq13093__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13094, G__13095, seq13093__$2);
};
cljs.core._STAR_.cljs$lang$maxFixedArity = 2;
cljs.core._SLASH_ = function cljs$core$_SLASH_(var_args) {
  var G__13105 = arguments.length;
  switch(G__13105) {
    case 1:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13107 = arguments.length;
      var i__4737__auto___13108 = 0;
      while (true) {
        if (i__4737__auto___13108 < len__4736__auto___13107) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13108]);
          var G__13109 = i__4737__auto___13108 + 1;
          i__4737__auto___13108 = G__13109;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_, x / y, more);
};
cljs.core._SLASH_.cljs$lang$applyTo = function(seq13102) {
  var G__13103 = cljs.core.first(seq13102);
  var seq13102__$1 = cljs.core.next(seq13102);
  var G__13104 = cljs.core.first(seq13102__$1);
  var seq13102__$2 = cljs.core.next(seq13102__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13103, G__13104, seq13102__$2);
};
cljs.core._SLASH_.cljs$lang$maxFixedArity = 2;
cljs.core._LT_ = function cljs$core$_LT_(var_args) {
  var G__13114 = arguments.length;
  switch(G__13114) {
    case 1:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13116 = arguments.length;
      var i__4737__auto___13117 = 0;
      while (true) {
        if (i__4737__auto___13117 < len__4736__auto___13116) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13117]);
          var G__13118 = i__4737__auto___13117 + 1;
          i__4737__auto___13117 = G__13118;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x < y;
};
cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x < y) {
      if (cljs.core.next(more)) {
        var G__13119 = y;
        var G__13120 = cljs.core.first(more);
        var G__13121 = cljs.core.next(more);
        x = G__13119;
        y = G__13120;
        more = G__13121;
        continue;
      } else {
        return y < cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT_.cljs$lang$applyTo = function(seq13111) {
  var G__13112 = cljs.core.first(seq13111);
  var seq13111__$1 = cljs.core.next(seq13111);
  var G__13113 = cljs.core.first(seq13111__$1);
  var seq13111__$2 = cljs.core.next(seq13111__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13112, G__13113, seq13111__$2);
};
cljs.core._LT_.cljs$lang$maxFixedArity = 2;
cljs.core._LT__EQ_ = function cljs$core$_LT__EQ_(var_args) {
  var G__13126 = arguments.length;
  switch(G__13126) {
    case 1:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13128 = arguments.length;
      var i__4737__auto___13129 = 0;
      while (true) {
        if (i__4737__auto___13129 < len__4736__auto___13128) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13129]);
          var G__13130 = i__4737__auto___13129 + 1;
          i__4737__auto___13129 = G__13130;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x <= y;
};
cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x <= y) {
      if (cljs.core.next(more)) {
        var G__13131 = y;
        var G__13132 = cljs.core.first(more);
        var G__13133 = cljs.core.next(more);
        x = G__13131;
        y = G__13132;
        more = G__13133;
        continue;
      } else {
        return y <= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._LT__EQ_.cljs$lang$applyTo = function(seq13123) {
  var G__13124 = cljs.core.first(seq13123);
  var seq13123__$1 = cljs.core.next(seq13123);
  var G__13125 = cljs.core.first(seq13123__$1);
  var seq13123__$2 = cljs.core.next(seq13123__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13124, G__13125, seq13123__$2);
};
cljs.core._LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core._GT_ = function cljs$core$_GT_(var_args) {
  var G__13138 = arguments.length;
  switch(G__13138) {
    case 1:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13140 = arguments.length;
      var i__4737__auto___13141 = 0;
      while (true) {
        if (i__4737__auto___13141 < len__4736__auto___13140) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13141]);
          var G__13142 = i__4737__auto___13141 + 1;
          i__4737__auto___13141 = G__13142;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x > y;
};
cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x > y) {
      if (cljs.core.next(more)) {
        var G__13143 = y;
        var G__13144 = cljs.core.first(more);
        var G__13145 = cljs.core.next(more);
        x = G__13143;
        y = G__13144;
        more = G__13145;
        continue;
      } else {
        return y > cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT_.cljs$lang$applyTo = function(seq13135) {
  var G__13136 = cljs.core.first(seq13135);
  var seq13135__$1 = cljs.core.next(seq13135);
  var G__13137 = cljs.core.first(seq13135__$1);
  var seq13135__$2 = cljs.core.next(seq13135__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13136, G__13137, seq13135__$2);
};
cljs.core._GT_.cljs$lang$maxFixedArity = 2;
cljs.core._GT__EQ_ = function cljs$core$_GT__EQ_(var_args) {
  var G__13150 = arguments.length;
  switch(G__13150) {
    case 1:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13152 = arguments.length;
      var i__4737__auto___13153 = 0;
      while (true) {
        if (i__4737__auto___13153 < len__4736__auto___13152) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13153]);
          var G__13154 = i__4737__auto___13153 + 1;
          i__4737__auto___13153 = G__13154;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x >= y;
};
cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x >= y) {
      if (cljs.core.next(more)) {
        var G__13155 = y;
        var G__13156 = cljs.core.first(more);
        var G__13157 = cljs.core.next(more);
        x = G__13155;
        y = G__13156;
        more = G__13157;
        continue;
      } else {
        return y >= cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._GT__EQ_.cljs$lang$applyTo = function(seq13147) {
  var G__13148 = cljs.core.first(seq13147);
  var seq13147__$1 = cljs.core.next(seq13147);
  var G__13149 = cljs.core.first(seq13147__$1);
  var seq13147__$2 = cljs.core.next(seq13147__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13148, G__13149, seq13147__$2);
};
cljs.core._GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.dec = function cljs$core$dec(x) {
  return x - 1;
};
cljs.core.max = function cljs$core$max(var_args) {
  var G__13162 = arguments.length;
  switch(G__13162) {
    case 1:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.max.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13164 = arguments.length;
      var i__4737__auto___13165 = 0;
      while (true) {
        if (i__4737__auto___13165 < len__4736__auto___13164) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13165]);
          var G__13166 = i__4737__auto___13165 + 1;
          i__4737__auto___13165 = G__13166;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.max.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.max.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4214__auto__ = x;
  var y__4215__auto__ = y;
  return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
};
cljs.core.max.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max, function() {
    var x__4214__auto__ = x;
    var y__4215__auto__ = y;
    return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
  }(), more);
};
cljs.core.max.cljs$lang$applyTo = function(seq13159) {
  var G__13160 = cljs.core.first(seq13159);
  var seq13159__$1 = cljs.core.next(seq13159);
  var G__13161 = cljs.core.first(seq13159__$1);
  var seq13159__$2 = cljs.core.next(seq13159__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13160, G__13161, seq13159__$2);
};
cljs.core.max.cljs$lang$maxFixedArity = 2;
cljs.core.min = function cljs$core$min(var_args) {
  var G__13171 = arguments.length;
  switch(G__13171) {
    case 1:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.min.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13173 = arguments.length;
      var i__4737__auto___13174 = 0;
      while (true) {
        if (i__4737__auto___13174 < len__4736__auto___13173) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13174]);
          var G__13175 = i__4737__auto___13174 + 1;
          i__4737__auto___13174 = G__13175;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.min.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.min.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  var x__4217__auto__ = x;
  var y__4218__auto__ = y;
  return x__4217__auto__ < y__4218__auto__ ? x__4217__auto__ : y__4218__auto__;
};
cljs.core.min.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min, function() {
    var x__4217__auto__ = x;
    var y__4218__auto__ = y;
    return x__4217__auto__ < y__4218__auto__ ? x__4217__auto__ : y__4218__auto__;
  }(), more);
};
cljs.core.min.cljs$lang$applyTo = function(seq13168) {
  var G__13169 = cljs.core.first(seq13168);
  var seq13168__$1 = cljs.core.next(seq13168);
  var G__13170 = cljs.core.first(seq13168__$1);
  var seq13168__$2 = cljs.core.next(seq13168__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13169, G__13170, seq13168__$2);
};
cljs.core.min.cljs$lang$maxFixedArity = 2;
cljs.core.byte$ = function cljs$core$byte(x) {
  return x;
};
cljs.core.char$ = function cljs$core$char(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function cljs$core$short(x) {
  return x;
};
cljs.core.float$ = function cljs$core$float(x) {
  return x;
};
cljs.core.double$ = function cljs$core$double(x) {
  return x;
};
cljs.core.unchecked_byte = function cljs$core$unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function cljs$core$unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function cljs$core$unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function cljs$core$unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function cljs$core$unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function cljs$core$unchecked_add(var_args) {
  var G__13180 = arguments.length;
  switch(G__13180) {
    case 0:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13182 = arguments.length;
      var i__4737__auto___13183 = 0;
      while (true) {
        if (i__4737__auto___13183 < len__4736__auto___13182) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13183]);
          var G__13184 = i__4737__auto___13183 + 1;
          i__4737__auto___13183 = G__13184;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add, x + y, more);
};
cljs.core.unchecked_add.cljs$lang$applyTo = function(seq13177) {
  var G__13178 = cljs.core.first(seq13177);
  var seq13177__$1 = cljs.core.next(seq13177);
  var G__13179 = cljs.core.first(seq13177__$1);
  var seq13177__$2 = cljs.core.next(seq13177__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13178, G__13179, seq13177__$2);
};
cljs.core.unchecked_add.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_add_int = function cljs$core$unchecked_add_int(var_args) {
  var G__13189 = arguments.length;
  switch(G__13189) {
    case 0:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13191 = arguments.length;
      var i__4737__auto___13192 = 0;
      while (true) {
        if (i__4737__auto___13192 < len__4736__auto___13191) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13192]);
          var G__13193 = i__4737__auto___13192 + 1;
          i__4737__auto___13192 = G__13193;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 0;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x + y;
};
cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int, x + y, more);
};
cljs.core.unchecked_add_int.cljs$lang$applyTo = function(seq13186) {
  var G__13187 = cljs.core.first(seq13186);
  var seq13186__$1 = cljs.core.next(seq13186);
  var G__13188 = cljs.core.first(seq13186__$1);
  var seq13186__$2 = cljs.core.next(seq13186__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13187, G__13188, seq13186__$2);
};
cljs.core.unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_dec = function cljs$core$unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function cljs$core$unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function cljs$core$unchecked_divide_int(var_args) {
  var G__13198 = arguments.length;
  switch(G__13198) {
    case 1:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13200 = arguments.length;
      var i__4737__auto___13201 = 0;
      while (true) {
        if (i__4737__auto___13201 < len__4736__auto___13200) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13201]);
          var G__13202 = i__4737__auto___13201 + 1;
          i__4737__auto___13201 = G__13202;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return 1 / x;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x / y;
};
cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int, x / y, more);
};
cljs.core.unchecked_divide_int.cljs$lang$applyTo = function(seq13195) {
  var G__13196 = cljs.core.first(seq13195);
  var seq13195__$1 = cljs.core.next(seq13195);
  var G__13197 = cljs.core.first(seq13195__$1);
  var seq13195__$2 = cljs.core.next(seq13195__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13196, G__13197, seq13195__$2);
};
cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_inc = function cljs$core$unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function cljs$core$unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function cljs$core$unchecked_multiply(var_args) {
  var G__13207 = arguments.length;
  switch(G__13207) {
    case 0:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13209 = arguments.length;
      var i__4737__auto___13210 = 0;
      while (true) {
        if (i__4737__auto___13210 < len__4736__auto___13209) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13210]);
          var G__13211 = i__4737__auto___13210 + 1;
          i__4737__auto___13210 = G__13211;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply, x * y, more);
};
cljs.core.unchecked_multiply.cljs$lang$applyTo = function(seq13204) {
  var G__13205 = cljs.core.first(seq13204);
  var seq13204__$1 = cljs.core.next(seq13204);
  var G__13206 = cljs.core.first(seq13204__$1);
  var seq13204__$2 = cljs.core.next(seq13204__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13205, G__13206, seq13204__$2);
};
cljs.core.unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_multiply_int = function cljs$core$unchecked_multiply_int(var_args) {
  var G__13216 = arguments.length;
  switch(G__13216) {
    case 0:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13218 = arguments.length;
      var i__4737__auto___13219 = 0;
      while (true) {
        if (i__4737__auto___13219 < len__4736__auto___13218) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13219]);
          var G__13220 = i__4737__auto___13219 + 1;
          i__4737__auto___13219 = G__13220;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = function() {
  return 1;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return x;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x * y;
};
cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int, x * y, more);
};
cljs.core.unchecked_multiply_int.cljs$lang$applyTo = function(seq13213) {
  var G__13214 = cljs.core.first(seq13213);
  var seq13213__$1 = cljs.core.next(seq13213);
  var G__13215 = cljs.core.first(seq13213__$1);
  var seq13213__$2 = cljs.core.next(seq13213__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13214, G__13215, seq13213__$2);
};
cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_negate = function cljs$core$unchecked_negate(x) {
  return -x;
};
cljs.core.unchecked_negate_int = function cljs$core$unchecked_negate_int(x) {
  return -x;
};
cljs.core.unchecked_remainder_int = function cljs$core$unchecked_remainder_int(x, n) {
  return cljs.core.mod(x, n);
};
cljs.core.unchecked_subtract = function cljs$core$unchecked_subtract(var_args) {
  var G__13225 = arguments.length;
  switch(G__13225) {
    case 1:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13227 = arguments.length;
      var i__4737__auto___13228 = 0;
      while (true) {
        if (i__4737__auto___13228 < len__4736__auto___13227) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13228]);
          var G__13229 = i__4737__auto___13228 + 1;
          i__4737__auto___13228 = G__13229;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract, x - y, more);
};
cljs.core.unchecked_subtract.cljs$lang$applyTo = function(seq13222) {
  var G__13223 = cljs.core.first(seq13222);
  var seq13222__$1 = cljs.core.next(seq13222);
  var G__13224 = cljs.core.first(seq13222__$1);
  var seq13222__$2 = cljs.core.next(seq13222__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13223, G__13224, seq13222__$2);
};
cljs.core.unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs.core.unchecked_subtract_int = function cljs$core$unchecked_subtract_int(var_args) {
  var G__13234 = arguments.length;
  switch(G__13234) {
    case 1:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13236 = arguments.length;
      var i__4737__auto___13237 = 0;
      while (true) {
        if (i__4737__auto___13237 < len__4736__auto___13236) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13237]);
          var G__13238 = i__4737__auto___13237 + 1;
          i__4737__auto___13237 = G__13238;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return -x;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x - y;
};
cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int, x - y, more);
};
cljs.core.unchecked_subtract_int.cljs$lang$applyTo = function(seq13231) {
  var G__13232 = cljs.core.first(seq13231);
  var seq13231__$1 = cljs.core.next(seq13231);
  var G__13233 = cljs.core.first(seq13231__$1);
  var seq13231__$2 = cljs.core.next(seq13231__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13232, G__13233, seq13231__$2);
};
cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs.core.fix = function cljs$core$fix(q) {
  if (q >= 0) {
    return Math.floor(q);
  } else {
    return Math.ceil(q);
  }
};
cljs.core.int$ = function cljs$core$int(x) {
  return x | 0;
};
cljs.core.unchecked_int = function cljs$core$unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function cljs$core$long(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function cljs$core$unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function cljs$core$booleans(x) {
  return x;
};
cljs.core.bytes = function cljs$core$bytes(x) {
  return x;
};
cljs.core.chars = function cljs$core$chars(x) {
  return x;
};
cljs.core.shorts = function cljs$core$shorts(x) {
  return x;
};
cljs.core.ints = function cljs$core$ints(x) {
  return x;
};
cljs.core.floats = function cljs$core$floats(x) {
  return x;
};
cljs.core.doubles = function cljs$core$doubles(x) {
  return x;
};
cljs.core.longs = function cljs$core$longs(x) {
  return x;
};
cljs.core.js_mod = function cljs$core$js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function cljs$core$mod(n, d) {
  return (n % d + d) % d;
};
cljs.core.quot = function cljs$core$quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function cljs$core$rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function cljs$core$bit_xor(var_args) {
  var G__13243 = arguments.length;
  switch(G__13243) {
    case 2:
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13245 = arguments.length;
      var i__4737__auto___13246 = 0;
      while (true) {
        if (i__4737__auto___13246 < len__4736__auto___13245) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13246]);
          var G__13247 = i__4737__auto___13246 + 1;
          i__4737__auto___13246 = G__13247;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x ^ y;
};
cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor, x ^ y, more);
};
cljs.core.bit_xor.cljs$lang$applyTo = function(seq13240) {
  var G__13241 = cljs.core.first(seq13240);
  var seq13240__$1 = cljs.core.next(seq13240);
  var G__13242 = cljs.core.first(seq13240__$1);
  var seq13240__$2 = cljs.core.next(seq13240__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13241, G__13242, seq13240__$2);
};
cljs.core.bit_xor.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and = function cljs$core$bit_and(var_args) {
  var G__13252 = arguments.length;
  switch(G__13252) {
    case 2:
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13254 = arguments.length;
      var i__4737__auto___13255 = 0;
      while (true) {
        if (i__4737__auto___13255 < len__4736__auto___13254) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13255]);
          var G__13256 = i__4737__auto___13255 + 1;
          i__4737__auto___13255 = G__13256;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & y;
};
cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and, x & y, more);
};
cljs.core.bit_and.cljs$lang$applyTo = function(seq13249) {
  var G__13250 = cljs.core.first(seq13249);
  var seq13249__$1 = cljs.core.next(seq13249);
  var G__13251 = cljs.core.first(seq13249__$1);
  var seq13249__$2 = cljs.core.next(seq13249__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13250, G__13251, seq13249__$2);
};
cljs.core.bit_and.cljs$lang$maxFixedArity = 2;
cljs.core.bit_or = function cljs$core$bit_or(var_args) {
  var G__13261 = arguments.length;
  switch(G__13261) {
    case 2:
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13263 = arguments.length;
      var i__4737__auto___13264 = 0;
      while (true) {
        if (i__4737__auto___13264 < len__4736__auto___13263) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13264]);
          var G__13265 = i__4737__auto___13264 + 1;
          i__4737__auto___13264 = G__13265;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x | y;
};
cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or, x | y, more);
};
cljs.core.bit_or.cljs$lang$applyTo = function(seq13258) {
  var G__13259 = cljs.core.first(seq13258);
  var seq13258__$1 = cljs.core.next(seq13258);
  var G__13260 = cljs.core.first(seq13258__$1);
  var seq13258__$2 = cljs.core.next(seq13258__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13259, G__13260, seq13258__$2);
};
cljs.core.bit_or.cljs$lang$maxFixedArity = 2;
cljs.core.bit_and_not = function cljs$core$bit_and_not(var_args) {
  var G__13270 = arguments.length;
  switch(G__13270) {
    case 2:
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13272 = arguments.length;
      var i__4737__auto___13273 = 0;
      while (true) {
        if (i__4737__auto___13273 < len__4736__auto___13272) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13273]);
          var G__13274 = i__4737__auto___13273 + 1;
          i__4737__auto___13273 = G__13274;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return x & ~y;
};
cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not, x & ~y, more);
};
cljs.core.bit_and_not.cljs$lang$applyTo = function(seq13267) {
  var G__13268 = cljs.core.first(seq13267);
  var seq13267__$1 = cljs.core.next(seq13267);
  var G__13269 = cljs.core.first(seq13267__$1);
  var seq13267__$2 = cljs.core.next(seq13267__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13268, G__13269, seq13267__$2);
};
cljs.core.bit_and_not.cljs$lang$maxFixedArity = 2;
cljs.core.bit_clear = function cljs$core$bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function cljs$core$bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function cljs$core$bit_not(x) {
  return ~x;
};
cljs.core.bit_set = function cljs$core$bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function cljs$core$bit_test(x, n) {
  return (x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function cljs$core$bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function cljs$core$bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function cljs$core$bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function cljs$core$unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function cljs$core$bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return (v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function cljs$core$_EQ__EQ_(var_args) {
  var G__13279 = arguments.length;
  switch(G__13279) {
    case 1:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13281 = arguments.length;
      var i__4737__auto___13282 = 0;
      while (true) {
        if (i__4737__auto___13282 < len__4736__auto___13281) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13282]);
          var G__13283 = i__4737__auto___13282 + 1;
          i__4737__auto___13282 = G__13283;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return true;
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return cljs.core._equiv(x, y);
};
cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  while (true) {
    if (x === y) {
      if (cljs.core.next(more)) {
        var G__13284 = y;
        var G__13285 = cljs.core.first(more);
        var G__13286 = cljs.core.next(more);
        x = G__13284;
        y = G__13285;
        more = G__13286;
        continue;
      } else {
        return y === cljs.core.first(more);
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core._EQ__EQ_.cljs$lang$applyTo = function(seq13276) {
  var G__13277 = cljs.core.first(seq13276);
  var seq13276__$1 = cljs.core.next(seq13276);
  var G__13278 = cljs.core.first(seq13276__$1);
  var seq13276__$2 = cljs.core.next(seq13276__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13277, G__13278, seq13276__$2);
};
cljs.core._EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.pos_QMARK_ = function cljs$core$pos_QMARK_(x) {
  return x > 0;
};
cljs.core.zero_QMARK_ = function cljs$core$zero_QMARK_(x) {
  return x === 0;
};
cljs.core.neg_QMARK_ = function cljs$core$neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function cljs$core$nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__13287 = n__$1 - 1;
      var G__13288 = cljs.core.next(xs);
      n__$1 = G__13287;
      xs = G__13288;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function cljs$core$str(var_args) {
  var G__13292 = arguments.length;
  switch(G__13292) {
    case 0:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13294 = arguments.length;
      var i__4737__auto___13295 = 0;
      while (true) {
        if (i__4737__auto___13295 < len__4736__auto___13294) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13295]);
          var G__13296 = i__4737__auto___13295 + 1;
          i__4737__auto___13295 = G__13296;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.str.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$0 = function() {
  return "";
};
cljs.core.str.cljs$core$IFn$_invoke$arity$1 = function(x) {
  if (x == null) {
    return "";
  } else {
    return [x].join("");
  }
};
cljs.core.str.cljs$core$IFn$_invoke$arity$variadic = function(x, ys) {
  var sb = new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x));
  var more = ys;
  while (true) {
    if (cljs.core.truth_(more)) {
      var G__13297 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
      var G__13298 = cljs.core.next(more);
      sb = G__13297;
      more = G__13298;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
cljs.core.str.cljs$lang$applyTo = function(seq13290) {
  var G__13291 = cljs.core.first(seq13290);
  var seq13290__$1 = cljs.core.next(seq13290);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13291, seq13290__$1);
};
cljs.core.str.cljs$lang$maxFixedArity = 1;
cljs.core.subs = function cljs$core$subs(var_args) {
  var G__13300 = arguments.length;
  switch(G__13300) {
    case 2:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subs.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$2 = function(s, start) {
  return s.substring(start);
};
cljs.core.subs.cljs$core$IFn$_invoke$arity$3 = function(s, start, end) {
  return s.substring(start, end);
};
cljs.core.subs.cljs$lang$maxFixedArity = 3;
cljs.core.equiv_sequential = function cljs$core$equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__13302 = cljs.core.next(xs);
            var G__13303 = cljs.core.next(ys);
            xs = G__13302;
            ys = G__13303;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function cljs$core$hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__13304 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__13305 = cljs.core.next(s);
        res = G__13304;
        s = G__13305;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function cljs$core$hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__13306 = (h + (cljs.core.hash(cljs.core.key(e)) ^ cljs.core.hash(cljs.core.val(e)))) % 4503599627370496;
      var G__13307 = cljs.core.next(s);
      h = G__13306;
      s = G__13307;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function cljs$core$hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__13308 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__13309 = cljs.core.next(s__$1);
      h = G__13308;
      s__$1 = G__13309;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function cljs$core$extend_object_BANG_(obj, fn_map) {
  var seq__13310_13326 = cljs.core.seq(fn_map);
  var chunk__13311_13327 = null;
  var count__13312_13328 = 0;
  var i__13313_13329 = 0;
  while (true) {
    if (i__13313_13329 < count__13312_13328) {
      var vec__13320_13330 = chunk__13311_13327.cljs$core$IIndexed$_nth$arity$2(null, i__13313_13329);
      var key_name_13331 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13320_13330, 0, null);
      var f_13332 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13320_13330, 1, null);
      var str_name_13333 = cljs.core.name(key_name_13331);
      goog.object.set(obj, str_name_13333, f_13332);
      var G__13334 = seq__13310_13326;
      var G__13335 = chunk__13311_13327;
      var G__13336 = count__13312_13328;
      var G__13337 = i__13313_13329 + 1;
      seq__13310_13326 = G__13334;
      chunk__13311_13327 = G__13335;
      count__13312_13328 = G__13336;
      i__13313_13329 = G__13337;
      continue;
    } else {
      var temp__5735__auto___13338 = cljs.core.seq(seq__13310_13326);
      if (temp__5735__auto___13338) {
        var seq__13310_13339__$1 = temp__5735__auto___13338;
        if (cljs.core.chunked_seq_QMARK_(seq__13310_13339__$1)) {
          var c__4556__auto___13340 = cljs.core.chunk_first(seq__13310_13339__$1);
          var G__13341 = cljs.core.chunk_rest(seq__13310_13339__$1);
          var G__13342 = c__4556__auto___13340;
          var G__13343 = cljs.core.count(c__4556__auto___13340);
          var G__13344 = 0;
          seq__13310_13326 = G__13341;
          chunk__13311_13327 = G__13342;
          count__13312_13328 = G__13343;
          i__13313_13329 = G__13344;
          continue;
        } else {
          var vec__13323_13345 = cljs.core.first(seq__13310_13339__$1);
          var key_name_13346 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13323_13345, 0, null);
          var f_13347 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13323_13345, 1, null);
          var str_name_13348 = cljs.core.name(key_name_13346);
          goog.object.set(obj, str_name_13348, f_13347);
          var G__13349 = cljs.core.next(seq__13310_13339__$1);
          var G__13350 = null;
          var G__13351 = 0;
          var G__13352 = 0;
          seq__13310_13326 = G__13349;
          chunk__13311_13327 = G__13350;
          count__13312_13328 = G__13351;
          i__13313_13329 = G__13352;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.indexOf = function() {
  var G__13353 = null;
  var G__13353__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13353__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13353 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13353__1.call(this, x);
      case 2:
        return G__13353__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13353.cljs$core$IFn$_invoke$arity$1 = G__13353__1;
  G__13353.cljs$core$IFn$_invoke$arity$2 = G__13353__2;
  return G__13353;
}();
cljs.core.List.prototype.lastIndexOf = function() {
  var G__13354 = null;
  var G__13354__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__13354__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13354 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13354__1.call(this, x);
      case 2:
        return G__13354__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13354.cljs$core$IFn$_invoke$arity$1 = G__13354__1;
  G__13354.cljs$core$IFn$_invoke$arity$2 = G__13354__2;
  return G__13354;
}();
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.List(new_meta, self__.first, self__.rest, self__.count, self__.__hash);
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function cljs$core$__GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.list_QMARK_ = function cljs$core$list_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 33554432 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IList$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, x);
  }
};
goog.object.set(cljs.core.List.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.indexOf = function() {
  var G__13356 = null;
  var G__13356__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13356__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13356 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13356__1.call(this, x);
      case 2:
        return G__13356__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13356.cljs$core$IFn$_invoke$arity$1 = G__13356__1;
  G__13356.cljs$core$IFn$_invoke$arity$2 = G__13356__2;
  return G__13356;
}();
cljs.core.EmptyList.prototype.lastIndexOf = function() {
  var G__13357 = null;
  var G__13357__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13357__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13357 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13357__1.call(this, x);
      case 2:
        return G__13357__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13357.cljs$core$IFn$_invoke$arity$1 = G__13357__1;
  G__13357.cljs$core$IFn$_invoke$arity$2 = G__13357__2;
  return G__13357;
}();
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.list_QMARK_(other) || cljs.core.sequential_QMARK_(other)) {
    return cljs.core.seq(other) == null;
  } else {
    return false;
  }
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.EmptyList(new_meta);
  }
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null)], null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function cljs$core$__GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
goog.object.set(cljs.core.EmptyList.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.reversible_QMARK_ = function cljs$core$reversible_QMARK_(coll) {
  if (!(coll == null)) {
    if (coll.cljs$lang$protocol_mask$partition0$ & 134217728 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$IReversible$) {
      return true;
    } else {
      if (!coll.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, coll);
  }
};
cljs.core.rseq = function cljs$core$rseq(rev) {
  return cljs.core._rseq(rev);
};
cljs.core.reverse = function cljs$core$reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    var or__4126__auto__ = cljs.core.rseq(coll);
    if (or__4126__auto__) {
      return or__4126__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function cljs$core$list(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___13360 = arguments.length;
  var i__4737__auto___13361 = 0;
  while (true) {
    if (i__4737__auto___13361 < len__4736__auto___13360) {
      args__4742__auto__.push(arguments[i__4737__auto___13361]);
      var G__13362 = i__4737__auto___13361 + 1;
      i__4737__auto___13361 = G__13362;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.list.cljs$core$IFn$_invoke$arity$variadic = function(xs) {
  var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
    var arr = [];
    var xs__$1 = xs;
    while (true) {
      if (!(xs__$1 == null)) {
        arr.push(cljs.core._first(xs__$1));
        var G__13363 = cljs.core._next(xs__$1);
        xs__$1 = G__13363;
        continue;
      } else {
        return arr;
      }
      break;
    }
  }();
  var i = arr.length;
  var r = cljs.core.List.EMPTY;
  while (true) {
    if (i > 0) {
      var G__13364 = i - 1;
      var G__13365 = cljs.core._conj(r, arr[i - 1]);
      i = G__13364;
      r = G__13365;
      continue;
    } else {
      return r;
    }
    break;
  }
};
cljs.core.list.cljs$lang$maxFixedArity = 0;
cljs.core.list.cljs$lang$applyTo = function(seq13359) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq13359));
};
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.indexOf = function() {
  var G__13366 = null;
  var G__13366__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13366__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13366 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13366__1.call(this, x);
      case 2:
        return G__13366__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13366.cljs$core$IFn$_invoke$arity$1 = G__13366__1;
  G__13366.cljs$core$IFn$_invoke$arity$2 = G__13366__2;
  return G__13366;
}();
cljs.core.Cons.prototype.lastIndexOf = function() {
  var G__13367 = null;
  var G__13367__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13367__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13367 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13367__1.call(this, x);
      case 2:
        return G__13367__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13367.cljs$core$IFn$_invoke$arity$1 = G__13367__1;
  G__13367.cljs$core$IFn$_invoke$arity$2 = G__13367__2;
  return G__13367;
}();
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cons(new_meta, self__.first, self__.rest, self__.__hash);
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, null);
};
cljs.core.Cons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "first", "first", 996428481, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function cljs$core$__GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
goog.object.set(cljs.core.Cons.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.cons = function cljs$core$cons(x, coll) {
  if (coll == null) {
    return new cljs.core.List(null, x, null, 1, null);
  } else {
    if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$ISeq$ ? true : false : false) {
      return new cljs.core.Cons(null, x, coll, null);
    } else {
      return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
    }
  }
};
cljs.core.hash_keyword = function cljs$core$hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function cljs$core$compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(cljs.core.not(a.ns) ? b.ns : false)) {
      return -1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = goog.array.defaultCompare(a.ns, b.ns);
          if (0 === nsc) {
            return goog.array.defaultCompare(a.name, b.name);
          } else {
            return nsc;
          }
        }
      } else {
        return goog.array.defaultCompare(a.name, b.name);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__13370 = null;
  var G__13370__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__13370__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__13370 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13370__2.call(this, self__, coll);
      case 3:
        return G__13370__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__13370.cljs$core$IFn$_invoke$arity$2 = G__13370__2;
  G__13370.cljs$core$IFn$_invoke$arity$3 = G__13370__3;
  return G__13370;
}();
cljs.core.Keyword.prototype.apply = function(self__, args13369) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13369)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4238__auto__ = self__._hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(""));
};
cljs.core.Keyword.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "fqn", "fqn", -1749334463, null), cljs.core.with_meta(new cljs.core.Symbol(null, "_hash", "_hash", -2130838312, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function cljs$core$__GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function cljs$core$keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function cljs$core$keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.symbol_identical_QMARK_ = function cljs$core$symbol_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Symbol && y instanceof cljs.core.Symbol) {
      return x.str === y.str;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function cljs$core$namespace(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error(["Doesn't support namespace: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
  }
};
cljs.core.ident_QMARK_ = function cljs$core$ident_QMARK_(x) {
  return x instanceof cljs.core.Keyword || x instanceof cljs.core.Symbol;
};
cljs.core.simple_ident_QMARK_ = function cljs$core$simple_ident_QMARK_(x) {
  return cljs.core.ident_QMARK_(x) && cljs.core.namespace(x) == null;
};
cljs.core.qualified_ident_QMARK_ = function cljs$core$qualified_ident_QMARK_(x) {
  return cljs.core.boolean$(cljs.core.ident_QMARK_(x) ? function() {
    var and__4115__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__4115__auto__)) {
      return true;
    } else {
      return and__4115__auto__;
    }
  }() : false);
};
cljs.core.simple_symbol_QMARK_ = function cljs$core$simple_symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol && cljs.core.namespace(x) == null;
};
cljs.core.qualified_symbol_QMARK_ = function cljs$core$qualified_symbol_QMARK_(x) {
  return cljs.core.boolean$(x instanceof cljs.core.Symbol ? function() {
    var and__4115__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__4115__auto__)) {
      return true;
    } else {
      return and__4115__auto__;
    }
  }() : false);
};
cljs.core.simple_keyword_QMARK_ = function cljs$core$simple_keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword && cljs.core.namespace(x) == null;
};
cljs.core.qualified_keyword_QMARK_ = function cljs$core$qualified_keyword_QMARK_(x) {
  return cljs.core.boolean$(x instanceof cljs.core.Keyword ? function() {
    var and__4115__auto__ = cljs.core.namespace(x);
    if (cljs.core.truth_(and__4115__auto__)) {
      return true;
    } else {
      return and__4115__auto__;
    }
  }() : false);
};
cljs.core.keyword = function cljs$core$keyword(var_args) {
  var G__13373 = arguments.length;
  switch(G__13373) {
    case 1:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 = function(name) {
  if (name instanceof cljs.core.Keyword) {
    return name;
  } else {
    if (name instanceof cljs.core.Symbol) {
      return new cljs.core.Keyword(cljs.core.namespace(name), cljs.core.name(name), name.str, null);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2("/", name)) {
        return new cljs.core.Keyword(null, name, name, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 = function(ns, name) {
  var ns__$1 = ns instanceof cljs.core.Keyword ? cljs.core.name(ns) : ns instanceof cljs.core.Symbol ? cljs.core.name(ns) : ns;
  var name__$1 = name instanceof cljs.core.Keyword ? cljs.core.name(name) : name instanceof cljs.core.Symbol ? cljs.core.name(name) : name;
  return new cljs.core.Keyword(ns__$1, name__$1, [cljs.core.truth_(ns__$1) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1), "/"].join("") : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(""), null);
};
cljs.core.keyword.cljs$lang$maxFixedArity = 2;
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.indexOf = function() {
  var G__13375 = null;
  var G__13375__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13375__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13375 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13375__1.call(this, x);
      case 2:
        return G__13375__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13375.cljs$core$IFn$_invoke$arity$1 = G__13375__1;
  G__13375.cljs$core$IFn$_invoke$arity$2 = G__13375__2;
  return G__13375;
}();
cljs.core.LazySeq.prototype.lastIndexOf = function() {
  var G__13376 = null;
  var G__13376__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13376__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13376 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13376__1.call(this, x);
      case 2:
        return G__13376__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13376.cljs$core$IFn$_invoke$arity$1 = G__13376__1;
  G__13376.cljs$core$IFn$_invoke$arity$2 = G__13376__2;
  return G__13376;
}();
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.not(self__.fn);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__13377 = ls.sval();
        ls = G__13377;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.LazySeq(new_meta, function() {
      return coll__$1.cljs$core$ISeqable$_seq$arity$1(null);
    }, null, self__.__hash);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function cljs$core$__GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
goog.object.set(cljs.core.LazySeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 2;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buf", "buf", 1426618187, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function cljs$core$__GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function cljs$core$chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function cljs$core$__GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function cljs$core$array_chunk(var_args) {
  var G__13379 = arguments.length;
  switch(G__13379) {
    case 1:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 = function(arr) {
  return new cljs.core.ArrayChunk(arr, 0, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 = function(arr, off) {
  return new cljs.core.ArrayChunk(arr, off, arr.length);
};
cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 = function(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk.cljs$lang$maxFixedArity = 3;
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.indexOf = function() {
  var G__13381 = null;
  var G__13381__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13381__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13381 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13381__1.call(this, x);
      case 2:
        return G__13381__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13381.cljs$core$IFn$_invoke$arity$1 = G__13381__1;
  G__13381.cljs$core$IFn$_invoke$arity$2 = G__13381__2;
  return G__13381;
}();
cljs.core.ChunkedCons.prototype.lastIndexOf = function() {
  var G__13382 = null;
  var G__13382__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__13382__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13382 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13382__1.call(this, x);
      case 2:
        return G__13382__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13382.cljs$core$IFn$_invoke$arity$1 = G__13382__1;
  G__13382.cljs$core$IFn$_invoke$arity$2 = G__13382__2;
  return G__13382;
}();
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return null;
    } else {
      return cljs.core._seq(self__.more);
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, null, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ChunkedCons(self__.chunk, self__.more, new_meta, self__.__hash);
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.Symbol(null, "more", "more", -418290273, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function cljs$core$__GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
goog.object.set(cljs.core.ChunkedCons.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.chunk_cons = function cljs$core$chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function cljs$core$chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function cljs$core$chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function cljs$core$chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function cljs$core$chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function cljs$core$chunk_next(s) {
  if (!(s == null) ? s.cljs$lang$protocol_mask$partition1$ & 1024 || cljs.core.PROTOCOL_SENTINEL === s.cljs$core$IChunkedNext$ ? true : false : false) {
    return s.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function cljs$core$to_array(coll) {
  var ary = [];
  var s = cljs.core.seq(coll);
  while (true) {
    if (!(s == null)) {
      ary.push(cljs.core.first(s));
      var G__13384 = cljs.core.next(s);
      s = G__13384;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function cljs$core$to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_13385 = 0;
  var xs_13386 = cljs.core.seq(coll);
  while (true) {
    if (xs_13386 == null) {
    } else {
      ret[i_13385] = cljs.core.to_array(cljs.core.first(xs_13386));
      var G__13387 = i_13385 + 1;
      var G__13388 = cljs.core.next(xs_13386);
      i_13385 = G__13387;
      xs_13386 = G__13388;
      continue;
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function cljs$core$int_array(var_args) {
  var G__13390 = arguments.length;
  switch(G__13390) {
    case 1:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__13392 = i + 1;
        var G__13393 = cljs.core.next(s__$1);
        i = G__13392;
        s__$1 = G__13393;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4613__auto___13394 = size;
    var i_13395 = 0;
    while (true) {
      if (i_13395 < n__4613__auto___13394) {
        a[i_13395] = init_val_or_seq;
        var G__13396 = i_13395 + 1;
        i_13395 = G__13396;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.int_array.cljs$lang$maxFixedArity = 2;
cljs.core.long_array = function cljs$core$long_array(var_args) {
  var G__13398 = arguments.length;
  switch(G__13398) {
    case 1:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__13400 = i + 1;
        var G__13401 = cljs.core.next(s__$1);
        i = G__13400;
        s__$1 = G__13401;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4613__auto___13402 = size;
    var i_13403 = 0;
    while (true) {
      if (i_13403 < n__4613__auto___13402) {
        a[i_13403] = init_val_or_seq;
        var G__13404 = i_13403 + 1;
        i_13403 = G__13404;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.long_array.cljs$lang$maxFixedArity = 2;
cljs.core.double_array = function cljs$core$double_array(var_args) {
  var G__13406 = arguments.length;
  switch(G__13406) {
    case 1:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__13408 = i + 1;
        var G__13409 = cljs.core.next(s__$1);
        i = G__13408;
        s__$1 = G__13409;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4613__auto___13410 = size;
    var i_13411 = 0;
    while (true) {
      if (i_13411 < n__4613__auto___13410) {
        a[i_13411] = init_val_or_seq;
        var G__13412 = i_13411 + 1;
        i_13411 = G__13412;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.double_array.cljs$lang$maxFixedArity = 2;
cljs.core.object_array = function cljs$core$object_array(var_args) {
  var G__13414 = arguments.length;
  switch(G__13414) {
    case 1:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 = function(size_or_seq) {
  if (typeof size_or_seq === "number") {
    return cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
  } else {
    return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
  }
};
cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 = function(size, init_val_or_seq) {
  var a = new Array(size);
  if (cljs.core.seq_QMARK_(init_val_or_seq)) {
    var s = cljs.core.seq(init_val_or_seq);
    var i = 0;
    var s__$1 = s;
    while (true) {
      if (s__$1 && i < size) {
        a[i] = cljs.core.first(s__$1);
        var G__13416 = i + 1;
        var G__13417 = cljs.core.next(s__$1);
        i = G__13416;
        s__$1 = G__13417;
        continue;
      } else {
        return a;
      }
      break;
    }
  } else {
    var n__4613__auto___13418 = size;
    var i_13419 = 0;
    while (true) {
      if (i_13419 < n__4613__auto___13418) {
        a[i_13419] = init_val_or_seq;
        var G__13420 = i_13419 + 1;
        i_13419 = G__13420;
        continue;
      } else {
      }
      break;
    }
    return a;
  }
};
cljs.core.object_array.cljs$lang$maxFixedArity = 2;
cljs.core.bounded_count = function cljs$core$bounded_count(n, coll) {
  if (cljs.core.counted_QMARK_(coll)) {
    return cljs.core.count(coll);
  } else {
    var i = 0;
    var s = cljs.core.seq(coll);
    while (true) {
      if (!(s == null) && i < n) {
        var G__13421 = i + 1;
        var G__13422 = cljs.core.next(s);
        i = G__13421;
        s = G__13422;
        continue;
      } else {
        return i;
      }
      break;
    }
  }
};
cljs.core.spread = function cljs$core$spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    var n = cljs.core.next(arglist);
    if (n == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null, n));
    }
  }
};
cljs.core.concat = function cljs$core$concat(var_args) {
  var G__13427 = arguments.length;
  switch(G__13427) {
    case 0:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13429 = arguments.length;
      var i__4737__auto___13430 = 0;
      while (true) {
        if (i__4737__auto___13430 < len__4736__auto___13429) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13430]);
          var G__13431 = i__4737__auto___13430 + 1;
          i__4737__auto___13430 = G__13431;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$0 = function() {
  return new cljs.core.LazySeq(null, function() {
    return null;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.LazySeq(null, function() {
    return x;
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return new cljs.core.LazySeq(null, function() {
    var s = cljs.core.seq(x);
    if (s) {
      if (cljs.core.chunked_seq_QMARK_(s)) {
        return cljs.core.chunk_cons(cljs.core.chunk_first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
      } else {
        return cljs.core.cons(cljs.core.first(s), cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
      }
    } else {
      return y;
    }
  }, null, null);
};
cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic = function(x, y, zs) {
  var cat = function cljs$core$cat(xys, zs__$1) {
    return new cljs.core.LazySeq(null, function() {
      var xys__$1 = cljs.core.seq(xys);
      if (xys__$1) {
        if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cljs$core$cat(cljs.core.chunk_rest(xys__$1), zs__$1));
        } else {
          return cljs.core.cons(cljs.core.first(xys__$1), cljs$core$cat(cljs.core.rest(xys__$1), zs__$1));
        }
      } else {
        if (cljs.core.truth_(zs__$1)) {
          return cljs$core$cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
};
cljs.core.concat.cljs$lang$applyTo = function(seq13424) {
  var G__13425 = cljs.core.first(seq13424);
  var seq13424__$1 = cljs.core.next(seq13424);
  var G__13426 = cljs.core.first(seq13424__$1);
  var seq13424__$2 = cljs.core.next(seq13424__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13425, G__13426, seq13424__$2);
};
cljs.core.concat.cljs$lang$maxFixedArity = 2;
cljs.core.list_STAR_ = function cljs$core$list_STAR_(var_args) {
  var G__13438 = arguments.length;
  switch(G__13438) {
    case 1:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13440 = arguments.length;
      var i__4737__auto___13441 = 0;
      while (true) {
        if (i__4737__auto___13441 < len__4736__auto___13440) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13441]);
          var G__13442 = i__4737__auto___13441 + 1;
          i__4737__auto___13441 = G__13442;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 = function(args) {
  return cljs.core.seq(args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 = function(a, args) {
  return cljs.core.cons(a, args);
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 = function(a, b, args) {
  return cljs.core.cons(a, cljs.core.cons(b, args));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, args) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
};
cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic = function(a, b, c, d, more) {
  return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
};
cljs.core.list_STAR_.cljs$lang$applyTo = function(seq13433) {
  var G__13434 = cljs.core.first(seq13433);
  var seq13433__$1 = cljs.core.next(seq13433);
  var G__13435 = cljs.core.first(seq13433__$1);
  var seq13433__$2 = cljs.core.next(seq13433__$1);
  var G__13436 = cljs.core.first(seq13433__$2);
  var seq13433__$3 = cljs.core.next(seq13433__$2);
  var G__13437 = cljs.core.first(seq13433__$3);
  var seq13433__$4 = cljs.core.next(seq13433__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13434, G__13435, G__13436, G__13437, seq13433__$4);
};
cljs.core.list_STAR_.cljs$lang$maxFixedArity = 4;
cljs.core.transient$ = function cljs$core$transient(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function cljs$core$persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function cljs$core$conj_BANG_(var_args) {
  var G__13447 = arguments.length;
  switch(G__13447) {
    case 0:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13449 = arguments.length;
      var i__4737__auto___13450 = 0;
      while (true) {
        if (i__4737__auto___13450 < len__4736__auto___13449) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13450]);
          var G__13451 = i__4737__auto___13450 + 1;
          i__4737__auto___13450 = G__13451;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 = function(tcoll) {
  return tcoll;
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._conj_BANG_(tcoll, val);
};
cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._conj_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__13452 = ntcoll;
      var G__13453 = cljs.core.first(vals);
      var G__13454 = cljs.core.next(vals);
      tcoll = G__13452;
      val = G__13453;
      vals = G__13454;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.conj_BANG_.cljs$lang$applyTo = function(seq13444) {
  var G__13445 = cljs.core.first(seq13444);
  var seq13444__$1 = cljs.core.next(seq13444);
  var G__13446 = cljs.core.first(seq13444__$1);
  var seq13444__$2 = cljs.core.next(seq13444__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13445, G__13446, seq13444__$2);
};
cljs.core.conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.assoc_BANG_ = function cljs$core$assoc_BANG_(var_args) {
  var G__13460 = arguments.length;
  switch(G__13460) {
    case 3:
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13462 = arguments.length;
      var i__4737__auto___13463 = 0;
      while (true) {
        if (i__4737__auto___13463 < len__4736__auto___13462) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13463]);
          var G__13464 = i__4737__auto___13463 + 1;
          i__4737__auto___13463 = G__13464;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = function(tcoll, key, val) {
  return cljs.core._assoc_BANG_(tcoll, key, val);
};
cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, val, kvs) {
  while (true) {
    var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
    if (cljs.core.truth_(kvs)) {
      var G__13465 = ntcoll;
      var G__13466 = cljs.core.first(kvs);
      var G__13467 = cljs.core.second(kvs);
      var G__13468 = cljs.core.nnext(kvs);
      tcoll = G__13465;
      key = G__13466;
      val = G__13467;
      kvs = G__13468;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.assoc_BANG_.cljs$lang$applyTo = function(seq13456) {
  var G__13457 = cljs.core.first(seq13456);
  var seq13456__$1 = cljs.core.next(seq13456);
  var G__13458 = cljs.core.first(seq13456__$1);
  var seq13456__$2 = cljs.core.next(seq13456__$1);
  var G__13459 = cljs.core.first(seq13456__$2);
  var seq13456__$3 = cljs.core.next(seq13456__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13457, G__13458, G__13459, seq13456__$3);
};
cljs.core.assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs.core.dissoc_BANG_ = function cljs$core$dissoc_BANG_(var_args) {
  var G__13473 = arguments.length;
  switch(G__13473) {
    case 2:
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13475 = arguments.length;
      var i__4737__auto___13476 = 0;
      while (true) {
        if (i__4737__auto___13476 < len__4736__auto___13475) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13476]);
          var G__13477 = i__4737__auto___13476 + 1;
          i__4737__auto___13476 = G__13477;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, key) {
  return cljs.core._dissoc_BANG_(tcoll, key);
};
cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, key, ks) {
  while (true) {
    var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
    if (cljs.core.truth_(ks)) {
      var G__13478 = ntcoll;
      var G__13479 = cljs.core.first(ks);
      var G__13480 = cljs.core.next(ks);
      tcoll = G__13478;
      key = G__13479;
      ks = G__13480;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.dissoc_BANG_.cljs$lang$applyTo = function(seq13470) {
  var G__13471 = cljs.core.first(seq13470);
  var seq13470__$1 = cljs.core.next(seq13470);
  var G__13472 = cljs.core.first(seq13470__$1);
  var seq13470__$2 = cljs.core.next(seq13470__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13471, G__13472, seq13470__$2);
};
cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.pop_BANG_ = function cljs$core$pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function cljs$core$disj_BANG_(var_args) {
  var G__13485 = arguments.length;
  switch(G__13485) {
    case 2:
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13487 = arguments.length;
      var i__4737__auto___13488 = 0;
      while (true) {
        if (i__4737__auto___13488 < len__4736__auto___13487) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13488]);
          var G__13489 = i__4737__auto___13488 + 1;
          i__4737__auto___13488 = G__13489;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 = function(tcoll, val) {
  return cljs.core._disjoin_BANG_(tcoll, val);
};
cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(tcoll, val, vals) {
  while (true) {
    var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
    if (cljs.core.truth_(vals)) {
      var G__13490 = ntcoll;
      var G__13491 = cljs.core.first(vals);
      var G__13492 = cljs.core.next(vals);
      tcoll = G__13490;
      val = G__13491;
      vals = G__13492;
      continue;
    } else {
      return ntcoll;
    }
    break;
  }
};
cljs.core.disj_BANG_.cljs$lang$applyTo = function(seq13482) {
  var G__13483 = cljs.core.first(seq13482);
  var seq13482__$1 = cljs.core.next(seq13482);
  var G__13484 = cljs.core.first(seq13482__$1);
  var seq13482__$2 = cljs.core.next(seq13482__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13483, G__13484, seq13482__$2);
};
cljs.core.disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.apply_to = function cljs$core$apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a1099 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a1099) : f.call(null, a1099);
    } else {
      var b1100 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a1099, b1100) : f.call(null, a1099, b1100);
      } else {
        var c1101 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a1099, b1100, c1101) : f.call(null, a1099, b1100, c1101);
        } else {
          var d1102 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a1099, b1100, c1101, d1102) : f.call(null, a1099, b1100, c1101, d1102);
          } else {
            var e1103 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a1099, b1100, c1101, d1102, e1103) : f.call(null, a1099, b1100, c1101, d1102, e1103);
            } else {
              var f1104 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a1099, b1100, c1101, d1102, e1103, f1104) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104);
              } else {
                var g1105 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a1099, b1100, c1101, d1102, e1103, f1104, g1105) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105);
                } else {
                  var h1106 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106);
                  } else {
                    var i1107 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107);
                    } else {
                      var j1108 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108);
                      } else {
                        var k1109 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109);
                        } else {
                          var l1110 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110);
                          } else {
                            var m1111 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111);
                            } else {
                              var n1112 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112);
                              } else {
                                var o1113 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113);
                                } else {
                                  var p1114 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114);
                                  } else {
                                    var q1115 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114, q1115) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114, q1115);
                                    } else {
                                      var r1116 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114, q1115, r1116) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114, q1115, r1116);
                                      } else {
                                        var s1117 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114, q1115, r1116, s1117) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114, q1115, r1116, s1117);
                                        } else {
                                          var t1118 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114, q1115, r1116, s1117, t1118) : f.call(null, a1099, b1100, c1101, d1102, e1103, f1104, g1105, h1106, i1107, j1108, k1109, l1110, m1111, n1112, o1113, p1114, q1115, r1116, s1117, t1118);
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.next_STAR_ = function cljs$core$next_STAR_(coll) {
  if (!(coll == null) ? coll.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === coll.cljs$core$INext$ ? true : false : false) {
    return coll.cljs$core$INext$_next$arity$1(null);
  } else {
    return cljs.core.seq(cljs.core.rest(coll));
  }
};
cljs.core.apply_to_simple = function cljs$core$apply_to_simple(var_args) {
  var G__13495 = arguments.length;
  switch(G__13495) {
    case 2:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$0) {
      return f.cljs$core$IFn$_invoke$arity$0();
    } else {
      return f.call(f);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 = function(f, a0, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$1) {
      return f.cljs$core$IFn$_invoke$arity$1(a0);
    } else {
      return f.call(f, a0);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, a0, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 = function(f, a0, a1, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$2) {
      return f.cljs$core$IFn$_invoke$arity$2(a0, a1);
    } else {
      return f.call(f, a0, a1);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, a0, a1, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 = function(f, a0, a1, a2, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$3) {
      return f.cljs$core$IFn$_invoke$arity$3(a0, a1, a2);
    } else {
      return f.call(f, a0, a1, a2);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a0, a1, a2, cljs.core._first(args), cljs.core.next_STAR_(args));
  }
};
cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 = function(f, a0, a1, a2, a3, args) {
  if (args == null) {
    if (f.cljs$core$IFn$_invoke$arity$4) {
      return f.cljs$core$IFn$_invoke$arity$4(a0, a1, a2, a3);
    } else {
      return f.call(f, a0, a1, a2, a3);
    }
  } else {
    var a4 = cljs.core._first(args);
    var next_4 = cljs.core.next(args);
    if (next_4 == null) {
      if (f.cljs$core$IFn$_invoke$arity$5) {
        return f.cljs$core$IFn$_invoke$arity$5(a0, a1, a2, a3, a4);
      } else {
        return f.call(f, a0, a1, a2, a3, a4);
      }
    } else {
      var a5 = cljs.core._first(next_4);
      var next_5 = cljs.core.next(next_4);
      if (next_5 == null) {
        if (f.cljs$core$IFn$_invoke$arity$6) {
          return f.cljs$core$IFn$_invoke$arity$6(a0, a1, a2, a3, a4, a5);
        } else {
          return f.call(f, a0, a1, a2, a3, a4, a5);
        }
      } else {
        var a6 = cljs.core._first(next_5);
        var next_6 = cljs.core.next(next_5);
        if (next_6 == null) {
          if (f.cljs$core$IFn$_invoke$arity$7) {
            return f.cljs$core$IFn$_invoke$arity$7(a0, a1, a2, a3, a4, a5, a6);
          } else {
            return f.call(f, a0, a1, a2, a3, a4, a5, a6);
          }
        } else {
          var a7 = cljs.core._first(next_6);
          var next_7 = cljs.core.next(next_6);
          if (next_7 == null) {
            if (f.cljs$core$IFn$_invoke$arity$8) {
              return f.cljs$core$IFn$_invoke$arity$8(a0, a1, a2, a3, a4, a5, a6, a7);
            } else {
              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7);
            }
          } else {
            var a8 = cljs.core._first(next_7);
            var next_8 = cljs.core.next(next_7);
            if (next_8 == null) {
              if (f.cljs$core$IFn$_invoke$arity$9) {
                return f.cljs$core$IFn$_invoke$arity$9(a0, a1, a2, a3, a4, a5, a6, a7, a8);
              } else {
                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8);
              }
            } else {
              var a9 = cljs.core._first(next_8);
              var next_9 = cljs.core.next(next_8);
              if (next_9 == null) {
                if (f.cljs$core$IFn$_invoke$arity$10) {
                  return f.cljs$core$IFn$_invoke$arity$10(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                } else {
                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
                }
              } else {
                var a10 = cljs.core._first(next_9);
                var next_10 = cljs.core.next(next_9);
                if (next_10 == null) {
                  if (f.cljs$core$IFn$_invoke$arity$11) {
                    return f.cljs$core$IFn$_invoke$arity$11(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  } else {
                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
                  }
                } else {
                  var a11 = cljs.core._first(next_10);
                  var next_11 = cljs.core.next(next_10);
                  if (next_11 == null) {
                    if (f.cljs$core$IFn$_invoke$arity$12) {
                      return f.cljs$core$IFn$_invoke$arity$12(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    } else {
                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
                    }
                  } else {
                    var a12 = cljs.core._first(next_11);
                    var next_12 = cljs.core.next(next_11);
                    if (next_12 == null) {
                      if (f.cljs$core$IFn$_invoke$arity$13) {
                        return f.cljs$core$IFn$_invoke$arity$13(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      } else {
                        return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
                      }
                    } else {
                      var a13 = cljs.core._first(next_12);
                      var next_13 = cljs.core.next(next_12);
                      if (next_13 == null) {
                        if (f.cljs$core$IFn$_invoke$arity$14) {
                          return f.cljs$core$IFn$_invoke$arity$14(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        } else {
                          return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
                        }
                      } else {
                        var a14 = cljs.core._first(next_13);
                        var next_14 = cljs.core.next(next_13);
                        if (next_14 == null) {
                          if (f.cljs$core$IFn$_invoke$arity$15) {
                            return f.cljs$core$IFn$_invoke$arity$15(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          } else {
                            return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
                          }
                        } else {
                          var a15 = cljs.core._first(next_14);
                          var next_15 = cljs.core.next(next_14);
                          if (next_15 == null) {
                            if (f.cljs$core$IFn$_invoke$arity$16) {
                              return f.cljs$core$IFn$_invoke$arity$16(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            } else {
                              return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
                            }
                          } else {
                            var a16 = cljs.core._first(next_15);
                            var next_16 = cljs.core.next(next_15);
                            if (next_16 == null) {
                              if (f.cljs$core$IFn$_invoke$arity$17) {
                                return f.cljs$core$IFn$_invoke$arity$17(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              } else {
                                return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16);
                              }
                            } else {
                              var a17 = cljs.core._first(next_16);
                              var next_17 = cljs.core.next(next_16);
                              if (next_17 == null) {
                                if (f.cljs$core$IFn$_invoke$arity$18) {
                                  return f.cljs$core$IFn$_invoke$arity$18(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                } else {
                                  return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
                                }
                              } else {
                                var a18 = cljs.core._first(next_17);
                                var next_18 = cljs.core.next(next_17);
                                if (next_18 == null) {
                                  if (f.cljs$core$IFn$_invoke$arity$19) {
                                    return f.cljs$core$IFn$_invoke$arity$19(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  } else {
                                    return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
                                  }
                                } else {
                                  var a19 = cljs.core._first(next_18);
                                  var next_19 = cljs.core.next(next_18);
                                  if (next_19 == null) {
                                    if (f.cljs$core$IFn$_invoke$arity$20) {
                                      return f.cljs$core$IFn$_invoke$arity$20(a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    } else {
                                      return f.call(f, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
                                    }
                                  } else {
                                    var arr__4661__auto__ = [a0, a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19];
                                    var s__4662__auto___13497 = next_19;
                                    while (true) {
                                      if (s__4662__auto___13497) {
                                        arr__4661__auto__.push(cljs.core._first(s__4662__auto___13497));
                                        var G__13498 = cljs.core.next(s__4662__auto___13497);
                                        s__4662__auto___13497 = G__13498;
                                        continue;
                                      } else {
                                      }
                                      break;
                                    }
                                    return f.apply(f, arr__4661__auto__);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply_to_simple.cljs$lang$maxFixedArity = 6;
cljs.core.apply = function cljs$core$apply(var_args) {
  var G__13506 = arguments.length;
  switch(G__13506) {
    case 2:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13508 = arguments.length;
      var i__4737__auto___13509 = 0;
      while (true) {
        if (i__4737__auto___13509 < len__4736__auto___13508) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13509]);
          var G__13510 = i__4737__auto___13509 + 1;
          i__4737__auto___13509 = G__13510;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(5), 0, null);
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], argseq__4758__auto__);
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$2 = function(f, args) {
  if (f.cljs$lang$applyTo) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity + 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, args);
    } else {
      return f.cljs$lang$applyTo(args);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$3 = function(f, x, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = cljs.core.bounded_count(fixed_arity, args) + 1;
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f, x, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 2 + cljs.core.bounded_count(fixed_arity - 1, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f, x, y, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$5 = function(f, x, y, z, args) {
  if (f.cljs$lang$applyTo) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 3 + cljs.core.bounded_count(fixed_arity - 2, args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f, x, y, z, cljs.core.seq(args));
  }
};
cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic = function(f, a, b, c, d, args) {
  if (f.cljs$lang$applyTo) {
    var spread_args = cljs.core.spread(args);
    var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, spread_args))));
    var fixed_arity = f.cljs$lang$maxFixedArity;
    var bc = 4 + cljs.core.bounded_count(fixed_arity - 3, spread_args);
    if (bc <= fixed_arity) {
      return cljs.core.apply_to(f, bc, arglist);
    } else {
      return f.cljs$lang$applyTo(arglist);
    }
  } else {
    return cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f, a, b, c, d, cljs.core.spread(args));
  }
};
cljs.core.apply.cljs$lang$applyTo = function(seq13500) {
  var G__13501 = cljs.core.first(seq13500);
  var seq13500__$1 = cljs.core.next(seq13500);
  var G__13502 = cljs.core.first(seq13500__$1);
  var seq13500__$2 = cljs.core.next(seq13500__$1);
  var G__13503 = cljs.core.first(seq13500__$2);
  var seq13500__$3 = cljs.core.next(seq13500__$2);
  var G__13504 = cljs.core.first(seq13500__$3);
  var seq13500__$4 = cljs.core.next(seq13500__$3);
  var G__13505 = cljs.core.first(seq13500__$4);
  var seq13500__$5 = cljs.core.next(seq13500__$4);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13501, G__13502, G__13503, G__13504, G__13505, seq13500__$5);
};
cljs.core.apply.cljs$lang$maxFixedArity = 5;
cljs.core.vary_meta = function cljs$core$vary_meta(var_args) {
  var G__13519 = arguments.length;
  switch(G__13519) {
    case 2:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13536 = arguments.length;
      var i__4737__auto___13537 = 0;
      while (true) {
        if (i__4737__auto___13537 < len__4736__auto___13536) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13537]);
          var G__13538 = i__4737__auto___13537 + 1;
          i__4737__auto___13537 = G__13538;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(6), 0, null);
      return cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4758__auto__);
  }
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 = function(obj, f) {
  return cljs.core.with_meta(obj, function() {
    var G__13520 = cljs.core.meta(obj);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13520) : f.call(null, G__13520);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 = function(obj, f, a) {
  return cljs.core.with_meta(obj, function() {
    var G__13521 = cljs.core.meta(obj);
    var G__13522 = a;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13521, G__13522) : f.call(null, G__13521, G__13522);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 = function(obj, f, a, b) {
  return cljs.core.with_meta(obj, function() {
    var G__13523 = cljs.core.meta(obj);
    var G__13524 = a;
    var G__13525 = b;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13523, G__13524, G__13525) : f.call(null, G__13523, G__13524, G__13525);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 = function(obj, f, a, b, c) {
  return cljs.core.with_meta(obj, function() {
    var G__13526 = cljs.core.meta(obj);
    var G__13527 = a;
    var G__13528 = b;
    var G__13529 = c;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13526, G__13527, G__13528, G__13529) : f.call(null, G__13526, G__13527, G__13528, G__13529);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 = function(obj, f, a, b, c, d) {
  return cljs.core.with_meta(obj, function() {
    var G__13530 = cljs.core.meta(obj);
    var G__13531 = a;
    var G__13532 = b;
    var G__13533 = c;
    var G__13534 = d;
    return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__13530, G__13531, G__13532, G__13533, G__13534) : f.call(null, G__13530, G__13531, G__13532, G__13533, G__13534);
  }());
};
cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic = function(obj, f, a, b, c, d, args) {
  return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d, args], 0)));
};
cljs.core.vary_meta.cljs$lang$applyTo = function(seq13512) {
  var G__13513 = cljs.core.first(seq13512);
  var seq13512__$1 = cljs.core.next(seq13512);
  var G__13514 = cljs.core.first(seq13512__$1);
  var seq13512__$2 = cljs.core.next(seq13512__$1);
  var G__13515 = cljs.core.first(seq13512__$2);
  var seq13512__$3 = cljs.core.next(seq13512__$2);
  var G__13516 = cljs.core.first(seq13512__$3);
  var seq13512__$4 = cljs.core.next(seq13512__$3);
  var G__13517 = cljs.core.first(seq13512__$4);
  var seq13512__$5 = cljs.core.next(seq13512__$4);
  var G__13518 = cljs.core.first(seq13512__$5);
  var seq13512__$6 = cljs.core.next(seq13512__$5);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13513, G__13514, G__13515, G__13516, G__13517, G__13518, seq13512__$6);
};
cljs.core.vary_meta.cljs$lang$maxFixedArity = 6;
cljs.core.not_EQ_ = function cljs$core$not_EQ_(var_args) {
  var G__13543 = arguments.length;
  switch(G__13543) {
    case 1:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13545 = arguments.length;
      var i__4737__auto___13546 = 0;
      while (true) {
        if (i__4737__auto___13546 < len__4736__auto___13545) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13546]);
          var G__13547 = i__4737__auto___13546 + 1;
          i__4737__auto___13546 = G__13547;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return false;
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 = function(x, y) {
  return !cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
};
cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic = function(x, y, more) {
  return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
};
cljs.core.not_EQ_.cljs$lang$applyTo = function(seq13540) {
  var G__13541 = cljs.core.first(seq13540);
  var seq13540__$1 = cljs.core.next(seq13540);
  var G__13542 = cljs.core.first(seq13540__$1);
  var seq13540__$2 = cljs.core.next(seq13540__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13541, G__13542, seq13540__$2);
};
cljs.core.not_EQ_.cljs$lang$maxFixedArity = 2;
cljs.core.not_empty = function cljs$core$not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function cljs$core$nil_iter() {
  if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.t_cljs$core13548 !== "undefined") {
  } else {
    cljs.core.t_cljs$core13548 = function(meta13549) {
      this.meta13549 = meta13549;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.core.t_cljs$core13548.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_13550, meta13549__$1) {
      var self__ = this;
      var _13550__$1 = this;
      return new cljs.core.t_cljs$core13548(meta13549__$1);
    };
    cljs.core.t_cljs$core13548.prototype.cljs$core$IMeta$_meta$arity$1 = function(_13550) {
      var self__ = this;
      var _13550__$1 = this;
      return self__.meta13549;
    };
    cljs.core.t_cljs$core13548.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t_cljs$core13548.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t_cljs$core13548.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t_cljs$core13548.getBasis = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta13549", "meta13549", -1153580708, null)], null);
    };
    cljs.core.t_cljs$core13548.cljs$lang$type = true;
    cljs.core.t_cljs$core13548.cljs$lang$ctorStr = "cljs.core/t_cljs$core13548";
    cljs.core.t_cljs$core13548.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write(writer__4370__auto__, "cljs.core/t_cljs$core13548");
    };
    cljs.core.__GT_t_cljs$core13548 = function cljs$core$nil_iter_$___GT_t_cljs$core13548(meta13549) {
      return new cljs.core.t_cljs$core13548(meta13549);
    };
  }
  return new cljs.core.t_cljs$core13548(cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function cljs$core$__GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function cljs$core$string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function cljs$core$__GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function cljs$core$array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return !(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!this$.hasNext()) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "_seq", "_seq", -449557847, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function cljs$core$__GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function cljs$core$seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function cljs$core$iter(coll) {
  if (cljs.core.iterable_QMARK_(coll)) {
    return cljs.core._iterator(coll);
  } else {
    if (coll == null) {
      return cljs.core.nil_iter();
    } else {
      if (typeof coll === "string") {
        return cljs.core.string_iter(coll);
      } else {
        if (cljs.core.array_QMARK_(coll)) {
          return cljs.core.array_iter(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error(["Cannot create iterator from ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.Many = function(vals) {
  this.vals = vals;
};
cljs.core.Many.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  self__.vals.push(o);
  return this$;
};
cljs.core.Many.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.shift();
};
cljs.core.Many.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.vals.length === 0;
};
cljs.core.Many.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Many: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join("");
};
cljs.core.Many.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vals", "vals", -1886377036, null)], null);
};
cljs.core.Many.cljs$lang$type = true;
cljs.core.Many.cljs$lang$ctorStr = "cljs.core/Many";
cljs.core.Many.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Many");
};
cljs.core.__GT_Many = function cljs$core$__GT_Many(vals) {
  return new cljs.core.Many(vals);
};
cljs.core.NONE = {};
cljs.core.Single = function(val) {
  this.val = val;
};
cljs.core.Single.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    self__.val = o;
    return this$;
  } else {
    return new cljs.core.Many([self__.val, o]);
  }
};
cljs.core.Single.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  if (self__.val === cljs.core.NONE) {
    throw new Error("Removing object from empty buffer");
  } else {
    var ret = self__.val;
    self__.val = cljs.core.NONE;
    return ret;
  }
};
cljs.core.Single.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return self__.val === cljs.core.NONE;
};
cljs.core.Single.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return ["Single: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join("");
};
cljs.core.Single.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Single.cljs$lang$type = true;
cljs.core.Single.cljs$lang$ctorStr = "cljs.core/Single";
cljs.core.Single.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Single");
};
cljs.core.__GT_Single = function cljs$core$__GT_Single(val) {
  return new cljs.core.Single(val);
};
cljs.core.Empty = function() {
};
cljs.core.Empty.prototype.add = function(o) {
  var self__ = this;
  var this$ = this;
  return new cljs.core.Single(o);
};
cljs.core.Empty.prototype.remove = function() {
  var self__ = this;
  var this$ = this;
  throw new Error("Removing object from empty buffer");
};
cljs.core.Empty.prototype.isEmpty = function() {
  var self__ = this;
  var this$ = this;
  return true;
};
cljs.core.Empty.prototype.toString = function() {
  var self__ = this;
  var this$ = this;
  return "Empty";
};
cljs.core.Empty.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.Empty.cljs$lang$type = true;
cljs.core.Empty.cljs$lang$ctorStr = "cljs.core/Empty";
cljs.core.Empty.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Empty");
};
cljs.core.__GT_Empty = function cljs$core$__GT_Empty() {
  return new cljs.core.Empty;
};
cljs.core.EMPTY = new cljs.core.Empty;
cljs.core.MultiIterator = function(iters) {
  this.iters = iters;
};
cljs.core.MultiIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (!iter.hasNext()) {
        return false;
      } else {
        var G__13551 = cljs.core.next(iters__$1);
        iters__$1 = G__13551;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var nexts = [];
  var n__4613__auto___13552 = self__.iters.length;
  var i_13553 = 0;
  while (true) {
    if (i_13553 < n__4613__auto___13552) {
      nexts[i_13553] = self__.iters[i_13553].next();
      var G__13554 = i_13553 + 1;
      i_13553 = G__13554;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts, 0);
};
cljs.core.MultiIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iters", "iters", 719353031, null)], null);
};
cljs.core.MultiIterator.cljs$lang$type = true;
cljs.core.MultiIterator.cljs$lang$ctorStr = "cljs.core/MultiIterator";
cljs.core.MultiIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/MultiIterator");
};
cljs.core.__GT_MultiIterator = function cljs$core$__GT_MultiIterator(iters) {
  return new cljs.core.MultiIterator(iters);
};
cljs.core.chunkIteratorSeq = function cljs$core$chunkIteratorSeq(iter) {
  return new cljs.core.LazySeq(null, function() {
    if (iter.hasNext()) {
      var arr = [];
      var n = 0;
      while (true) {
        if (cljs.core.truth_(function() {
          var and__4115__auto__ = iter.hasNext();
          if (cljs.core.truth_(and__4115__auto__)) {
            return n < 32;
          } else {
            return and__4115__auto__;
          }
        }())) {
          arr[n] = iter.next();
          var G__13555 = n + 1;
          n = G__13555;
          continue;
        } else {
          return cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr, 0, n), cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null, iter));
        }
        break;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.TransformerIterator = function(buffer, _next, completed, xf, sourceIter, multi) {
  this.buffer = buffer;
  this._next = _next;
  this.completed = completed;
  this.xf = xf;
  this.sourceIter = sourceIter;
  this.multi = multi;
};
cljs.core.TransformerIterator.prototype.step = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__._next === cljs.core.NONE)) {
    return true;
  } else {
    while (true) {
      if (self__._next === cljs.core.NONE) {
        if (self__.buffer.isEmpty()) {
          if (self__.completed) {
            return false;
          } else {
            if (self__.sourceIter.hasNext()) {
              var iter = self__.multi ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf, cljs.core.cons(null, self__.sourceIter.next())) : function() {
                var G__13556 = null;
                var G__13557 = self__.sourceIter.next();
                return self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__13556, G__13557) : self__.xf.call(null, G__13556, G__13557);
              }();
              if (cljs.core.reduced_QMARK_(iter)) {
                self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
                self__.completed = true;
              } else {
              }
              continue;
            } else {
              self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null, null);
              self__.completed = true;
              continue;
            }
          }
        } else {
          self__._next = self__.buffer.remove();
          continue;
        }
      } else {
        return true;
      }
      break;
    }
  }
};
cljs.core.TransformerIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return this$.step();
};
cljs.core.TransformerIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    var ret = self__._next;
    self__._next = cljs.core.NONE;
    return ret;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.TransformerIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.TransformerIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "buffer", "buffer", -2037140571, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), 
  cljs.core.with_meta(new cljs.core.Symbol(null, "completed", "completed", 1154475024, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "xf", "xf", 2042434515, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "sourceIter", "sourceIter", 1068220306, null), new cljs.core.Symbol(null, 
  "multi", "multi", 1450238522, null)], null);
};
cljs.core.TransformerIterator.cljs$lang$type = true;
cljs.core.TransformerIterator.cljs$lang$ctorStr = "cljs.core/TransformerIterator";
cljs.core.TransformerIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransformerIterator");
};
cljs.core.__GT_TransformerIterator = function cljs$core$__GT_TransformerIterator(buffer, _next, completed, xf, sourceIter, multi) {
  return new cljs.core.TransformerIterator(buffer, _next, completed, xf, sourceIter, multi);
};
goog.object.set(cljs.core.TransformerIterator.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.transformer_iterator = function cljs$core$transformer_iterator(xform, sourceIter, multi) {
  var iterator = new cljs.core.TransformerIterator(cljs.core.EMPTY, cljs.core.NONE, false, null, sourceIter, multi);
  iterator.xf = function() {
    var G__13558 = function() {
      var G__13559 = null;
      var G__13559__0 = function() {
        return null;
      };
      var G__13559__1 = function(acc) {
        return acc;
      };
      var G__13559__2 = function(acc, o) {
        iterator.buffer = iterator.buffer.add(o);
        return acc;
      };
      G__13559 = function(acc, o) {
        switch(arguments.length) {
          case 0:
            return G__13559__0.call(this);
          case 1:
            return G__13559__1.call(this, acc);
          case 2:
            return G__13559__2.call(this, acc, o);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13559.cljs$core$IFn$_invoke$arity$0 = G__13559__0;
      G__13559.cljs$core$IFn$_invoke$arity$1 = G__13559__1;
      G__13559.cljs$core$IFn$_invoke$arity$2 = G__13559__2;
      return G__13559;
    }();
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__13558) : xform.call(null, G__13558);
  }();
  return iterator;
};
cljs.core.TransformerIterator.create = function(xform, source) {
  return cljs.core.transformer_iterator(xform, source, false);
};
cljs.core.TransformerIterator.createMulti = function(xform, sources) {
  return cljs.core.transformer_iterator(xform, new cljs.core.MultiIterator(cljs.core.to_array(sources)), true);
};
cljs.core.sequence = function cljs$core$sequence(var_args) {
  var G__13564 = arguments.length;
  switch(G__13564) {
    case 1:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13566 = arguments.length;
      var i__4737__auto___13567 = 0;
      while (true) {
        if (i__4737__auto___13567 < len__4736__auto___13566) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13567]);
          var G__13568 = i__4737__auto___13567 + 1;
          i__4737__auto___13567 = G__13568;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  if (cljs.core.seq_QMARK_(coll)) {
    return coll;
  } else {
    var or__4126__auto__ = cljs.core.seq(coll);
    if (or__4126__auto__) {
      return or__4126__auto__;
    } else {
      return cljs.core.List.EMPTY;
    }
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 = function(xform, coll) {
  var or__4126__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform, cljs.core.iter(coll)));
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic = function(xform, coll, colls) {
  var or__4126__auto__ = cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.iter, cljs.core.cons(coll, colls))));
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.sequence.cljs$lang$applyTo = function(seq13561) {
  var G__13562 = cljs.core.first(seq13561);
  var seq13561__$1 = cljs.core.next(seq13561);
  var G__13563 = cljs.core.first(seq13561__$1);
  var seq13561__$2 = cljs.core.next(seq13561__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13562, G__13563, seq13561__$2);
};
cljs.core.sequence.cljs$lang$maxFixedArity = 2;
cljs.core.every_QMARK_ = function cljs$core$every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__13569 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13569) : pred.call(null, G__13569);
      }())) {
        var G__13570 = pred;
        var G__13571 = cljs.core.next(coll);
        pred = G__13570;
        coll = G__13571;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function cljs$core$not_every_QMARK_(pred, coll) {
  return !cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function cljs$core$some(pred, coll) {
  while (true) {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      var or__4126__auto__ = function() {
        var G__13573 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13573) : pred.call(null, G__13573);
      }();
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var G__13574 = pred;
        var G__13575 = cljs.core.next(s);
        pred = G__13574;
        coll = G__13575;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function cljs$core$not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function cljs$core$even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return (n & 1) === 0;
  } else {
    throw new Error(["Argument must be an integer: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function cljs$core$odd_QMARK_(n) {
  return !cljs.core.even_QMARK_(n);
};
cljs.core.complement = function cljs$core$complement(f) {
  return function() {
    var G__13576 = null;
    var G__13576__0 = function() {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
    };
    var G__13576__1 = function(x) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x));
    };
    var G__13576__2 = function(x, y) {
      return cljs.core.not(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y));
    };
    var G__13576__3 = function() {
      var G__13577__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__13577 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__13578__i = 0, G__13578__a = new Array(arguments.length - 2);
          while (G__13578__i < G__13578__a.length) {
            G__13578__a[G__13578__i] = arguments[G__13578__i + 2];
            ++G__13578__i;
          }
          zs = new cljs.core.IndexedSeq(G__13578__a, 0, null);
        }
        return G__13577__delegate.call(this, x, y, zs);
      };
      G__13577.cljs$lang$maxFixedArity = 2;
      G__13577.cljs$lang$applyTo = function(arglist__13579) {
        var x = cljs.core.first(arglist__13579);
        arglist__13579 = cljs.core.next(arglist__13579);
        var y = cljs.core.first(arglist__13579);
        var zs = cljs.core.rest(arglist__13579);
        return G__13577__delegate(x, y, zs);
      };
      G__13577.cljs$core$IFn$_invoke$arity$variadic = G__13577__delegate;
      return G__13577;
    }();
    G__13576 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__13576__0.call(this);
        case 1:
          return G__13576__1.call(this, x);
        case 2:
          return G__13576__2.call(this, x, y);
        default:
          var G__13580 = null;
          if (arguments.length > 2) {
            var G__13581__i = 0, G__13581__a = new Array(arguments.length - 2);
            while (G__13581__i < G__13581__a.length) {
              G__13581__a[G__13581__i] = arguments[G__13581__i + 2];
              ++G__13581__i;
            }
            G__13580 = new cljs.core.IndexedSeq(G__13581__a, 0, null);
          }
          return G__13576__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__13580);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13576.cljs$lang$maxFixedArity = 2;
    G__13576.cljs$lang$applyTo = G__13576__3.cljs$lang$applyTo;
    G__13576.cljs$core$IFn$_invoke$arity$0 = G__13576__0;
    G__13576.cljs$core$IFn$_invoke$arity$1 = G__13576__1;
    G__13576.cljs$core$IFn$_invoke$arity$2 = G__13576__2;
    G__13576.cljs$core$IFn$_invoke$arity$variadic = G__13576__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__13576;
  }();
};
cljs.core.constantly = function cljs$core$constantly(x) {
  return function() {
    var G__13582__delegate = function(args) {
      return x;
    };
    var G__13582 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13583__i = 0, G__13583__a = new Array(arguments.length - 0);
        while (G__13583__i < G__13583__a.length) {
          G__13583__a[G__13583__i] = arguments[G__13583__i + 0];
          ++G__13583__i;
        }
        args = new cljs.core.IndexedSeq(G__13583__a, 0, null);
      }
      return G__13582__delegate.call(this, args);
    };
    G__13582.cljs$lang$maxFixedArity = 0;
    G__13582.cljs$lang$applyTo = function(arglist__13584) {
      var args = cljs.core.seq(arglist__13584);
      return G__13582__delegate(args);
    };
    G__13582.cljs$core$IFn$_invoke$arity$variadic = G__13582__delegate;
    return G__13582;
  }();
};
cljs.core.comp = function cljs$core$comp(var_args) {
  var G__13590 = arguments.length;
  switch(G__13590) {
    case 0:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13608 = arguments.length;
      var i__4737__auto___13609 = 0;
      while (true) {
        if (i__4737__auto___13609 < len__4736__auto___13608) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13609]);
          var G__13610 = i__4737__auto___13609 + 1;
          i__4737__auto___13609 = G__13610;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.identity;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__13611 = null;
    var G__13611__0 = function() {
      var G__13591 = g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13591) : f.call(null, G__13591);
    };
    var G__13611__1 = function(x) {
      var G__13592 = g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13592) : f.call(null, G__13592);
    };
    var G__13611__2 = function(x, y) {
      var G__13593 = g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13593) : f.call(null, G__13593);
    };
    var G__13611__3 = function(x, y, z) {
      var G__13594 = g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13594) : f.call(null, G__13594);
    };
    var G__13611__4 = function() {
      var G__13612__delegate = function(x, y, z, args) {
        var G__13595 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13595) : f.call(null, G__13595);
      };
      var G__13612 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13613__i = 0, G__13613__a = new Array(arguments.length - 3);
          while (G__13613__i < G__13613__a.length) {
            G__13613__a[G__13613__i] = arguments[G__13613__i + 3];
            ++G__13613__i;
          }
          args = new cljs.core.IndexedSeq(G__13613__a, 0, null);
        }
        return G__13612__delegate.call(this, x, y, z, args);
      };
      G__13612.cljs$lang$maxFixedArity = 3;
      G__13612.cljs$lang$applyTo = function(arglist__13614) {
        var x = cljs.core.first(arglist__13614);
        arglist__13614 = cljs.core.next(arglist__13614);
        var y = cljs.core.first(arglist__13614);
        arglist__13614 = cljs.core.next(arglist__13614);
        var z = cljs.core.first(arglist__13614);
        var args = cljs.core.rest(arglist__13614);
        return G__13612__delegate(x, y, z, args);
      };
      G__13612.cljs$core$IFn$_invoke$arity$variadic = G__13612__delegate;
      return G__13612;
    }();
    G__13611 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__13611__0.call(this);
        case 1:
          return G__13611__1.call(this, x);
        case 2:
          return G__13611__2.call(this, x, y);
        case 3:
          return G__13611__3.call(this, x, y, z);
        default:
          var G__13615 = null;
          if (arguments.length > 3) {
            var G__13616__i = 0, G__13616__a = new Array(arguments.length - 3);
            while (G__13616__i < G__13616__a.length) {
              G__13616__a[G__13616__i] = arguments[G__13616__i + 3];
              ++G__13616__i;
            }
            G__13615 = new cljs.core.IndexedSeq(G__13616__a, 0, null);
          }
          return G__13611__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13615);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13611.cljs$lang$maxFixedArity = 3;
    G__13611.cljs$lang$applyTo = G__13611__4.cljs$lang$applyTo;
    G__13611.cljs$core$IFn$_invoke$arity$0 = G__13611__0;
    G__13611.cljs$core$IFn$_invoke$arity$1 = G__13611__1;
    G__13611.cljs$core$IFn$_invoke$arity$2 = G__13611__2;
    G__13611.cljs$core$IFn$_invoke$arity$3 = G__13611__3;
    G__13611.cljs$core$IFn$_invoke$arity$variadic = G__13611__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13611;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__13617 = null;
    var G__13617__0 = function() {
      var G__13596 = function() {
        var G__13597 = h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13597) : g.call(null, G__13597);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13596) : f.call(null, G__13596);
    };
    var G__13617__1 = function(x) {
      var G__13598 = function() {
        var G__13599 = h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13599) : g.call(null, G__13599);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13598) : f.call(null, G__13598);
    };
    var G__13617__2 = function(x, y) {
      var G__13600 = function() {
        var G__13601 = h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13601) : g.call(null, G__13601);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13600) : f.call(null, G__13600);
    };
    var G__13617__3 = function(x, y, z) {
      var G__13602 = function() {
        var G__13603 = h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z);
        return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13603) : g.call(null, G__13603);
      }();
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13602) : f.call(null, G__13602);
    };
    var G__13617__4 = function() {
      var G__13618__delegate = function(x, y, z, args) {
        var G__13604 = function() {
          var G__13605 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__13605) : g.call(null, G__13605);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13604) : f.call(null, G__13604);
      };
      var G__13618 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13619__i = 0, G__13619__a = new Array(arguments.length - 3);
          while (G__13619__i < G__13619__a.length) {
            G__13619__a[G__13619__i] = arguments[G__13619__i + 3];
            ++G__13619__i;
          }
          args = new cljs.core.IndexedSeq(G__13619__a, 0, null);
        }
        return G__13618__delegate.call(this, x, y, z, args);
      };
      G__13618.cljs$lang$maxFixedArity = 3;
      G__13618.cljs$lang$applyTo = function(arglist__13620) {
        var x = cljs.core.first(arglist__13620);
        arglist__13620 = cljs.core.next(arglist__13620);
        var y = cljs.core.first(arglist__13620);
        arglist__13620 = cljs.core.next(arglist__13620);
        var z = cljs.core.first(arglist__13620);
        var args = cljs.core.rest(arglist__13620);
        return G__13618__delegate(x, y, z, args);
      };
      G__13618.cljs$core$IFn$_invoke$arity$variadic = G__13618__delegate;
      return G__13618;
    }();
    G__13617 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__13617__0.call(this);
        case 1:
          return G__13617__1.call(this, x);
        case 2:
          return G__13617__2.call(this, x, y);
        case 3:
          return G__13617__3.call(this, x, y, z);
        default:
          var G__13621 = null;
          if (arguments.length > 3) {
            var G__13622__i = 0, G__13622__a = new Array(arguments.length - 3);
            while (G__13622__i < G__13622__a.length) {
              G__13622__a[G__13622__i] = arguments[G__13622__i + 3];
              ++G__13622__i;
            }
            G__13621 = new cljs.core.IndexedSeq(G__13622__a, 0, null);
          }
          return G__13617__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13621);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13617.cljs$lang$maxFixedArity = 3;
    G__13617.cljs$lang$applyTo = G__13617__4.cljs$lang$applyTo;
    G__13617.cljs$core$IFn$_invoke$arity$0 = G__13617__0;
    G__13617.cljs$core$IFn$_invoke$arity$1 = G__13617__1;
    G__13617.cljs$core$IFn$_invoke$arity$2 = G__13617__2;
    G__13617.cljs$core$IFn$_invoke$arity$3 = G__13617__3;
    G__13617.cljs$core$IFn$_invoke$arity$variadic = G__13617__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13617;
  }();
};
cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic = function(f1, f2, f3, fs) {
  var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
  return function() {
    var G__13623__delegate = function(args) {
      var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
      var fs__$2 = cljs.core.next(fs__$1);
      while (true) {
        if (fs__$2) {
          var G__13624 = function() {
            var fexpr__13606 = cljs.core.first(fs__$2);
            return fexpr__13606.cljs$core$IFn$_invoke$arity$1 ? fexpr__13606.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__13606.call(null, ret);
          }();
          var G__13625 = cljs.core.next(fs__$2);
          ret = G__13624;
          fs__$2 = G__13625;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__13623 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13626__i = 0, G__13626__a = new Array(arguments.length - 0);
        while (G__13626__i < G__13626__a.length) {
          G__13626__a[G__13626__i] = arguments[G__13626__i + 0];
          ++G__13626__i;
        }
        args = new cljs.core.IndexedSeq(G__13626__a, 0, null);
      }
      return G__13623__delegate.call(this, args);
    };
    G__13623.cljs$lang$maxFixedArity = 0;
    G__13623.cljs$lang$applyTo = function(arglist__13627) {
      var args = cljs.core.seq(arglist__13627);
      return G__13623__delegate(args);
    };
    G__13623.cljs$core$IFn$_invoke$arity$variadic = G__13623__delegate;
    return G__13623;
  }();
};
cljs.core.comp.cljs$lang$applyTo = function(seq13586) {
  var G__13587 = cljs.core.first(seq13586);
  var seq13586__$1 = cljs.core.next(seq13586);
  var G__13588 = cljs.core.first(seq13586__$1);
  var seq13586__$2 = cljs.core.next(seq13586__$1);
  var G__13589 = cljs.core.first(seq13586__$2);
  var seq13586__$3 = cljs.core.next(seq13586__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13587, G__13588, G__13589, seq13586__$3);
};
cljs.core.comp.cljs$lang$maxFixedArity = 3;
cljs.core.partial = function cljs$core$partial(var_args) {
  var G__13634 = arguments.length;
  switch(G__13634) {
    case 1:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13636 = arguments.length;
      var i__4737__auto___13637 = 0;
      while (true) {
        if (i__4737__auto___13637 < len__4736__auto___13636) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13637]);
          var G__13638 = i__4737__auto___13637 + 1;
          i__4737__auto___13637 = G__13638;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return f;
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$2 = function(f, arg1) {
  return function() {
    var G__13639 = null;
    var G__13639__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null, arg1);
    };
    var G__13639__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, x) : f.call(null, arg1, x);
    };
    var G__13639__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, x, y) : f.call(null, arg1, x, y);
    };
    var G__13639__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, x, y, z) : f.call(null, arg1, x, y, z);
    };
    var G__13639__4 = function() {
      var G__13640__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));
      };
      var G__13640 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13641__i = 0, G__13641__a = new Array(arguments.length - 3);
          while (G__13641__i < G__13641__a.length) {
            G__13641__a[G__13641__i] = arguments[G__13641__i + 3];
            ++G__13641__i;
          }
          args = new cljs.core.IndexedSeq(G__13641__a, 0, null);
        }
        return G__13640__delegate.call(this, x, y, z, args);
      };
      G__13640.cljs$lang$maxFixedArity = 3;
      G__13640.cljs$lang$applyTo = function(arglist__13642) {
        var x = cljs.core.first(arglist__13642);
        arglist__13642 = cljs.core.next(arglist__13642);
        var y = cljs.core.first(arglist__13642);
        arglist__13642 = cljs.core.next(arglist__13642);
        var z = cljs.core.first(arglist__13642);
        var args = cljs.core.rest(arglist__13642);
        return G__13640__delegate(x, y, z, args);
      };
      G__13640.cljs$core$IFn$_invoke$arity$variadic = G__13640__delegate;
      return G__13640;
    }();
    G__13639 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__13639__0.call(this);
        case 1:
          return G__13639__1.call(this, x);
        case 2:
          return G__13639__2.call(this, x, y);
        case 3:
          return G__13639__3.call(this, x, y, z);
        default:
          var G__13643 = null;
          if (arguments.length > 3) {
            var G__13644__i = 0, G__13644__a = new Array(arguments.length - 3);
            while (G__13644__i < G__13644__a.length) {
              G__13644__a[G__13644__i] = arguments[G__13644__i + 3];
              ++G__13644__i;
            }
            G__13643 = new cljs.core.IndexedSeq(G__13644__a, 0, null);
          }
          return G__13639__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13643);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13639.cljs$lang$maxFixedArity = 3;
    G__13639.cljs$lang$applyTo = G__13639__4.cljs$lang$applyTo;
    G__13639.cljs$core$IFn$_invoke$arity$0 = G__13639__0;
    G__13639.cljs$core$IFn$_invoke$arity$1 = G__13639__1;
    G__13639.cljs$core$IFn$_invoke$arity$2 = G__13639__2;
    G__13639.cljs$core$IFn$_invoke$arity$3 = G__13639__3;
    G__13639.cljs$core$IFn$_invoke$arity$variadic = G__13639__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13639;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$3 = function(f, arg1, arg2) {
  return function() {
    var G__13645 = null;
    var G__13645__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1, arg2) : f.call(null, arg1, arg2);
    };
    var G__13645__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, x) : f.call(null, arg1, arg2, x);
    };
    var G__13645__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, x, y) : f.call(null, arg1, arg2, x, y);
    };
    var G__13645__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, x, y, z) : f.call(null, arg1, arg2, x, y, z);
    };
    var G__13645__4 = function() {
      var G__13646__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z, args], 0));
      };
      var G__13646 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13647__i = 0, G__13647__a = new Array(arguments.length - 3);
          while (G__13647__i < G__13647__a.length) {
            G__13647__a[G__13647__i] = arguments[G__13647__i + 3];
            ++G__13647__i;
          }
          args = new cljs.core.IndexedSeq(G__13647__a, 0, null);
        }
        return G__13646__delegate.call(this, x, y, z, args);
      };
      G__13646.cljs$lang$maxFixedArity = 3;
      G__13646.cljs$lang$applyTo = function(arglist__13648) {
        var x = cljs.core.first(arglist__13648);
        arglist__13648 = cljs.core.next(arglist__13648);
        var y = cljs.core.first(arglist__13648);
        arglist__13648 = cljs.core.next(arglist__13648);
        var z = cljs.core.first(arglist__13648);
        var args = cljs.core.rest(arglist__13648);
        return G__13646__delegate(x, y, z, args);
      };
      G__13646.cljs$core$IFn$_invoke$arity$variadic = G__13646__delegate;
      return G__13646;
    }();
    G__13645 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__13645__0.call(this);
        case 1:
          return G__13645__1.call(this, x);
        case 2:
          return G__13645__2.call(this, x, y);
        case 3:
          return G__13645__3.call(this, x, y, z);
        default:
          var G__13649 = null;
          if (arguments.length > 3) {
            var G__13650__i = 0, G__13650__a = new Array(arguments.length - 3);
            while (G__13650__i < G__13650__a.length) {
              G__13650__a[G__13650__i] = arguments[G__13650__i + 3];
              ++G__13650__i;
            }
            G__13649 = new cljs.core.IndexedSeq(G__13650__a, 0, null);
          }
          return G__13645__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13649);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13645.cljs$lang$maxFixedArity = 3;
    G__13645.cljs$lang$applyTo = G__13645__4.cljs$lang$applyTo;
    G__13645.cljs$core$IFn$_invoke$arity$0 = G__13645__0;
    G__13645.cljs$core$IFn$_invoke$arity$1 = G__13645__1;
    G__13645.cljs$core$IFn$_invoke$arity$2 = G__13645__2;
    G__13645.cljs$core$IFn$_invoke$arity$3 = G__13645__3;
    G__13645.cljs$core$IFn$_invoke$arity$variadic = G__13645__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13645;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$4 = function(f, arg1, arg2, arg3) {
  return function() {
    var G__13651 = null;
    var G__13651__0 = function() {
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1, arg2, arg3) : f.call(null, arg1, arg2, arg3);
    };
    var G__13651__1 = function(x) {
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1, arg2, arg3, x) : f.call(null, arg1, arg2, arg3, x);
    };
    var G__13651__2 = function(x, y) {
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1, arg2, arg3, x, y) : f.call(null, arg1, arg2, arg3, x, y);
    };
    var G__13651__3 = function(x, y, z) {
      return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1, arg2, arg3, x, y, z) : f.call(null, arg1, arg2, arg3, x, y, z);
    };
    var G__13651__4 = function() {
      var G__13652__delegate = function(x, y, z, args) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y, z, args], 0));
      };
      var G__13652 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13653__i = 0, G__13653__a = new Array(arguments.length - 3);
          while (G__13653__i < G__13653__a.length) {
            G__13653__a[G__13653__i] = arguments[G__13653__i + 3];
            ++G__13653__i;
          }
          args = new cljs.core.IndexedSeq(G__13653__a, 0, null);
        }
        return G__13652__delegate.call(this, x, y, z, args);
      };
      G__13652.cljs$lang$maxFixedArity = 3;
      G__13652.cljs$lang$applyTo = function(arglist__13654) {
        var x = cljs.core.first(arglist__13654);
        arglist__13654 = cljs.core.next(arglist__13654);
        var y = cljs.core.first(arglist__13654);
        arglist__13654 = cljs.core.next(arglist__13654);
        var z = cljs.core.first(arglist__13654);
        var args = cljs.core.rest(arglist__13654);
        return G__13652__delegate(x, y, z, args);
      };
      G__13652.cljs$core$IFn$_invoke$arity$variadic = G__13652__delegate;
      return G__13652;
    }();
    G__13651 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__13651__0.call(this);
        case 1:
          return G__13651__1.call(this, x);
        case 2:
          return G__13651__2.call(this, x, y);
        case 3:
          return G__13651__3.call(this, x, y, z);
        default:
          var G__13655 = null;
          if (arguments.length > 3) {
            var G__13656__i = 0, G__13656__a = new Array(arguments.length - 3);
            while (G__13656__i < G__13656__a.length) {
              G__13656__a[G__13656__i] = arguments[G__13656__i + 3];
              ++G__13656__i;
            }
            G__13655 = new cljs.core.IndexedSeq(G__13656__a, 0, null);
          }
          return G__13651__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13655);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13651.cljs$lang$maxFixedArity = 3;
    G__13651.cljs$lang$applyTo = G__13651__4.cljs$lang$applyTo;
    G__13651.cljs$core$IFn$_invoke$arity$0 = G__13651__0;
    G__13651.cljs$core$IFn$_invoke$arity$1 = G__13651__1;
    G__13651.cljs$core$IFn$_invoke$arity$2 = G__13651__2;
    G__13651.cljs$core$IFn$_invoke$arity$3 = G__13651__3;
    G__13651.cljs$core$IFn$_invoke$arity$variadic = G__13651__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13651;
  }();
};
cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic = function(f, arg1, arg2, arg3, more) {
  return function() {
    var G__13657__delegate = function(args) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
    };
    var G__13657 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__13658__i = 0, G__13658__a = new Array(arguments.length - 0);
        while (G__13658__i < G__13658__a.length) {
          G__13658__a[G__13658__i] = arguments[G__13658__i + 0];
          ++G__13658__i;
        }
        args = new cljs.core.IndexedSeq(G__13658__a, 0, null);
      }
      return G__13657__delegate.call(this, args);
    };
    G__13657.cljs$lang$maxFixedArity = 0;
    G__13657.cljs$lang$applyTo = function(arglist__13659) {
      var args = cljs.core.seq(arglist__13659);
      return G__13657__delegate(args);
    };
    G__13657.cljs$core$IFn$_invoke$arity$variadic = G__13657__delegate;
    return G__13657;
  }();
};
cljs.core.partial.cljs$lang$applyTo = function(seq13629) {
  var G__13630 = cljs.core.first(seq13629);
  var seq13629__$1 = cljs.core.next(seq13629);
  var G__13631 = cljs.core.first(seq13629__$1);
  var seq13629__$2 = cljs.core.next(seq13629__$1);
  var G__13632 = cljs.core.first(seq13629__$2);
  var seq13629__$3 = cljs.core.next(seq13629__$2);
  var G__13633 = cljs.core.first(seq13629__$3);
  var seq13629__$4 = cljs.core.next(seq13629__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13630, G__13631, G__13632, G__13633, seq13629__$4);
};
cljs.core.partial.cljs$lang$maxFixedArity = 4;
cljs.core.fnil = function cljs$core$fnil(var_args) {
  var G__13661 = arguments.length;
  switch(G__13661) {
    case 2:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.fnil.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 = function(f, x) {
  return function() {
    var G__13679 = null;
    var G__13679__1 = function(a) {
      var G__13662 = a == null ? x : a;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13662) : f.call(null, G__13662);
    };
    var G__13679__2 = function(a, b) {
      var G__13663 = a == null ? x : a;
      var G__13664 = b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13663, G__13664) : f.call(null, G__13663, G__13664);
    };
    var G__13679__3 = function(a, b, c) {
      var G__13665 = a == null ? x : a;
      var G__13666 = b;
      var G__13667 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13665, G__13666, G__13667) : f.call(null, G__13665, G__13666, G__13667);
    };
    var G__13679__4 = function() {
      var G__13680__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
      };
      var G__13680 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__13681__i = 0, G__13681__a = new Array(arguments.length - 3);
          while (G__13681__i < G__13681__a.length) {
            G__13681__a[G__13681__i] = arguments[G__13681__i + 3];
            ++G__13681__i;
          }
          ds = new cljs.core.IndexedSeq(G__13681__a, 0, null);
        }
        return G__13680__delegate.call(this, a, b, c, ds);
      };
      G__13680.cljs$lang$maxFixedArity = 3;
      G__13680.cljs$lang$applyTo = function(arglist__13682) {
        var a = cljs.core.first(arglist__13682);
        arglist__13682 = cljs.core.next(arglist__13682);
        var b = cljs.core.first(arglist__13682);
        arglist__13682 = cljs.core.next(arglist__13682);
        var c = cljs.core.first(arglist__13682);
        var ds = cljs.core.rest(arglist__13682);
        return G__13680__delegate(a, b, c, ds);
      };
      G__13680.cljs$core$IFn$_invoke$arity$variadic = G__13680__delegate;
      return G__13680;
    }();
    G__13679 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 1:
          return G__13679__1.call(this, a);
        case 2:
          return G__13679__2.call(this, a, b);
        case 3:
          return G__13679__3.call(this, a, b, c);
        default:
          var G__13683 = null;
          if (arguments.length > 3) {
            var G__13684__i = 0, G__13684__a = new Array(arguments.length - 3);
            while (G__13684__i < G__13684__a.length) {
              G__13684__a[G__13684__i] = arguments[G__13684__i + 3];
              ++G__13684__i;
            }
            G__13683 = new cljs.core.IndexedSeq(G__13684__a, 0, null);
          }
          return G__13679__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13683);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13679.cljs$lang$maxFixedArity = 3;
    G__13679.cljs$lang$applyTo = G__13679__4.cljs$lang$applyTo;
    G__13679.cljs$core$IFn$_invoke$arity$1 = G__13679__1;
    G__13679.cljs$core$IFn$_invoke$arity$2 = G__13679__2;
    G__13679.cljs$core$IFn$_invoke$arity$3 = G__13679__3;
    G__13679.cljs$core$IFn$_invoke$arity$variadic = G__13679__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13679;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 = function(f, x, y) {
  return function() {
    var G__13685 = null;
    var G__13685__2 = function(a, b) {
      var G__13668 = a == null ? x : a;
      var G__13669 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13668, G__13669) : f.call(null, G__13668, G__13669);
    };
    var G__13685__3 = function(a, b, c) {
      var G__13670 = a == null ? x : a;
      var G__13671 = b == null ? y : b;
      var G__13672 = c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13670, G__13671, G__13672) : f.call(null, G__13670, G__13671, G__13672);
    };
    var G__13685__4 = function() {
      var G__13686__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
      };
      var G__13686 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__13687__i = 0, G__13687__a = new Array(arguments.length - 3);
          while (G__13687__i < G__13687__a.length) {
            G__13687__a[G__13687__i] = arguments[G__13687__i + 3];
            ++G__13687__i;
          }
          ds = new cljs.core.IndexedSeq(G__13687__a, 0, null);
        }
        return G__13686__delegate.call(this, a, b, c, ds);
      };
      G__13686.cljs$lang$maxFixedArity = 3;
      G__13686.cljs$lang$applyTo = function(arglist__13688) {
        var a = cljs.core.first(arglist__13688);
        arglist__13688 = cljs.core.next(arglist__13688);
        var b = cljs.core.first(arglist__13688);
        arglist__13688 = cljs.core.next(arglist__13688);
        var c = cljs.core.first(arglist__13688);
        var ds = cljs.core.rest(arglist__13688);
        return G__13686__delegate(a, b, c, ds);
      };
      G__13686.cljs$core$IFn$_invoke$arity$variadic = G__13686__delegate;
      return G__13686;
    }();
    G__13685 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__13685__2.call(this, a, b);
        case 3:
          return G__13685__3.call(this, a, b, c);
        default:
          var G__13689 = null;
          if (arguments.length > 3) {
            var G__13690__i = 0, G__13690__a = new Array(arguments.length - 3);
            while (G__13690__i < G__13690__a.length) {
              G__13690__a[G__13690__i] = arguments[G__13690__i + 3];
              ++G__13690__i;
            }
            G__13689 = new cljs.core.IndexedSeq(G__13690__a, 0, null);
          }
          return G__13685__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13689);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13685.cljs$lang$maxFixedArity = 3;
    G__13685.cljs$lang$applyTo = G__13685__4.cljs$lang$applyTo;
    G__13685.cljs$core$IFn$_invoke$arity$2 = G__13685__2;
    G__13685.cljs$core$IFn$_invoke$arity$3 = G__13685__3;
    G__13685.cljs$core$IFn$_invoke$arity$variadic = G__13685__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13685;
  }();
};
cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 = function(f, x, y, z) {
  return function() {
    var G__13691 = null;
    var G__13691__2 = function(a, b) {
      var G__13673 = a == null ? x : a;
      var G__13674 = b == null ? y : b;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13673, G__13674) : f.call(null, G__13673, G__13674);
    };
    var G__13691__3 = function(a, b, c) {
      var G__13675 = a == null ? x : a;
      var G__13676 = b == null ? y : b;
      var G__13677 = c == null ? z : c;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13675, G__13676, G__13677) : f.call(null, G__13675, G__13676, G__13677);
    };
    var G__13691__4 = function() {
      var G__13692__delegate = function(a, b, c, ds) {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
      };
      var G__13692 = function(a, b, c, var_args) {
        var ds = null;
        if (arguments.length > 3) {
          var G__13693__i = 0, G__13693__a = new Array(arguments.length - 3);
          while (G__13693__i < G__13693__a.length) {
            G__13693__a[G__13693__i] = arguments[G__13693__i + 3];
            ++G__13693__i;
          }
          ds = new cljs.core.IndexedSeq(G__13693__a, 0, null);
        }
        return G__13692__delegate.call(this, a, b, c, ds);
      };
      G__13692.cljs$lang$maxFixedArity = 3;
      G__13692.cljs$lang$applyTo = function(arglist__13694) {
        var a = cljs.core.first(arglist__13694);
        arglist__13694 = cljs.core.next(arglist__13694);
        var b = cljs.core.first(arglist__13694);
        arglist__13694 = cljs.core.next(arglist__13694);
        var c = cljs.core.first(arglist__13694);
        var ds = cljs.core.rest(arglist__13694);
        return G__13692__delegate(a, b, c, ds);
      };
      G__13692.cljs$core$IFn$_invoke$arity$variadic = G__13692__delegate;
      return G__13692;
    }();
    G__13691 = function(a, b, c, var_args) {
      var ds = var_args;
      switch(arguments.length) {
        case 2:
          return G__13691__2.call(this, a, b);
        case 3:
          return G__13691__3.call(this, a, b, c);
        default:
          var G__13695 = null;
          if (arguments.length > 3) {
            var G__13696__i = 0, G__13696__a = new Array(arguments.length - 3);
            while (G__13696__i < G__13696__a.length) {
              G__13696__a[G__13696__i] = arguments[G__13696__i + 3];
              ++G__13696__i;
            }
            G__13695 = new cljs.core.IndexedSeq(G__13696__a, 0, null);
          }
          return G__13691__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__13695);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__13691.cljs$lang$maxFixedArity = 3;
    G__13691.cljs$lang$applyTo = G__13691__4.cljs$lang$applyTo;
    G__13691.cljs$core$IFn$_invoke$arity$2 = G__13691__2;
    G__13691.cljs$core$IFn$_invoke$arity$3 = G__13691__3;
    G__13691.cljs$core$IFn$_invoke$arity$variadic = G__13691__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__13691;
  }();
};
cljs.core.fnil.cljs$lang$maxFixedArity = 4;
cljs.core.map_indexed = function cljs$core$map_indexed(var_args) {
  var G__13698 = arguments.length;
  switch(G__13698) {
    case 1:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var i = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__13712 = null;
      var G__13712__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13712__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13712__2 = function(result, input) {
        var G__13699 = result;
        var G__13700 = function() {
          var G__13701 = i.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, i.cljs$core$IDeref$_deref$arity$1(null) + 1);
          var G__13702 = input;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13701, G__13702) : f.call(null, G__13701, G__13702);
        }();
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13699, G__13700) : rf.call(null, G__13699, G__13700);
      };
      G__13712 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13712__0.call(this);
          case 1:
            return G__13712__1.call(this, result);
          case 2:
            return G__13712__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13712.cljs$core$IFn$_invoke$arity$0 = G__13712__0;
      G__13712.cljs$core$IFn$_invoke$arity$1 = G__13712__1;
      G__13712.cljs$core$IFn$_invoke$arity$2 = G__13712__2;
      return G__13712;
    }();
  };
};
cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var mapi = function cljs$core$mapi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5735__auto__ = cljs.core.seq(coll__$1);
      if (temp__5735__auto__) {
        var s = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4613__auto___13713 = size;
          var i_13714 = 0;
          while (true) {
            if (i_13714 < n__4613__auto___13713) {
              cljs.core.chunk_append(b, function() {
                var G__13707 = idx + i_13714;
                var G__13708 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13714);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13707, G__13708) : f.call(null, G__13707, G__13708);
              }());
              var G__13715 = i_13714 + 1;
              i_13714 = G__13715;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$mapi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__13709 = idx;
            var G__13710 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13709, G__13710) : f.call(null, G__13709, G__13710);
          }(), cljs$core$mapi(idx + 1, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return mapi(0, coll);
};
cljs.core.map_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.keep = function cljs$core$keep(var_args) {
  var G__13717 = arguments.length;
  switch(G__13717) {
    case 1:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__13721 = null;
      var G__13721__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13721__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13721__2 = function(result, input) {
        var v = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__13721 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13721__0.call(this);
          case 1:
            return G__13721__1.call(this, result);
          case 2:
            return G__13721__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13721.cljs$core$IFn$_invoke$arity$0 = G__13721__0;
      G__13721.cljs$core$IFn$_invoke$arity$1 = G__13721__1;
      G__13721.cljs$core$IFn$_invoke$arity$2 = G__13721__2;
      return G__13721;
    }();
  };
};
cljs.core.keep.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4613__auto___13722 = size;
        var i_13723 = 0;
        while (true) {
          if (i_13723 < n__4613__auto___13722) {
            var x_13724 = function() {
              var G__13718 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13723);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13718) : f.call(null, G__13718);
            }();
            if (x_13724 == null) {
            } else {
              cljs.core.chunk_append(b, x_13724);
            }
            var G__13725 = i_13723 + 1;
            i_13723 = G__13725;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        var x = function() {
          var G__13719 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13719) : f.call(null, G__13719);
        }();
        if (x == null) {
          return cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
        } else {
          return cljs.core.cons(x, cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.keep.cljs$lang$maxFixedArity = 2;
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__13726 = cljs.core.seq(self__.watches);
  var chunk__13727 = null;
  var count__13728 = 0;
  var i__13729 = 0;
  while (true) {
    if (i__13729 < count__13728) {
      var vec__13736 = chunk__13727.cljs$core$IIndexed$_nth$arity$2(null, i__13729);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13736, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13736, 1, null);
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
      var G__13742 = seq__13726;
      var G__13743 = chunk__13727;
      var G__13744 = count__13728;
      var G__13745 = i__13729 + 1;
      seq__13726 = G__13742;
      chunk__13727 = G__13743;
      count__13728 = G__13744;
      i__13729 = G__13745;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq(seq__13726);
      if (temp__5735__auto__) {
        var seq__13726__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13726__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__13726__$1);
          var G__13746 = cljs.core.chunk_rest(seq__13726__$1);
          var G__13747 = c__4556__auto__;
          var G__13748 = cljs.core.count(c__4556__auto__);
          var G__13749 = 0;
          seq__13726 = G__13746;
          chunk__13727 = G__13747;
          count__13728 = G__13748;
          i__13729 = G__13749;
          continue;
        } else {
          var vec__13739 = cljs.core.first(seq__13726__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13739, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13739, 1, null);
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key, this$__$1, oldval, newval) : f.call(null, key, this$__$1, oldval, newval);
          var G__13750 = cljs.core.next(seq__13726__$1);
          var G__13751 = null;
          var G__13752 = 0;
          var G__13753 = 0;
          seq__13726 = G__13750;
          chunk__13727 = G__13751;
          count__13728 = G__13752;
          i__13729 = G__13753;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.Atom.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "validator", "validator", -325659154, null), new cljs.core.Symbol(null, "watches", "watches", 1367433992, null)], null);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function cljs$core$__GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function cljs$core$atom(var_args) {
  var G__13757 = arguments.length;
  switch(G__13757) {
    case 1:
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13762 = arguments.length;
      var i__4737__auto___13763 = 0;
      while (true) {
        if (i__4737__auto___13763 < len__4736__auto___13762) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13763]);
          var G__13764 = i__4737__auto___13763 + 1;
          i__4737__auto___13763 = G__13764;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Atom(x, null, null, null);
};
cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic = function(x, p__13758) {
  var map__13759 = p__13758;
  var map__13759__$1 = (!(map__13759 == null) ? map__13759.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__13759.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__13759) : map__13759;
  var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13759__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
  var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__13759__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
  return new cljs.core.Atom(x, meta, validator, null);
};
cljs.core.atom.cljs$lang$applyTo = function(seq13755) {
  var G__13756 = cljs.core.first(seq13755);
  var seq13755__$1 = cljs.core.next(seq13755);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13756, seq13755__$1);
};
cljs.core.atom.cljs$lang$maxFixedArity = 1;
cljs.core.reset_BANG_ = function cljs$core$reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
      } else {
        throw new Error("Validator rejected reference state");
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      a.cljs$core$IWatchable$_notify_watches$arity$3(null, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.reset_vals_BANG_ = function cljs$core$reset_vals_BANG_(a, new_value) {
  var validate = a.validator;
  if (validate == null) {
  } else {
    if (cljs.core.truth_(validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null, new_value))) {
    } else {
      throw new Error("Validator rejected reference state");
    }
  }
  var old_value = a.state;
  a.state = new_value;
  if (a.watches == null) {
  } else {
    cljs.core._notify_watches(a, old_value, new_value);
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value, new_value], null);
};
cljs.core.swap_BANG_ = function cljs$core$swap_BANG_(var_args) {
  var G__13771 = arguments.length;
  switch(G__13771) {
    case 2:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13779 = arguments.length;
      var i__4737__auto___13780 = 0;
      while (true) {
        if (i__4737__auto___13780 < len__4736__auto___13779) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13780]);
          var G__13781 = i__4737__auto___13780 + 1;
          i__4737__auto___13780 = G__13781;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__13772 = a.state;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13772) : f.call(null, G__13772);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__13773 = a.state;
      var G__13774 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13773, G__13774) : f.call(null, G__13773, G__13774);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, function() {
      var G__13775 = a.state;
      var G__13776 = x;
      var G__13777 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13775, G__13776, G__13777) : f.call(null, G__13775, G__13776, G__13777);
    }());
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
  }
};
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  if (a instanceof cljs.core.Atom) {
    return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
  } else {
    return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
  }
};
cljs.core.swap_BANG_.cljs$lang$applyTo = function(seq13766) {
  var G__13767 = cljs.core.first(seq13766);
  var seq13766__$1 = cljs.core.next(seq13766);
  var G__13768 = cljs.core.first(seq13766__$1);
  var seq13766__$2 = cljs.core.next(seq13766__$1);
  var G__13769 = cljs.core.first(seq13766__$2);
  var seq13766__$3 = cljs.core.next(seq13766__$2);
  var G__13770 = cljs.core.first(seq13766__$3);
  var seq13766__$4 = cljs.core.next(seq13766__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13767, G__13768, G__13769, G__13770, seq13766__$4);
};
cljs.core.swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.swap_vals_BANG_ = function cljs$core$swap_vals_BANG_(var_args) {
  var G__13788 = arguments.length;
  switch(G__13788) {
    case 2:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13796 = arguments.length;
      var i__4737__auto___13797 = 0;
      while (true) {
        if (i__4737__auto___13797 < len__4736__auto___13796) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13797]);
          var G__13798 = i__4737__auto___13797 + 1;
          i__4737__auto___13797 = G__13798;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 = function(a, f) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__13789 = a.state;
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13789) : f.call(null, G__13789);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 = function(a, f, x) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__13790 = a.state;
    var G__13791 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13790, G__13791) : f.call(null, G__13790, G__13791);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 = function(a, f, x, y) {
  return cljs.core.reset_vals_BANG_(a, function() {
    var G__13792 = a.state;
    var G__13793 = x;
    var G__13794 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13792, G__13793, G__13794) : f.call(null, G__13792, G__13793, G__13794);
  }());
};
cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(a, f, x, y, more) {
  return cljs.core.reset_vals_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
};
cljs.core.swap_vals_BANG_.cljs$lang$applyTo = function(seq13783) {
  var G__13784 = cljs.core.first(seq13783);
  var seq13783__$1 = cljs.core.next(seq13783);
  var G__13785 = cljs.core.first(seq13783__$1);
  var seq13783__$2 = cljs.core.next(seq13783__$1);
  var G__13786 = cljs.core.first(seq13783__$2);
  var seq13783__$3 = cljs.core.next(seq13783__$2);
  var G__13787 = cljs.core.first(seq13783__$3);
  var seq13783__$4 = cljs.core.next(seq13783__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13784, G__13785, G__13786, G__13787, seq13783__$4);
};
cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity = 4;
cljs.core.compare_and_set_BANG_ = function cljs$core$compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function cljs$core$set_validator_BANG_(iref, val) {
  if (!(val == null) && cljs.core.not(function() {
    var G__13800 = cljs.core._deref(iref);
    return val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__13800) : val.call(null, G__13800);
  }())) {
    throw new Error("Validator rejected reference state");
  } else {
  }
  return iref.validator = val;
};
cljs.core.get_validator = function cljs$core$get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "state", "state", -348086572, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function cljs$core$__GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function cljs$core$volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function cljs$core$volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function cljs$core$vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function cljs$core$keep_indexed(var_args) {
  var G__13802 = arguments.length;
  switch(G__13802) {
    case 1:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__13812 = null;
      var G__13812__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13812__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13812__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        var v = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i, input) : f.call(null, i, input);
        if (v == null) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        }
      };
      G__13812 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13812__0.call(this);
          case 1:
            return G__13812__1.call(this, result);
          case 2:
            return G__13812__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13812.cljs$core$IFn$_invoke$arity$0 = G__13812__0;
      G__13812.cljs$core$IFn$_invoke$arity$1 = G__13812__1;
      G__13812.cljs$core$IFn$_invoke$arity$2 = G__13812__2;
      return G__13812;
    }();
  };
};
cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  var keepi = function cljs$core$keepi(idx, coll__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5735__auto__ = cljs.core.seq(coll__$1);
      if (temp__5735__auto__) {
        var s = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4613__auto___13813 = size;
          var i_13814 = 0;
          while (true) {
            if (i_13814 < n__4613__auto___13813) {
              var x_13815 = function() {
                var G__13807 = idx + i_13814;
                var G__13808 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13814);
                return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13807, G__13808) : f.call(null, G__13807, G__13808);
              }();
              if (x_13815 == null) {
              } else {
                cljs.core.chunk_append(b, x_13815);
              }
              var G__13816 = i_13814 + 1;
              i_13814 = G__13816;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), cljs$core$keepi(idx + size, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__13809 = idx;
            var G__13810 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13809, G__13810) : f.call(null, G__13809, G__13810);
          }();
          if (x == null) {
            return cljs$core$keepi(idx + 1, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, cljs$core$keepi(idx + 1, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  return keepi(0, coll);
};
cljs.core.keep_indexed.cljs$lang$maxFixedArity = 2;
cljs.core.every_pred = function cljs$core$every_pred(var_args) {
  var G__13828 = arguments.length;
  switch(G__13828) {
    case 1:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13830 = arguments.length;
      var i__4737__auto___13831 = 0;
      while (true) {
        if (i__4737__auto___13831 < len__4736__auto___13830) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13831]);
          var G__13832 = i__4737__auto___13831 + 1;
          i__4737__auto___13831 = G__13832;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$ep1 = null;
    var cljs$core$ep1__0 = function() {
      return true;
    };
    var cljs$core$ep1__1 = function(x) {
      return cljs.core.boolean$(p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x));
    };
    var cljs$core$ep1__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep1__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep1__4 = function() {
      var G__13833__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4115__auto__ = cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.every_QMARK_(p, args);
          } else {
            return and__4115__auto__;
          }
        }());
      };
      var G__13833 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13834__i = 0, G__13834__a = new Array(arguments.length - 3);
          while (G__13834__i < G__13834__a.length) {
            G__13834__a[G__13834__i] = arguments[G__13834__i + 3];
            ++G__13834__i;
          }
          args = new cljs.core.IndexedSeq(G__13834__a, 0, null);
        }
        return G__13833__delegate.call(this, x, y, z, args);
      };
      G__13833.cljs$lang$maxFixedArity = 3;
      G__13833.cljs$lang$applyTo = function(arglist__13835) {
        var x = cljs.core.first(arglist__13835);
        arglist__13835 = cljs.core.next(arglist__13835);
        var y = cljs.core.first(arglist__13835);
        arglist__13835 = cljs.core.next(arglist__13835);
        var z = cljs.core.first(arglist__13835);
        var args = cljs.core.rest(arglist__13835);
        return G__13833__delegate(x, y, z, args);
      };
      G__13833.cljs$core$IFn$_invoke$arity$variadic = G__13833__delegate;
      return G__13833;
    }();
    cljs$core$ep1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep1__0.call(this);
        case 1:
          return cljs$core$ep1__1.call(this, x);
        case 2:
          return cljs$core$ep1__2.call(this, x, y);
        case 3:
          return cljs$core$ep1__3.call(this, x, y, z);
        default:
          var G__13836 = null;
          if (arguments.length > 3) {
            var G__13837__i = 0, G__13837__a = new Array(arguments.length - 3);
            while (G__13837__i < G__13837__a.length) {
              G__13837__a[G__13837__i] = arguments[G__13837__i + 3];
              ++G__13837__i;
            }
            G__13836 = new cljs.core.IndexedSeq(G__13837__a, 0, null);
          }
          return cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13836);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep1.cljs$lang$maxFixedArity = 3;
    cljs$core$ep1.cljs$lang$applyTo = cljs$core$ep1__4.cljs$lang$applyTo;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep1__0;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep1__1;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep1__2;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep1__3;
    cljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep1;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$ep2 = null;
    var cljs$core$ep2__0 = function() {
      return true;
    };
    var cljs$core$ep2__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep2__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            var and__4115__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(and__4115__auto____$2)) {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
            } else {
              return and__4115__auto____$2;
            }
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep2__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            var and__4115__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
            if (cljs.core.truth_(and__4115__auto____$2)) {
              var and__4115__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
              if (cljs.core.truth_(and__4115__auto____$3)) {
                var and__4115__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4115__auto____$4)) {
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                } else {
                  return and__4115__auto____$4;
                }
              } else {
                return and__4115__auto____$3;
              }
            } else {
              return and__4115__auto____$2;
            }
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep2__4 = function() {
      var G__13838__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4115__auto__ = cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.every_QMARK_(function(p1__13817_SHARP_) {
              var and__4115__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__13817_SHARP_) : p1.call(null, p1__13817_SHARP_);
              if (cljs.core.truth_(and__4115__auto____$1)) {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__13817_SHARP_) : p2.call(null, p1__13817_SHARP_);
              } else {
                return and__4115__auto____$1;
              }
            }, args);
          } else {
            return and__4115__auto__;
          }
        }());
      };
      var G__13838 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13839__i = 0, G__13839__a = new Array(arguments.length - 3);
          while (G__13839__i < G__13839__a.length) {
            G__13839__a[G__13839__i] = arguments[G__13839__i + 3];
            ++G__13839__i;
          }
          args = new cljs.core.IndexedSeq(G__13839__a, 0, null);
        }
        return G__13838__delegate.call(this, x, y, z, args);
      };
      G__13838.cljs$lang$maxFixedArity = 3;
      G__13838.cljs$lang$applyTo = function(arglist__13840) {
        var x = cljs.core.first(arglist__13840);
        arglist__13840 = cljs.core.next(arglist__13840);
        var y = cljs.core.first(arglist__13840);
        arglist__13840 = cljs.core.next(arglist__13840);
        var z = cljs.core.first(arglist__13840);
        var args = cljs.core.rest(arglist__13840);
        return G__13838__delegate(x, y, z, args);
      };
      G__13838.cljs$core$IFn$_invoke$arity$variadic = G__13838__delegate;
      return G__13838;
    }();
    cljs$core$ep2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep2__0.call(this);
        case 1:
          return cljs$core$ep2__1.call(this, x);
        case 2:
          return cljs$core$ep2__2.call(this, x, y);
        case 3:
          return cljs$core$ep2__3.call(this, x, y, z);
        default:
          var G__13841 = null;
          if (arguments.length > 3) {
            var G__13842__i = 0, G__13842__a = new Array(arguments.length - 3);
            while (G__13842__i < G__13842__a.length) {
              G__13842__a[G__13842__i] = arguments[G__13842__i + 3];
              ++G__13842__i;
            }
            G__13841 = new cljs.core.IndexedSeq(G__13842__a, 0, null);
          }
          return cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13841);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep2.cljs$lang$maxFixedArity = 3;
    cljs$core$ep2.cljs$lang$applyTo = cljs$core$ep2__4.cljs$lang$applyTo;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep2__0;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep2__1;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep2__2;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep2__3;
    cljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep2;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$ep3 = null;
    var cljs$core$ep3__0 = function() {
      return true;
    };
    var cljs$core$ep3__1 = function(x) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep3__2 = function(x, y) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            var and__4115__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4115__auto____$2)) {
              var and__4115__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4115__auto____$3)) {
                var and__4115__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4115__auto____$4)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                } else {
                  return and__4115__auto____$4;
                }
              } else {
                return and__4115__auto____$3;
              }
            } else {
              return and__4115__auto____$2;
            }
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep3__3 = function(x, y, z) {
      return cljs.core.boolean$(function() {
        var and__4115__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            var and__4115__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
            if (cljs.core.truth_(and__4115__auto____$2)) {
              var and__4115__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
              if (cljs.core.truth_(and__4115__auto____$3)) {
                var and__4115__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
                if (cljs.core.truth_(and__4115__auto____$4)) {
                  var and__4115__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                  if (cljs.core.truth_(and__4115__auto____$5)) {
                    var and__4115__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                    if (cljs.core.truth_(and__4115__auto____$6)) {
                      var and__4115__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                      if (cljs.core.truth_(and__4115__auto____$7)) {
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                      } else {
                        return and__4115__auto____$7;
                      }
                    } else {
                      return and__4115__auto____$6;
                    }
                  } else {
                    return and__4115__auto____$5;
                  }
                } else {
                  return and__4115__auto____$4;
                }
              } else {
                return and__4115__auto____$3;
              }
            } else {
              return and__4115__auto____$2;
            }
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }());
    };
    var cljs$core$ep3__4 = function() {
      var G__13843__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4115__auto__ = cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.every_QMARK_(function(p1__13818_SHARP_) {
              var and__4115__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__13818_SHARP_) : p1.call(null, p1__13818_SHARP_);
              if (cljs.core.truth_(and__4115__auto____$1)) {
                var and__4115__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__13818_SHARP_) : p2.call(null, p1__13818_SHARP_);
                if (cljs.core.truth_(and__4115__auto____$2)) {
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__13818_SHARP_) : p3.call(null, p1__13818_SHARP_);
                } else {
                  return and__4115__auto____$2;
                }
              } else {
                return and__4115__auto____$1;
              }
            }, args);
          } else {
            return and__4115__auto__;
          }
        }());
      };
      var G__13843 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13844__i = 0, G__13844__a = new Array(arguments.length - 3);
          while (G__13844__i < G__13844__a.length) {
            G__13844__a[G__13844__i] = arguments[G__13844__i + 3];
            ++G__13844__i;
          }
          args = new cljs.core.IndexedSeq(G__13844__a, 0, null);
        }
        return G__13843__delegate.call(this, x, y, z, args);
      };
      G__13843.cljs$lang$maxFixedArity = 3;
      G__13843.cljs$lang$applyTo = function(arglist__13845) {
        var x = cljs.core.first(arglist__13845);
        arglist__13845 = cljs.core.next(arglist__13845);
        var y = cljs.core.first(arglist__13845);
        arglist__13845 = cljs.core.next(arglist__13845);
        var z = cljs.core.first(arglist__13845);
        var args = cljs.core.rest(arglist__13845);
        return G__13843__delegate(x, y, z, args);
      };
      G__13843.cljs$core$IFn$_invoke$arity$variadic = G__13843__delegate;
      return G__13843;
    }();
    cljs$core$ep3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$ep3__0.call(this);
        case 1:
          return cljs$core$ep3__1.call(this, x);
        case 2:
          return cljs$core$ep3__2.call(this, x, y);
        case 3:
          return cljs$core$ep3__3.call(this, x, y, z);
        default:
          var G__13846 = null;
          if (arguments.length > 3) {
            var G__13847__i = 0, G__13847__a = new Array(arguments.length - 3);
            while (G__13847__i < G__13847__a.length) {
              G__13847__a[G__13847__i] = arguments[G__13847__i + 3];
              ++G__13847__i;
            }
            G__13846 = new cljs.core.IndexedSeq(G__13847__a, 0, null);
          }
          return cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13846);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$ep3.cljs$lang$maxFixedArity = 3;
    cljs$core$ep3.cljs$lang$applyTo = cljs$core$ep3__4.cljs$lang$applyTo;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$ep3__0;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$ep3__1;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$ep3__2;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$ep3__3;
    cljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$ep3;
  }();
};
cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$epn = null;
    var cljs$core$epn__0 = function() {
      return true;
    };
    var cljs$core$epn__1 = function(x) {
      return cljs.core.every_QMARK_(function(p1__13819_SHARP_) {
        return p1__13819_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13819_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__13819_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$epn__2 = function(x, y) {
      return cljs.core.every_QMARK_(function(p1__13820_SHARP_) {
        var and__4115__auto__ = p1__13820_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13820_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__13820_SHARP_.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          return p1__13820_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13820_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__13820_SHARP_.call(null, y);
        } else {
          return and__4115__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__3 = function(x, y, z) {
      return cljs.core.every_QMARK_(function(p1__13821_SHARP_) {
        var and__4115__auto__ = p1__13821_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13821_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__13821_SHARP_.call(null, x);
        if (cljs.core.truth_(and__4115__auto__)) {
          var and__4115__auto____$1 = p1__13821_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13821_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__13821_SHARP_.call(null, y);
          if (cljs.core.truth_(and__4115__auto____$1)) {
            return p1__13821_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13821_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__13821_SHARP_.call(null, z);
          } else {
            return and__4115__auto____$1;
          }
        } else {
          return and__4115__auto__;
        }
      }, ps__$1);
    };
    var cljs$core$epn__4 = function() {
      var G__13848__delegate = function(x, y, z, args) {
        return cljs.core.boolean$(function() {
          var and__4115__auto__ = cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(and__4115__auto__)) {
            return cljs.core.every_QMARK_(function(p1__13822_SHARP_) {
              return cljs.core.every_QMARK_(p1__13822_SHARP_, args);
            }, ps__$1);
          } else {
            return and__4115__auto__;
          }
        }());
      };
      var G__13848 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13849__i = 0, G__13849__a = new Array(arguments.length - 3);
          while (G__13849__i < G__13849__a.length) {
            G__13849__a[G__13849__i] = arguments[G__13849__i + 3];
            ++G__13849__i;
          }
          args = new cljs.core.IndexedSeq(G__13849__a, 0, null);
        }
        return G__13848__delegate.call(this, x, y, z, args);
      };
      G__13848.cljs$lang$maxFixedArity = 3;
      G__13848.cljs$lang$applyTo = function(arglist__13850) {
        var x = cljs.core.first(arglist__13850);
        arglist__13850 = cljs.core.next(arglist__13850);
        var y = cljs.core.first(arglist__13850);
        arglist__13850 = cljs.core.next(arglist__13850);
        var z = cljs.core.first(arglist__13850);
        var args = cljs.core.rest(arglist__13850);
        return G__13848__delegate(x, y, z, args);
      };
      G__13848.cljs$core$IFn$_invoke$arity$variadic = G__13848__delegate;
      return G__13848;
    }();
    cljs$core$epn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$epn__0.call(this);
        case 1:
          return cljs$core$epn__1.call(this, x);
        case 2:
          return cljs$core$epn__2.call(this, x, y);
        case 3:
          return cljs$core$epn__3.call(this, x, y, z);
        default:
          var G__13851 = null;
          if (arguments.length > 3) {
            var G__13852__i = 0, G__13852__a = new Array(arguments.length - 3);
            while (G__13852__i < G__13852__a.length) {
              G__13852__a[G__13852__i] = arguments[G__13852__i + 3];
              ++G__13852__i;
            }
            G__13851 = new cljs.core.IndexedSeq(G__13852__a, 0, null);
          }
          return cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13851);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$epn.cljs$lang$maxFixedArity = 3;
    cljs$core$epn.cljs$lang$applyTo = cljs$core$epn__4.cljs$lang$applyTo;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$epn__0;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$epn__1;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$epn__2;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$epn__3;
    cljs$core$epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$epn;
  }();
};
cljs.core.every_pred.cljs$lang$applyTo = function(seq13824) {
  var G__13825 = cljs.core.first(seq13824);
  var seq13824__$1 = cljs.core.next(seq13824);
  var G__13826 = cljs.core.first(seq13824__$1);
  var seq13824__$2 = cljs.core.next(seq13824__$1);
  var G__13827 = cljs.core.first(seq13824__$2);
  var seq13824__$3 = cljs.core.next(seq13824__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13825, G__13826, G__13827, seq13824__$3);
};
cljs.core.every_pred.cljs$lang$maxFixedArity = 3;
cljs.core.some_fn = function cljs$core$some_fn(var_args) {
  var G__13864 = arguments.length;
  switch(G__13864) {
    case 1:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13866 = arguments.length;
      var i__4737__auto___13867 = 0;
      while (true) {
        if (i__4737__auto___13867 < len__4736__auto___13866) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13867]);
          var G__13868 = i__4737__auto___13867 + 1;
          i__4737__auto___13867 = G__13868;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 = function(p) {
  return function() {
    var cljs$core$sp1 = null;
    var cljs$core$sp1__0 = function() {
      return null;
    };
    var cljs$core$sp1__1 = function(x) {
      return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
    };
    var cljs$core$sp1__2 = function(x, y) {
      var or__4126__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
      }
    };
    var cljs$core$sp1__3 = function(x, y, z) {
      var or__4126__auto__ = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null, y);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null, z);
        }
      }
    };
    var cljs$core$sp1__4 = function() {
      var G__13869__delegate = function(x, y, z, args) {
        var or__4126__auto__ = cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.some(p, args);
        }
      };
      var G__13869 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13870__i = 0, G__13870__a = new Array(arguments.length - 3);
          while (G__13870__i < G__13870__a.length) {
            G__13870__a[G__13870__i] = arguments[G__13870__i + 3];
            ++G__13870__i;
          }
          args = new cljs.core.IndexedSeq(G__13870__a, 0, null);
        }
        return G__13869__delegate.call(this, x, y, z, args);
      };
      G__13869.cljs$lang$maxFixedArity = 3;
      G__13869.cljs$lang$applyTo = function(arglist__13871) {
        var x = cljs.core.first(arglist__13871);
        arglist__13871 = cljs.core.next(arglist__13871);
        var y = cljs.core.first(arglist__13871);
        arglist__13871 = cljs.core.next(arglist__13871);
        var z = cljs.core.first(arglist__13871);
        var args = cljs.core.rest(arglist__13871);
        return G__13869__delegate(x, y, z, args);
      };
      G__13869.cljs$core$IFn$_invoke$arity$variadic = G__13869__delegate;
      return G__13869;
    }();
    cljs$core$sp1 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp1__0.call(this);
        case 1:
          return cljs$core$sp1__1.call(this, x);
        case 2:
          return cljs$core$sp1__2.call(this, x, y);
        case 3:
          return cljs$core$sp1__3.call(this, x, y, z);
        default:
          var G__13872 = null;
          if (arguments.length > 3) {
            var G__13873__i = 0, G__13873__a = new Array(arguments.length - 3);
            while (G__13873__i < G__13873__a.length) {
              G__13873__a[G__13873__i] = arguments[G__13873__i + 3];
              ++G__13873__i;
            }
            G__13872 = new cljs.core.IndexedSeq(G__13873__a, 0, null);
          }
          return cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13872);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp1.cljs$lang$maxFixedArity = 3;
    cljs$core$sp1.cljs$lang$applyTo = cljs$core$sp1__4.cljs$lang$applyTo;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp1__0;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp1__1;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp1__2;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp1__3;
    cljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp1;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 = function(p1, p2) {
  return function() {
    var cljs$core$sp2 = null;
    var cljs$core$sp2__0 = function() {
      return null;
    };
    var cljs$core$sp2__1 = function(x) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
      }
    };
    var cljs$core$sp2__2 = function(x, y) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          var or__4126__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
          if (cljs.core.truth_(or__4126__auto____$2)) {
            return or__4126__auto____$2;
          } else {
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
          }
        }
      }
    };
    var cljs$core$sp2__3 = function(x, y, z) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          var or__4126__auto____$2 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
          if (cljs.core.truth_(or__4126__auto____$2)) {
            return or__4126__auto____$2;
          } else {
            var or__4126__auto____$3 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
            if (cljs.core.truth_(or__4126__auto____$3)) {
              return or__4126__auto____$3;
            } else {
              var or__4126__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4126__auto____$4)) {
                return or__4126__auto____$4;
              } else {
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp2__4 = function() {
      var G__13874__delegate = function(x, y, z, args) {
        var or__4126__auto__ = cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.some(function(p1__13853_SHARP_) {
            var or__4126__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__13853_SHARP_) : p1.call(null, p1__13853_SHARP_);
            if (cljs.core.truth_(or__4126__auto____$1)) {
              return or__4126__auto____$1;
            } else {
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__13853_SHARP_) : p2.call(null, p1__13853_SHARP_);
            }
          }, args);
        }
      };
      var G__13874 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13875__i = 0, G__13875__a = new Array(arguments.length - 3);
          while (G__13875__i < G__13875__a.length) {
            G__13875__a[G__13875__i] = arguments[G__13875__i + 3];
            ++G__13875__i;
          }
          args = new cljs.core.IndexedSeq(G__13875__a, 0, null);
        }
        return G__13874__delegate.call(this, x, y, z, args);
      };
      G__13874.cljs$lang$maxFixedArity = 3;
      G__13874.cljs$lang$applyTo = function(arglist__13876) {
        var x = cljs.core.first(arglist__13876);
        arglist__13876 = cljs.core.next(arglist__13876);
        var y = cljs.core.first(arglist__13876);
        arglist__13876 = cljs.core.next(arglist__13876);
        var z = cljs.core.first(arglist__13876);
        var args = cljs.core.rest(arglist__13876);
        return G__13874__delegate(x, y, z, args);
      };
      G__13874.cljs$core$IFn$_invoke$arity$variadic = G__13874__delegate;
      return G__13874;
    }();
    cljs$core$sp2 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp2__0.call(this);
        case 1:
          return cljs$core$sp2__1.call(this, x);
        case 2:
          return cljs$core$sp2__2.call(this, x, y);
        case 3:
          return cljs$core$sp2__3.call(this, x, y, z);
        default:
          var G__13877 = null;
          if (arguments.length > 3) {
            var G__13878__i = 0, G__13878__a = new Array(arguments.length - 3);
            while (G__13878__i < G__13878__a.length) {
              G__13878__a[G__13878__i] = arguments[G__13878__i + 3];
              ++G__13878__i;
            }
            G__13877 = new cljs.core.IndexedSeq(G__13878__a, 0, null);
          }
          return cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13877);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp2.cljs$lang$maxFixedArity = 3;
    cljs$core$sp2.cljs$lang$applyTo = cljs$core$sp2__4.cljs$lang$applyTo;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp2__0;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp2__1;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp2__2;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp2__3;
    cljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp2;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 = function(p1, p2, p3) {
  return function() {
    var cljs$core$sp3 = null;
    var cljs$core$sp3__0 = function() {
      return null;
    };
    var cljs$core$sp3__1 = function(x) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
        }
      }
    };
    var cljs$core$sp3__2 = function(x, y) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          var or__4126__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4126__auto____$2)) {
            return or__4126__auto____$2;
          } else {
            var or__4126__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4126__auto____$3)) {
              return or__4126__auto____$3;
            } else {
              var or__4126__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4126__auto____$4)) {
                return or__4126__auto____$4;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__3 = function(x, y, z) {
      var or__4126__auto__ = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null, x);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        var or__4126__auto____$1 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null, x);
        if (cljs.core.truth_(or__4126__auto____$1)) {
          return or__4126__auto____$1;
        } else {
          var or__4126__auto____$2 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null, x);
          if (cljs.core.truth_(or__4126__auto____$2)) {
            return or__4126__auto____$2;
          } else {
            var or__4126__auto____$3 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null, y);
            if (cljs.core.truth_(or__4126__auto____$3)) {
              return or__4126__auto____$3;
            } else {
              var or__4126__auto____$4 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null, y);
              if (cljs.core.truth_(or__4126__auto____$4)) {
                return or__4126__auto____$4;
              } else {
                var or__4126__auto____$5 = p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null, y);
                if (cljs.core.truth_(or__4126__auto____$5)) {
                  return or__4126__auto____$5;
                } else {
                  var or__4126__auto____$6 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null, z);
                  if (cljs.core.truth_(or__4126__auto____$6)) {
                    return or__4126__auto____$6;
                  } else {
                    var or__4126__auto____$7 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null, z);
                    if (cljs.core.truth_(or__4126__auto____$7)) {
                      return or__4126__auto____$7;
                    } else {
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null, z);
                    }
                  }
                }
              }
            }
          }
        }
      }
    };
    var cljs$core$sp3__4 = function() {
      var G__13879__delegate = function(x, y, z, args) {
        var or__4126__auto__ = cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.some(function(p1__13854_SHARP_) {
            var or__4126__auto____$1 = p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__13854_SHARP_) : p1.call(null, p1__13854_SHARP_);
            if (cljs.core.truth_(or__4126__auto____$1)) {
              return or__4126__auto____$1;
            } else {
              var or__4126__auto____$2 = p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__13854_SHARP_) : p2.call(null, p1__13854_SHARP_);
              if (cljs.core.truth_(or__4126__auto____$2)) {
                return or__4126__auto____$2;
              } else {
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__13854_SHARP_) : p3.call(null, p1__13854_SHARP_);
              }
            }
          }, args);
        }
      };
      var G__13879 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13880__i = 0, G__13880__a = new Array(arguments.length - 3);
          while (G__13880__i < G__13880__a.length) {
            G__13880__a[G__13880__i] = arguments[G__13880__i + 3];
            ++G__13880__i;
          }
          args = new cljs.core.IndexedSeq(G__13880__a, 0, null);
        }
        return G__13879__delegate.call(this, x, y, z, args);
      };
      G__13879.cljs$lang$maxFixedArity = 3;
      G__13879.cljs$lang$applyTo = function(arglist__13881) {
        var x = cljs.core.first(arglist__13881);
        arglist__13881 = cljs.core.next(arglist__13881);
        var y = cljs.core.first(arglist__13881);
        arglist__13881 = cljs.core.next(arglist__13881);
        var z = cljs.core.first(arglist__13881);
        var args = cljs.core.rest(arglist__13881);
        return G__13879__delegate(x, y, z, args);
      };
      G__13879.cljs$core$IFn$_invoke$arity$variadic = G__13879__delegate;
      return G__13879;
    }();
    cljs$core$sp3 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$sp3__0.call(this);
        case 1:
          return cljs$core$sp3__1.call(this, x);
        case 2:
          return cljs$core$sp3__2.call(this, x, y);
        case 3:
          return cljs$core$sp3__3.call(this, x, y, z);
        default:
          var G__13882 = null;
          if (arguments.length > 3) {
            var G__13883__i = 0, G__13883__a = new Array(arguments.length - 3);
            while (G__13883__i < G__13883__a.length) {
              G__13883__a[G__13883__i] = arguments[G__13883__i + 3];
              ++G__13883__i;
            }
            G__13882 = new cljs.core.IndexedSeq(G__13883__a, 0, null);
          }
          return cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13882);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$sp3.cljs$lang$maxFixedArity = 3;
    cljs$core$sp3.cljs$lang$applyTo = cljs$core$sp3__4.cljs$lang$applyTo;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$sp3__0;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$sp3__1;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$sp3__2;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$sp3__3;
    cljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$sp3;
  }();
};
cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic = function(p1, p2, p3, ps) {
  var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
  return function() {
    var cljs$core$spn = null;
    var cljs$core$spn__0 = function() {
      return null;
    };
    var cljs$core$spn__1 = function(x) {
      return cljs.core.some(function(p1__13855_SHARP_) {
        return p1__13855_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13855_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__13855_SHARP_.call(null, x);
      }, ps__$1);
    };
    var cljs$core$spn__2 = function(x, y) {
      return cljs.core.some(function(p1__13856_SHARP_) {
        var or__4126__auto__ = p1__13856_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13856_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__13856_SHARP_.call(null, x);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return p1__13856_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13856_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__13856_SHARP_.call(null, y);
        }
      }, ps__$1);
    };
    var cljs$core$spn__3 = function(x, y, z) {
      return cljs.core.some(function(p1__13857_SHARP_) {
        var or__4126__auto__ = p1__13857_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13857_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__13857_SHARP_.call(null, x);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          var or__4126__auto____$1 = p1__13857_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13857_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__13857_SHARP_.call(null, y);
          if (cljs.core.truth_(or__4126__auto____$1)) {
            return or__4126__auto____$1;
          } else {
            return p1__13857_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__13857_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__13857_SHARP_.call(null, z);
          }
        }
      }, ps__$1);
    };
    var cljs$core$spn__4 = function() {
      var G__13884__delegate = function(x, y, z, args) {
        var or__4126__auto__ = cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.some(function(p1__13858_SHARP_) {
            return cljs.core.some(p1__13858_SHARP_, args);
          }, ps__$1);
        }
      };
      var G__13884 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__13885__i = 0, G__13885__a = new Array(arguments.length - 3);
          while (G__13885__i < G__13885__a.length) {
            G__13885__a[G__13885__i] = arguments[G__13885__i + 3];
            ++G__13885__i;
          }
          args = new cljs.core.IndexedSeq(G__13885__a, 0, null);
        }
        return G__13884__delegate.call(this, x, y, z, args);
      };
      G__13884.cljs$lang$maxFixedArity = 3;
      G__13884.cljs$lang$applyTo = function(arglist__13886) {
        var x = cljs.core.first(arglist__13886);
        arglist__13886 = cljs.core.next(arglist__13886);
        var y = cljs.core.first(arglist__13886);
        arglist__13886 = cljs.core.next(arglist__13886);
        var z = cljs.core.first(arglist__13886);
        var args = cljs.core.rest(arglist__13886);
        return G__13884__delegate(x, y, z, args);
      };
      G__13884.cljs$core$IFn$_invoke$arity$variadic = G__13884__delegate;
      return G__13884;
    }();
    cljs$core$spn = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return cljs$core$spn__0.call(this);
        case 1:
          return cljs$core$spn__1.call(this, x);
        case 2:
          return cljs$core$spn__2.call(this, x, y);
        case 3:
          return cljs$core$spn__3.call(this, x, y, z);
        default:
          var G__13887 = null;
          if (arguments.length > 3) {
            var G__13888__i = 0, G__13888__a = new Array(arguments.length - 3);
            while (G__13888__i < G__13888__a.length) {
              G__13888__a[G__13888__i] = arguments[G__13888__i + 3];
              ++G__13888__i;
            }
            G__13887 = new cljs.core.IndexedSeq(G__13888__a, 0, null);
          }
          return cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13887);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    cljs$core$spn.cljs$lang$maxFixedArity = 3;
    cljs$core$spn.cljs$lang$applyTo = cljs$core$spn__4.cljs$lang$applyTo;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$spn__0;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$spn__1;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$spn__2;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$spn__3;
    cljs$core$spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;
    return cljs$core$spn;
  }();
};
cljs.core.some_fn.cljs$lang$applyTo = function(seq13860) {
  var G__13861 = cljs.core.first(seq13860);
  var seq13860__$1 = cljs.core.next(seq13860);
  var G__13862 = cljs.core.first(seq13860__$1);
  var seq13860__$2 = cljs.core.next(seq13860__$1);
  var G__13863 = cljs.core.first(seq13860__$2);
  var seq13860__$3 = cljs.core.next(seq13860__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13861, G__13862, G__13863, seq13860__$3);
};
cljs.core.some_fn.cljs$lang$maxFixedArity = 3;
cljs.core.map = function cljs$core$map(var_args) {
  var G__13896 = arguments.length;
  switch(G__13896) {
    case 1:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.map.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13909 = arguments.length;
      var i__4737__auto___13910 = 0;
      while (true) {
        if (i__4737__auto___13910 < len__4736__auto___13909) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13910]);
          var G__13911 = i__4737__auto___13910 + 1;
          i__4737__auto___13910 = G__13911;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.map.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.map.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    return function() {
      var G__13912 = null;
      var G__13912__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13912__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13912__2 = function(result, input) {
        var G__13897 = result;
        var G__13898 = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13897, G__13898) : rf.call(null, G__13897, G__13898);
      };
      var G__13912__3 = function() {
        var G__13913__delegate = function(result, input, inputs) {
          var G__13899 = result;
          var G__13900 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13899, G__13900) : rf.call(null, G__13899, G__13900);
        };
        var G__13913 = function(result, input, var_args) {
          var inputs = null;
          if (arguments.length > 2) {
            var G__13914__i = 0, G__13914__a = new Array(arguments.length - 2);
            while (G__13914__i < G__13914__a.length) {
              G__13914__a[G__13914__i] = arguments[G__13914__i + 2];
              ++G__13914__i;
            }
            inputs = new cljs.core.IndexedSeq(G__13914__a, 0, null);
          }
          return G__13913__delegate.call(this, result, input, inputs);
        };
        G__13913.cljs$lang$maxFixedArity = 2;
        G__13913.cljs$lang$applyTo = function(arglist__13915) {
          var result = cljs.core.first(arglist__13915);
          arglist__13915 = cljs.core.next(arglist__13915);
          var input = cljs.core.first(arglist__13915);
          var inputs = cljs.core.rest(arglist__13915);
          return G__13913__delegate(result, input, inputs);
        };
        G__13913.cljs$core$IFn$_invoke$arity$variadic = G__13913__delegate;
        return G__13913;
      }();
      G__13912 = function(result, input, var_args) {
        var inputs = var_args;
        switch(arguments.length) {
          case 0:
            return G__13912__0.call(this);
          case 1:
            return G__13912__1.call(this, result);
          case 2:
            return G__13912__2.call(this, result, input);
          default:
            var G__13916 = null;
            if (arguments.length > 2) {
              var G__13917__i = 0, G__13917__a = new Array(arguments.length - 2);
              while (G__13917__i < G__13917__a.length) {
                G__13917__a[G__13917__i] = arguments[G__13917__i + 2];
                ++G__13917__i;
              }
              G__13916 = new cljs.core.IndexedSeq(G__13917__a, 0, null);
            }
            return G__13912__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__13916);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13912.cljs$lang$maxFixedArity = 2;
      G__13912.cljs$lang$applyTo = G__13912__3.cljs$lang$applyTo;
      G__13912.cljs$core$IFn$_invoke$arity$0 = G__13912__0;
      G__13912.cljs$core$IFn$_invoke$arity$1 = G__13912__1;
      G__13912.cljs$core$IFn$_invoke$arity$2 = G__13912__2;
      G__13912.cljs$core$IFn$_invoke$arity$variadic = G__13912__3.cljs$core$IFn$_invoke$arity$variadic;
      return G__13912;
    }();
  };
};
cljs.core.map.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4613__auto___13918 = size;
        var i_13919 = 0;
        while (true) {
          if (i_13919 < n__4613__auto___13918) {
            cljs.core.chunk_append(b, function() {
              var G__13901 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13919);
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13901) : f.call(null, G__13901);
            }());
            var G__13920 = i_13919 + 1;
            i_13919 = G__13920;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
      } else {
        return cljs.core.cons(function() {
          var G__13902 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13902) : f.call(null, G__13902);
        }(), cljs.core.map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(function() {
        var G__13903 = cljs.core.first(s1);
        var G__13904 = cljs.core.first(s2);
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13903, G__13904) : f.call(null, G__13903, G__13904);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    var s3 = cljs.core.seq(c3);
    if (s1 && s2 && s3) {
      return cljs.core.cons(function() {
        var G__13905 = cljs.core.first(s1);
        var G__13906 = cljs.core.first(s2);
        var G__13907 = cljs.core.first(s3);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13905, G__13906, G__13907) : f.call(null, G__13905, G__13906, G__13907);
      }(), cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.map.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  var step = function cljs$core$step(cs) {
    return new cljs.core.LazySeq(null, function() {
      var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
      if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
        return cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
      } else {
        return null;
      }
    }, null, null);
  };
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__13889_SHARP_) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__13889_SHARP_);
  }, step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2, c1], 0))));
};
cljs.core.map.cljs$lang$applyTo = function(seq13891) {
  var G__13892 = cljs.core.first(seq13891);
  var seq13891__$1 = cljs.core.next(seq13891);
  var G__13893 = cljs.core.first(seq13891__$1);
  var seq13891__$2 = cljs.core.next(seq13891__$1);
  var G__13894 = cljs.core.first(seq13891__$2);
  var seq13891__$3 = cljs.core.next(seq13891__$2);
  var G__13895 = cljs.core.first(seq13891__$3);
  var seq13891__$4 = cljs.core.next(seq13891__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13892, G__13893, G__13894, G__13895, seq13891__$4);
};
cljs.core.map.cljs$lang$maxFixedArity = 4;
cljs.core.take = function cljs$core$take(var_args) {
  var G__13922 = arguments.length;
  switch(G__13922) {
    case 1:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__13924 = null;
      var G__13924__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13924__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13924__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        var result__$1 = n__$1 > 0 ? rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input) : result;
        if (!(nn > 0)) {
          return cljs.core.ensure_reduced(result__$1);
        } else {
          return result__$1;
        }
      };
      G__13924 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13924__0.call(this);
          case 1:
            return G__13924__1.call(this, result);
          case 2:
            return G__13924__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13924.cljs$core$IFn$_invoke$arity$0 = G__13924__0;
      G__13924.cljs$core$IFn$_invoke$arity$1 = G__13924__1;
      G__13924.cljs$core$IFn$_invoke$arity$2 = G__13924__2;
      return G__13924;
    }();
  };
};
cljs.core.take.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    if (n > 0) {
      var temp__5735__auto__ = cljs.core.seq(coll);
      if (temp__5735__auto__) {
        var s = temp__5735__auto__;
        return cljs.core.cons(cljs.core.first(s), cljs.core.take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take.cljs$lang$maxFixedArity = 2;
cljs.core.drop = function cljs$core$drop(var_args) {
  var G__13926 = arguments.length;
  switch(G__13926) {
    case 1:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var na = cljs.core.volatile_BANG_(n);
    return function() {
      var G__13928 = null;
      var G__13928__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13928__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13928__2 = function(result, input) {
        var n__$1 = cljs.core.deref(na);
        na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
        if (n__$1 > 0) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__13928 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13928__0.call(this);
          case 1:
            return G__13928__1.call(this, result);
          case 2:
            return G__13928__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13928.cljs$core$IFn$_invoke$arity$0 = G__13928__0;
      G__13928.cljs$core$IFn$_invoke$arity$1 = G__13928__1;
      G__13928.cljs$core$IFn$_invoke$arity$2 = G__13928__2;
      return G__13928;
    }();
  };
};
cljs.core.drop.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  var step = function(n__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (n__$1 > 0 && s) {
        var G__13929 = n__$1 - 1;
        var G__13930 = cljs.core.rest(s);
        n__$1 = G__13929;
        coll__$1 = G__13930;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(n, coll);
  }, null, null);
};
cljs.core.drop.cljs$lang$maxFixedArity = 2;
cljs.core.drop_last = function cljs$core$drop_last(var_args) {
  var G__13932 = arguments.length;
  switch(G__13932) {
    case 1:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 = function(s) {
  return cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
};
cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 = function(n, s) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
    return x;
  }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
};
cljs.core.drop_last.cljs$lang$maxFixedArity = 2;
cljs.core.take_last = function cljs$core$take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__13934 = cljs.core.next(s);
      var G__13935 = cljs.core.next(lead);
      s = G__13934;
      lead = G__13935;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function cljs$core$drop_while(var_args) {
  var G__13937 = arguments.length;
  switch(G__13937) {
    case 1:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    var da = cljs.core.volatile_BANG_(true);
    return function() {
      var G__13941 = null;
      var G__13941__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13941__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13941__2 = function(result, input) {
        var drop_QMARK_ = cljs.core.deref(da);
        if (cljs.core.truth_(function() {
          var and__4115__auto__ = drop_QMARK_;
          if (cljs.core.truth_(and__4115__auto__)) {
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input);
          } else {
            return and__4115__auto__;
          }
        }())) {
          return result;
        } else {
          cljs.core.vreset_BANG_(da, null);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__13941 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13941__0.call(this);
          case 1:
            return G__13941__1.call(this, result);
          case 2:
            return G__13941__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13941.cljs$core$IFn$_invoke$arity$0 = G__13941__0;
      G__13941.cljs$core$IFn$_invoke$arity$1 = G__13941__1;
      G__13941.cljs$core$IFn$_invoke$arity$2 = G__13941__2;
      return G__13941;
    }();
  };
};
cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  var step = function(pred__$1, coll__$1) {
    while (true) {
      var s = cljs.core.seq(coll__$1);
      if (cljs.core.truth_(function() {
        var and__4115__auto__ = s;
        if (and__4115__auto__) {
          var G__13939 = cljs.core.first(s);
          return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__13939) : pred__$1.call(null, G__13939);
        } else {
          return and__4115__auto__;
        }
      }())) {
        var G__13942 = pred__$1;
        var G__13943 = cljs.core.rest(s);
        pred__$1 = G__13942;
        coll__$1 = G__13943;
        continue;
      } else {
        return s;
      }
      break;
    }
  };
  return new cljs.core.LazySeq(null, function() {
    return step(pred, coll);
  }, null, null);
};
cljs.core.drop_while.cljs$lang$maxFixedArity = 2;
cljs.core.Cycle = function(meta, all, prev, current, _next) {
  this.meta = meta;
  this.all = all;
  this.prev = prev;
  this.current = current;
  this._next = _next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Cycle.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cycle.prototype.currentval = function() {
  var self__ = this;
  var coll = this;
  if (self__.current) {
  } else {
    var temp__5733__auto___13950 = cljs.core.next(self__.prev);
    if (temp__5733__auto___13950) {
      var c_13951 = temp__5733__auto___13950;
      self__.current = c_13951;
    } else {
      self__.current = self__.all;
    }
  }
  return self__.current;
};
cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.current == null);
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = cljs.core.first(s);
  while (true) {
    var s__$1 = function() {
      var or__4126__auto__ = cljs.core.next(s);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        return self__.all;
      }
    }();
    var ret__$1 = function() {
      var G__13946 = ret;
      var G__13947 = cljs.core.first(s__$1);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13946, G__13947) : f.call(null, G__13946, G__13947);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__13952 = s__$1;
      var G__13953 = ret__$1;
      s = G__13952;
      ret = G__13953;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  var s = coll__$1.currentval();
  var ret = start;
  while (true) {
    var ret__$1 = function() {
      var G__13948 = ret;
      var G__13949 = cljs.core.first(s);
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13948, G__13949) : f.call(null, G__13948, G__13949);
    }();
    if (cljs.core.reduced_QMARK_(ret__$1)) {
      return cljs.core.deref(ret__$1);
    } else {
      var G__13954 = function() {
        var or__4126__auto__ = cljs.core.next(s);
        if (or__4126__auto__) {
          return or__4126__auto__;
        } else {
          return self__.all;
        }
      }();
      var G__13955 = ret__$1;
      s = G__13954;
      ret = G__13955;
      continue;
    }
    break;
  }
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(coll__$1.currentval());
};
cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__._next == null) {
    self__._next = new cljs.core.Cycle(null, self__.all, coll__$1.currentval(), null, null);
  } else {
  }
  return self__._next;
};
cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Cycle(new_meta, self__.all, self__.prev, self__.current, self__._next);
  }
};
cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Cycle.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "all", "all", -1762306027, null), new cljs.core.Symbol(null, "prev", "prev", 43462301, null), cljs.core.with_meta(new cljs.core.Symbol(null, "current", "current", 552492924, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "_next", "_next", 101877036, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Cycle.cljs$lang$type = true;
cljs.core.Cycle.cljs$lang$ctorStr = "cljs.core/Cycle";
cljs.core.Cycle.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Cycle");
};
cljs.core.__GT_Cycle = function cljs$core$__GT_Cycle(meta, all, prev, current, _next) {
  return new cljs.core.Cycle(meta, all, prev, current, _next);
};
cljs.core.cycle = function cljs$core$cycle(coll) {
  var temp__5733__auto__ = cljs.core.seq(coll);
  if (temp__5733__auto__) {
    var vals = temp__5733__auto__;
    return new cljs.core.Cycle(null, vals, null, vals, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.split_at = function cljs$core$split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.Repeat = function(meta, count, val, next, __hash) {
  this.meta = meta;
  this.count = count;
  this.val = val;
  this.next = next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Repeat.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Repeat.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Repeat.prototype.indexOf = function() {
  var G__13956 = null;
  var G__13956__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__13956__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13956 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13956__1.call(this, x);
      case 2:
        return G__13956__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13956.cljs$core$IFn$_invoke$arity$1 = G__13956__1;
  G__13956.cljs$core$IFn$_invoke$arity$2 = G__13956__2;
  return G__13956;
}();
cljs.core.Repeat.prototype.lastIndexOf = function() {
  var G__13957 = null;
  var G__13957__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count);
  };
  var G__13957__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__13957 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__13957__1.call(this, x);
      case 2:
        return G__13957__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13957.cljs$core$IFn$_invoke$arity$1 = G__13957__1;
  G__13957.cljs$core$IFn$_invoke$arity$2 = G__13957__2;
  return G__13957;
}();
cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return null;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return false;
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val, self__.val) : f.call(null, self__.val, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__13958 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__13958;
        continue;
      }
      break;
    }
  } else {
    var i = 1;
    var ret = self__.val;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__13959 = i + 1;
          var G__13960 = ret__$1;
          i = G__13959;
          ret = G__13960;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === -1) {
    var ret = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start, self__.val) : f.call(null, start, self__.val);
    while (true) {
      if (cljs.core.reduced_QMARK_(ret)) {
        return cljs.core.deref(ret);
      } else {
        var G__13961 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        ret = G__13961;
        continue;
      }
      break;
    }
  } else {
    var i = 0;
    var ret = start;
    while (true) {
      if (i < self__.count) {
        var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, self__.val) : f.call(null, ret, self__.val);
        if (cljs.core.reduced_QMARK_(ret__$1)) {
          return cljs.core.deref(ret__$1);
        } else {
          var G__13962 = i + 1;
          var G__13963 = ret__$1;
          i = G__13962;
          ret = G__13963;
          continue;
        }
      } else {
        return ret;
      }
      break;
    }
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.val;
};
cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    if (self__.count > 1) {
      self__.next = new cljs.core.Repeat(null, self__.count - 1, self__.val, null, null);
      return self__.next;
    } else {
      if (-1 === self__.count) {
        return coll__$1;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return self__.next;
  }
};
cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Repeat(new_meta, self__.count, self__.val, self__.next, null);
  }
};
cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Repeat.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Repeat.cljs$lang$type = true;
cljs.core.Repeat.cljs$lang$ctorStr = "cljs.core/Repeat";
cljs.core.Repeat.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Repeat");
};
cljs.core.__GT_Repeat = function cljs$core$__GT_Repeat(meta, count, val, next, __hash) {
  return new cljs.core.Repeat(meta, count, val, next, __hash);
};
cljs.core.repeat = function cljs$core$repeat(var_args) {
  var G__13965 = arguments.length;
  switch(G__13965) {
    case 1:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return new cljs.core.Repeat(null, -1, x, null, null);
};
cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 = function(n, x) {
  if (n > 0) {
    return new cljs.core.Repeat(null, n, x, null, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.repeat.cljs$lang$maxFixedArity = 2;
cljs.core.replicate = function cljs$core$replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function cljs$core$repeatedly(var_args) {
  var G__13968 = arguments.length;
  switch(G__13968) {
    case 1:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return new cljs.core.LazySeq(null, function() {
    return cljs.core.cons(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  }, null, null);
};
cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 = function(n, f) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));
};
cljs.core.repeatedly.cljs$lang$maxFixedArity = 2;
cljs.core.UNREALIZED_SEED = {};
cljs.core.Iterate = function(meta, f, prev_seed, seed, next) {
  this.meta = meta;
  this.f = f;
  this.prev_seed = prev_seed;
  this.seed = seed;
  this.next = next;
  this.cljs$lang$protocol_mask$partition0$ = 26083532;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Iterate.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ISeq$_rest$arity$1(null);
};
cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return !(self__.seed === cljs.core.UNREALIZED_SEED);
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, rf) {
  var self__ = this;
  var coll__$1 = this;
  var first = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var v = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null, first);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first, v) : rf.call(null, first, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__13970 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__13971 = v__$2;
      ret = G__13970;
      v__$1 = G__13971;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, rf, start) {
  var self__ = this;
  var coll__$1 = this;
  var v = coll__$1.cljs$core$ISeq$_first$arity$1(null);
  var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start, v) : rf.call(null, start, v);
  var v__$1 = v;
  while (true) {
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.deref(ret);
    } else {
      var v__$2 = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null, v__$1);
      var G__13972 = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret, v__$2) : rf.call(null, ret, v__$2);
      var G__13973 = v__$2;
      ret = G__13972;
      v__$1 = G__13973;
      continue;
    }
    break;
  }
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.UNREALIZED_SEED === self__.seed) {
    self__.seed = self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null, self__.prev_seed);
  } else {
  }
  return self__.seed;
};
cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.next == null) {
    self__.next = new cljs.core.Iterate(null, self__.f, coll__$1.cljs$core$ISeq$_first$arity$1(null), cljs.core.UNREALIZED_SEED, null);
  } else {
  }
  return self__.next;
};
cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.Iterate(new_meta, self__.f, self__.prev_seed, self__.seed, self__.next);
  }
};
cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.Iterate.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.Symbol(null, "prev-seed", "prev-seed", 2126381367, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seed", "seed", 1709144854, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "next", "next", 1522830042, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Iterate.cljs$lang$type = true;
cljs.core.Iterate.cljs$lang$ctorStr = "cljs.core/Iterate";
cljs.core.Iterate.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Iterate");
};
cljs.core.__GT_Iterate = function cljs$core$__GT_Iterate(meta, f, prev_seed, seed, next) {
  return new cljs.core.Iterate(meta, f, prev_seed, seed, next);
};
cljs.core.iterate = function cljs$core$iterate(f, x) {
  return new cljs.core.Iterate(null, f, null, x, null);
};
cljs.core.interleave = function cljs$core$interleave(var_args) {
  var G__13978 = arguments.length;
  switch(G__13978) {
    case 0:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13980 = arguments.length;
      var i__4737__auto___13981 = 0;
      while (true) {
        if (i__4737__auto___13981 < len__4736__auto___13980) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13981]);
          var G__13982 = i__4737__auto___13981 + 1;
          i__4737__auto___13981 = G__13982;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(2), 0, null);
      return cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4758__auto__);
  }
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.List.EMPTY;
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 = function(c1) {
  return new cljs.core.LazySeq(null, function() {
    return c1;
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 = function(c1, c2) {
  return new cljs.core.LazySeq(null, function() {
    var s1 = cljs.core.seq(c1);
    var s2 = cljs.core.seq(c2);
    if (s1 && s2) {
      return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic = function(c1, c2, colls) {
  return new cljs.core.LazySeq(null, function() {
    var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));
    if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.interleave.cljs$lang$applyTo = function(seq13975) {
  var G__13976 = cljs.core.first(seq13975);
  var seq13975__$1 = cljs.core.next(seq13975);
  var G__13977 = cljs.core.first(seq13975__$1);
  var seq13975__$2 = cljs.core.next(seq13975__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13976, G__13977, seq13975__$2);
};
cljs.core.interleave.cljs$lang$maxFixedArity = 2;
cljs.core.interpose = function cljs$core$interpose(var_args) {
  var G__13984 = arguments.length;
  switch(G__13984) {
    case 1:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 = function(sep) {
  return function(rf) {
    var started = cljs.core.volatile_BANG_(false);
    return function() {
      var G__13986 = null;
      var G__13986__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13986__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13986__2 = function(result, input) {
        if (cljs.core.truth_(cljs.core.deref(started))) {
          var sepr = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, sep) : rf.call(null, result, sep);
          if (cljs.core.reduced_QMARK_(sepr)) {
            return sepr;
          } else {
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr, input) : rf.call(null, sepr, input);
          }
        } else {
          cljs.core.vreset_BANG_(started, true);
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__13986 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13986__0.call(this);
          case 1:
            return G__13986__1.call(this, result);
          case 2:
            return G__13986__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13986.cljs$core$IFn$_invoke$arity$0 = G__13986__0;
      G__13986.cljs$core$IFn$_invoke$arity$1 = G__13986__1;
      G__13986.cljs$core$IFn$_invoke$arity$2 = G__13986__2;
      return G__13986;
    }();
  };
};
cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 = function(sep, coll) {
  return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
};
cljs.core.interpose.cljs$lang$maxFixedArity = 2;
cljs.core.flatten1 = function cljs$core$flatten1(colls) {
  var cat = function cljs$core$flatten1_$_cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__5733__auto__ = cljs.core.seq(coll);
      if (temp__5733__auto__) {
        var coll__$1 = temp__5733__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function cljs$core$mapcat(var_args) {
  var G__13990 = arguments.length;
  switch(G__13990) {
    case 1:
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___13992 = arguments.length;
      var i__4737__auto___13993 = 0;
      while (true) {
        if (i__4737__auto___13993 < len__4736__auto___13992) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___13993]);
          var G__13994 = i__4737__auto___13993 + 1;
          i__4737__auto___13993 = G__13994;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
};
cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic = function(f, colls) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
};
cljs.core.mapcat.cljs$lang$applyTo = function(seq13988) {
  var G__13989 = cljs.core.first(seq13988);
  var seq13988__$1 = cljs.core.next(seq13988);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13989, seq13988__$1);
};
cljs.core.mapcat.cljs$lang$maxFixedArity = 1;
cljs.core.filter = function cljs$core$filter(var_args) {
  var G__13996 = arguments.length;
  switch(G__13996) {
    case 1:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__13999 = null;
      var G__13999__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__13999__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__13999__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__13999 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__13999__0.call(this);
          case 1:
            return G__13999__1.call(this, result);
          case 2:
            return G__13999__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__13999.cljs$core$IFn$_invoke$arity$0 = G__13999__0;
      G__13999.cljs$core$IFn$_invoke$arity$1 = G__13999__1;
      G__13999.cljs$core$IFn$_invoke$arity$2 = G__13999__2;
      return G__13999;
    }();
  };
};
cljs.core.filter.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      if (cljs.core.chunked_seq_QMARK_(s)) {
        var c = cljs.core.chunk_first(s);
        var size = cljs.core.count(c);
        var b = cljs.core.chunk_buffer(size);
        var n__4613__auto___14000 = size;
        var i_14001 = 0;
        while (true) {
          if (i_14001 < n__4613__auto___14000) {
            if (cljs.core.truth_(function() {
              var G__13997 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14001);
              return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13997) : pred.call(null, G__13997);
            }())) {
              cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_14001));
            } else {
            }
            var G__14002 = i_14001 + 1;
            i_14001 = G__14002;
            continue;
          } else {
          }
          break;
        }
        return cljs.core.chunk_cons(cljs.core.chunk(b), cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
      } else {
        var f = cljs.core.first(s);
        var r = cljs.core.rest(s);
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null, f))) {
          return cljs.core.cons(f, cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r));
        } else {
          return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred, r);
        }
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.filter.cljs$lang$maxFixedArity = 2;
cljs.core.remove = function cljs$core$remove(var_args) {
  var G__14004 = arguments.length;
  switch(G__14004) {
    case 1:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.remove.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
};
cljs.core.remove.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
};
cljs.core.remove.cljs$lang$maxFixedArity = 2;
cljs.core.tree_seq = function cljs$core$tree_seq(branch_QMARK_, children, root) {
  var walk = function cljs$core$tree_seq_$_walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null, node)) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null, node)], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function cljs$core$flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__14006_SHARP_) {
    return !cljs.core.sequential_QMARK_(p1__14006_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function cljs$core$into(var_args) {
  var G__14008 = arguments.length;
  switch(G__14008) {
    case 0:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.into.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$1 = function(to) {
  return to;
};
cljs.core.into.cljs$core$IFn$_invoke$arity$2 = function(to, from) {
  if (!(to == null)) {
    if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
    }
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$core$IFn$_invoke$arity$3 = function(to, xform, from) {
  if (!(to == null) ? to.cljs$lang$protocol_mask$partition1$ & 4 || cljs.core.PROTOCOL_SENTINEL === to.cljs$core$IEditableCollection$ ? true : false : false) {
    return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
  } else {
    return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
  }
};
cljs.core.into.cljs$lang$maxFixedArity = 3;
cljs.core.mapv = function cljs$core$mapv(var_args) {
  var G__14018 = arguments.length;
  switch(G__14018) {
    case 2:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___14020 = arguments.length;
      var i__4737__auto___14021 = 0;
      while (true) {
        if (i__4737__auto___14021 < len__4736__auto___14020) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___14021]);
          var G__14022 = i__4737__auto___14021 + 1;
          i__4737__auto___14021 = G__14022;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(4), 0, null);
      return cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], argseq__4758__auto__);
  }
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null, o));
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 = function(f, c1, c2) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 = function(f, c1, c2, c3) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
};
cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic = function(f, c1, c2, c3, colls) {
  return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));
};
cljs.core.mapv.cljs$lang$applyTo = function(seq14013) {
  var G__14014 = cljs.core.first(seq14013);
  var seq14013__$1 = cljs.core.next(seq14013);
  var G__14015 = cljs.core.first(seq14013__$1);
  var seq14013__$2 = cljs.core.next(seq14013__$1);
  var G__14016 = cljs.core.first(seq14013__$2);
  var seq14013__$3 = cljs.core.next(seq14013__$2);
  var G__14017 = cljs.core.first(seq14013__$3);
  var seq14013__$4 = cljs.core.next(seq14013__$3);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14014, G__14015, G__14016, G__14017, seq14013__$4);
};
cljs.core.mapv.cljs$lang$maxFixedArity = 4;
cljs.core.filterv = function cljs$core$filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null, o))) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function cljs$core$partition(var_args) {
  var G__14024 = arguments.length;
  switch(G__14024) {
    case 2:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.partition.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$core$IFn$_invoke$arity$4 = function(n, step, pad, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
      if (n === cljs.core.count(p)) {
        return cljs.core.cons(p, cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return new cljs.core.List(null, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)), null, 1, null);
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition.cljs$lang$maxFixedArity = 4;
cljs.core.get_in = function cljs$core$get_in(var_args) {
  var G__14027 = arguments.length;
  switch(G__14027) {
    case 2:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 = function(m, ks) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get, m, ks);
};
cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 = function(m, ks, not_found) {
  var sentinel = cljs.core.lookup_sentinel;
  var m__$1 = m;
  var ks__$1 = cljs.core.seq(ks);
  while (true) {
    if (!(ks__$1 == null)) {
      var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
      if (sentinel === m__$2) {
        return not_found;
      } else {
        var G__14029 = sentinel;
        var G__14030 = m__$2;
        var G__14031 = cljs.core.next(ks__$1);
        sentinel = G__14029;
        m__$1 = G__14030;
        ks__$1 = G__14031;
        continue;
      }
    } else {
      return m__$1;
    }
    break;
  }
};
cljs.core.get_in.cljs$lang$maxFixedArity = 3;
cljs.core.assoc_in = function cljs$core$assoc_in(m, p__14032, v) {
  var vec__14033 = p__14032;
  var seq__14034 = cljs.core.seq(vec__14033);
  var first__14035 = cljs.core.first(seq__14034);
  var seq__14034__$1 = cljs.core.next(seq__14034);
  var k = first__14035;
  var ks = seq__14034__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14036 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14037 = ks;
      var G__14038 = v;
      return cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__14036, G__14037, G__14038) : cljs.core.assoc_in.call(null, G__14036, G__14037, G__14038);
    }());
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function cljs$core$update_in(var_args) {
  var G__14047 = arguments.length;
  switch(G__14047) {
    case 3:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___14079 = arguments.length;
      var i__4737__auto___14080 = 0;
      while (true) {
        if (i__4737__auto___14080 < len__4736__auto___14079) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___14080]);
          var G__14081 = i__4737__auto___14080 + 1;
          i__4737__auto___14080 = G__14081;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(6), 0, null);
      return cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4758__auto__);
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 = function(m, p__14048, f) {
  var vec__14049 = p__14048;
  var seq__14050 = cljs.core.seq(vec__14049);
  var first__14051 = cljs.core.first(seq__14050);
  var seq__14050__$1 = cljs.core.next(seq__14050);
  var k = first__14051;
  var ks = seq__14050__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14052 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14052) : f.call(null, G__14052);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 = function(m, p__14053, f, a) {
  var vec__14054 = p__14053;
  var seq__14055 = cljs.core.seq(vec__14054);
  var first__14056 = cljs.core.first(seq__14055);
  var seq__14055__$1 = cljs.core.next(seq__14055);
  var k = first__14056;
  var ks = seq__14055__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14057 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14058 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14057, G__14058) : f.call(null, G__14057, G__14058);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 = function(m, p__14059, f, a, b) {
  var vec__14060 = p__14059;
  var seq__14061 = cljs.core.seq(vec__14060);
  var first__14062 = cljs.core.first(seq__14061);
  var seq__14061__$1 = cljs.core.next(seq__14061);
  var k = first__14062;
  var ks = seq__14061__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14063 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14064 = a;
      var G__14065 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14063, G__14064, G__14065) : f.call(null, G__14063, G__14064, G__14065);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 = function(m, p__14066, f, a, b, c) {
  var vec__14067 = p__14066;
  var seq__14068 = cljs.core.seq(vec__14067);
  var first__14069 = cljs.core.first(seq__14068);
  var seq__14068__$1 = cljs.core.next(seq__14068);
  var k = first__14069;
  var ks = seq__14068__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__14070 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__14071 = a;
      var G__14072 = b;
      var G__14073 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14070, G__14071, G__14072, G__14073) : f.call(null, G__14070, G__14071, G__14072, G__14073);
    }());
  }
};
cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic = function(m, p__14074, f, a, b, c, args) {
  var vec__14075 = p__14074;
  var seq__14076 = cljs.core.seq(vec__14075);
  var first__14077 = cljs.core.first(seq__14076);
  var seq__14076__$1 = cljs.core.next(seq__14076);
  var k = first__14077;
  var ks = seq__14076__$1;
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b, c, args], 0)));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));
  }
};
cljs.core.update_in.cljs$lang$applyTo = function(seq14040) {
  var G__14041 = cljs.core.first(seq14040);
  var seq14040__$1 = cljs.core.next(seq14040);
  var G__14042 = cljs.core.first(seq14040__$1);
  var seq14040__$2 = cljs.core.next(seq14040__$1);
  var G__14043 = cljs.core.first(seq14040__$2);
  var seq14040__$3 = cljs.core.next(seq14040__$2);
  var G__14044 = cljs.core.first(seq14040__$3);
  var seq14040__$4 = cljs.core.next(seq14040__$3);
  var G__14045 = cljs.core.first(seq14040__$4);
  var seq14040__$5 = cljs.core.next(seq14040__$4);
  var G__14046 = cljs.core.first(seq14040__$5);
  var seq14040__$6 = cljs.core.next(seq14040__$5);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14041, G__14042, G__14043, G__14044, G__14045, G__14046, seq14040__$6);
};
cljs.core.update_in.cljs$lang$maxFixedArity = 6;
cljs.core.update = function cljs$core$update(var_args) {
  var G__14090 = arguments.length;
  switch(G__14090) {
    case 3:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    case 6:
      return cljs.core.update.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___14102 = arguments.length;
      var i__4737__auto___14103 = 0;
      while (true) {
        if (i__4737__auto___14103 < len__4736__auto___14102) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___14103]);
          var G__14104 = i__4737__auto___14103 + 1;
          i__4737__auto___14103 = G__14104;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(6), 0, null);
      return cljs.core.update.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], argseq__4758__auto__);
  }
};
cljs.core.update.cljs$core$IFn$_invoke$arity$3 = function(m, k, f) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__14091 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14091) : f.call(null, G__14091);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$4 = function(m, k, f, x) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__14092 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__14093 = x;
    return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14092, G__14093) : f.call(null, G__14092, G__14093);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$5 = function(m, k, f, x, y) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__14094 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__14095 = x;
    var G__14096 = y;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14094, G__14095, G__14096) : f.call(null, G__14094, G__14095, G__14096);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$6 = function(m, k, f, x, y, z) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
    var G__14097 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
    var G__14098 = x;
    var G__14099 = y;
    var G__14100 = z;
    return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__14097, G__14098, G__14099, G__14100) : f.call(null, G__14097, G__14098, G__14099, G__14100);
  }());
};
cljs.core.update.cljs$core$IFn$_invoke$arity$variadic = function(m, k, f, x, y, z, more) {
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));
};
cljs.core.update.cljs$lang$applyTo = function(seq14083) {
  var G__14084 = cljs.core.first(seq14083);
  var seq14083__$1 = cljs.core.next(seq14083);
  var G__14085 = cljs.core.first(seq14083__$1);
  var seq14083__$2 = cljs.core.next(seq14083__$1);
  var G__14086 = cljs.core.first(seq14083__$2);
  var seq14083__$3 = cljs.core.next(seq14083__$2);
  var G__14087 = cljs.core.first(seq14083__$3);
  var seq14083__$4 = cljs.core.next(seq14083__$3);
  var G__14088 = cljs.core.first(seq14083__$4);
  var seq14083__$5 = cljs.core.next(seq14083__$4);
  var G__14089 = cljs.core.first(seq14083__$5);
  var seq14083__$6 = cljs.core.next(seq14083__$5);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14084, G__14085, G__14086, G__14087, G__14088, G__14089, seq14083__$6);
};
cljs.core.update.cljs$lang$maxFixedArity = 6;
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function cljs$core$__GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function cljs$core$pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function cljs$core$pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function cljs$core$pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function cljs$core$pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function cljs$core$tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function cljs$core$new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__14105 = ll - 5;
      var G__14106 = r;
      ll = G__14105;
      ret = G__14106;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function cljs$core$push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = function() {
        var G__14107 = pv;
        var G__14108 = level - 5;
        var G__14109 = child;
        var G__14110 = tailnode;
        return cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__14107, G__14108, G__14109, G__14110) : cljs.core.push_tail.call(null, G__14107, G__14108, G__14109, G__14110);
      }();
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function cljs$core$vector_index_out_of_bounds(i, cnt) {
  throw new Error(["No item ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(i), " in vector of length ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function cljs$core$first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__14111 = cljs.core.pv_aget(node, 0);
      var G__14112 = level - 5;
      node = G__14111;
      level = G__14112;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function cljs$core$unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__14113 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__14114 = level - 5;
        node = G__14113;
        level = G__14114;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function cljs$core$array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function cljs$core$do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, function() {
      var G__14115 = pv;
      var G__14116 = level - 5;
      var G__14117 = cljs.core.pv_aget(node, subidx);
      var G__14118 = i;
      var G__14119 = val;
      return cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__14115, G__14116, G__14117, G__14118, G__14119) : cljs.core.do_assoc.call(null, G__14115, G__14116, G__14117, G__14118, G__14119);
    }());
    return ret;
  }
};
cljs.core.pop_tail = function cljs$core$pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__14120 = pv;
      var G__14121 = level - 5;
      var G__14122 = cljs.core.pv_aget(node, subidx);
      return cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__14120, G__14121, G__14122) : cljs.core.pop_tail.call(null, G__14120, G__14121, G__14122);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "base", "base", 1825810849, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null)], null);
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function cljs$core$__GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function cljs$core$ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.pv_reduce = function cljs$core$pv_reduce(var_args) {
  var G__14124 = arguments.length;
  switch(G__14124) {
    case 4:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 = function(pv, f, start, end) {
  if (start < end) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv, f, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv, start), start + 1, end);
  } else {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  }
};
cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 = function(pv, f, init, start, end) {
  var acc = init;
  var i = start;
  var arr = cljs.core.unchecked_array_for(pv, start);
  while (true) {
    if (i < end) {
      var j = i & 31;
      var arr__$1 = j === 0 ? cljs.core.unchecked_array_for(pv, i) : arr;
      var nacc = function() {
        var G__14125 = acc;
        var G__14126 = arr__$1[j];
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14125, G__14126) : f.call(null, G__14125, G__14126);
      }();
      if (cljs.core.reduced_QMARK_(nacc)) {
        return cljs.core.deref(nacc);
      } else {
        var G__14128 = nacc;
        var G__14129 = i + 1;
        var G__14130 = arr__$1;
        acc = G__14128;
        i = G__14129;
        arr = G__14130;
        continue;
      }
    } else {
      return acc;
    }
    break;
  }
};
cljs.core.pv_reduce.cljs$lang$maxFixedArity = 5;
cljs.core.APersistentVector = function() {
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentVector.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return new cljs.core.MapEntry(n, cljs.core.unchecked_array_for(coll__$1, n)[n & 31], null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.indexOf = function() {
  var G__14137 = null;
  var G__14137__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14137__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14137 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14137__1.call(this, x);
      case 2:
        return G__14137__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14137.cljs$core$IFn$_invoke$arity$1 = G__14137__1;
  G__14137.cljs$core$IFn$_invoke$arity$2 = G__14137__2;
  return G__14137;
}();
cljs.core.PersistentVector.prototype.lastIndexOf = function() {
  var G__14138 = null;
  var G__14138__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14138__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14138 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14138__1.call(this, x);
      case 2:
        return G__14138__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14138.cljs$core$IFn$_invoke$arity$1 = G__14138__1;
  G__14138.cljs$core$IFn$_invoke$arity$2 = G__14138__2;
  return G__14138;
}();
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14132 = init__$2;
              var G__14133 = j + i;
              var G__14134 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14132, G__14133, G__14134) : f.call(null, G__14132, G__14133, G__14134);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14139 = j + 1;
              var G__14140 = init__$3;
              j = G__14139;
              init__$2 = G__14140;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__14141 = i + len;
        var G__14142 = init__$2;
        i = G__14141;
        init__$1 = G__14142;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return coll__$1.cljs$core$ICollection$_conj$arity$2(null, val);
    } else {
      throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds  [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt), "]"].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = coll__$1.cljs$core$IIterable$_iterator$arity$1(null);
      var you_iter = other.cljs$core$IIterable$_iterator$arity$1(null);
      while (true) {
        if (me_iter.hasNext()) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, cljs.core.tv_editable_root(self__.root), cljs.core.tv_editable_tail(self__.tail));
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1, f, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__14135 = init__$2;
              var G__14136 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14135, G__14136) : f.call(null, G__14135, G__14136);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__14143 = j + 1;
              var G__14144 = init__$3;
              j = G__14143;
              init__$2 = G__14144;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__14145 = i + len;
        var G__14146 = init__$2;
        i = G__14145;
        init__$1 = G__14146;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.integer_QMARK_(k)) {
    return 0 <= k && k < self__.cnt;
  } else {
    return false;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0, null);
    } else {
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(coll__$1, cljs.core.first_array_for_longvec(coll__$1), 0, 0);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentVector(new_meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4613__auto___14147 = len;
    var i_14148 = 0;
    while (true) {
      if (i_14148 < n__4613__auto___14147) {
        new_tail[i_14148] = self__.tail[i_14148];
        var G__14149 = i_14148 + 1;
        i_14148 = G__14149;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__14150 = null;
  var G__14150__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14150__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14150 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14150__2.call(this, self__, k);
      case 3:
        return G__14150__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14150.cljs$core$IFn$_invoke$arity$2 = G__14150__2;
  G__14150.cljs$core$IFn$_invoke$arity$3 = G__14150__3;
  return G__14150;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args14131) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14131)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.Symbol(null, "tail", "tail", 494507963, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function cljs$core$__GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__14151 = i + 1;
        var G__14152 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__14151;
        out = G__14152;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
goog.object.set(cljs.core.PersistentVector.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.vec = function cljs$core$vec(coll) {
  if (cljs.core.map_entry_QMARK_(coll)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.key(coll), cljs.core.val(coll)], null);
  } else {
    if (cljs.core.vector_QMARK_(coll)) {
      return cljs.core.with_meta(coll, null);
    } else {
      if (cljs.core.array_QMARK_(coll)) {
        return cljs.core.PersistentVector.fromArray(coll, true);
      } else {
        return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
      }
    }
  }
};
cljs.core.vector = function cljs$core$vector(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14154 = arguments.length;
  var i__4737__auto___14155 = 0;
  while (true) {
    if (i__4737__auto___14155 < len__4736__auto___14154) {
      args__4742__auto__.push(arguments[i__4737__auto___14155]);
      var G__14156 = i__4737__auto___14155 + 1;
      i__4737__auto___14155 = G__14156;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic = function(args) {
  if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
    return cljs.core.PersistentVector.fromArray(args.arr, !cljs.core.array_QMARK_(args.arr));
  } else {
    return cljs.core.vec(args);
  }
};
cljs.core.vector.cljs$lang$maxFixedArity = 0;
cljs.core.vector.cljs$lang$applyTo = function(seq14153) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14153));
};
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.indexOf = function() {
  var G__14157 = null;
  var G__14157__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14157__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14157 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14157__1.call(this, x);
      case 2:
        return G__14157__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14157.cljs$core$IFn$_invoke$arity$1 = G__14157__1;
  G__14157.cljs$core$IFn$_invoke$arity$2 = G__14157__2;
  return G__14157;
}();
cljs.core.ChunkedSeq.prototype.lastIndexOf = function() {
  var G__14158 = null;
  var G__14158__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14158__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14158 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14158__1.call(this, x);
      case 2:
        return G__14158__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14158.cljs$core$IFn$_invoke$arity$1 = G__14158__1;
  G__14158.cljs$core$IFn$_invoke$arity$2 = G__14158__2;
  return G__14158;
}();
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec, f, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec, f, start, self__.i + self__.off, cljs.core.count(self__.vec));
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, self__.node, self__.i, self__.off + 1);
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec, self__.node, self__.i, self__.off, new_meta);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(self__.vec, cljs.core.unchecked_array_for(self__.vec, end), end, 0);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "vec", "vec", 982683596, null), new cljs.core.Symbol(null, "node", "node", -2073234571, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "off", "off", -2047994980, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function cljs$core$__GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
goog.object.set(cljs.core.ChunkedSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.chunked_seq = function cljs$core$chunked_seq(var_args) {
  var G__14160 = arguments.length;
  switch(G__14160) {
    case 3:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 4:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 5:
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 = function(vec, i, off) {
  return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 = function(vec, node, i, off) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
};
cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 = function(vec, node, i, off, meta) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
};
cljs.core.chunked_seq.cljs$lang$maxFixedArity = 5;
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167666463;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.core.Subvec.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0) {
    return null;
  } else {
    var idx = self__.start + n;
    if (idx < self__.end) {
      return new cljs.core.MapEntry(n, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.v, idx), null);
    } else {
      return null;
    }
  }
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.indexOf = function() {
  var G__14169 = null;
  var G__14169__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14169__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__14169 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__14169__1.call(this, x);
      case 2:
        return G__14169__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14169.cljs$core$IFn$_invoke$arity$1 = G__14169__1;
  G__14169.cljs$core$IFn$_invoke$arity$2 = G__14169__2;
  return G__14169;
}();
cljs.core.Subvec.prototype.lastIndexOf = function() {
  var G__14170 = null;
  var G__14170__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14170__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__14170 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__14170__1.call(this, x);
      case 2:
        return G__14170__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14170.cljs$core$IFn$_invoke$arity$1 = G__14170__1;
  G__14170.cljs$core$IFn$_invoke$arity$2 = G__14170__2;
  return G__14170;
}();
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var i = self__.start;
  var j = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.end) {
      var init__$2 = function() {
        var G__14163 = init__$1;
        var G__14164 = j;
        var G__14165 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i);
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14163, G__14164, G__14165) : f.call(null, G__14163, G__14164, G__14165);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__14171 = i + 1;
        var G__14172 = j + 1;
        var G__14173 = init__$2;
        i = G__14171;
        j = G__14172;
        init__$1 = G__14173;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  if (n < 0 || self__.end + 1 <= v_pos) {
    throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds [0,", cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)), "]"].join(""));
  } else {
    return cljs.core.build_subvec(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val), self__.start, function() {
      var x__4214__auto__ = self__.end;
      var y__4215__auto__ = v_pos + 1;
      return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
    }(), null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.ranged_iterator(self__.v, self__.start, self__.end);
  } else {
    return cljs.core.seq_iter(coll__$1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    return null;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
  }
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    return cljs.core.build_subvec(self__.meta, self__.v, self__.start, self__.end - 1, null);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v, f, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.v == null) ? false || cljs.core.PROTOCOL_SENTINEL === self__.v.cljs$core$APersistentVector$ ? true : false : false) {
    return cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v, f, init, self__.start, self__.end);
  } else {
    return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, init);
  }
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return coll__$1.cljs$core$IVector$_assoc_n$arity$3(null, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function cljs$core$subvec_seq(i) {
    if (i === self__.end) {
      return null;
    } else {
      return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function() {
        return cljs$core$subvec_seq(i + 1);
      }, null, null));
    }
  };
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return cljs.core.build_subvec(new_meta, self__.v, self__.start, self__.end, self__.__hash);
  }
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.build_subvec(self__.meta, cljs.core._assoc_n(self__.v, self__.end, o), self__.start, self__.end + 1, null);
};
cljs.core.Subvec.prototype.call = function() {
  var G__14174 = null;
  var G__14174__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14174__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14174 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14174__2.call(this, self__, k);
      case 3:
        return G__14174__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14174.cljs$core$IFn$_invoke$arity$2 = G__14174__2;
  G__14174.cljs$core$IFn$_invoke$arity$3 = G__14174__3;
  return G__14174;
}();
cljs.core.Subvec.prototype.apply = function(self__, args14162) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14162)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "v", "v", 1661996586, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function cljs$core$__GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
goog.object.set(cljs.core.Subvec.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.build_subvec = function cljs$core$build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__14175 = meta;
      var G__14176 = v.v;
      var G__14177 = v.start + start;
      var G__14178 = v.start + end;
      var G__14179 = __hash;
      meta = G__14175;
      v = G__14176;
      start = G__14177;
      end = G__14178;
      __hash = G__14179;
      continue;
    } else {
      if (cljs.core.vector_QMARK_(v)) {
      } else {
        throw new Error("v must satisfy IVector");
      }
      if (start < 0 || end < start || end > cljs.core.count(v)) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function cljs$core$subvec(var_args) {
  var G__14181 = arguments.length;
  switch(G__14181) {
    case 2:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 = function(v, start) {
  return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
};
cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 = function(v, start, end) {
  if (!(start == null) && !(end == null)) {
  } else {
    throw new Error("Assert failed: (and (not (nil? start)) (not (nil? end)))");
  }
  return cljs.core.build_subvec(null, v, start | 0, end | 0, null);
};
cljs.core.subvec.cljs$lang$maxFixedArity = 3;
cljs.core.tv_ensure_editable = function cljs$core$tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function cljs$core$tv_editable_root(node) {
  return new cljs.core.VectorNode({}, cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function cljs$core$tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function cljs$core$tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      var G__14185 = tv;
      var G__14186 = level - 5;
      var G__14187 = child;
      var G__14188 = tail_node;
      return cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__14185, G__14186, G__14187, G__14188) : cljs.core.tv_push_tail.call(null, G__14185, G__14186, G__14187, G__14188);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function cljs$core$tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = function() {
      var G__14189 = tv;
      var G__14190 = level - 5;
      var G__14191 = cljs.core.pv_aget(node__$1, subidx);
      return cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__14189, G__14190, G__14191) : cljs.core.tv_pop_tail.call(null, G__14189, G__14190, G__14191);
    }();
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function cljs$core$unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__14192 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__14193 = level - 5;
        node = G__14192;
        level = G__14193;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition1$ = 88;
  this.cljs$lang$protocol_mask$partition0$ = 275;
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function() {
          var fexpr__14195 = function cljs$core$go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, cljs$core$go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
          return fexpr__14195(self__.shift, self__.root);
        }();
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, val);
      } else {
        throw new Error(["Index ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), " out of bounds for TransientVector of length", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return coll__$1.cljs$core$IIndexed$_nth$arity$2(null, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (!self__.root.edit) {
    throw new Error("lookup after persistent!");
  } else {
    if (typeof k === "number") {
      return coll__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
    } else {
      return not_found;
    }
  }
};
cljs.core.TransientVector.prototype.call = function() {
  var G__14196 = null;
  var G__14196__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14196__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14196 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14196__2.call(this, self__, k);
      case 3:
        return G__14196__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14196.cljs$core$IFn$_invoke$arity$2 = G__14196__2;
  G__14196.cljs$core$IFn$_invoke$arity$3 = G__14196__3;
  return G__14196;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args14194) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14194)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "shift", "shift", -1657295705, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, 
  "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "tail", "tail", 494507963, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function cljs$core$__GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueIter = function(fseq, riter) {
  this.fseq = fseq;
  this.riter = riter;
};
cljs.core.PersistentQueueIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4126__auto__ = !(self__.fseq == null) && cljs.core.seq(self__.fseq);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    if (!(self__.riter == null)) {
      return self__.riter.hasNext();
    } else {
      return false;
    }
  }
};
cljs.core.PersistentQueueIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.fseq == null)) {
    var ret = cljs.core.first(self__.fseq);
    self__.fseq = cljs.core.next(self__.fseq);
    return ret;
  } else {
    if (!(self__.riter == null) && self__.riter.hasNext()) {
      return self__.riter.next();
    } else {
      throw new Error("No such element");
    }
  }
};
cljs.core.PersistentQueueIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.PersistentQueueIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "fseq", "fseq", -1466412450, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "riter", "riter", -237834262, null)], null);
};
cljs.core.PersistentQueueIter.cljs$lang$type = true;
cljs.core.PersistentQueueIter.cljs$lang$ctorStr = "cljs.core/PersistentQueueIter";
cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentQueueIter");
};
cljs.core.__GT_PersistentQueueIter = function cljs$core$__GT_PersistentQueueIter(fseq, riter) {
  return new cljs.core.PersistentQueueIter(fseq, riter);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850700;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.indexOf = function() {
  var G__14197 = null;
  var G__14197__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14197__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14197 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14197__1.call(this, x);
      case 2:
        return G__14197__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14197.cljs$core$IFn$_invoke$arity$1 = G__14197__1;
  G__14197.cljs$core$IFn$_invoke$arity$2 = G__14197__2;
  return G__14197;
}();
cljs.core.PersistentQueueSeq.prototype.lastIndexOf = function() {
  var G__14198 = null;
  var G__14198__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14198__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14198 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14198__1.call(this, x);
      case 2:
        return G__14198__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14198.cljs$core$IFn$_invoke$arity$1 = G__14198__1;
  G__14198.cljs$core$IFn$_invoke$arity$2 = G__14198__2;
  return G__14198;
}();
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5733__auto__ = cljs.core.next(self__.front);
  if (temp__5733__auto__) {
    var f1 = temp__5733__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (!(self__.rear == null)) {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5733__auto__ = cljs.core.next(self__.front);
  if (temp__5733__auto__) {
    var f1 = temp__5733__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueueSeq(new_meta, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function cljs$core$__GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
goog.object.set(cljs.core.PersistentQueueSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.indexOf = function() {
  var G__14199 = null;
  var G__14199__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14199__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14199 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14199__1.call(this, x);
      case 2:
        return G__14199__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14199.cljs$core$IFn$_invoke$arity$1 = G__14199__1;
  G__14199.cljs$core$IFn$_invoke$arity$2 = G__14199__2;
  return G__14199;
}();
cljs.core.PersistentQueue.prototype.lastIndexOf = function() {
  var G__14200 = null;
  var G__14200__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null, coll));
  };
  var G__14200__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14200 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14200__1.call(this, x);
      case 2:
        return G__14200__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14200.cljs$core$IFn$_invoke$arity$1 = G__14200__1;
  G__14200.cljs$core$IFn$_invoke$arity$2 = G__14200__2;
  return G__14200;
}();
cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueIter(self__.front, cljs.core._iterator(self__.rear));
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__5733__auto__ = cljs.core.next(self__.front);
    if (temp__5733__auto__) {
      var f1 = temp__5733__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = self__.front;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentQueue(new_meta, self__.count, self__.front, self__.rear, self__.__hash);
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__4126__auto__ = self__.rear;
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.Symbol(null, "front", "front", 117022539, null), new cljs.core.Symbol(null, "rear", "rear", -900164830, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function cljs$core$__GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
goog.object.set(cljs.core.PersistentQueue.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.getBasis = function() {
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function cljs$core$__GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function cljs$core$equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) && !cljs.core.record_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 1048576 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IKVReduce$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce, x)) ? cljs.core.reduce_kv(function(_, k, v) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, k, cljs.core.never_equiv), v)) {
      return true;
    } else {
      return cljs.core.reduced(false);
    }
  }, true, x) : cljs.core.every_QMARK_(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x) : null : null);
};
cljs.core.scan_array = function cljs$core$scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__14202 = i + incr;
        i = G__14202;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function cljs$core$obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return -1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function cljs$core$obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__14203 = i + 1;
      var G__14204 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, goog.object.get(so, k__$1));
      i = G__14203;
      out = G__14204;
      continue;
    } else {
      return cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function cljs$core$obj_clone(obj, ks) {
  var new_obj = {};
  var l = ks.length;
  var i_14207 = 0;
  while (true) {
    if (i_14207 < l) {
      var k_14208 = ks[i_14207];
      goog.object.set(new_obj, k_14208, goog.object.get(obj, k_14208));
      var G__14209 = i_14207 + 1;
      i_14207 = G__14209;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return new cljs.core.MapEntry(k, self__.strobj[k], null);
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__14212 = init__$1;
        var G__14213 = k;
        var G__14214 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14212, G__14213, G__14214) : f.call(null, G__14212, G__14213, G__14214);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__14215 = cljs.core.rest(keys__$1);
        var G__14216 = init__$2;
        keys__$1 = G__14215;
        init__$1 = G__14216;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k)) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        goog.object.set(new_strobj, k, v);
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        goog.object.set(new_strobj, k, v);
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (goog.isString(k) && !(cljs.core.scan_array(1, k, self__.keys) == null)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__14210_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__14210_SHARP_, self__.strobj[p1__14210_SHARP_]], null);
    }, self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ObjMap(new_meta, self__.keys, self__.strobj, self__.update_count, self__.__hash);
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__14217 = null;
  var G__14217__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14217__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14217 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14217__2.call(this, self__, k);
      case 3:
        return G__14217__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14217.cljs$core$IFn$_invoke$arity$2 = G__14217__2;
  G__14217.cljs$core$IFn$_invoke$arity$3 = G__14217__3;
  return G__14217;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args14211) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14211)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "keys", "keys", -1586012071, null), new cljs.core.Symbol(null, "strobj", "strobj", 1088091283, null), new cljs.core.Symbol(null, "update-count", "update-count", -411982269, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function cljs$core$__GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.RecordIter = function(i, record, base_count, fields, ext_map_iter) {
  this.i = i;
  this.record = record;
  this.base_count = base_count;
  this.fields = fields;
  this.ext_map_iter = ext_map_iter;
};
cljs.core.RecordIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var or__4126__auto__ = self__.i < self__.base_count;
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    return self__.ext_map_iter.hasNext();
  }
};
cljs.core.RecordIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.i < self__.base_count) {
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields, self__.i);
    self__.i = self__.i + 1;
    return new cljs.core.MapEntry(k, cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(self__.record, k), null);
  } else {
    return self__.ext_map_iter.next();
  }
};
cljs.core.RecordIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.RecordIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "record", "record", 861424668, null), new cljs.core.Symbol(null, "base-count", "base-count", -1180647182, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, 
  "ext-map-iter", "ext-map-iter", -1215982757, null)], null);
};
cljs.core.RecordIter.cljs$lang$type = true;
cljs.core.RecordIter.cljs$lang$ctorStr = "cljs.core/RecordIter";
cljs.core.RecordIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RecordIter");
};
cljs.core.__GT_RecordIter = function cljs$core$__GT_RecordIter(i, record, base_count, fields, ext_map_iter) {
  return new cljs.core.RecordIter(i, record, base_count, fields, ext_map_iter);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__14220 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14220, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14220, 1, null);
    self__.s = cljs.core.next(self__.s);
    return {"value":[k, v], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6EntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function cljs$core$__GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function cljs$core$es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return {"value":[x, x], "done":false};
  } else {
    return {"value":null, "done":true};
  }
};
cljs.core.ES6SetEntriesIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "s", "s", -948495851, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function cljs$core$__GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function cljs$core$es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_index_of_nil_QMARK_ = function cljs$core$array_index_of_nil_QMARK_(arr) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__14223 = i + 2;
        i = G__14223;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_keyword_QMARK_ = function cljs$core$array_index_of_keyword_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Keyword && kstr === arr[i].fqn) {
        return i;
      } else {
        var G__14224 = i + 2;
        i = G__14224;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_symbol_QMARK_ = function cljs$core$array_index_of_symbol_QMARK_(arr, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (arr[i] instanceof cljs.core.Symbol && kstr === arr[i].str) {
        return i;
      } else {
        var G__14225 = i + 2;
        i = G__14225;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_identical_QMARK_ = function cljs$core$array_index_of_identical_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__14226 = i + 2;
        i = G__14226;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of_equiv_QMARK_ = function cljs$core$array_index_of_equiv_QMARK_(arr, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return -1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__14227 = i + 2;
        i = G__14227;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_index_of = function cljs$core$array_index_of(arr, k) {
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_index_of_keyword_QMARK_(arr, k);
  } else {
    if (goog.isString(k) || typeof k === "number") {
      return cljs.core.array_index_of_identical_QMARK_(arr, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_index_of_symbol_QMARK_(arr, k);
      } else {
        if (k == null) {
          return cljs.core.array_index_of_nil_QMARK_(arr);
        } else {
          return cljs.core.array_index_of_equiv_QMARK_(arr, k);
        }
      }
    }
  }
};
cljs.core.array_map_index_of = function cljs$core$array_map_index_of(m, k) {
  return cljs.core.array_index_of(m.arr, k);
};
cljs.core.array_extend_kv = function cljs$core$array_extend_kv(arr, k, v) {
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_14228 = 0;
  while (true) {
    if (i_14228 < l) {
      narr[i_14228] = arr[i_14228];
      var G__14229 = i_14228 + 1;
      i_14228 = G__14229;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.array_map_extend_kv = function cljs$core$array_map_extend_kv(m, k, v) {
  return cljs.core.array_extend_kv(m.arr, k, v);
};
cljs.core.MapEntry = function(key, val, __hash) {
  this.key = key;
  this.val = val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.MapEntry.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__14231 = k;
  switch(G__14231) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.MapEntry.prototype.indexOf = function() {
  var G__14233 = null;
  var G__14233__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14233__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14233 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14233__1.call(this, x);
      case 2:
        return G__14233__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14233.cljs$core$IFn$_invoke$arity$1 = G__14233__1;
  G__14233.cljs$core$IFn$_invoke$arity$2 = G__14233__2;
  return G__14233;
}();
cljs.core.MapEntry.prototype.lastIndexOf = function() {
  var G__14234 = null;
  var G__14234__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14234__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14234 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14234__1.call(this, x);
      case 2:
        return G__14234__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14234.cljs$core$IFn$_invoke$arity$1 = G__14234__1;
  G__14234.cljs$core$IFn$_invoke$arity$2 = G__14234__2;
  return G__14234;
}();
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.MapEntry.prototype.call = function() {
  var G__14235 = null;
  var G__14235__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14235__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14235 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14235__2.call(this, self__, k);
      case 3:
        return G__14235__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14235.cljs$core$IFn$_invoke$arity$2 = G__14235__2;
  G__14235.cljs$core$IFn$_invoke$arity$3 = G__14235__3;
  return G__14235;
}();
cljs.core.MapEntry.prototype.apply = function(self__, args14230) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14230)));
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.MapEntry.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.MapEntry.cljs$lang$type = true;
cljs.core.MapEntry.cljs$lang$ctorStr = "cljs.core/MapEntry";
cljs.core.MapEntry.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/MapEntry");
};
cljs.core.__GT_MapEntry = function cljs$core$__GT_MapEntry(key, val, __hash) {
  return new cljs.core.MapEntry(key, val, __hash);
};
cljs.core.map_entry_QMARK_ = function cljs$core$map_entry_QMARK_(x) {
  if (!(x == null)) {
    if (x.cljs$lang$protocol_mask$partition0$ & 2048 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IMapEntry$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.indexOf = function() {
  var G__14237 = null;
  var G__14237__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14237__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14237 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14237__1.call(this, x);
      case 2:
        return G__14237__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14237.cljs$core$IFn$_invoke$arity$1 = G__14237__1;
  G__14237.cljs$core$IFn$_invoke$arity$2 = G__14237__2;
  return G__14237;
}();
cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf = function() {
  var G__14238 = null;
  var G__14238__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14238__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14238 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14238__1.call(this, x);
      case 2:
        return G__14238__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14238.cljs$core$IFn$_invoke$arity$1 = G__14238__1;
  G__14238.cljs$core$IFn$_invoke$arity$2 = G__14238__2;
  return G__14238;
}();
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return (self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function cljs$core$__GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
goog.object.set(cljs.core.PersistentArrayMapSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.persistent_array_map_seq = function cljs$core$persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.MapEntry(self__.arr[self__.i], self__.arr[self__.i + 1], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null)], null);
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function cljs$core$__GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return null;
  } else {
    return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14240 = cljs.core.seq(coll);
  var chunk__14241 = null;
  var count__14242 = 0;
  var i__14243 = 0;
  while (true) {
    if (i__14243 < count__14242) {
      var vec__14250 = chunk__14241.cljs$core$IIndexed$_nth$arity$2(null, i__14243);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14250, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14250, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__14262 = seq__14240;
      var G__14263 = chunk__14241;
      var G__14264 = count__14242;
      var G__14265 = i__14243 + 1;
      seq__14240 = G__14262;
      chunk__14241 = G__14263;
      count__14242 = G__14264;
      i__14243 = G__14265;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq(seq__14240);
      if (temp__5735__auto__) {
        var seq__14240__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14240__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__14240__$1);
          var G__14266 = cljs.core.chunk_rest(seq__14240__$1);
          var G__14267 = c__4556__auto__;
          var G__14268 = cljs.core.count(c__4556__auto__);
          var G__14269 = 0;
          seq__14240 = G__14266;
          chunk__14241 = G__14267;
          count__14242 = G__14268;
          i__14243 = G__14269;
          continue;
        } else {
          var vec__14253 = cljs.core.first(seq__14240__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14253, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14253, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__14270 = cljs.core.next(seq__14240__$1);
          var G__14271 = null;
          var G__14272 = 0;
          var G__14273 = 0;
          seq__14240 = G__14270;
          chunk__14241 = G__14271;
          count__14242 = G__14272;
          i__14243 = G__14273;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__14256 = init__$1;
        var G__14257 = self__.arr[i];
        var G__14258 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14256, G__14257, G__14258) : f.call(null, G__14256, G__14257, G__14258);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return cljs.core.deref(init__$2);
      } else {
        var G__14274 = i + 2;
        var G__14275 = init__$2;
        i = G__14274;
        init__$1 = G__14275;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.map_QMARK_(other) && !cljs.core.record_QMARK_(other)) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__14276 = i + 2;
              i = G__14276;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap({}, self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__14277 = s + 2;
            var G__14278 = d;
            s = G__14277;
            d = G__14278;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__14279 = s + 2;
            var G__14280 = d + 2;
            s = G__14279;
            d = G__14280;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__14261 = cljs.core.aclone(self__.arr);
        G__14261[idx + 1] = v;
        return G__14261;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentArrayMap(new_meta, self__.cnt, self__.arr, self__.__hash);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__14281 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__14282 = cljs.core.next(es);
          ret = G__14281;
          es = G__14282;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__14283 = null;
  var G__14283__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14283__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14283 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14283__2.call(this, self__, k);
      case 3:
        return G__14283__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14283.cljs$core$IFn$_invoke$arity$2 = G__14283__2;
  G__14283.cljs$core$IFn$_invoke$arity$3 = G__14283__3;
  return G__14283;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args14239) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14239)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function cljs$core$__GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var arr__$2 = no_check ? arr__$1 : function() {
    var ret = [];
    var i_14284 = 0;
    while (true) {
      if (i_14284 < arr__$1.length) {
        var k_14285 = arr__$1[i_14284];
        var v_14286 = arr__$1[i_14284 + 1];
        var idx_14287 = cljs.core.array_index_of(ret, k_14285);
        if (idx_14287 === -1) {
          ret.push(k_14285);
          ret.push(v_14286);
        } else {
        }
        var G__14288 = i_14284 + 2;
        i_14284 = G__14288;
        continue;
      } else {
      }
      break;
    }
    return ret;
  }();
  var cnt = arr__$2.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr__$2, null);
};
cljs.core.PersistentArrayMap.createWithCheck = function(arr) {
  var ret = [];
  var i_14290 = 0;
  while (true) {
    if (i_14290 < arr.length) {
      var k_14291 = arr[i_14290];
      var v_14292 = arr[i_14290 + 1];
      var idx_14293 = cljs.core.array_index_of(ret, k_14291);
      if (idx_14293 === -1) {
        var G__14289_14294 = ret;
        G__14289_14294.push(k_14291);
        G__14289_14294.push(v_14292);
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_14291)].join(""));
      }
      var G__14295 = i_14290 + 2;
      i_14290 = G__14295;
      continue;
    } else {
    }
    break;
  }
  var cnt = arr.length / 2;
  return new cljs.core.PersistentArrayMap(null, cnt, arr, null);
};
cljs.core.PersistentArrayMap.createAsIfByAssoc = function(arr) {
  var ret = [];
  var i_14297 = 0;
  while (true) {
    if (i_14297 < arr.length) {
      var k_14298 = arr[i_14297];
      var v_14299 = arr[i_14297 + 1];
      var idx_14300 = cljs.core.array_index_of(ret, k_14298);
      if (idx_14300 === -1) {
        var G__14296_14301 = ret;
        G__14296_14301.push(k_14298);
        G__14296_14301.push(v_14299);
      } else {
        ret[idx_14300 + 1] = v_14299;
      }
      var G__14302 = i_14297 + 2;
      i_14297 = G__14302;
      continue;
    } else {
    }
    break;
  }
  return new cljs.core.PersistentArrayMap(null, ret.length / 2, ret, null);
};
goog.object.set(cljs.core.PersistentArrayMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$2 = tcoll__$1;
        while (true) {
          var temp__5733__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5733__auto__)) {
            var e = temp__5733__auto__;
            var G__14305 = cljs.core.next(es);
            var G__14306 = cljs.core._assoc_BANG_(tcoll__$2, cljs.core.key(e), cljs.core.val(e));
            es = G__14305;
            tcoll__$2 = G__14306;
            continue;
          } else {
            return tcoll__$2;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.array__GT_transient_hash_map(self__.len, self__.arr), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.editable_QMARK_) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__14304_14307 = self__.arr;
      G__14304_14307.pop();
      G__14304_14307.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.call = function() {
  var G__14308 = null;
  var G__14308__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
  };
  var G__14308__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__14308 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14308__2.call(this, self__, key);
      case 3:
        return G__14308__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14308.cljs$core$IFn$_invoke$arity$2 = G__14308__2;
  G__14308.cljs$core$IFn$_invoke$arity$3 = G__14308__3;
  return G__14308;
}();
cljs.core.TransientArrayMap.prototype.apply = function(self__, args14303) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14303)));
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientArrayMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "editable?", "editable?", -164945806, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "len", "len", -1230778691, 
  null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "arr", "arr", 2115492975, null)], null);
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function cljs$core$__GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function cljs$core$array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__14309 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__14310 = i + 2;
      out = G__14309;
      i = G__14310;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function cljs$core$__GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function cljs$core$key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function cljs$core$mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function cljs$core$clone_and_set(var_args) {
  var G__14312 = arguments.length;
  switch(G__14312) {
    case 3:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 = function(arr, i, a) {
  var G__14313 = cljs.core.aclone(arr);
  G__14313[i] = a;
  return G__14313;
};
cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 = function(arr, i, a, j, b) {
  var G__14314 = cljs.core.aclone(arr);
  G__14314[i] = a;
  G__14314[j] = b;
  return G__14314;
};
cljs.core.clone_and_set.cljs$lang$maxFixedArity = 5;
cljs.core.remove_pair = function cljs$core$remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function cljs$core$bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function cljs$core$bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function cljs$core$edit_and_set(var_args) {
  var G__14317 = arguments.length;
  switch(G__14317) {
    case 4:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(arguments[0], arguments[1], arguments[2], arguments[3]);
      break;
    case 6:
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 = function(inode, edit, i, a) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  return editable;
};
cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 = function(inode, edit, i, a, j, b) {
  var editable = inode.ensure_editable(edit);
  editable.arr[i] = a;
  editable.arr[j] = b;
  return editable;
};
cljs.core.edit_and_set.cljs$lang$maxFixedArity = 6;
cljs.core.inode_kv_reduce = function cljs$core$inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__14319 = init__$1;
          var G__14320 = k;
          var G__14321 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14319, G__14320, G__14321) : f.call(null, G__14319, G__14320, G__14321);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        return init__$2;
      } else {
        var G__14322 = i + 2;
        var G__14323 = init__$2;
        i = G__14322;
        init__$1 = G__14323;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.NodeIterator = function(arr, i, next_entry, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_entry = next_entry;
  this.next_iter = next_iter;
};
cljs.core.NodeIterator.prototype.advance = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (self__.i < len) {
      var key = self__.arr[self__.i];
      var node_or_val = self__.arr[self__.i + 1];
      var found = !(key == null) ? self__.next_entry = new cljs.core.MapEntry(key, node_or_val, null) : !(node_or_val == null) ? function() {
        var new_iter = cljs.core._iterator(node_or_val);
        if (new_iter.hasNext()) {
          return self__.next_iter = new_iter;
        } else {
          return false;
        }
      }() : false;
      self__.i = self__.i + 2;
      if (found) {
        return true;
      } else {
        continue;
      }
    } else {
      return false;
    }
    break;
  }
};
cljs.core.NodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var or__4126__auto__ = !(self__.next_entry == null);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = !(self__.next_iter == null);
    if (or__4126__auto____$1) {
      return or__4126__auto____$1;
    } else {
      return this$.advance();
    }
  }
};
cljs.core.NodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (!(self__.next_entry == null)) {
    var ret = self__.next_entry;
    self__.next_entry = null;
    return ret;
  } else {
    if (!(self__.next_iter == null)) {
      var ret = self__.next_iter.next();
      if (self__.next_iter.hasNext()) {
      } else {
        self__.next_iter = null;
      }
      return ret;
    } else {
      if (this$.advance()) {
        return this$.next();
      } else {
        throw new Error("No such element");
      }
    }
  }
};
cljs.core.NodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.NodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-entry", "next-entry", 1091342476, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.NodeIterator.cljs$lang$type = true;
cljs.core.NodeIterator.cljs$lang$ctorStr = "cljs.core/NodeIterator";
cljs.core.NodeIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/NodeIterator");
};
cljs.core.__GT_NodeIterator = function cljs$core$__GT_NodeIterator(arr, i, next_entry, next_iter) {
  return new cljs.core.NodeIterator(arr, i, next_entry, next_iter);
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_.val = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_14324 = 0;
        var j_14325 = 0;
        while (true) {
          if (i_14324 < 32) {
            if ((self__.bitmap >>> i_14324 & 1) === 0) {
              var G__14326 = i_14324 + 1;
              var G__14327 = j_14325;
              i_14324 = G__14326;
              j_14325 = G__14327;
              continue;
            } else {
              nodes[i_14324] = !(self__.arr[j_14325] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_14325]), self__.arr[j_14325], self__.arr[j_14325 + 1], added_leaf_QMARK_) : self__.arr[j_14325 + 1];
              var G__14328 = i_14324 + 1;
              var G__14329 = j_14325 + 2;
              i_14324 = G__14328;
              j_14325 = G__14329;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(edit__$1, shift + 5, key_or_nil, val_or_node, hash, key, val));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_14330 = 0;
      var j_14331 = 0;
      while (true) {
        if (i_14330 < 32) {
          if ((self__.bitmap >>> i_14330 & 1) === 0) {
            var G__14332 = i_14330 + 1;
            var G__14333 = j_14331;
            i_14330 = G__14332;
            j_14331 = G__14333;
            continue;
          } else {
            nodes[i_14330] = !(self__.arr[j_14331] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_14331]), self__.arr[j_14331], self__.arr[j_14331 + 1], added_leaf_QMARK_) : self__.arr[j_14331 + 1];
            var G__14334 = i_14330 + 1;
            var G__14335 = j_14331 + 2;
            i_14330 = G__14334;
            j_14331 = G__14335;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(shift + 5, key_or_nil, val_or_node, hash, key, val)));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.MapEntry(key_or_nil, val_or_node, null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.BitmapIndexedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "bitmap", "bitmap", 501334601, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function cljs$core$__GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function cljs$core$pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__14336 = i + 1;
        var G__14337 = j + 2;
        var G__14338 = bitmap | 1 << i;
        i = G__14336;
        j = G__14337;
        bitmap = G__14338;
        continue;
      } else {
        var G__14339 = i + 1;
        var G__14340 = j;
        var G__14341 = bitmap;
        i = G__14339;
        j = G__14340;
        bitmap = G__14341;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNodeIterator = function(arr, i, next_iter) {
  this.arr = arr;
  this.i = i;
  this.next_iter = next_iter;
};
cljs.core.ArrayNodeIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  var len = self__.arr.length;
  while (true) {
    if (!(!(self__.next_iter == null) && self__.next_iter.hasNext())) {
      if (self__.i < len) {
        var node = self__.arr[self__.i];
        self__.i = self__.i + 1;
        if (!(node == null)) {
          self__.next_iter = cljs.core._iterator(node);
        } else {
        }
        continue;
      } else {
        return false;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.ArrayNodeIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (this$.hasNext()) {
    return self__.next_iter.next();
  } else {
    throw new Error("No such element");
  }
};
cljs.core.ArrayNodeIterator.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayNodeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "next-iter", "next-iter", 1526626239, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNodeIterator.cljs$lang$type = true;
cljs.core.ArrayNodeIterator.cljs$lang$ctorStr = "cljs.core/ArrayNodeIterator";
cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayNodeIterator");
};
cljs.core.__GT_ArrayNodeIterator = function cljs$core$__GT_ArrayNodeIterator(arr, i, next_iter) {
  return new cljs.core.ArrayNodeIterator(arr, i, next_iter);
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          return init__$2;
        } else {
          var G__14342 = i + 1;
          var G__14343 = init__$2;
          i = G__14342;
          init__$1 = G__14343;
          continue;
        }
      } else {
        var G__14344 = i + 1;
        var G__14345 = init__$1;
        i = G__14344;
        init__$1 = G__14345;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeIterator(self__.arr, 0, null);
};
cljs.core.ArrayNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function cljs$core$__GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function cljs$core$hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__14346 = i + 2;
        i = G__14346;
        continue;
      }
    } else {
      return -1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
  this.cljs$lang$protocol_mask$partition0$ = 0;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_.val = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx + 1], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return (new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.MapEntry(self__.arr[idx], self__.arr[idx + 1], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeIterator(self__.arr, 0, null, null);
};
cljs.core.HashCollisionNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "edit", "edit", -1302639, null), cljs.core.with_meta(new cljs.core.Symbol(null, "collision-hash", "collision-hash", -35831342, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
  "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function cljs$core$__GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function cljs$core$create_node(var_args) {
  var G__14348 = arguments.length;
  switch(G__14348) {
    case 6:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5]);
      break;
    case 7:
      return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4], arguments[5], arguments[6]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 = function(shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
  var key1hash = cljs.core.hash(key1);
  if (key1hash === key2hash) {
    return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
  }
};
cljs.core.create_node.cljs$lang$maxFixedArity = 7;
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.indexOf = function() {
  var G__14350 = null;
  var G__14350__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14350__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14350 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14350__1.call(this, x);
      case 2:
        return G__14350__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14350.cljs$core$IFn$_invoke$arity$1 = G__14350__1;
  G__14350.cljs$core$IFn$_invoke$arity$2 = G__14350__2;
  return G__14350;
}();
cljs.core.NodeSeq.prototype.lastIndexOf = function() {
  var G__14351 = null;
  var G__14351__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14351__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14351 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14351__1.call(this, x);
      case 2:
        return G__14351__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14351.cljs$core$IFn$_invoke$arity$1 = G__14351__1;
  G__14351.cljs$core$IFn$_invoke$arity$2 = G__14351__2;
  return G__14351;
}();
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null);
  } else {
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.MapEntry(self__.nodes[self__.i], self__.nodes[self__.i + 1], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = self__.s == null ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i + 2, null) : cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.NodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function cljs$core$__GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
goog.object.set(cljs.core.NodeSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.create_inode_seq = function cljs$core$create_inode_seq(var_args) {
  var G__14353 = arguments.length;
  switch(G__14353) {
    case 1:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        if (!(nodes[j] == null)) {
          return new cljs.core.NodeSeq(null, nodes, j, null, null);
        } else {
          var temp__5733__auto__ = nodes[j + 1];
          if (cljs.core.truth_(temp__5733__auto__)) {
            var node = temp__5733__auto__;
            var temp__5733__auto____$1 = node.inode_seq();
            if (cljs.core.truth_(temp__5733__auto____$1)) {
              var node_seq = temp__5733__auto____$1;
              return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
            } else {
              var G__14355 = j + 2;
              j = G__14355;
              continue;
            }
          } else {
            var G__14356 = j + 2;
            j = G__14356;
            continue;
          }
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.NodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_inode_seq.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.indexOf = function() {
  var G__14357 = null;
  var G__14357__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14357__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14357 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14357__1.call(this, x);
      case 2:
        return G__14357__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14357.cljs$core$IFn$_invoke$arity$1 = G__14357__1;
  G__14357.cljs$core$IFn$_invoke$arity$2 = G__14357__2;
  return G__14357;
}();
cljs.core.ArrayNodeSeq.prototype.lastIndexOf = function() {
  var G__14358 = null;
  var G__14358__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14358__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14358 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14358__1.call(this, x);
      case 2:
        return G__14358__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14358.cljs$core$IFn$_invoke$arity$1 = G__14358__1;
  G__14358.cljs$core$IFn$_invoke$arity$2 = G__14358__2;
  return G__14358;
}();
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var ret = cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(self__.nodes, self__.i, cljs.core.next(self__.s));
  if (!(ret == null)) {
    return ret;
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.ArrayNodeSeq(new_meta, self__.nodes, self__.i, self__.s, self__.__hash);
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "nodes", "nodes", -459054278, null), new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.Symbol(null, "s", "s", -948495851, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 
  875778266), true], null))], null);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function cljs$core$__GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
goog.object.set(cljs.core.ArrayNodeSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.create_array_node_seq = function cljs$core$create_array_node_seq(var_args) {
  var G__14360 = arguments.length;
  switch(G__14360) {
    case 1:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 3:
      return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = function(nodes) {
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
};
cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 = function(nodes, i, s) {
  if (s == null) {
    var len = nodes.length;
    var j = i;
    while (true) {
      if (j < len) {
        var temp__5733__auto__ = nodes[j];
        if (cljs.core.truth_(temp__5733__auto__)) {
          var nj = temp__5733__auto__;
          var temp__5733__auto____$1 = nj.inode_seq();
          if (cljs.core.truth_(temp__5733__auto____$1)) {
            var ns = temp__5733__auto____$1;
            return new cljs.core.ArrayNodeSeq(null, nodes, j + 1, ns, null);
          } else {
            var G__14362 = j + 1;
            j = G__14362;
            continue;
          }
        } else {
          var G__14363 = j + 1;
          j = G__14363;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  } else {
    return new cljs.core.ArrayNodeSeq(null, nodes, i, s, null);
  }
};
cljs.core.create_array_node_seq.cljs$lang$maxFixedArity = 3;
cljs.core.HashMapIter = function(nil_val, root_iter, seen) {
  this.nil_val = nil_val;
  this.root_iter = root_iter;
  this.seen = seen;
};
cljs.core.HashMapIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return !self__.seen || self__.root_iter.hasNext();
};
cljs.core.HashMapIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!self__.seen) {
    self__.seen = true;
    return new cljs.core.MapEntry(null, self__.nil_val, null);
  } else {
    return self__.root_iter.next();
  }
};
cljs.core.HashMapIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashMapIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.Symbol(null, "root-iter", "root-iter", 1974672108, null), cljs.core.with_meta(new cljs.core.Symbol(null, "seen", "seen", 1121531738, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.HashMapIter.cljs$lang$type = true;
cljs.core.HashMapIter.cljs$lang$ctorStr = "cljs.core/HashMapIter";
cljs.core.HashMapIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/HashMapIter");
};
cljs.core.__GT_HashMapIter = function cljs$core$__GT_HashMapIter(nil_val, root_iter, seen) {
  return new cljs.core.HashMapIter(nil_val, root_iter, seen);
};
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.MapEntry(null, self__.nil_val, null);
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_find(0, cljs.core.hash(k), k, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14365 = cljs.core.seq(coll);
  var chunk__14366 = null;
  var count__14367 = 0;
  var i__14368 = 0;
  while (true) {
    if (i__14368 < count__14367) {
      var vec__14375 = chunk__14366.cljs$core$IIndexed$_nth$arity$2(null, i__14368);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14375, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14375, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__14383 = seq__14365;
      var G__14384 = chunk__14366;
      var G__14385 = count__14367;
      var G__14386 = i__14368 + 1;
      seq__14365 = G__14383;
      chunk__14366 = G__14384;
      count__14367 = G__14385;
      i__14368 = G__14386;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq(seq__14365);
      if (temp__5735__auto__) {
        var seq__14365__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14365__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__14365__$1);
          var G__14387 = cljs.core.chunk_rest(seq__14365__$1);
          var G__14388 = c__4556__auto__;
          var G__14389 = cljs.core.count(c__4556__auto__);
          var G__14390 = 0;
          seq__14365 = G__14387;
          chunk__14366 = G__14388;
          count__14367 = G__14389;
          i__14368 = G__14390;
          continue;
        } else {
          var vec__14378 = cljs.core.first(seq__14365__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14378, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14378, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__14391 = cljs.core.next(seq__14365__$1);
          var G__14392 = null;
          var G__14393 = 0;
          var G__14394 = 0;
          seq__14365 = G__14391;
          chunk__14366 = G__14392;
          count__14367 = G__14393;
          i__14368 = G__14394;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init, null, self__.nil_val) : f.call(null, init, null, self__.nil_val) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return cljs.core.deref(init__$1);
  } else {
    if (!(self__.root == null)) {
      return cljs.core.unreduced(self__.root.kv_reduce(f, init__$1));
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var root_iter = self__.root ? cljs.core._iterator(self__.root) : cljs.core.nil_iter();
  if (self__.has_nil_QMARK_) {
    return new cljs.core.HashMapIter(self__.nil_val, root_iter, false);
  } else {
    return root_iter;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap({}, self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return !(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.MapEntry(null, self__.nil_val, null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashMap(new_meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__14395 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__14396 = cljs.core.next(es);
          ret = G__14395;
          es = G__14396;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__14397 = null;
  var G__14397__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14397__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14397 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14397__2.call(this, self__, k);
      case 3:
        return G__14397__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14397.cljs$core$IFn$_invoke$arity$2 = G__14397__2;
  G__14397.cljs$core$IFn$_invoke$arity$3 = G__14397__3;
  return G__14397;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args14364) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14364)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "root", "root", 1191874074, null), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", 
  "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function cljs$core$__GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__14398 = i + 2;
      var G__14399 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__14398;
      ret = G__14399;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__14400 = i + 1;
      var G__14401 = cljs.core._assoc_BANG_(out, ks[i], vs[i]);
      i = G__14400;
      out = G__14401;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.createWithCheck = function(arr) {
  var len = arr.length;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i_14402 = 0;
  while (true) {
    if (i_14402 < len) {
      cljs.core._assoc_BANG_(ret, arr[i_14402], arr[i_14402 + 1]);
      if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret), i_14402 / 2 + 1)) {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arr[i_14402])].join(""));
      } else {
        var G__14403 = i_14402 + 2;
        i_14402 = G__14403;
        continue;
      }
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(ret);
};
goog.object.set(cljs.core.PersistentHashMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 56;
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (cljs.core.map_entry_QMARK_(o)) {
      return tcoll.assoc_BANG_(cljs.core.key(o), cljs.core.val(o));
    } else {
      if (cljs.core.vector_QMARK_(o)) {
        return tcoll.assoc_BANG_(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(0) : o.call(null, 0), o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1(1) : o.call(null, 1));
      } else {
        var es = cljs.core.seq(o);
        var tcoll__$1 = tcoll;
        while (true) {
          var temp__5733__auto__ = cljs.core.first(es);
          if (cljs.core.truth_(temp__5733__auto__)) {
            var e = temp__5733__auto__;
            var G__14405 = cljs.core.next(es);
            var G__14406 = tcoll__$1.assoc_BANG_(cljs.core.key(e), cljs.core.val(e));
            es = G__14405;
            tcoll__$1 = G__14406;
            continue;
          } else {
            return tcoll__$1;
          }
          break;
        }
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (removed_leaf_QMARK_.val) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.call = function() {
  var G__14407 = null;
  var G__14407__2 = function(self__, key) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
  };
  var G__14407__3 = function(self__, key, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
  };
  G__14407 = function(self__, key, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14407__2.call(this, self__, key);
      case 3:
        return G__14407__3.call(this, self__, key, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14407.cljs$core$IFn$_invoke$arity$2 = G__14407__2;
  G__14407.cljs$core$IFn$_invoke$arity$3 = G__14407__3;
  return G__14407;
}();
cljs.core.TransientHashMap.prototype.apply = function(self__, args14404) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14404)));
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(key) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$2(null, key);
};
cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(key, not_found) {
  var self__ = this;
  var tcoll = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(null, key, not_found);
};
cljs.core.TransientHashMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "edit", "edit", -1302639, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "root", "root", 1191874074, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "count", "count", -514511684, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "has-nil?", "has-nil?", 825886722, null), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, 
  "boolean", "boolean", -278886877, null), new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "nil-val", "nil-val", -513933559, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function cljs$core$__GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function cljs$core$tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__14408 = ascending_QMARK_ ? t.left : t.right;
      var G__14409 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__14408;
      stack__$1 = G__14409;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.indexOf = function() {
  var G__14410 = null;
  var G__14410__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14410__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14410 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14410__1.call(this, x);
      case 2:
        return G__14410__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14410.cljs$core$IFn$_invoke$arity$1 = G__14410__1;
  G__14410.cljs$core$IFn$_invoke$arity$2 = G__14410__2;
  return G__14410;
}();
cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf = function() {
  var G__14411 = null;
  var G__14411__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14411__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14411 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14411__1.call(this, x);
      case 2:
        return G__14411__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14411.cljs$core$IFn$_invoke$arity$1 = G__14411__1;
  G__14411.cljs$core$IFn$_invoke$arity$2 = G__14411__2;
  return G__14411;
}();
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (next_stack == null) {
    return null;
  } else {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMapSeq(new_meta, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "stack", "stack", 847125597, null), cljs.core.with_meta(new cljs.core.Symbol(null, "ascending?", "ascending?", -1938452653, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "boolean", "boolean", -278886877, null)], null)), new cljs.core.Symbol(null, 
  "cnt", "cnt", 1924510325, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function cljs$core$__GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
goog.object.set(cljs.core.PersistentTreeMapSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.create_tree_map_seq = function cljs$core$create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function cljs$core$balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function cljs$core$balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function cljs$core$balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function cljs$core$balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function cljs$core$tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? function() {
    var G__14412 = node.left;
    var G__14413 = f;
    var G__14414 = init;
    return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__14412, G__14413, G__14414) : cljs.core.tree_map_kv_reduce.call(null, G__14412, G__14413, G__14414);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    return init__$1;
  } else {
    var init__$2 = function() {
      var G__14415 = init__$1;
      var G__14416 = node.key;
      var G__14417 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14415, G__14416, G__14417) : f.call(null, G__14415, G__14416, G__14417);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      return init__$2;
    } else {
      if (!(node.right == null)) {
        var G__14418 = node.right;
        var G__14419 = f;
        var G__14420 = init__$2;
        return cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__14418, G__14419, G__14420) : cljs.core.tree_map_kv_reduce.call(null, G__14418, G__14419, G__14420);
      } else {
        return init__$2;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.BlackNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__14422 = k;
  switch(G__14422) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.BlackNode.prototype.lastIndexOf = function() {
  var G__14424 = null;
  var G__14424__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14424__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14424 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14424__1.call(this, x);
      case 2:
        return G__14424__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14424.cljs$core$IFn$_invoke$arity$1 = G__14424__1;
  G__14424.cljs$core$IFn$_invoke$arity$2 = G__14424__2;
  return G__14424;
}();
cljs.core.BlackNode.prototype.indexOf = function() {
  var G__14425 = null;
  var G__14425__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14425__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14425 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14425__1.call(this, x);
      case 2:
        return G__14425__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14425.cljs$core$IFn$_invoke$arity$1 = G__14425__1;
  G__14425.cljs$core$IFn$_invoke$arity$2 = G__14425__2;
  return G__14425;
}();
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__14426 = null;
  var G__14426__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14426__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14426 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14426__2.call(this, self__, k);
      case 3:
        return G__14426__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14426.cljs$core$IFn$_invoke$arity$2 = G__14426__2;
  G__14426.cljs$core$IFn$_invoke$arity$3 = G__14426__3;
  return G__14426;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args14421) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14421)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.BlackNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function cljs$core$__GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
goog.object.set(cljs.core.BlackNode.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166619935;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RedNode.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  var G__14428 = k;
  switch(G__14428) {
    case 0:
      return new cljs.core.MapEntry(0, self__.key, null);
      break;
    case 1:
      return new cljs.core.MapEntry(1, self__.val, null);
      break;
    default:
      return null;
  }
};
cljs.core.RedNode.prototype.lastIndexOf = function() {
  var G__14430 = null;
  var G__14430__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14430__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14430 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14430__1.call(this, x);
      case 2:
        return G__14430__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14430.cljs$core$IFn$_invoke$arity$1 = G__14430__1;
  G__14430.cljs$core$IFn$_invoke$arity$2 = G__14430__2;
  return G__14430;
}();
cljs.core.RedNode.prototype.indexOf = function() {
  var G__14431 = null;
  var G__14431__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14431__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14431 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14431__1.call(this, x);
      case 2:
        return G__14431__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14431.cljs$core$IFn$_invoke$arity$1 = G__14431__1;
  G__14431.cljs$core$IFn$_invoke$arity$2 = G__14431__2;
  return G__14431;
}();
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return node__$1.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return (new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.val, self__.key], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return k === 0 || k === 1;
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.IndexedSeq([self__.key, self__.val], 0, null);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__14432 = null;
  var G__14432__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__14432__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__14432 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14432__2.call(this, self__, k);
      case 3:
        return G__14432__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14432.cljs$core$IFn$_invoke$arity$2 = G__14432__2;
  G__14432.cljs$core$IFn$_invoke$arity$3 = G__14432__3;
  return G__14432;
}();
cljs.core.RedNode.prototype.apply = function(self__, args14427) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14427)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.RedNode.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null), new cljs.core.Symbol(null, "left", "left", 1241415590, null), new cljs.core.Symbol(null, "right", "right", 1187949694, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function cljs$core$__GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
goog.object.set(cljs.core.RedNode.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.tree_map_add = function cljs$core$tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__14433 = k;
      var G__14434 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14433, G__14434) : comp.call(null, G__14433, G__14434);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = function() {
          var G__14435 = comp;
          var G__14436 = tree.left;
          var G__14437 = k;
          var G__14438 = v;
          var G__14439 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__14435, G__14436, G__14437, G__14438, G__14439) : cljs.core.tree_map_add.call(null, G__14435, G__14436, G__14437, G__14438, G__14439);
        }();
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = function() {
          var G__14440 = comp;
          var G__14441 = tree.right;
          var G__14442 = k;
          var G__14443 = v;
          var G__14444 = found;
          return cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__14440, G__14441, G__14442, G__14443, G__14444) : cljs.core.tree_map_add.call(null, G__14440, G__14441, G__14442, G__14443, G__14444);
        }();
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function cljs$core$tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = function() {
            var G__14445 = left.right;
            var G__14446 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__14445, G__14446) : cljs.core.tree_map_append.call(null, G__14445, G__14446);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, function() {
            var G__14447 = left.right;
            var G__14448 = right;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__14447, G__14448) : cljs.core.tree_map_append.call(null, G__14447, G__14448);
          }(), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, function() {
            var G__14449 = left;
            var G__14450 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__14449, G__14450) : cljs.core.tree_map_append.call(null, G__14449, G__14450);
          }(), right.right, null);
        } else {
          var app = function() {
            var G__14451 = left.right;
            var G__14452 = right.left;
            return cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__14451, G__14452) : cljs.core.tree_map_append.call(null, G__14451, G__14452);
          }();
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function cljs$core$tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__14453 = k;
      var G__14454 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14453, G__14454) : comp.call(null, G__14453, G__14454);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = function() {
          var G__14455 = comp;
          var G__14456 = tree.left;
          var G__14457 = k;
          var G__14458 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__14455, G__14456, G__14457, G__14458) : cljs.core.tree_map_remove.call(null, G__14455, G__14456, G__14457, G__14458);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = function() {
          var G__14459 = comp;
          var G__14460 = tree.right;
          var G__14461 = k;
          var G__14462 = found;
          return cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__14459, G__14460, G__14461, G__14462) : cljs.core.tree_map_remove.call(null, G__14459, G__14460, G__14461, G__14462);
        }();
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function cljs$core$tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k, tk) : comp.call(null, k, tk);
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, function() {
        var G__14463 = comp;
        var G__14464 = tree.left;
        var G__14465 = k;
        var G__14466 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__14463, G__14464, G__14465, G__14466) : cljs.core.tree_map_replace.call(null, G__14463, G__14464, G__14465, G__14466);
      }(), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, function() {
        var G__14467 = comp;
        var G__14468 = tree.right;
        var G__14469 = k;
        var G__14470 = v;
        return cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__14467, G__14468, G__14469, G__14470) : cljs.core.tree_map_replace.call(null, G__14467, G__14468, G__14469, G__14470);
      }());
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.entry_at(k);
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14472 = cljs.core.seq(coll);
  var chunk__14473 = null;
  var count__14474 = 0;
  var i__14475 = 0;
  while (true) {
    if (i__14475 < count__14474) {
      var vec__14482 = chunk__14473.cljs$core$IIndexed$_nth$arity$2(null, i__14475);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14482, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14482, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__14494 = seq__14472;
      var G__14495 = chunk__14473;
      var G__14496 = count__14474;
      var G__14497 = i__14475 + 1;
      seq__14472 = G__14494;
      chunk__14473 = G__14495;
      count__14474 = G__14496;
      i__14475 = G__14497;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq(seq__14472);
      if (temp__5735__auto__) {
        var seq__14472__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14472__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__14472__$1);
          var G__14498 = cljs.core.chunk_rest(seq__14472__$1);
          var G__14499 = c__4556__auto__;
          var G__14500 = cljs.core.count(c__4556__auto__);
          var G__14501 = 0;
          seq__14472 = G__14498;
          chunk__14473 = G__14499;
          count__14474 = G__14500;
          i__14475 = G__14501;
          continue;
        } else {
          var vec__14485 = cljs.core.first(seq__14472__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14485, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14485, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__14502 = cljs.core.next(seq__14472__$1);
          var G__14503 = null;
          var G__14504 = 0;
          var G__14505 = 0;
          seq__14472 = G__14502;
          chunk__14473 = G__14503;
          count__14474 = G__14504;
          i__14475 = G__14505;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.keys(coll));
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.vals(coll));
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__14488 = k;
        var G__14489 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14488, G__14489) : self__.comp.call(null, G__14488, G__14489);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__14506 = t.left;
          t = G__14506;
          continue;
        } else {
          var G__14507 = t.right;
          t = G__14507;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree, f, init));
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return !(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, new_meta, self__.__hash);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return coll__$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__14508 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__14509 = cljs.core.next(es);
          ret = G__14508;
          es = G__14509;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__14510 = null;
  var G__14510__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14510__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14510 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14510__2.call(this, self__, k);
      case 3:
        return G__14510__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14510.cljs$core$IFn$_invoke$arity$2 = G__14510__2;
  G__14510.cljs$core$IFn$_invoke$arity$3 = G__14510__3;
  return G__14510;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args14471) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14471)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__14492 = k;
          var G__14493 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14492, G__14493) : self__.comp.call(null, G__14492, G__14493);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__14511 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__14512 = t.left;
              stack = G__14511;
              t = G__14512;
              continue;
            } else {
              var G__14513 = stack;
              var G__14514 = t.right;
              stack = G__14513;
              t = G__14514;
              continue;
            }
          } else {
            if (c > 0) {
              var G__14515 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__14516 = t.right;
              stack = G__14515;
              t = G__14516;
              continue;
            } else {
              var G__14517 = stack;
              var G__14518 = t.left;
              stack = G__14517;
              t = G__14518;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.key(entry);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "comp", "comp", -1462482139, null), new cljs.core.Symbol(null, "tree", "tree", 1444219499, null), new cljs.core.Symbol(null, "cnt", "cnt", 1924510325, null), new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function cljs$core$__GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
goog.object.set(cljs.core.PersistentTreeMap.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.hash_map = function cljs$core$hash_map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14520 = arguments.length;
  var i__4737__auto___14521 = 0;
  while (true) {
    if (i__4737__auto___14521 < len__4736__auto___14520) {
      args__4742__auto__.push(arguments[i__4737__auto___14521]);
      var G__14522 = i__4737__auto___14521 + 1;
      i__4737__auto___14521 = G__14522;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (in$) {
      var G__14523 = cljs.core.nnext(in$);
      var G__14524 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__14523;
      out = G__14524;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.hash_map.cljs$lang$maxFixedArity = 0;
cljs.core.hash_map.cljs$lang$applyTo = function(seq14519) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14519));
};
cljs.core.array_map = function cljs$core$array_map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14526 = arguments.length;
  var i__4737__auto___14527 = 0;
  while (true) {
    if (i__4737__auto___14527 < len__4736__auto___14526) {
      args__4742__auto__.push(arguments[i__4737__auto___14527]);
      var G__14528 = i__4737__auto___14527 + 1;
      i__4737__auto___14527 = G__14528;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var arr = keyvals instanceof cljs.core.IndexedSeq && keyvals.i === 0 ? keyvals.arr : cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals);
  return cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);
};
cljs.core.array_map.cljs$lang$maxFixedArity = 0;
cljs.core.array_map.cljs$lang$applyTo = function(seq14525) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14525));
};
cljs.core.obj_map = function cljs$core$obj_map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14532 = arguments.length;
  var i__4737__auto___14533 = 0;
  while (true) {
    if (i__4737__auto___14533 < len__4736__auto___14532) {
      args__4742__auto__.push(arguments[i__4737__auto___14533]);
      var G__14534 = i__4737__auto___14533 + 1;
      i__4737__auto___14533 = G__14534;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var ks = [];
  var obj = {};
  var kvs = cljs.core.seq(keyvals);
  while (true) {
    if (kvs) {
      ks.push(cljs.core.first(kvs));
      goog.object.set(obj, cljs.core.first(kvs), cljs.core.second(kvs));
      var G__14535 = cljs.core.nnext(kvs);
      kvs = G__14535;
      continue;
    } else {
      return cljs.core.ObjMap.fromObject(ks, obj);
    }
    break;
  }
};
cljs.core.obj_map.cljs$lang$maxFixedArity = 0;
cljs.core.obj_map.cljs$lang$applyTo = function(seq14529) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14529));
};
cljs.core.sorted_map = function cljs$core$sorted_map(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14537 = arguments.length;
  var i__4737__auto___14538 = 0;
  while (true) {
    if (i__4737__auto___14538 < len__4736__auto___14537) {
      args__4742__auto__.push(arguments[i__4737__auto___14538]);
      var G__14539 = i__4737__auto___14538 + 1;
      i__4737__auto___14538 = G__14539;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic = function(keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = cljs.core.PersistentTreeMap.EMPTY;
  while (true) {
    if (in$) {
      var G__14540 = cljs.core.nnext(in$);
      var G__14541 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__14540;
      out = G__14541;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_map.cljs$lang$applyTo = function(seq14536) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14536));
};
cljs.core.sorted_map_by = function cljs$core$sorted_map_by(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14544 = arguments.length;
  var i__4737__auto___14545 = 0;
  while (true) {
    if (i__4737__auto___14545 < len__4736__auto___14544) {
      args__4742__auto__.push(arguments[i__4737__auto___14545]);
      var G__14546 = i__4737__auto___14545 + 1;
      i__4737__auto___14545 = G__14546;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keyvals) {
  var in$ = cljs.core.seq(keyvals);
  var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
  while (true) {
    if (in$) {
      var G__14547 = cljs.core.nnext(in$);
      var G__14548 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
      in$ = G__14547;
      out = G__14548;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_map_by.cljs$lang$applyTo = function(seq14542) {
  var G__14543 = cljs.core.first(seq14542);
  var seq14542__$1 = cljs.core.next(seq14542);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14543, seq14542__$1);
};
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.indexOf = function() {
  var G__14551 = null;
  var G__14551__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14551__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14551 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14551__1.call(this, x);
      case 2:
        return G__14551__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14551.cljs$core$IFn$_invoke$arity$1 = G__14551__1;
  G__14551.cljs$core$IFn$_invoke$arity$2 = G__14551__2;
  return G__14551;
}();
cljs.core.KeySeq.prototype.lastIndexOf = function() {
  var G__14552 = null;
  var G__14552__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14552__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14552 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14552__1.call(this, x);
      case 2:
        return G__14552__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14552.cljs$core$IFn$_invoke$arity$1 = G__14552__1;
  G__14552.cljs$core$IFn$_invoke$arity$2 = G__14552__2;
  return G__14552;
}();
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, null);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.KeySeq(self__.mseq, new_meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function cljs$core$__GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
goog.object.set(cljs.core.KeySeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.keys = function cljs$core$keys(map) {
  var temp__5735__auto__ = cljs.core.seq(map);
  if (temp__5735__auto__) {
    var mseq = temp__5735__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function cljs$core$key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.indexOf = function() {
  var G__14555 = null;
  var G__14555__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14555__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14555 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14555__1.call(this, x);
      case 2:
        return G__14555__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14555.cljs$core$IFn$_invoke$arity$1 = G__14555__1;
  G__14555.cljs$core$IFn$_invoke$arity$2 = G__14555__2;
  return G__14555;
}();
cljs.core.ValSeq.prototype.lastIndexOf = function() {
  var G__14556 = null;
  var G__14556__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14556__2 = function(x, start) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start);
  };
  G__14556 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__14556__1.call(this, x);
      case 2:
        return G__14556__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14556.cljs$core$IFn$_invoke$arity$1 = G__14556__1;
  G__14556.cljs$core$IFn$_invoke$arity$2 = G__14556__2;
  return G__14556;
}();
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, null);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = (!(self__.mseq == null) ? self__.mseq.cljs$lang$protocol_mask$partition0$ & 128 || cljs.core.PROTOCOL_SENTINEL === self__.mseq.cljs$core$INext$ ? true : !self__.mseq.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq) : false : cljs.core.native_satisfies_QMARK_(cljs.core.INext, self__.mseq)) ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__._meta) {
    return coll__$1;
  } else {
    return new cljs.core.ValSeq(self__.mseq, new_meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "mseq", "mseq", 1602647196, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "not-native", "not-native", -236392494, null)], null)), new cljs.core.Symbol(null, "_meta", "_meta", -1716892533, null)], null);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function cljs$core$__GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
goog.object.set(cljs.core.ValSeq.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.vals = function cljs$core$vals(map) {
  var temp__5735__auto__ = cljs.core.seq(map);
  if (temp__5735__auto__) {
    var mseq = temp__5735__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function cljs$core$val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function cljs$core$merge(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14560 = arguments.length;
  var i__4737__auto___14561 = 0;
  while (true) {
    if (i__4737__auto___14561 < len__4736__auto___14560) {
      args__4742__auto__.push(arguments[i__4737__auto___14561]);
      var G__14562 = i__4737__auto___14561 + 1;
      i__4737__auto___14561 = G__14562;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic = function(maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__14557_SHARP_, p2__14558_SHARP_) {
      return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
        var or__4126__auto__ = p1__14557_SHARP_;
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), p2__14558_SHARP_);
    }, maps);
  } else {
    return null;
  }
};
cljs.core.merge.cljs$lang$maxFixedArity = 0;
cljs.core.merge.cljs$lang$applyTo = function(seq14559) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14559));
};
cljs.core.merge_with = function cljs$core$merge_with(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14567 = arguments.length;
  var i__4737__auto___14568 = 0;
  while (true) {
    if (i__4737__auto___14568 < len__4736__auto___14567) {
      args__4742__auto__.push(arguments[i__4737__auto___14568]);
      var G__14569 = i__4737__auto___14568 + 1;
      i__4737__auto___14568 = G__14569;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic = function(f, maps) {
  if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
    var merge_entry = function(m, e) {
      var k = cljs.core.key(e);
      var v = cljs.core.val(e);
      if (cljs.core.contains_QMARK_(m, k)) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
          var G__14565 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
          var G__14566 = v;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14565, G__14566) : f.call(null, G__14565, G__14566);
        }());
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
      }
    };
    var merge2 = function(m1, m2) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
        var or__4126__auto__ = m1;
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return cljs.core.PersistentArrayMap.EMPTY;
        }
      }(), cljs.core.seq(m2));
    };
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
  } else {
    return null;
  }
};
cljs.core.merge_with.cljs$lang$maxFixedArity = 1;
cljs.core.merge_with.cljs$lang$applyTo = function(seq14563) {
  var G__14564 = cljs.core.first(seq14563);
  var seq14563__$1 = cljs.core.next(seq14563);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14564, seq14563__$1);
};
cljs.core.select_keys = function cljs$core$select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__14570 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__14571 = cljs.core.next(keys);
      ret = G__14570;
      keys = G__14571;
      continue;
    } else {
      return cljs.core._with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.HashSetIter = function(iter) {
  this.iter = iter;
};
cljs.core.HashSetIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.iter.hasNext();
};
cljs.core.HashSetIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (self__.iter.hasNext()) {
    return self__.iter.next().key;
  } else {
    throw new Error("No such element");
  }
};
cljs.core.HashSetIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.HashSetIter.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "iter", "iter", -1346195486, null)], null);
};
cljs.core.HashSetIter.cljs$lang$type = true;
cljs.core.HashSetIter.cljs$lang$ctorStr = "cljs.core/HashSetIter";
cljs.core.HashSetIter.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/HashSetIter");
};
cljs.core.__GT_HashSetIter = function cljs$core$__GT_HashSetIter(iter) {
  return new cljs.core.HashSetIter(iter);
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 139268;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14575 = cljs.core.seq(coll);
  var chunk__14576 = null;
  var count__14577 = 0;
  var i__14578 = 0;
  while (true) {
    if (i__14578 < count__14577) {
      var vec__14585 = chunk__14576.cljs$core$IIndexed$_nth$arity$2(null, i__14578);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14585, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14585, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__14594 = seq__14575;
      var G__14595 = chunk__14576;
      var G__14596 = count__14577;
      var G__14597 = i__14578 + 1;
      seq__14575 = G__14594;
      chunk__14576 = G__14595;
      count__14577 = G__14596;
      i__14578 = G__14597;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq(seq__14575);
      if (temp__5735__auto__) {
        var seq__14575__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14575__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__14575__$1);
          var G__14598 = cljs.core.chunk_rest(seq__14575__$1);
          var G__14599 = c__4556__auto__;
          var G__14600 = cljs.core.count(c__4556__auto__);
          var G__14601 = 0;
          seq__14575 = G__14598;
          chunk__14576 = G__14599;
          count__14577 = G__14600;
          i__14578 = G__14601;
          continue;
        } else {
          var vec__14588 = cljs.core.first(seq__14575__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14588, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14588, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__14602 = cljs.core.next(seq__14575__$1);
          var G__14603 = null;
          var G__14604 = 0;
          var G__14605 = 0;
          seq__14575 = G__14602;
          chunk__14576 = G__14603;
          count__14577 = G__14604;
          i__14578 = G__14605;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var temp__5733__auto__ = cljs.core._find(self__.hash_map, v);
  if (cljs.core.truth_(temp__5733__auto__)) {
    var entry = temp__5733__auto__;
    return cljs.core.key(entry);
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.set_QMARK_(other)) {
    if (cljs.core.count(coll__$1) === cljs.core.count(other)) {
      try {
        return cljs.core.reduce_kv(function(p1__14573_SHARP_, p2__14572_SHARP_) {
          var or__4126__auto__ = cljs.core.contains_QMARK_(other, p2__14572_SHARP_);
          if (or__4126__auto__) {
            return or__4126__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.hash_map);
      } catch (e14593) {
        if (e14593 instanceof Error) {
          var ex = e14593;
          return false;
        } else {
          throw e14593;
        }
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentHashSet(new_meta, self__.hash_map, self__.__hash);
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__14606 = null;
  var G__14606__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14606__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14606 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14606__2.call(this, self__, k);
      case 3:
        return G__14606__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14606.cljs$core$IFn$_invoke$arity$2 = G__14606__2;
  G__14606.cljs$core$IFn$_invoke$arity$3 = G__14606__3;
  return G__14606;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args14574) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14574)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "hash-map", "hash-map", -439030950, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function cljs$core$__GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__14607 = i + 1;
        var G__14608 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__14607;
        out = G__14608;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__14609 = i + 1;
        var G__14610 = cljs.core._conj_BANG_(out, items[i]);
        i = G__14609;
        out = G__14610;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.createWithCheck = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4613__auto___14611 = len;
  var i_14612 = 0;
  while (true) {
    if (i_14612 < n__4613__auto___14611) {
      cljs.core._conj_BANG_(t, items[i_14612]);
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t), i_14612 + 1)) {
      } else {
        throw new Error(["Duplicate key: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(items[i_14612])].join(""));
      }
      var G__14613 = i_14612 + 1;
      i_14612 = G__14613;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
cljs.core.PersistentHashSet.createAsIfByAssoc = function(items) {
  var len = items.length;
  var t = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
  var n__4613__auto___14614 = len;
  var i_14615 = 0;
  while (true) {
    if (i_14615 < n__4613__auto___14614) {
      cljs.core._conj_BANG_(t, items[i_14615]);
      var G__14616 = i_14615 + 1;
      i_14615 = G__14616;
      continue;
    } else {
    }
    break;
  }
  return cljs.core._persistent_BANG_(t);
};
goog.object.set(cljs.core.PersistentHashSet.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition1$ = 136;
  this.cljs$lang$protocol_mask$partition0$ = 259;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__14618 = null;
  var G__14618__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__14618__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__14618 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14618__2.call(this, self__, k);
      case 3:
        return G__14618__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14618.cljs$core$IFn$_invoke$arity$2 = G__14618__2;
  G__14618.cljs$core$IFn$_invoke$arity$3 = G__14618__3;
  return G__14618;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args14617) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14617)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "transient-map", "transient-map", 351764893, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function cljs$core$__GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14622 = cljs.core.seq(coll);
  var chunk__14623 = null;
  var count__14624 = 0;
  var i__14625 = 0;
  while (true) {
    if (i__14625 < count__14624) {
      var vec__14632 = chunk__14623.cljs$core$IIndexed$_nth$arity$2(null, i__14625);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14632, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14632, 1, null);
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
      var G__14641 = seq__14622;
      var G__14642 = chunk__14623;
      var G__14643 = count__14624;
      var G__14644 = i__14625 + 1;
      seq__14622 = G__14641;
      chunk__14623 = G__14642;
      count__14624 = G__14643;
      i__14625 = G__14644;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq(seq__14622);
      if (temp__5735__auto__) {
        var seq__14622__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14622__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__14622__$1);
          var G__14645 = cljs.core.chunk_rest(seq__14622__$1);
          var G__14646 = c__4556__auto__;
          var G__14647 = cljs.core.count(c__4556__auto__);
          var G__14648 = 0;
          seq__14622 = G__14645;
          chunk__14623 = G__14646;
          count__14624 = G__14647;
          i__14625 = G__14648;
          continue;
        } else {
          var vec__14635 = cljs.core.first(seq__14622__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14635, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14635, 1, null);
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v, k) : f.call(null, v, k);
          var G__14649 = cljs.core.next(seq__14622__$1);
          var G__14650 = null;
          var G__14651 = 0;
          var G__14652 = 0;
          seq__14622 = G__14649;
          chunk__14623 = G__14650;
          count__14624 = G__14651;
          i__14625 = G__14652;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.set_QMARK_(other)) {
    if (cljs.core.count(coll__$1) === cljs.core.count(other)) {
      try {
        return cljs.core.reduce_kv(function(p1__14620_SHARP_, p2__14619_SHARP_) {
          var or__4126__auto__ = cljs.core.contains_QMARK_(other, p2__14619_SHARP_);
          if (or__4126__auto__) {
            return or__4126__auto__;
          } else {
            return cljs.core.reduced(false);
          }
        }, true, self__.tree_map);
      } catch (e14640) {
        if (e14640 instanceof Error) {
          var ex = e14640;
          return false;
        } else {
          throw e14640;
        }
      }
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  if (new_meta === self__.meta) {
    return coll__$1;
  } else {
    return new cljs.core.PersistentTreeSet(new_meta, self__.tree_map, self__.__hash);
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__14653 = null;
  var G__14653__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14653__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14653 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14653__2.call(this, self__, k);
      case 3:
        return G__14653__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__14653.cljs$core$IFn$_invoke$arity$2 = G__14653__2;
  G__14653.cljs$core$IFn$_invoke$arity$3 = G__14653__3;
  return G__14653;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args14621) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14621)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "tree-map", "tree-map", 1373073049, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function cljs$core$__GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
goog.object.set(cljs.core.PersistentTreeSet.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.set_from_indexed_seq = function cljs$core$set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4610__auto__ = arr;
    var l__4611__auto__ = a__4610__auto__.length;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < l__4611__auto__) {
        var G__14654 = i + 1;
        var G__14655 = cljs.core._conj_BANG_(res, arr[i]);
        i = G__14654;
        res = G__14655;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function cljs$core$set(coll) {
  if (cljs.core.set_QMARK_(coll)) {
    return cljs.core.with_meta(coll, null);
  } else {
    var in$ = cljs.core.seq(coll);
    if (in$ == null) {
      return cljs.core.PersistentHashSet.EMPTY;
    } else {
      if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
        return cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);
      } else {
        var in$__$1 = in$;
        var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
        while (true) {
          if (!(in$__$1 == null)) {
            var G__14656 = cljs.core.next(in$__$1);
            var G__14657 = cljs.core._conj_BANG_(out, cljs.core._first(in$__$1));
            in$__$1 = G__14656;
            out = G__14657;
            continue;
          } else {
            return cljs.core.persistent_BANG_(out);
          }
          break;
        }
      }
    }
  }
};
cljs.core.hash_set = function cljs$core$hash_set(var_args) {
  var G__14660 = arguments.length;
  switch(G__14660) {
    case 0:
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___14662 = arguments.length;
      var i__4737__auto___14663 = 0;
      while (true) {
        if (i__4737__auto___14663 < len__4736__auto___14662) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___14663]);
          var G__14664 = i__4737__auto___14663 + 1;
          i__4737__auto___14663 = G__14664;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(0), 0, null);
      return cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4758__auto__);
  }
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.PersistentHashSet.EMPTY;
};
cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.set(keys);
};
cljs.core.hash_set.cljs$lang$applyTo = function(seq14659) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14659));
};
cljs.core.hash_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set = function cljs$core$sorted_set(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14666 = arguments.length;
  var i__4737__auto___14667 = 0;
  while (true) {
    if (i__4737__auto___14667 < len__4736__auto___14666) {
      args__4742__auto__.push(arguments[i__4737__auto___14667]);
      var G__14668 = i__4737__auto___14667 + 1;
      i__4737__auto___14667 = G__14668;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic = function(keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
};
cljs.core.sorted_set.cljs$lang$maxFixedArity = 0;
cljs.core.sorted_set.cljs$lang$applyTo = function(seq14665) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14665));
};
cljs.core.sorted_set_by = function cljs$core$sorted_set_by(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14671 = arguments.length;
  var i__4737__auto___14672 = 0;
  while (true) {
    if (i__4737__auto___14672 < len__4736__auto___14671) {
      args__4742__auto__.push(arguments[i__4737__auto___14672]);
      var G__14673 = i__4737__auto___14672 + 1;
      i__4737__auto___14672 = G__14673;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = function(comparator, keys) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
};
cljs.core.sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs.core.sorted_set_by.cljs$lang$applyTo = function(seq14669) {
  var G__14670 = cljs.core.first(seq14669);
  var seq14669__$1 = cljs.core.next(seq14669);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14670, seq14669__$1);
};
cljs.core.replace = function cljs$core$replace(var_args) {
  var G__14677 = arguments.length;
  switch(G__14677) {
    case 1:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.replace.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$1 = function(smap) {
  return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__14674_SHARP_) {
    var temp__5733__auto__ = cljs.core.find(smap, p1__14674_SHARP_);
    if (cljs.core.truth_(temp__5733__auto__)) {
      var e = temp__5733__auto__;
      return cljs.core.val(e);
    } else {
      return p1__14674_SHARP_;
    }
  });
};
cljs.core.replace.cljs$core$IFn$_invoke$arity$2 = function(smap, coll) {
  if (cljs.core.vector_QMARK_(coll)) {
    var n = cljs.core.count(coll);
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, i) {
      var temp__5733__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
      if (cljs.core.truth_(temp__5733__auto__)) {
        var e = temp__5733__auto__;
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
      } else {
        return v;
      }
    }, coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
  } else {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__14675_SHARP_) {
      var temp__5733__auto__ = cljs.core.find(smap, p1__14675_SHARP_);
      if (cljs.core.truth_(temp__5733__auto__)) {
        var e = temp__5733__auto__;
        return cljs.core.second(e);
      } else {
        return p1__14675_SHARP_;
      }
    }, coll);
  }
};
cljs.core.replace.cljs$lang$maxFixedArity = 2;
cljs.core.distinct = function cljs$core$distinct(var_args) {
  var G__14680 = arguments.length;
  switch(G__14680) {
    case 0:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
    return function() {
      var G__14691 = null;
      var G__14691__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14691__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__14691__2 = function(result, input) {
        if (cljs.core.contains_QMARK_(cljs.core.deref(seen), input)) {
          return result;
        } else {
          seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__14691 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14691__0.call(this);
          case 1:
            return G__14691__1.call(this, result);
          case 2:
            return G__14691__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14691.cljs$core$IFn$_invoke$arity$0 = G__14691__0;
      G__14691.cljs$core$IFn$_invoke$arity$1 = G__14691__1;
      G__14691.cljs$core$IFn$_invoke$arity$2 = G__14691__2;
      return G__14691;
    }();
  };
};
cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var step = function cljs$core$step(xs, seen) {
    return new cljs.core.LazySeq(null, function() {
      var fexpr__14685 = function(p__14686, seen__$1) {
        while (true) {
          var vec__14687 = p__14686;
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14687, 0, null);
          var xs__$1 = vec__14687;
          var temp__5735__auto__ = cljs.core.seq(xs__$1);
          if (temp__5735__auto__) {
            var s = temp__5735__auto__;
            if (cljs.core.contains_QMARK_(seen__$1, f)) {
              var G__14692 = cljs.core.rest(s);
              var G__14693 = seen__$1;
              p__14686 = G__14692;
              seen__$1 = G__14693;
              continue;
            } else {
              return cljs.core.cons(f, cljs$core$step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
            }
          } else {
            return null;
          }
          break;
        }
      };
      return fexpr__14685(xs, seen);
    }, null, null);
  };
  return step(coll, cljs.core.PersistentHashSet.EMPTY);
};
cljs.core.distinct.cljs$lang$maxFixedArity = 1;
cljs.core.butlast = function cljs$core$butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__14694 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__14695 = cljs.core.next(s__$1);
      ret = G__14694;
      s__$1 = G__14695;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function cljs$core$name(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition1$ & 4096 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$INamed$ ? true : false : false) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error(["Doesn't support name: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(""));
    }
  }
};
cljs.core.zipmap = function cljs$core$zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__14697 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__14698 = cljs.core.next(ks);
      var G__14699 = cljs.core.next(vs);
      map = G__14697;
      ks = G__14698;
      vs = G__14699;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function cljs$core$max_key(var_args) {
  var G__14707 = arguments.length;
  switch(G__14707) {
    case 2:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___14709 = arguments.length;
      var i__4737__auto___14710 = 0;
      while (true) {
        if (i__4737__auto___14710 < len__4736__auto___14709) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___14710]);
          var G__14711 = i__4737__auto___14710 + 1;
          i__4737__auto___14710 = G__14711;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) > (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14700_SHARP_, p2__14701_SHARP_) {
    return cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, p1__14700_SHARP_, p2__14701_SHARP_);
  }, cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.max_key.cljs$lang$applyTo = function(seq14703) {
  var G__14704 = cljs.core.first(seq14703);
  var seq14703__$1 = cljs.core.next(seq14703);
  var G__14705 = cljs.core.first(seq14703__$1);
  var seq14703__$2 = cljs.core.next(seq14703__$1);
  var G__14706 = cljs.core.first(seq14703__$2);
  var seq14703__$3 = cljs.core.next(seq14703__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14704, G__14705, G__14706, seq14703__$3);
};
cljs.core.max_key.cljs$lang$maxFixedArity = 3;
cljs.core.min_key = function cljs$core$min_key(var_args) {
  var G__14719 = arguments.length;
  switch(G__14719) {
    case 2:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___14721 = arguments.length;
      var i__4737__auto___14722 = 0;
      while (true) {
        if (i__4737__auto___14722 < len__4736__auto___14721) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___14722]);
          var G__14723 = i__4737__auto___14722 + 1;
          i__4737__auto___14722 = G__14723;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 = function(k, x) {
  return x;
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 = function(k, x, y) {
  if ((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null, x)) < (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null, y))) {
    return x;
  } else {
    return y;
  }
};
cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic = function(k, x, y, more) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14712_SHARP_, p2__14713_SHARP_) {
    return cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, p1__14712_SHARP_, p2__14713_SHARP_);
  }, cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
};
cljs.core.min_key.cljs$lang$applyTo = function(seq14715) {
  var G__14716 = cljs.core.first(seq14715);
  var seq14715__$1 = cljs.core.next(seq14715);
  var G__14717 = cljs.core.first(seq14715__$1);
  var seq14715__$2 = cljs.core.next(seq14715__$1);
  var G__14718 = cljs.core.first(seq14715__$2);
  var seq14715__$3 = cljs.core.next(seq14715__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14716, G__14717, G__14718, seq14715__$3);
};
cljs.core.min_key.cljs$lang$maxFixedArity = 3;
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "arr", "arr", 2115492975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function cljs$core$__GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function cljs$core$array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function cljs$core$partition_all(var_args) {
  var G__14725 = arguments.length;
  switch(G__14725) {
    case 1:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return function(rf) {
    var a = cljs.core.array_list();
    return function() {
      var G__14727 = null;
      var G__14727__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14727__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__14727__2 = function(result, input) {
        a.add(input);
        if (n === a.size()) {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
        } else {
          return result;
        }
      };
      G__14727 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14727__0.call(this);
          case 1:
            return G__14727__1.call(this, result);
          case 2:
            return G__14727__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14727.cljs$core$IFn$_invoke$arity$0 = G__14727__0;
      G__14727.cljs$core$IFn$_invoke$arity$1 = G__14727__1;
      G__14727.cljs$core$IFn$_invoke$arity$2 = G__14727__2;
      return G__14727;
    }();
  };
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  return cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
};
cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 = function(n, step, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_all.cljs$lang$maxFixedArity = 3;
cljs.core.take_while = function cljs$core$take_while(var_args) {
  var G__14729 = arguments.length;
  switch(G__14729) {
    case 1:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return function(rf) {
    return function() {
      var G__14732 = null;
      var G__14732__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14732__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__14732__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return cljs.core.reduced(result);
        }
      };
      G__14732 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14732__0.call(this);
          case 1:
            return G__14732__1.call(this, result);
          case 2:
            return G__14732__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14732.cljs$core$IFn$_invoke$arity$0 = G__14732__0;
      G__14732.cljs$core$IFn$_invoke$arity$1 = G__14732__1;
      G__14732.cljs$core$IFn$_invoke$arity$2 = G__14732__2;
      return G__14732;
    }();
  };
};
cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 = function(pred, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      if (cljs.core.truth_(function() {
        var G__14730 = cljs.core.first(s);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14730) : pred.call(null, G__14730);
      }())) {
        return cljs.core.cons(cljs.core.first(s), cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_while.cljs$lang$maxFixedArity = 2;
cljs.core.mk_bound_fn = function cljs$core$mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__14733 = function() {
      var G__14735 = cljs.core._entry_key(sc, e);
      var G__14736 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14735, G__14736) : comp.call(null, G__14735, G__14736);
    }();
    var G__14734 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__14733, G__14734) : test.call(null, G__14733, G__14734);
  };
};
cljs.core.subseq = function cljs$core$subseq(var_args) {
  var G__14738 = arguments.length;
  switch(G__14738) {
    case 3:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.subseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__14739 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_, cljs.core._GT__EQ_]);
    return fexpr__14739.cljs$core$IFn$_invoke$arity$1 ? fexpr__14739.cljs$core$IFn$_invoke$arity$1(test) : fexpr__14739.call(null, test);
  }())) {
    var temp__5735__auto__ = cljs.core._sorted_seq_from(sc, key, true);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var vec__14740 = temp__5735__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14740, 0, null);
      var s = vec__14740;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
  }
};
cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5735__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
  if (cljs.core.truth_(temp__5735__auto__)) {
    var vec__14743 = temp__5735__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14743, 0, null);
    var s = vec__14743;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(function() {
      var fexpr__14746 = cljs.core.mk_bound_fn(sc, start_test, start_key);
      return fexpr__14746.cljs$core$IFn$_invoke$arity$1 ? fexpr__14746.cljs$core$IFn$_invoke$arity$1(e) : fexpr__14746.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.subseq.cljs$lang$maxFixedArity = 5;
cljs.core.rsubseq = function cljs$core$rsubseq(var_args) {
  var G__14749 = arguments.length;
  switch(G__14749) {
    case 3:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 5:
      return cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5(arguments[0], arguments[1], arguments[2], arguments[3], arguments[4]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 = function(sc, test, key) {
  var include = cljs.core.mk_bound_fn(sc, test, key);
  if (cljs.core.truth_(function() {
    var fexpr__14750 = cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_, cljs.core._LT__EQ_]);
    return fexpr__14750.cljs$core$IFn$_invoke$arity$1 ? fexpr__14750.cljs$core$IFn$_invoke$arity$1(test) : fexpr__14750.call(null, test);
  }())) {
    var temp__5735__auto__ = cljs.core._sorted_seq_from(sc, key, false);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var vec__14751 = temp__5735__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14751, 0, null);
      var s = vec__14751;
      if (cljs.core.truth_(include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(e) : include.call(null, e))) {
        return s;
      } else {
        return cljs.core.next(s);
      }
    } else {
      return null;
    }
  } else {
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
  }
};
cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 = function(sc, start_test, start_key, end_test, end_key) {
  var temp__5735__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
  if (cljs.core.truth_(temp__5735__auto__)) {
    var vec__14754 = temp__5735__auto__;
    var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14754, 0, null);
    var s = vec__14754;
    return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(function() {
      var fexpr__14757 = cljs.core.mk_bound_fn(sc, end_test, end_key);
      return fexpr__14757.cljs$core$IFn$_invoke$arity$1 ? fexpr__14757.cljs$core$IFn$_invoke$arity$1(e) : fexpr__14757.call(null, e);
    }()) ? s : cljs.core.next(s));
  } else {
    return null;
  }
};
cljs.core.rsubseq.cljs$lang$maxFixedArity = 5;
cljs.core.RangeChunk = function(start, step, count) {
  this.start = start;
  this.step = step;
  this.count = count;
  this.cljs$lang$protocol_mask$partition0$ = 82;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.RangeChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.RangeChunk.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.start + i * self__.step;
};
cljs.core.RangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.count) {
    return self__.start + i * self__.step;
  } else {
    return not_found;
  }
};
cljs.core.RangeChunk.prototype.cljs$core$IChunk$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count <= 1) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.RangeChunk(self__.start + self__.step, self__.step, self__.count - 1);
  }
};
cljs.core.RangeChunk.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), new cljs.core.Symbol(null, "count", "count", -514511684, null)], null);
};
cljs.core.RangeChunk.cljs$lang$type = true;
cljs.core.RangeChunk.cljs$lang$ctorStr = "cljs.core/RangeChunk";
cljs.core.RangeChunk.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RangeChunk");
};
cljs.core.__GT_RangeChunk = function cljs$core$__GT_RangeChunk(start, step, count) {
  return new cljs.core.RangeChunk(start, step, count);
};
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "i", "i", 253690212, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null)], null);
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function cljs$core$__GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, chunk, chunk_next, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.chunk = chunk;
  this.chunk_next = chunk_next;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 140800;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.indexOf = function() {
  var G__14760 = null;
  var G__14760__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, 0);
  };
  var G__14760__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__14760 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__14760__1.call(this, x);
      case 2:
        return G__14760__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14760.cljs$core$IFn$_invoke$arity$1 = G__14760__1;
  G__14760.cljs$core$IFn$_invoke$arity$2 = G__14760__2;
  return G__14760;
}();
cljs.core.Range.prototype.lastIndexOf = function() {
  var G__14761 = null;
  var G__14761__1 = function(x) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, cljs.core.count(coll));
  };
  var G__14761__2 = function(x, start__$1) {
    var self__ = this;
    var coll = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll, x, start__$1);
  };
  G__14761 = function(x, start__$1) {
    switch(arguments.length) {
      case 1:
        return G__14761__1.call(this, x);
      case 2:
        return G__14761__2.call(this, x, start__$1);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14761.cljs$core$IFn$_invoke$arity$1 = G__14761__1;
  G__14761.cljs$core$IFn$_invoke$arity$2 = G__14761__2;
  return G__14761;
}();
cljs.core.Range.prototype.forceChunk = function() {
  var self__ = this;
  var coll = this;
  if (self__.chunk == null) {
    var count = coll.cljs$core$ICounted$_count$arity$1(null);
    if (count > 32) {
      self__.chunk_next = new cljs.core.Range(null, self__.start + self__.step * 32, self__.end, self__.step, null, null, null);
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, 32);
    } else {
      return self__.chunk = new cljs.core.RangeChunk(self__.start, self__.step, count);
    }
  } else {
    return null;
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (0 <= n && n < rng__$1.cljs$core$ICounted$_count$arity$1(null)) {
    return self__.start + n * self__.step;
  } else {
    if (0 <= n && self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(null, self__.start + self__.step, self__.end, self__.step, null, null, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var G__14759 = (self__.end - self__.start) / self__.step;
  return Math.ceil(G__14759);
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret, i) : f.call(null, ret, i);
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        return cljs.core.deref(ret__$1);
      } else {
        var G__14762 = i + self__.step;
        var G__14763 = ret__$1;
        i = G__14762;
        ret = G__14763;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.start;
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var s = rng__$1.cljs$core$INext$_next$arity$1(null);
  if (s == null) {
    return cljs.core.List.EMPTY;
  } else {
    return s;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return rng__$1;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  return self__.chunk;
};
cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  rng__$1.forceChunk();
  if (self__.chunk_next == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.chunk_next;
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, new_meta) {
  var self__ = this;
  var rng__$1 = this;
  if (new_meta === self__.meta) {
    return rng__$1;
  } else {
    return new cljs.core.Range(new_meta, self__.start, self__.end, self__.step, self__.chunk, self__.chunk_next, self__.__hash);
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));
};
cljs.core.Range.getBasis = function() {
  return new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "meta", "meta", -1154898805, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null), new cljs.core.Symbol(null, "end", "end", 1372345569, null), new cljs.core.Symbol(null, "step", "step", -1365547645, null), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk", "chunk", 449371907, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", 
  "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "chunk-next", "chunk-next", -547810434, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function cljs$core$__GT_Range(meta, start, end, step, chunk, chunk_next, __hash) {
  return new cljs.core.Range(meta, start, end, step, chunk, chunk_next, __hash);
};
goog.object.set(cljs.core.Range.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.range = function cljs$core$range(var_args) {
  var G__14765 = arguments.length;
  switch(G__14765) {
    case 0:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.range.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.range.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$1 = function(end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$2 = function(start, end) {
  return cljs.core.range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
};
cljs.core.range.cljs$core$IFn$_invoke$arity$3 = function(start, end, step) {
  if (step > 0) {
    if (end <= start) {
      return cljs.core.List.EMPTY;
    } else {
      return new cljs.core.Range(null, start, end, step, null, null, null);
    }
  } else {
    if (step < 0) {
      if (end >= start) {
        return cljs.core.List.EMPTY;
      } else {
        return new cljs.core.Range(null, start, end, step, null, null, null);
      }
    } else {
      if (end === start) {
        return cljs.core.List.EMPTY;
      } else {
        return cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start);
      }
    }
  }
};
cljs.core.range.cljs$lang$maxFixedArity = 3;
cljs.core.take_nth = function cljs$core$take_nth(var_args) {
  var G__14768 = arguments.length;
  switch(G__14768) {
    case 1:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 = function(n) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return function(rf) {
    var ia = cljs.core.volatile_BANG_(-1);
    return function() {
      var G__14770 = null;
      var G__14770__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14770__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__14770__2 = function(result, input) {
        var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
        if (cljs.core.rem(i, n) === 0) {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        } else {
          return result;
        }
      };
      G__14770 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14770__0.call(this);
          case 1:
            return G__14770__1.call(this, result);
          case 2:
            return G__14770__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14770.cljs$core$IFn$_invoke$arity$0 = G__14770__0;
      G__14770.cljs$core$IFn$_invoke$arity$1 = G__14770__1;
      G__14770.cljs$core$IFn$_invoke$arity$2 = G__14770__2;
      return G__14770;
    }();
  };
};
cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  if (typeof n === "number") {
  } else {
    throw new Error("Assert failed: (number? n)");
  }
  return new cljs.core.LazySeq(null, function() {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      return cljs.core.cons(cljs.core.first(s), cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.take_nth.cljs$lang$maxFixedArity = 2;
cljs.core.split_with = function cljs$core$split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function cljs$core$partition_by(var_args) {
  var G__14773 = arguments.length;
  switch(G__14773) {
    case 1:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function(rf) {
    var a = cljs.core.array_list();
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var G__14775 = null;
      var G__14775__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14775__1 = function(result) {
        var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          return cljs.core.unreduced(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v));
        }();
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null, result__$1);
      };
      var G__14775__2 = function(result, input) {
        var pval = cljs.core.deref(pa);
        var val = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null, input);
        cljs.core.vreset_BANG_(pa, val);
        if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
          a.add(input);
          return result;
        } else {
          var v = cljs.core.vec(a.toArray());
          a.clear();
          var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, v) : rf.call(null, result, v);
          if (cljs.core.reduced_QMARK_(ret)) {
          } else {
            a.add(input);
          }
          return ret;
        }
      };
      G__14775 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14775__0.call(this);
          case 1:
            return G__14775__1.call(this, result);
          case 2:
            return G__14775__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14775.cljs$core$IFn$_invoke$arity$0 = G__14775__0;
      G__14775.cljs$core$IFn$_invoke$arity$1 = G__14775__1;
      G__14775.cljs$core$IFn$_invoke$arity$2 = G__14775__2;
      return G__14775;
    }();
  };
};
cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      var fst = cljs.core.first(s);
      var fv = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null, fst);
      var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(p1__14771_SHARP_) {
        return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__14771_SHARP_) : f.call(null, p1__14771_SHARP_));
      }, cljs.core.next(s)));
      return cljs.core.cons(run, cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f, new cljs.core.LazySeq(null, function() {
        return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s);
      }, null, null)));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.partition_by.cljs$lang$maxFixedArity = 2;
cljs.core.frequencies = function cljs$core$frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function cljs$core$reductions(var_args) {
  var G__14777 = arguments.length;
  switch(G__14777) {
    case 2:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 = function(f, coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__5733__auto__ = cljs.core.seq(coll);
    if (temp__5733__auto__) {
      var s = temp__5733__auto__;
      return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
    } else {
      return new cljs.core.List(null, f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), null, 1, null);
    }
  }, null, null);
};
cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 = function(f, init, coll) {
  if (cljs.core.reduced_QMARK_(init)) {
    return new cljs.core.List(null, cljs.core.deref(init), null, 1, null);
  } else {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__5735__auto__ = cljs.core.seq(coll);
      if (temp__5735__auto__) {
        var s = temp__5735__auto__;
        return cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__14778 = init;
          var G__14779 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14778, G__14779) : f.call(null, G__14778, G__14779);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.reductions.cljs$lang$maxFixedArity = 3;
cljs.core.juxt = function cljs$core$juxt(var_args) {
  var G__14796 = arguments.length;
  switch(G__14796) {
    case 1:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___14798 = arguments.length;
      var i__4737__auto___14799 = 0;
      while (true) {
        if (i__4737__auto___14799 < len__4736__auto___14798) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___14799]);
          var G__14800 = i__4737__auto___14799 + 1;
          i__4737__auto___14799 = G__14800;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(3), 0, null);
      return cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], arguments[2], argseq__4758__auto__);
  }
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 = function(f) {
  return function() {
    var G__14801 = null;
    var G__14801__0 = function() {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)], null);
    };
    var G__14801__1 = function(x) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x)], null);
    };
    var G__14801__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y)], null);
    };
    var G__14801__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z)], null);
    };
    var G__14801__4 = function() {
      var G__14802__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
      };
      var G__14802 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14803__i = 0, G__14803__a = new Array(arguments.length - 3);
          while (G__14803__i < G__14803__a.length) {
            G__14803__a[G__14803__i] = arguments[G__14803__i + 3];
            ++G__14803__i;
          }
          args = new cljs.core.IndexedSeq(G__14803__a, 0, null);
        }
        return G__14802__delegate.call(this, x, y, z, args);
      };
      G__14802.cljs$lang$maxFixedArity = 3;
      G__14802.cljs$lang$applyTo = function(arglist__14804) {
        var x = cljs.core.first(arglist__14804);
        arglist__14804 = cljs.core.next(arglist__14804);
        var y = cljs.core.first(arglist__14804);
        arglist__14804 = cljs.core.next(arglist__14804);
        var z = cljs.core.first(arglist__14804);
        var args = cljs.core.rest(arglist__14804);
        return G__14802__delegate(x, y, z, args);
      };
      G__14802.cljs$core$IFn$_invoke$arity$variadic = G__14802__delegate;
      return G__14802;
    }();
    G__14801 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14801__0.call(this);
        case 1:
          return G__14801__1.call(this, x);
        case 2:
          return G__14801__2.call(this, x, y);
        case 3:
          return G__14801__3.call(this, x, y, z);
        default:
          var G__14805 = null;
          if (arguments.length > 3) {
            var G__14806__i = 0, G__14806__a = new Array(arguments.length - 3);
            while (G__14806__i < G__14806__a.length) {
              G__14806__a[G__14806__i] = arguments[G__14806__i + 3];
              ++G__14806__i;
            }
            G__14805 = new cljs.core.IndexedSeq(G__14806__a, 0, null);
          }
          return G__14801__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14805);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14801.cljs$lang$maxFixedArity = 3;
    G__14801.cljs$lang$applyTo = G__14801__4.cljs$lang$applyTo;
    G__14801.cljs$core$IFn$_invoke$arity$0 = G__14801__0;
    G__14801.cljs$core$IFn$_invoke$arity$1 = G__14801__1;
    G__14801.cljs$core$IFn$_invoke$arity$2 = G__14801__2;
    G__14801.cljs$core$IFn$_invoke$arity$3 = G__14801__3;
    G__14801.cljs$core$IFn$_invoke$arity$variadic = G__14801__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14801;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 = function(f, g) {
  return function() {
    var G__14807 = null;
    var G__14807__0 = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)], null);
    };
    var G__14807__1 = function(x) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x)], null);
    };
    var G__14807__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y)], null);
    };
    var G__14807__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z)], null);
    };
    var G__14807__4 = function() {
      var G__14808__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
      };
      var G__14808 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14809__i = 0, G__14809__a = new Array(arguments.length - 3);
          while (G__14809__i < G__14809__a.length) {
            G__14809__a[G__14809__i] = arguments[G__14809__i + 3];
            ++G__14809__i;
          }
          args = new cljs.core.IndexedSeq(G__14809__a, 0, null);
        }
        return G__14808__delegate.call(this, x, y, z, args);
      };
      G__14808.cljs$lang$maxFixedArity = 3;
      G__14808.cljs$lang$applyTo = function(arglist__14810) {
        var x = cljs.core.first(arglist__14810);
        arglist__14810 = cljs.core.next(arglist__14810);
        var y = cljs.core.first(arglist__14810);
        arglist__14810 = cljs.core.next(arglist__14810);
        var z = cljs.core.first(arglist__14810);
        var args = cljs.core.rest(arglist__14810);
        return G__14808__delegate(x, y, z, args);
      };
      G__14808.cljs$core$IFn$_invoke$arity$variadic = G__14808__delegate;
      return G__14808;
    }();
    G__14807 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14807__0.call(this);
        case 1:
          return G__14807__1.call(this, x);
        case 2:
          return G__14807__2.call(this, x, y);
        case 3:
          return G__14807__3.call(this, x, y, z);
        default:
          var G__14811 = null;
          if (arguments.length > 3) {
            var G__14812__i = 0, G__14812__a = new Array(arguments.length - 3);
            while (G__14812__i < G__14812__a.length) {
              G__14812__a[G__14812__i] = arguments[G__14812__i + 3];
              ++G__14812__i;
            }
            G__14811 = new cljs.core.IndexedSeq(G__14812__a, 0, null);
          }
          return G__14807__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14811);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14807.cljs$lang$maxFixedArity = 3;
    G__14807.cljs$lang$applyTo = G__14807__4.cljs$lang$applyTo;
    G__14807.cljs$core$IFn$_invoke$arity$0 = G__14807__0;
    G__14807.cljs$core$IFn$_invoke$arity$1 = G__14807__1;
    G__14807.cljs$core$IFn$_invoke$arity$2 = G__14807__2;
    G__14807.cljs$core$IFn$_invoke$arity$3 = G__14807__3;
    G__14807.cljs$core$IFn$_invoke$arity$variadic = G__14807__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14807;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 = function(f, g, h) {
  return function() {
    var G__14813 = null;
    var G__14813__0 = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null), g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null), h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null)], null);
    };
    var G__14813__1 = function(x) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x), g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null, x), h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null, x)], null);
    };
    var G__14813__2 = function(x, y) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x, y) : f.call(null, x, y), g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x, y) : g.call(null, x, y), h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x, y) : h.call(null, x, y)], null);
    };
    var G__14813__3 = function(x, y, z) {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x, y, z) : f.call(null, x, y, z), g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x, y, z) : g.call(null, x, y, z), h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x, y, z) : h.call(null, x, y, z)], null);
    };
    var G__14813__4 = function() {
      var G__14814__delegate = function(x, y, z, args) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
      };
      var G__14814 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14815__i = 0, G__14815__a = new Array(arguments.length - 3);
          while (G__14815__i < G__14815__a.length) {
            G__14815__a[G__14815__i] = arguments[G__14815__i + 3];
            ++G__14815__i;
          }
          args = new cljs.core.IndexedSeq(G__14815__a, 0, null);
        }
        return G__14814__delegate.call(this, x, y, z, args);
      };
      G__14814.cljs$lang$maxFixedArity = 3;
      G__14814.cljs$lang$applyTo = function(arglist__14816) {
        var x = cljs.core.first(arglist__14816);
        arglist__14816 = cljs.core.next(arglist__14816);
        var y = cljs.core.first(arglist__14816);
        arglist__14816 = cljs.core.next(arglist__14816);
        var z = cljs.core.first(arglist__14816);
        var args = cljs.core.rest(arglist__14816);
        return G__14814__delegate(x, y, z, args);
      };
      G__14814.cljs$core$IFn$_invoke$arity$variadic = G__14814__delegate;
      return G__14814;
    }();
    G__14813 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14813__0.call(this);
        case 1:
          return G__14813__1.call(this, x);
        case 2:
          return G__14813__2.call(this, x, y);
        case 3:
          return G__14813__3.call(this, x, y, z);
        default:
          var G__14817 = null;
          if (arguments.length > 3) {
            var G__14818__i = 0, G__14818__a = new Array(arguments.length - 3);
            while (G__14818__i < G__14818__a.length) {
              G__14818__a[G__14818__i] = arguments[G__14818__i + 3];
              ++G__14818__i;
            }
            G__14817 = new cljs.core.IndexedSeq(G__14818__a, 0, null);
          }
          return G__14813__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14817);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14813.cljs$lang$maxFixedArity = 3;
    G__14813.cljs$lang$applyTo = G__14813__4.cljs$lang$applyTo;
    G__14813.cljs$core$IFn$_invoke$arity$0 = G__14813__0;
    G__14813.cljs$core$IFn$_invoke$arity$1 = G__14813__1;
    G__14813.cljs$core$IFn$_invoke$arity$2 = G__14813__2;
    G__14813.cljs$core$IFn$_invoke$arity$3 = G__14813__3;
    G__14813.cljs$core$IFn$_invoke$arity$variadic = G__14813__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14813;
  }();
};
cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic = function(f, g, h, fs) {
  var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
  return function() {
    var G__14819 = null;
    var G__14819__0 = function() {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14781_SHARP_, p2__14782_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14781_SHARP_, p2__14782_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__14782_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__14782_SHARP_.call(null));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__14819__1 = function(x) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14783_SHARP_, p2__14784_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14783_SHARP_, p2__14784_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__14784_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__14784_SHARP_.call(null, x));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__14819__2 = function(x, y) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14785_SHARP_, p2__14786_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14785_SHARP_, p2__14786_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__14786_SHARP_.cljs$core$IFn$_invoke$arity$2(x, y) : p2__14786_SHARP_.call(null, x, y));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__14819__3 = function(x, y, z) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14787_SHARP_, p2__14788_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14787_SHARP_, p2__14788_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__14788_SHARP_.cljs$core$IFn$_invoke$arity$3(x, y, z) : p2__14788_SHARP_.call(null, x, y, z));
      }, cljs.core.PersistentVector.EMPTY, fs__$1);
    };
    var G__14819__4 = function() {
      var G__14820__delegate = function(x, y, z, args) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14789_SHARP_, p2__14790_SHARP_) {
          return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14789_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__14790_SHARP_, x, y, z, args));
        }, cljs.core.PersistentVector.EMPTY, fs__$1);
      };
      var G__14820 = function(x, y, z, var_args) {
        var args = null;
        if (arguments.length > 3) {
          var G__14821__i = 0, G__14821__a = new Array(arguments.length - 3);
          while (G__14821__i < G__14821__a.length) {
            G__14821__a[G__14821__i] = arguments[G__14821__i + 3];
            ++G__14821__i;
          }
          args = new cljs.core.IndexedSeq(G__14821__a, 0, null);
        }
        return G__14820__delegate.call(this, x, y, z, args);
      };
      G__14820.cljs$lang$maxFixedArity = 3;
      G__14820.cljs$lang$applyTo = function(arglist__14822) {
        var x = cljs.core.first(arglist__14822);
        arglist__14822 = cljs.core.next(arglist__14822);
        var y = cljs.core.first(arglist__14822);
        arglist__14822 = cljs.core.next(arglist__14822);
        var z = cljs.core.first(arglist__14822);
        var args = cljs.core.rest(arglist__14822);
        return G__14820__delegate(x, y, z, args);
      };
      G__14820.cljs$core$IFn$_invoke$arity$variadic = G__14820__delegate;
      return G__14820;
    }();
    G__14819 = function(x, y, z, var_args) {
      var args = var_args;
      switch(arguments.length) {
        case 0:
          return G__14819__0.call(this);
        case 1:
          return G__14819__1.call(this, x);
        case 2:
          return G__14819__2.call(this, x, y);
        case 3:
          return G__14819__3.call(this, x, y, z);
        default:
          var G__14823 = null;
          if (arguments.length > 3) {
            var G__14824__i = 0, G__14824__a = new Array(arguments.length - 3);
            while (G__14824__i < G__14824__a.length) {
              G__14824__a[G__14824__i] = arguments[G__14824__i + 3];
              ++G__14824__i;
            }
            G__14823 = new cljs.core.IndexedSeq(G__14824__a, 0, null);
          }
          return G__14819__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14823);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14819.cljs$lang$maxFixedArity = 3;
    G__14819.cljs$lang$applyTo = G__14819__4.cljs$lang$applyTo;
    G__14819.cljs$core$IFn$_invoke$arity$0 = G__14819__0;
    G__14819.cljs$core$IFn$_invoke$arity$1 = G__14819__1;
    G__14819.cljs$core$IFn$_invoke$arity$2 = G__14819__2;
    G__14819.cljs$core$IFn$_invoke$arity$3 = G__14819__3;
    G__14819.cljs$core$IFn$_invoke$arity$variadic = G__14819__4.cljs$core$IFn$_invoke$arity$variadic;
    return G__14819;
  }();
};
cljs.core.juxt.cljs$lang$applyTo = function(seq14792) {
  var G__14793 = cljs.core.first(seq14792);
  var seq14792__$1 = cljs.core.next(seq14792);
  var G__14794 = cljs.core.first(seq14792__$1);
  var seq14792__$2 = cljs.core.next(seq14792__$1);
  var G__14795 = cljs.core.first(seq14792__$2);
  var seq14792__$3 = cljs.core.next(seq14792__$2);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14793, G__14794, G__14795, seq14792__$3);
};
cljs.core.juxt.cljs$lang$maxFixedArity = 3;
cljs.core.dorun = function cljs$core$dorun(var_args) {
  var G__14826 = arguments.length;
  switch(G__14826) {
    case 1:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  while (true) {
    var temp__5735__auto__ = cljs.core.seq(coll);
    if (temp__5735__auto__) {
      var s = temp__5735__auto__;
      var G__14828 = cljs.core.next(s);
      coll = G__14828;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  while (true) {
    if (cljs.core.seq(coll) && n > 0) {
      var G__14829 = n - 1;
      var G__14830 = cljs.core.next(coll);
      n = G__14829;
      coll = G__14830;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.dorun.cljs$lang$maxFixedArity = 2;
cljs.core.doall = function cljs$core$doall(var_args) {
  var G__14832 = arguments.length;
  switch(G__14832) {
    case 1:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.doall.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
  return coll;
};
cljs.core.doall.cljs$core$IFn$_invoke$arity$2 = function(n, coll) {
  cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
  return coll;
};
cljs.core.doall.cljs$lang$maxFixedArity = 2;
cljs.core.regexp_QMARK_ = function cljs$core$regexp_QMARK_(x) {
  return x instanceof RegExp;
};
cljs.core.re_matches = function cljs$core$re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (!(matches == null) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(matches[0], s)) {
      if (matches.length === 1) {
        return matches[0];
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function cljs$core$re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (matches.length === 1) {
        return matches[0];
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq_STAR_ = function cljs$core$re_seq_STAR_(re, s) {
  var temp__5739__auto__ = re.exec(s);
  if (temp__5739__auto__ == null) {
    return null;
  } else {
    var matches = temp__5739__auto__;
    var match_str = matches[0];
    var match_vals = matches.length === 1 ? match_str : cljs.core.vec(matches);
    return cljs.core.cons(match_vals, new cljs.core.LazySeq(null, function() {
      var post_idx = matches.index + function() {
        var x__4214__auto__ = 1;
        var y__4215__auto__ = match_str.length;
        return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
      }();
      if (post_idx <= s.length) {
        var G__14834 = re;
        var G__14835 = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, post_idx);
        return cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__14834, G__14835) : cljs.core.re_seq_STAR_.call(null, G__14834, G__14835);
      } else {
        return null;
      }
    }, null, null));
  }
};
cljs.core.re_seq = function cljs$core$re_seq(re, s) {
  if (typeof s === "string") {
    return cljs.core.re_seq_STAR_(re, s);
  } else {
    throw new TypeError("re-seq must match against a string.");
  }
};
cljs.core.re_pattern = function cljs$core$re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__14836 = cljs.core.re_find(/^\(\?([idmsux]*)\)/, s);
    var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14836, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14836, 1, null);
    var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, prefix == null ? 0 : prefix.length);
    return new RegExp(pattern, function() {
      var or__4126__auto__ = flags;
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return "";
      }
    }());
  }
};
cljs.core.pr_sequential_writer = function cljs$core$pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR__orig_val__14839 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_level_STAR__temp_val__14840 = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__14840;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__4126__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__14841_14847 = cljs.core.first(coll);
          var G__14842_14848 = writer;
          var G__14843_14849 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14841_14847, G__14842_14848, G__14843_14849) : print_one.call(null, G__14841_14847, G__14842_14848, G__14843_14849);
        } else {
        }
        var coll_14850__$1 = cljs.core.next(coll);
        var n_14851 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_14850__$1 && (n_14851 == null || !(n_14851 === 0))) {
            cljs.core._write(writer, sep);
            var G__14844_14852 = cljs.core.first(coll_14850__$1);
            var G__14845_14853 = writer;
            var G__14846_14854 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14844_14852, G__14845_14853, G__14846_14854) : print_one.call(null, G__14844_14852, G__14845_14853, G__14846_14854);
            var G__14855 = cljs.core.next(coll_14850__$1);
            var G__14856 = n_14851 - 1;
            coll_14850__$1 = G__14855;
            n_14851 = G__14856;
            continue;
          } else {
            if (cljs.core.seq(coll_14850__$1) && n_14851 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__4126__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__4126__auto__)) {
                  return or__4126__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__14839;
  }
};
cljs.core.write_all = function cljs$core$write_all(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14863 = arguments.length;
  var i__4737__auto___14864 = 0;
  while (true) {
    if (i__4737__auto___14864 < len__4736__auto___14863) {
      args__4742__auto__.push(arguments[i__4737__auto___14864]);
      var G__14865 = i__4737__auto___14864 + 1;
      i__4737__auto___14864 = G__14865;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic = function(writer, ss) {
  var seq__14859 = cljs.core.seq(ss);
  var chunk__14860 = null;
  var count__14861 = 0;
  var i__14862 = 0;
  while (true) {
    if (i__14862 < count__14861) {
      var s = chunk__14860.cljs$core$IIndexed$_nth$arity$2(null, i__14862);
      cljs.core._write(writer, s);
      var G__14866 = seq__14859;
      var G__14867 = chunk__14860;
      var G__14868 = count__14861;
      var G__14869 = i__14862 + 1;
      seq__14859 = G__14866;
      chunk__14860 = G__14867;
      count__14861 = G__14868;
      i__14862 = G__14869;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq(seq__14859);
      if (temp__5735__auto__) {
        var seq__14859__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14859__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__14859__$1);
          var G__14870 = cljs.core.chunk_rest(seq__14859__$1);
          var G__14871 = c__4556__auto__;
          var G__14872 = cljs.core.count(c__4556__auto__);
          var G__14873 = 0;
          seq__14859 = G__14870;
          chunk__14860 = G__14871;
          count__14861 = G__14872;
          i__14862 = G__14873;
          continue;
        } else {
          var s = cljs.core.first(seq__14859__$1);
          cljs.core._write(writer, s);
          var G__14874 = cljs.core.next(seq__14859__$1);
          var G__14875 = null;
          var G__14876 = 0;
          var G__14877 = 0;
          seq__14859 = G__14874;
          chunk__14860 = G__14875;
          count__14861 = G__14876;
          i__14862 = G__14877;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.write_all.cljs$lang$maxFixedArity = 1;
cljs.core.write_all.cljs$lang$applyTo = function(seq14857) {
  var G__14858 = cljs.core.first(seq14857);
  var seq14857__$1 = cljs.core.next(seq14857);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14858, seq14857__$1);
};
cljs.core.string_print = function cljs$core$string_print(x) {
  if (cljs.core._STAR_print_fn_STAR_ == null) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  } else {
  }
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function cljs$core$flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj14879 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj14879;
}();
cljs.core.quote_string = function cljs$core$quote_string(s) {
  return ['"', cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp('[\\\\"\b\f\n\r\t]', "g"), function(match) {
    return cljs.core.char_escapes[match];
  })), '"'].join("");
};
cljs.core.print_meta_QMARK_ = function cljs$core$print_meta_QMARK_(opts, obj) {
  if (cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964)))) {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 131072 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IMeta$ ? true : false : false) {
      return !(cljs.core.meta(obj) == null);
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_impl = function cljs$core$pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (cljs.core.print_meta_QMARK_(opts, obj)) {
      cljs.core._write(writer, "^");
      cljs.core.pr_writer(cljs.core.meta(obj), writer, opts);
      cljs.core._write(writer, " ");
    } else {
    }
    if (obj.cljs$lang$type) {
      return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
    } else {
      if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 2147483648 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IPrintWithWriter$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, obj)) {
        return cljs.core._pr_writer(obj, writer, opts);
      } else {
        if (obj === true || obj === false) {
          return cljs.core._write(writer, cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
        } else {
          if (typeof obj === "number") {
            return cljs.core._write(writer, isNaN(obj) ? "##NaN" : obj === Number.POSITIVE_INFINITY ? "##Inf" : obj === Number.NEGATIVE_INFINITY ? "##-Inf" : cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));
          } else {
            if (cljs.core.object_QMARK_(obj)) {
              cljs.core._write(writer, "#js ");
              return cljs.core.print_map(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                return new cljs.core.MapEntry(function() {
                  var G__14885 = k;
                  if (!(cljs.core.re_matches(/[A-Za-z_\*\+\?!\-'][\w\*\+\?!\-']*/, k) == null)) {
                    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__14885);
                  } else {
                    return G__14885;
                  }
                }(), obj[k], null);
              }, cljs.core.js_keys(obj)), cljs.core.pr_writer, writer, opts);
            } else {
              if (cljs.core.array_QMARK_(obj)) {
                return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
              } else {
                if (goog.isString(obj)) {
                  if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                    return cljs.core._write(writer, cljs.core.quote_string(obj));
                  } else {
                    return cljs.core._write(writer, obj);
                  }
                } else {
                  if (goog.isFunction(obj)) {
                    var name = obj.name;
                    var name__$1 = name == null || goog.string.isEmpty(name) ? "Function" : name;
                    return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, cljs.core.truth_(cljs.core._STAR_print_fn_bodies_STAR_) ? [' "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), '"'].join("") : "", "]"], 0));
                  } else {
                    if (obj instanceof Date) {
                      var normalize = function(n, len) {
                        var ns = cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);
                        while (true) {
                          if (ns.length < len) {
                            var G__14888 = ["0", ns].join("");
                            ns = G__14888;
                            continue;
                          } else {
                            return ns;
                          }
                          break;
                        }
                      };
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#inst "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj.getUTCFullYear()), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                    } else {
                      if (cljs.core.regexp_QMARK_(obj)) {
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(['#"', obj.source, '"'], 0));
                      } else {
                        if (cljs.core.js_symbol_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.toString(), "]"], 0));
                        } else {
                          if (cljs.core.truth_(function() {
                            var G__14886 = obj;
                            var G__14886__$1 = G__14886 == null ? null : G__14886.constructor;
                            if (G__14886__$1 == null) {
                              return null;
                            } else {
                              return G__14886__$1.cljs$lang$ctorStr;
                            }
                          }())) {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", obj.constructor.cljs$lang$ctorStr.replace(new RegExp("/", "g"), "."), "]"], 0));
                          } else {
                            var name = function() {
                              var G__14887 = obj;
                              var G__14887__$1 = G__14887 == null ? null : G__14887.constructor;
                              if (G__14887__$1 == null) {
                                return null;
                              } else {
                                return G__14887__$1.name;
                              }
                            }();
                            var name__$1 = name == null || goog.string.isEmpty(name) ? "Object" : name;
                            if (obj.constructor == null) {
                              return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, "]"], 0));
                            } else {
                              return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(["#object[", name__$1, " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj), "]"], 0));
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function cljs$core$pr_writer(obj, writer, opts) {
  var temp__5733__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__5733__auto__)) {
    var alt_impl = temp__5733__auto__;
    var G__14889 = obj;
    var G__14890 = writer;
    var G__14891 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__14889, G__14890, G__14891) : alt_impl.call(null, G__14889, G__14890, G__14891);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function cljs$core$pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__14892 = cljs.core.seq(cljs.core.next(objs));
  var chunk__14893 = null;
  var count__14894 = 0;
  var i__14895 = 0;
  while (true) {
    if (i__14895 < count__14894) {
      var obj = chunk__14893.cljs$core$IIndexed$_nth$arity$2(null, i__14895);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__14896 = seq__14892;
      var G__14897 = chunk__14893;
      var G__14898 = count__14894;
      var G__14899 = i__14895 + 1;
      seq__14892 = G__14896;
      chunk__14893 = G__14897;
      count__14894 = G__14898;
      i__14895 = G__14899;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq(seq__14892);
      if (temp__5735__auto__) {
        var seq__14892__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14892__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first(seq__14892__$1);
          var G__14900 = cljs.core.chunk_rest(seq__14892__$1);
          var G__14901 = c__4556__auto__;
          var G__14902 = cljs.core.count(c__4556__auto__);
          var G__14903 = 0;
          seq__14892 = G__14900;
          chunk__14893 = G__14901;
          count__14894 = G__14902;
          i__14895 = G__14903;
          continue;
        } else {
          var obj = cljs.core.first(seq__14892__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__14904 = cljs.core.next(seq__14892__$1);
          var G__14905 = null;
          var G__14906 = 0;
          var G__14907 = 0;
          seq__14892 = G__14904;
          chunk__14893 = G__14905;
          count__14894 = G__14906;
          i__14895 = G__14907;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function cljs$core$pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function cljs$core$pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs, opts));
  }
};
cljs.core.prn_str_with_opts = function cljs$core$prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
  }
};
cljs.core.pr_with_opts = function cljs$core$pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function cljs$core$newline(var_args) {
  var G__14909 = arguments.length;
  switch(G__14909) {
    case 0:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);
};
cljs.core.newline.cljs$core$IFn$_invoke$arity$1 = function(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.newline.cljs$lang$maxFixedArity = 1;
cljs.core.pr_str = function cljs$core$pr_str(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14912 = arguments.length;
  var i__4737__auto___14913 = 0;
  while (true) {
    if (i__4737__auto___14913 < len__4736__auto___14912) {
      args__4742__auto__.push(arguments[i__4737__auto___14913]);
      var G__14914 = i__4737__auto___14913 + 1;
      i__4737__auto___14913 = G__14914;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr_str.cljs$lang$maxFixedArity = 0;
cljs.core.pr_str.cljs$lang$applyTo = function(seq14911) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14911));
};
cljs.core.prn_str = function cljs$core$prn_str(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14916 = arguments.length;
  var i__4737__auto___14917 = 0;
  while (true) {
    if (i__4737__auto___14917 < len__4736__auto___14916) {
      args__4742__auto__.push(arguments[i__4737__auto___14917]);
      var G__14918 = i__4737__auto___14917 + 1;
      i__4737__auto___14917 = G__14918;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.prn_str.cljs$lang$maxFixedArity = 0;
cljs.core.prn_str.cljs$lang$applyTo = function(seq14915) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14915));
};
cljs.core.pr = function cljs$core$pr(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14920 = arguments.length;
  var i__4737__auto___14921 = 0;
  while (true) {
    if (i__4737__auto___14921 < len__4736__auto___14920) {
      args__4742__auto__.push(arguments[i__4737__auto___14921]);
      var G__14922 = i__4737__auto___14921 + 1;
      i__4737__auto___14921 = G__14922;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
};
cljs.core.pr.cljs$lang$maxFixedArity = 0;
cljs.core.pr.cljs$lang$applyTo = function(seq14919) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14919));
};
cljs.core.print = function() {
  var cljs$core$cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs$core$cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14923__i = 0, G__14923__a = new Array(arguments.length - 0);
      while (G__14923__i < G__14923__a.length) {
        G__14923__a[G__14923__i] = arguments[G__14923__i + 0];
        ++G__14923__i;
      }
      objs = new cljs.core.IndexedSeq(G__14923__a, 0, null);
    }
    return cljs$core$cljs_core_print__delegate.call(this, objs);
  };
  cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs$core$cljs_core_print.cljs$lang$applyTo = function(arglist__14924) {
    var objs = cljs.core.seq(arglist__14924);
    return cljs$core$cljs_core_print__delegate(objs);
  };
  cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
  return cljs$core$cljs_core_print;
}();
cljs.core.print_str = function cljs$core$print_str(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14926 = arguments.length;
  var i__4737__auto___14927 = 0;
  while (true) {
    if (i__4737__auto___14927 < len__4736__auto___14926) {
      args__4742__auto__.push(arguments[i__4737__auto___14927]);
      var G__14928 = i__4737__auto___14927 + 1;
      i__4737__auto___14927 = G__14928;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.print_str.cljs$lang$maxFixedArity = 0;
cljs.core.print_str.cljs$lang$applyTo = function(seq14925) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14925));
};
cljs.core.println = function cljs$core$println(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14930 = arguments.length;
  var i__4737__auto___14931 = 0;
  while (true) {
    if (i__4737__auto___14931 < len__4736__auto___14930) {
      args__4742__auto__.push(arguments[i__4737__auto___14931]);
      var G__14932 = i__4737__auto___14931 + 1;
      i__4737__auto___14931 = G__14932;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.println.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.println.cljs$lang$maxFixedArity = 0;
cljs.core.println.cljs$lang$applyTo = function(seq14929) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14929));
};
cljs.core.println_str = function cljs$core$println_str(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14934 = arguments.length;
  var i__4737__auto___14935 = 0;
  while (true) {
    if (i__4737__auto___14935 < len__4736__auto___14934) {
      args__4742__auto__.push(arguments[i__4737__auto___14935]);
      var G__14936 = i__4737__auto___14935 + 1;
      i__4737__auto___14935 = G__14936;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
};
cljs.core.println_str.cljs$lang$maxFixedArity = 0;
cljs.core.println_str.cljs$lang$applyTo = function(seq14933) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14933));
};
cljs.core.prn = function cljs$core$prn(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14938 = arguments.length;
  var i__4737__auto___14939 = 0;
  while (true) {
    if (i__4737__auto___14939 < len__4736__auto___14938) {
      args__4742__auto__.push(arguments[i__4737__auto___14939]);
      var G__14940 = i__4737__auto___14939 + 1;
      i__4737__auto___14939 = G__14940;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic = function(objs) {
  cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
    return cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());
  } else {
    return null;
  }
};
cljs.core.prn.cljs$lang$maxFixedArity = 0;
cljs.core.prn.cljs$lang$applyTo = function(seq14937) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14937));
};
cljs.core.strip_ns = function cljs$core$strip_ns(named) {
  if (named instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  } else {
    return cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null, cljs.core.name(named));
  }
};
cljs.core.lift_ns = function cljs$core$lift_ns(m) {
  if (cljs.core.truth_(cljs.core._STAR_print_namespace_maps_STAR_)) {
    var ns = null;
    var G__14947 = cljs.core.seq(m);
    var vec__14948 = G__14947;
    var seq__14949 = cljs.core.seq(vec__14948);
    var first__14950 = cljs.core.first(seq__14949);
    var seq__14949__$1 = cljs.core.next(seq__14949);
    var vec__14951 = first__14950;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14951, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14951, 1, null);
    var entry = vec__14951;
    var entries = seq__14949__$1;
    var lm = cljs.core.empty(m);
    var ns__$1 = ns;
    var G__14947__$1 = G__14947;
    var lm__$1 = lm;
    while (true) {
      var ns__$2 = ns__$1;
      var vec__14960 = G__14947__$1;
      var seq__14961 = cljs.core.seq(vec__14960);
      var first__14962 = cljs.core.first(seq__14961);
      var seq__14961__$1 = cljs.core.next(seq__14961);
      var vec__14963 = first__14962;
      var k__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14963, 0, null);
      var v__$1 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14963, 1, null);
      var entry__$1 = vec__14963;
      var entries__$1 = seq__14961__$1;
      var lm__$2 = lm__$1;
      if (cljs.core.truth_(entry__$1)) {
        if (k__$1 instanceof cljs.core.Keyword || k__$1 instanceof cljs.core.Symbol) {
          if (cljs.core.truth_(ns__$2)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2, cljs.core.namespace(k__$1))) {
              var G__14966 = ns__$2;
              var G__14967 = entries__$1;
              var G__14968 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__14966;
              G__14947__$1 = G__14967;
              lm__$1 = G__14968;
              continue;
            } else {
              return null;
            }
          } else {
            var temp__5735__auto__ = cljs.core.namespace(k__$1);
            if (cljs.core.truth_(temp__5735__auto__)) {
              var new_ns = temp__5735__auto__;
              var G__14969 = new_ns;
              var G__14970 = entries__$1;
              var G__14971 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2, cljs.core.strip_ns(k__$1), v__$1);
              ns__$1 = G__14969;
              G__14947__$1 = G__14970;
              lm__$1 = G__14971;
              continue;
            } else {
              return null;
            }
          }
        } else {
          return null;
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2, lm__$2], null);
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.print_prefix_map = function cljs$core$print_prefix_map(prefix, m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__14972_14978 = cljs.core.key(e);
    var G__14973_14979 = w;
    var G__14974_14980 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14972_14978, G__14973_14979, G__14974_14980) : print_one.call(null, G__14972_14978, G__14973_14979, G__14974_14980);
    cljs.core._write(w, " ");
    var G__14975 = cljs.core.val(e);
    var G__14976 = w;
    var G__14977 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14975, G__14976, G__14977) : print_one.call(null, G__14975, G__14976, G__14977);
  }, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix), "{"].join(""), ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.print_map = function cljs$core$print_map(m, print_one, writer, opts) {
  var vec__14981 = cljs.core.map_QMARK_(m) ? cljs.core.lift_ns(m) : null;
  var ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14981, 0, null);
  var lift_map = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14981, 1, null);
  if (cljs.core.truth_(ns)) {
    return cljs.core.print_prefix_map(["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(""), lift_map, print_one, writer, opts);
  } else {
    return cljs.core.print_prefix_map(null, m, print_one, writer, opts);
  }
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Volatile ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Atom ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "val", "val", 128701612), a__$1.state], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Symbol) {
    return cljs.core.compare_symbols(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (y instanceof cljs.core.Keyword) {
    return cljs.core.compare_keywords(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.MapEntry.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.BlackNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.RedNode.prototype.cljs$core$IComparable$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  if (cljs.core.vector_QMARK_(y)) {
    return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
  } else {
    throw new Error(["Cannot compare ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1), " to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(""));
  }
};
cljs.core.alter_meta_BANG_ = function cljs$core$alter_meta_BANG_(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___14987 = arguments.length;
  var i__4737__auto___14988 = 0;
  while (true) {
    if (i__4737__auto___14988 < len__4736__auto___14987) {
      args__4742__auto__.push(arguments[i__4737__auto___14988]);
      var G__14989 = i__4737__auto___14988 + 1;
      i__4737__auto___14988 = G__14989;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 2 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(2), 0, null) : null;
  return cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4743__auto__);
};
cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(iref, f, args) {
  return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
};
cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs.core.alter_meta_BANG_.cljs$lang$applyTo = function(seq14984) {
  var G__14985 = cljs.core.first(seq14984);
  var seq14984__$1 = cljs.core.next(seq14984);
  var G__14986 = cljs.core.first(seq14984__$1);
  var seq14984__$2 = cljs.core.next(seq14984__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14985, G__14986, seq14984__$2);
};
cljs.core.reset_meta_BANG_ = function cljs$core$reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function cljs$core$add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function cljs$core$remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function cljs$core$gensym(var_args) {
  var G__14991 = arguments.length;
  switch(G__14991) {
    case 0:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.gensym.cljs$core$IFn$_invoke$arity$1("G__");
};
cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 = function(prefix_string) {
  if (cljs.core.gensym_counter == null) {
    cljs.core.gensym_counter = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(0);
  } else {
  }
  return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
};
cljs.core.gensym.cljs$lang$maxFixedArity = 1;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition0$ = 2147516416;
  this.cljs$lang$protocol_mask$partition1$ = 1;
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(x) {
  var self__ = this;
  var x__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(x, writer, opts) {
  var self__ = this;
  var x__$1 = this;
  cljs.core._write(writer, "#object[cljs.core.Delay ");
  cljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "status", "status", -1997798413), self__.f == null ? new cljs.core.Keyword(null, "ready", "ready", 1086465795) : new cljs.core.Keyword(null, "pending", "pending", -220036727), new cljs.core.Keyword(null, "val", "val", 128701612), self__.value], null), writer, opts);
  return cljs.core._write(writer, "]");
};
cljs.core.Delay.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null, "f", "f", 43394975, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "value", "value", 1946509744, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function cljs$core$__GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function cljs$core$delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function cljs$core$force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    return cljs.core.deref(x);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function cljs$core$realized_QMARK_(x) {
  return cljs.core._realized_QMARK_(x);
};
cljs.core.preserving_reduced = function cljs$core$preserving_reduced(rf) {
  return function(p1__14993_SHARP_, p2__14994_SHARP_) {
    var ret = rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__14993_SHARP_, p2__14994_SHARP_) : rf.call(null, p1__14993_SHARP_, p2__14994_SHARP_);
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cljs$core$cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function() {
    var G__14995 = null;
    var G__14995__0 = function() {
      return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
    };
    var G__14995__1 = function(result) {
      return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
    };
    var G__14995__2 = function(result, input) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
    };
    G__14995 = function(result, input) {
      switch(arguments.length) {
        case 0:
          return G__14995__0.call(this);
        case 1:
          return G__14995__1.call(this, result);
        case 2:
          return G__14995__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__14995.cljs$core$IFn$_invoke$arity$0 = G__14995__0;
    G__14995.cljs$core$IFn$_invoke$arity$1 = G__14995__1;
    G__14995.cljs$core$IFn$_invoke$arity$2 = G__14995__2;
    return G__14995;
  }();
};
cljs.core.halt_when = function cljs$core$halt_when(var_args) {
  var G__14997 = arguments.length;
  switch(G__14997) {
    case 1:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 = function(pred) {
  return cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred, null);
};
cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 = function(pred, retf) {
  return function(rf) {
    return function() {
      var G__15001 = null;
      var G__15001__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15001__1 = function(result) {
        if (cljs.core.map_QMARK_(result) && cljs.core.contains_QMARK_(result, new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715))) {
          return (new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715)).cljs$core$IFn$_invoke$arity$1(result);
        } else {
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
        }
      };
      var G__15001__2 = function(result, input) {
        if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null, input))) {
          return cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword("cljs.core", "halt", "cljs.core/halt", -1049036715), cljs.core.truth_(retf) ? function() {
            var G__14998 = rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
            var G__14999 = input;
            return retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__14998, G__14999) : retf.call(null, G__14998, G__14999);
          }() : input], null));
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__15001 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15001__0.call(this);
          case 1:
            return G__15001__1.call(this, result);
          case 2:
            return G__15001__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15001.cljs$core$IFn$_invoke$arity$0 = G__15001__0;
      G__15001.cljs$core$IFn$_invoke$arity$1 = G__15001__1;
      G__15001.cljs$core$IFn$_invoke$arity$2 = G__15001__2;
      return G__15001;
    }();
  };
};
cljs.core.halt_when.cljs$lang$maxFixedArity = 2;
cljs.core.dedupe = function cljs$core$dedupe(var_args) {
  var G__15003 = arguments.length;
  switch(G__15003) {
    case 0:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 = function() {
  return function(rf) {
    var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
    return function() {
      var G__15005 = null;
      var G__15005__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__15005__1 = function(result) {
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null, result);
      };
      var G__15005__2 = function(result, input) {
        var prior = cljs.core.deref(pa);
        cljs.core.vreset_BANG_(pa, input);
        if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
          return result;
        } else {
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result, input) : rf.call(null, result, input);
        }
      };
      G__15005 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__15005__0.call(this);
          case 1:
            return G__15005__1.call(this, result);
          case 2:
            return G__15005__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__15005.cljs$core$IFn$_invoke$arity$0 = G__15005__0;
      G__15005.cljs$core$IFn$_invoke$arity$1 = G__15005__1;
      G__15005.cljs$core$IFn$_invoke$arity$2 = G__15005__2;
      return G__15005;
    }();
  };
};
cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
};
cljs.core.dedupe.cljs$lang$maxFixedArity = 1;
cljs.core.random_sample = function cljs$core$random_sample(var_args) {
  var G__15007 = arguments.length;
  switch(G__15007) {
    case 1:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 = function(prob) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  });
};
cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 = function(prob, coll) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
    return cljs.core.rand.cljs$core$IFn$_invoke$arity$0() < prob;
  }, coll);
};
cljs.core.random_sample.cljs$lang$maxFixedArity = 2;
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
  this.cljs$lang$protocol_mask$partition1$ = 131072;
};
cljs.core.Eduction.prototype.indexOf = function() {
  var G__15009 = null;
  var G__15009__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, 0);
  };
  var G__15009__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__15009 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15009__1.call(this, x);
      case 2:
        return G__15009__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15009.cljs$core$IFn$_invoke$arity$1 = G__15009__1;
  G__15009.cljs$core$IFn$_invoke$arity$2 = G__15009__2;
  return G__15009;
}();
cljs.core.Eduction.prototype.lastIndexOf = function() {
  var G__15010 = null;
  var G__15010__1 = function(x) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, cljs.core.count(coll__$1));
  };
  var G__15010__2 = function(x, start) {
    var self__ = this;
    var coll__$1 = this;
    return cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1, x, start);
  };
  G__15010 = function(x, start) {
    switch(arguments.length) {
      case 1:
        return G__15010__1.call(this, x);
      case 2:
        return G__15010__2.call(this, x, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15010.cljs$core$IFn$_invoke$arity$1 = G__15010__1;
  G__15010.cljs$core$IFn$_invoke$arity$2 = G__15010__2;
  return G__15010;
}();
cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.TransformerIterator.create(self__.xform, cljs.core.iter(self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 = function(_, f) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f), init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "xform", "xform", -85179481, null), new cljs.core.Symbol(null, "coll", "coll", -1006698606, null)], null);
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function cljs$core$__GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
goog.object.set(cljs.core.Eduction.prototype, cljs.core.ITER_SYMBOL, function() {
  var this__4675__auto__ = this;
  return cljs.core.es6_iterator(this__4675__auto__);
});
cljs.core.eduction = function cljs$core$eduction(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___15012 = arguments.length;
  var i__4737__auto___15013 = 0;
  while (true) {
    if (i__4737__auto___15013 < len__4736__auto___15012) {
      args__4742__auto__.push(arguments[i__4737__auto___15013]);
      var G__15014 = i__4737__auto___15013 + 1;
      i__4737__auto___15013 = G__15014;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic = function(xforms) {
  return new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp, cljs.core.butlast(xforms)), cljs.core.last(xforms));
};
cljs.core.eduction.cljs$lang$maxFixedArity = 0;
cljs.core.eduction.cljs$lang$applyTo = function(seq15011) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15011));
};
cljs.core.run_BANG_ = function cljs$core$run_BANG_(proc, coll) {
  cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15016_SHARP_, p2__15015_SHARP_) {
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__15015_SHARP_) : proc.call(null, p2__15015_SHARP_);
  }, null, coll);
  return null;
};
cljs.core.IEncodeJS = function() {
};
var cljs$core$IEncodeJS$_clj__GT_js$dyn_15017 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._clj__GT_js[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._clj__GT_js["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
    }
  }
};
cljs.core._clj__GT_js = function cljs$core$_clj__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    return cljs$core$IEncodeJS$_clj__GT_js$dyn_15017(x);
  }
};
var cljs$core$IEncodeJS$_key__GT_js$dyn_15018 = function(x) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._key__GT_js[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4429__auto__.call(null, x);
  } else {
    var m__4426__auto__ = cljs.core._key__GT_js["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__4426__auto__.call(null, x);
    } else {
      throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
    }
  }
};
cljs.core._key__GT_js = function cljs$core$_key__GT_js(x) {
  if (!(x == null) && !(x.cljs$core$IEncodeJS$_key__GT_js$arity$1 == null)) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    return cljs$core$IEncodeJS$_key__GT_js$dyn_15018(x);
  }
};
cljs.core.key__GT_js = function cljs$core$key__GT_js(var_args) {
  var G__15020 = arguments.length;
  switch(G__15020) {
    case 1:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 = function(k) {
  return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, cljs.core.clj__GT_js);
};
cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 = function(k, primitive_fn) {
  if (!(k == null) ? false || cljs.core.PROTOCOL_SENTINEL === k.cljs$core$IEncodeJS$ ? true : !k.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, k)) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      return primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null, k);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));
    }
  }
};
cljs.core.key__GT_js.cljs$lang$maxFixedArity = 2;
cljs.core.clj__GT_js = function cljs$core$clj__GT_js(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___15074 = arguments.length;
  var i__4737__auto___15075 = 0;
  while (true) {
    if (i__4737__auto___15075 < len__4736__auto___15074) {
      args__4742__auto__.push(arguments[i__4737__auto___15075]);
      var G__15076 = i__4737__auto___15075 + 1;
      i__4737__auto___15075 = G__15076;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic = function(x, p__15025) {
  var map__15026 = p__15025;
  var map__15026__$1 = (!(map__15026 == null) ? map__15026.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__15026.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__15026) : map__15026;
  var options = map__15026__$1;
  var keyword_fn = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__15026__$1, new cljs.core.Keyword(null, "keyword-fn", "keyword-fn", -64566675), cljs.core.name);
  var keyfn = function cljs$core$keyfn(k) {
    return cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k, thisfn);
  };
  var thisfn = function cljs$core$thisfn(x__$1) {
    if (x__$1 == null) {
      return null;
    } else {
      if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeJS$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, x__$1)) {
        return cljs.core._clj__GT_js(x__$1);
      } else {
        if (x__$1 instanceof cljs.core.Keyword) {
          return keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null, x__$1);
        } else {
          if (x__$1 instanceof cljs.core.Symbol) {
            return cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);
          } else {
            if (cljs.core.map_QMARK_(x__$1)) {
              var m = {};
              var seq__15054_15077 = cljs.core.seq(x__$1);
              var chunk__15055_15078 = null;
              var count__15056_15079 = 0;
              var i__15057_15080 = 0;
              while (true) {
                if (i__15057_15080 < count__15056_15079) {
                  var vec__15064_15081 = chunk__15055_15078.cljs$core$IIndexed$_nth$arity$2(null, i__15057_15080);
                  var k_15082 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15064_15081, 0, null);
                  var v_15083 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15064_15081, 1, null);
                  goog.object.set(m, keyfn(k_15082), cljs$core$thisfn(v_15083));
                  var G__15084 = seq__15054_15077;
                  var G__15085 = chunk__15055_15078;
                  var G__15086 = count__15056_15079;
                  var G__15087 = i__15057_15080 + 1;
                  seq__15054_15077 = G__15084;
                  chunk__15055_15078 = G__15085;
                  count__15056_15079 = G__15086;
                  i__15057_15080 = G__15087;
                  continue;
                } else {
                  var temp__5735__auto___15088 = cljs.core.seq(seq__15054_15077);
                  if (temp__5735__auto___15088) {
                    var seq__15054_15089__$1 = temp__5735__auto___15088;
                    if (cljs.core.chunked_seq_QMARK_(seq__15054_15089__$1)) {
                      var c__4556__auto___15090 = cljs.core.chunk_first(seq__15054_15089__$1);
                      var G__15091 = cljs.core.chunk_rest(seq__15054_15089__$1);
                      var G__15092 = c__4556__auto___15090;
                      var G__15093 = cljs.core.count(c__4556__auto___15090);
                      var G__15094 = 0;
                      seq__15054_15077 = G__15091;
                      chunk__15055_15078 = G__15092;
                      count__15056_15079 = G__15093;
                      i__15057_15080 = G__15094;
                      continue;
                    } else {
                      var vec__15067_15095 = cljs.core.first(seq__15054_15089__$1);
                      var k_15096 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15067_15095, 0, null);
                      var v_15097 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15067_15095, 1, null);
                      goog.object.set(m, keyfn(k_15096), cljs$core$thisfn(v_15097));
                      var G__15098 = cljs.core.next(seq__15054_15089__$1);
                      var G__15099 = null;
                      var G__15100 = 0;
                      var G__15101 = 0;
                      seq__15054_15077 = G__15098;
                      chunk__15055_15078 = G__15099;
                      count__15056_15079 = G__15100;
                      i__15057_15080 = G__15101;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return m;
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                var arr = [];
                var seq__15070_15102 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
                var chunk__15071_15103 = null;
                var count__15072_15104 = 0;
                var i__15073_15105 = 0;
                while (true) {
                  if (i__15073_15105 < count__15072_15104) {
                    var x_15106__$2 = chunk__15071_15103.cljs$core$IIndexed$_nth$arity$2(null, i__15073_15105);
                    arr.push(x_15106__$2);
                    var G__15107 = seq__15070_15102;
                    var G__15108 = chunk__15071_15103;
                    var G__15109 = count__15072_15104;
                    var G__15110 = i__15073_15105 + 1;
                    seq__15070_15102 = G__15107;
                    chunk__15071_15103 = G__15108;
                    count__15072_15104 = G__15109;
                    i__15073_15105 = G__15110;
                    continue;
                  } else {
                    var temp__5735__auto___15111 = cljs.core.seq(seq__15070_15102);
                    if (temp__5735__auto___15111) {
                      var seq__15070_15112__$1 = temp__5735__auto___15111;
                      if (cljs.core.chunked_seq_QMARK_(seq__15070_15112__$1)) {
                        var c__4556__auto___15113 = cljs.core.chunk_first(seq__15070_15112__$1);
                        var G__15114 = cljs.core.chunk_rest(seq__15070_15112__$1);
                        var G__15115 = c__4556__auto___15113;
                        var G__15116 = cljs.core.count(c__4556__auto___15113);
                        var G__15117 = 0;
                        seq__15070_15102 = G__15114;
                        chunk__15071_15103 = G__15115;
                        count__15072_15104 = G__15116;
                        i__15073_15105 = G__15117;
                        continue;
                      } else {
                        var x_15118__$2 = cljs.core.first(seq__15070_15112__$1);
                        arr.push(x_15118__$2);
                        var G__15119 = cljs.core.next(seq__15070_15112__$1);
                        var G__15120 = null;
                        var G__15121 = 0;
                        var G__15122 = 0;
                        seq__15070_15102 = G__15119;
                        chunk__15071_15103 = G__15120;
                        count__15072_15104 = G__15121;
                        i__15073_15105 = G__15122;
                        continue;
                      }
                    } else {
                    }
                  }
                  break;
                }
                return arr;
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return thisfn(x);
};
cljs.core.clj__GT_js.cljs$lang$maxFixedArity = 1;
cljs.core.clj__GT_js.cljs$lang$applyTo = function(seq15023) {
  var G__15024 = cljs.core.first(seq15023);
  var seq15023__$1 = cljs.core.next(seq15023);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15024, seq15023__$1);
};
cljs.core.IEncodeClojure = function() {
};
var cljs$core$IEncodeClojure$_js__GT_clj$dyn_15123 = function(x, options) {
  var x__4428__auto__ = x == null ? null : x;
  var m__4429__auto__ = cljs.core._js__GT_clj[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4429__auto__.call(null, x, options);
  } else {
    var m__4426__auto__ = cljs.core._js__GT_clj["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(x, options) : m__4426__auto__.call(null, x, options);
    } else {
      throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
    }
  }
};
cljs.core._js__GT_clj = function cljs$core$_js__GT_clj(x, options) {
  if (!(x == null) && !(x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 == null)) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    return cljs$core$IEncodeClojure$_js__GT_clj$dyn_15123(x, options);
  }
};
cljs.core.js__GT_clj = function cljs$core$js__GT_clj(var_args) {
  var G__15129 = arguments.length;
  switch(G__15129) {
    case 1:
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___15134 = arguments.length;
      var i__4737__auto___15135 = 0;
      while (true) {
        if (i__4737__auto___15135 < len__4736__auto___15134) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___15135]);
          var G__15136 = i__4737__auto___15135 + 1;
          i__4737__auto___15135 = G__15136;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 = function(x) {
  return cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], 0));
};
cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = function(x, opts) {
  var map__15130 = opts;
  var map__15130__$1 = (!(map__15130 == null) ? map__15130.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__15130.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__15130) : map__15130;
  var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15130__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
  var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
  var f = function cljs$core$thisfn(x__$1) {
    if (!(x__$1 == null) ? false || cljs.core.PROTOCOL_SENTINEL === x__$1.cljs$core$IEncodeClojure$ ? true : !x__$1.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1) : false : cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, x__$1)) {
      return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
    } else {
      if (cljs.core.seq_QMARK_(x__$1)) {
        return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn, x__$1));
      } else {
        if (cljs.core.map_entry_QMARK_(x__$1)) {
          return new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)), cljs$core$thisfn(cljs.core.val(x__$1)), null);
        } else {
          if (cljs.core.coll_QMARK_(x__$1)) {
            return cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn), x__$1);
          } else {
            if (cljs.core.array_QMARK_(x__$1)) {
              return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15124_SHARP_, p2__15125_SHARP_) {
                return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__15124_SHARP_, cljs$core$thisfn(p2__15125_SHARP_));
              }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), x__$1));
            } else {
              if (cljs.core.type(x__$1) === Object) {
                return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(r, k) {
                  return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r, keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null, k), cljs$core$thisfn(goog.object.get(x__$1, k)));
                }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), cljs.core.js_keys(x__$1)));
              } else {
                return x__$1;
              }
            }
          }
        }
      }
    }
  };
  return f(x);
};
cljs.core.js__GT_clj.cljs$lang$applyTo = function(seq15127) {
  var G__15128 = cljs.core.first(seq15127);
  var seq15127__$1 = cljs.core.next(seq15127);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15128, seq15127__$1);
};
cljs.core.js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs.core.memoize = function cljs$core$memoize(f) {
  var mem = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  return function() {
    var G__15137__delegate = function(args) {
      var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem), args, cljs.core.lookup_sentinel);
      if (v === cljs.core.lookup_sentinel) {
        var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
        cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
        return ret;
      } else {
        return v;
      }
    };
    var G__15137 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__15138__i = 0, G__15138__a = new Array(arguments.length - 0);
        while (G__15138__i < G__15138__a.length) {
          G__15138__a[G__15138__i] = arguments[G__15138__i + 0];
          ++G__15138__i;
        }
        args = new cljs.core.IndexedSeq(G__15138__a, 0, null);
      }
      return G__15137__delegate.call(this, args);
    };
    G__15137.cljs$lang$maxFixedArity = 0;
    G__15137.cljs$lang$applyTo = function(arglist__15139) {
      var args = cljs.core.seq(arglist__15139);
      return G__15137__delegate(args);
    };
    G__15137.cljs$core$IFn$_invoke$arity$variadic = G__15137__delegate;
    return G__15137;
  }();
};
cljs.core.trampoline = function cljs$core$trampoline(var_args) {
  var G__15143 = arguments.length;
  switch(G__15143) {
    case 1:
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      var args_arr__4757__auto__ = [];
      var len__4736__auto___15145 = arguments.length;
      var i__4737__auto___15146 = 0;
      while (true) {
        if (i__4737__auto___15146 < len__4736__auto___15145) {
          args_arr__4757__auto__.push(arguments[i__4737__auto___15146]);
          var G__15147 = i__4737__auto___15146 + 1;
          i__4737__auto___15146 = G__15147;
          continue;
        } else {
        }
        break;
      }
      var argseq__4758__auto__ = new cljs.core.IndexedSeq(args_arr__4757__auto__.slice(1), 0, null);
      return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4758__auto__);
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 = function(f) {
  while (true) {
    var ret = f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    if (cljs.core.fn_QMARK_(ret)) {
      var G__15148 = ret;
      f = G__15148;
      continue;
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1(function() {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
  });
};
cljs.core.trampoline.cljs$lang$applyTo = function(seq15141) {
  var G__15142 = cljs.core.first(seq15141);
  var seq15141__$1 = cljs.core.next(seq15141);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15142, seq15141__$1);
};
cljs.core.trampoline.cljs$lang$maxFixedArity = 1;
cljs.core.rand = function cljs$core$rand(var_args) {
  var G__15150 = arguments.length;
  switch(G__15150) {
    case 0:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.core.rand.cljs$core$IFn$_invoke$arity$1(1);
};
cljs.core.rand.cljs$core$IFn$_invoke$arity$1 = function(n) {
  return Math.random() * n;
};
cljs.core.rand.cljs$lang$maxFixedArity = 1;
cljs.core.rand_int = function cljs$core$rand_int(n) {
  var G__15152 = Math.random() * n;
  return Math.floor(G__15152);
};
cljs.core.rand_nth = function cljs$core$rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function cljs$core$group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null, x);
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function cljs$core$make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function cljs$core$get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy());
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function cljs$core$swap_global_hierarchy_BANG_(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___15155 = arguments.length;
  var i__4737__auto___15156 = 0;
  while (true) {
    if (i__4737__auto___15156 < len__4736__auto___15155) {
      args__4742__auto__.push(arguments[i__4737__auto___15156]);
      var G__15157 = i__4737__auto___15156 + 1;
      i__4737__auto___15156 = G__15157;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(f, args) {
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
};
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(seq15153) {
  var G__15154 = cljs.core.first(seq15153);
  var seq15153__$1 = cljs.core.next(seq15153);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15154, seq15153__$1);
};
cljs.core.isa_QMARK_ = function cljs$core$isa_QMARK_(var_args) {
  var G__15159 = arguments.length;
  switch(G__15159) {
    case 2:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = function(child, parent) {
  return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()), child, parent);
};
cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = function(h, child, parent) {
  var or__4126__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
  if (or__4126__auto__) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = cljs.core.contains_QMARK_(function() {
      var fexpr__15162 = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
      return fexpr__15162.cljs$core$IFn$_invoke$arity$1 ? fexpr__15162.cljs$core$IFn$_invoke$arity$1(child) : fexpr__15162.call(null, child);
    }(), parent);
    if (or__4126__auto____$1) {
      return or__4126__auto____$1;
    } else {
      if (cljs.core.vector_QMARK_(parent)) {
        if (cljs.core.vector_QMARK_(child)) {
          if (cljs.core.count(parent) === cljs.core.count(child)) {
            var ret = true;
            var i = 0;
            while (true) {
              if (!ret || i === cljs.core.count(parent)) {
                return ret;
              } else {
                var G__15164 = cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null, i), parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null, i));
                var G__15165 = i + 1;
                ret = G__15164;
                i = G__15165;
                continue;
              }
              break;
            }
          } else {
            return false;
          }
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }
};
cljs.core.isa_QMARK_.cljs$lang$maxFixedArity = 3;
cljs.core.parents = function cljs$core$parents(var_args) {
  var G__15167 = arguments.length;
  switch(G__15167) {
    case 1:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.parents.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.parents.cljs$lang$maxFixedArity = 2;
cljs.core.ancestors = function cljs$core$ancestors(var_args) {
  var G__15170 = arguments.length;
  switch(G__15170) {
    case 1:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.ancestors.cljs$lang$maxFixedArity = 2;
cljs.core.descendants = function cljs$core$descendants(var_args) {
  var G__15173 = arguments.length;
  switch(G__15173) {
    case 1:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 = function(tag) {
  return cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()), tag);
};
cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 = function(h, tag) {
  return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
};
cljs.core.descendants.cljs$lang$maxFixedArity = 2;
cljs.core.derive = function cljs$core$derive(var_args) {
  var G__15176 = arguments.length;
  switch(G__15176) {
    case 2:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.derive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  if (cljs.core.truth_(cljs.core.namespace(parent))) {
  } else {
    throw new Error("Assert failed: (namespace parent)");
  }
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.derive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
  } else {
    throw new Error("Assert failed: (not\x3d tag parent)");
  }
  var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
  var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
  var tf = function(m, source, sources, target, targets) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, k) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null, target))));
    }, m, cljs.core.cons(source, sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null, source)));
  };
  var or__4126__auto__ = cljs.core.contains_QMARK_(tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null, tag), parent) ? null : function() {
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null, tag), parent)) {
      throw new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "already has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "as ancestor"].join(""));
    } else {
    }
    if (cljs.core.contains_QMARK_(ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null, parent), tag)) {
      throw new Error(["Cyclic derivation:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent), "has", cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag), "as ancestor"].join(""));
    } else {
    }
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
    "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
  }();
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return h;
  }
};
cljs.core.derive.cljs$lang$maxFixedArity = 3;
cljs.core.underive = function cljs$core$underive(var_args) {
  var G__15182 = arguments.length;
  switch(G__15182) {
    case 2:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.underive.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$2 = function(tag, parent) {
  cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag, parent], 0));
  return null;
};
cljs.core.underive.cljs$core$IFn$_invoke$arity$3 = function(h, tag, parent) {
  var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
  var childsParents = cljs.core.truth_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag)) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
  var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
  var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__15178_SHARP_) {
    return cljs.core.cons(cljs.core.first(p1__15178_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__15178_SHARP_), cljs.core.second(p1__15178_SHARP_)));
  }, cljs.core.seq(newParents)));
  if (cljs.core.contains_QMARK_(parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null, tag), parent)) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15179_SHARP_, p2__15180_SHARP_) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__15179_SHARP_, p2__15180_SHARP_);
    }, cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
  } else {
    return h;
  }
};
cljs.core.underive.cljs$lang$maxFixedArity = 3;
cljs.core.reset_cache = function cljs$core$reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    return cljs.core.deref(method_table);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    return cljs.core.deref(hierarchy);
  });
};
cljs.core.prefers_STAR_ = function cljs$core$prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var fexpr__15184 = cljs.core.deref(prefer_table);
    return fexpr__15184.cljs$core$IFn$_invoke$arity$1 ? fexpr__15184.cljs$core$IFn$_invoke$arity$1(x) : fexpr__15184.call(null, x);
  }();
  var or__4126__auto__ = cljs.core.truth_(function() {
    var and__4115__auto__ = xprefs;
    if (cljs.core.truth_(and__4115__auto__)) {
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null, y);
    } else {
      return and__4115__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(function() {
            var G__15188 = x;
            var G__15189 = cljs.core.first(ps);
            var G__15190 = prefer_table;
            return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__15188, G__15189, G__15190) : cljs.core.prefers_STAR_.call(null, G__15188, G__15189, G__15190);
          }())) {
          } else {
          }
          var G__15197 = cljs.core.rest(ps);
          ps = G__15197;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__4126__auto____$1)) {
      return or__4126__auto____$1;
    } else {
      var or__4126__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(function() {
              var G__15194 = cljs.core.first(ps);
              var G__15195 = y;
              var G__15196 = prefer_table;
              return cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__15194, G__15195, G__15196) : cljs.core.prefers_STAR_.call(null, G__15194, G__15195, G__15196);
            }())) {
            } else {
            }
            var G__15198 = cljs.core.rest(ps);
            ps = G__15198;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__4126__auto____$2)) {
        return or__4126__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function cljs$core$dominates(x, y, prefer_table, hierarchy) {
  var or__4126__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy, x, y);
  }
};
cljs.core.find_and_cache_best_method = function cljs$core$find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__15199) {
    var vec__15200 = p__15199;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15200, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15200, 1, null);
    var e = vec__15200;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy), dispatch_val, k)) {
      var be2 = be == null || cljs.core.dominates(k, cljs.core.first(be), prefer_table, cljs.core.deref(hierarchy)) ? e : be;
      if (cljs.core.dominates(cljs.core.first(be2), k, prefer_table, cljs.core.deref(hierarchy))) {
      } else {
        throw new Error(["Multiple methods in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' match dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val), " -\x3e ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(k), " and ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)), ", and neither is preferred"].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, cljs.core.deref(method_table));
  var best_entry__$1 = function() {
    var temp__5733__auto__ = best_entry == null ? function() {
      var fexpr__15204 = cljs.core.deref(method_table);
      return fexpr__15204.cljs$core$IFn$_invoke$arity$1 ? fexpr__15204.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__15204.call(null, default_dispatch_val);
    }() : false;
    if (cljs.core.truth_(temp__5733__auto__)) {
      var entry = temp__5733__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val, entry], null);
    } else {
      return best_entry;
    }
  }();
  if (cljs.core.truth_(best_entry__$1)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy), cljs.core.deref(hierarchy))) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry__$1));
      return cljs.core.second(best_entry__$1);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy, default_dispatch_val);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
};
var cljs$core$IMultiFn$_reset$dyn_15205 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._reset[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._reset["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
    }
  }
};
cljs.core._reset = function cljs$core$_reset(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_reset$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_reset$dyn_15205(mf);
  }
};
var cljs$core$IMultiFn$_add_method$dyn_15206 = function(mf, dispatch_val, method) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._add_method[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4429__auto__.call(null, mf, dispatch_val, method);
  } else {
    var m__4426__auto__ = cljs.core._add_method["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, method) : m__4426__auto__.call(null, mf, dispatch_val, method);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
    }
  }
};
cljs.core._add_method = function cljs$core$_add_method(mf, dispatch_val, method) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_add_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    return cljs$core$IMultiFn$_add_method$dyn_15206(mf, dispatch_val, method);
  }
};
var cljs$core$IMultiFn$_remove_method$dyn_15207 = function(mf, dispatch_val) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._remove_method[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4429__auto__.call(null, mf, dispatch_val);
  } else {
    var m__4426__auto__ = cljs.core._remove_method["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4426__auto__.call(null, mf, dispatch_val);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
    }
  }
};
cljs.core._remove_method = function cljs$core$_remove_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_remove_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    return cljs$core$IMultiFn$_remove_method$dyn_15207(mf, dispatch_val);
  }
};
var cljs$core$IMultiFn$_prefer_method$dyn_15208 = function(mf, dispatch_val, dispatch_val_y) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._prefer_method[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4429__auto__.call(null, mf, dispatch_val, dispatch_val_y);
  } else {
    var m__4426__auto__ = cljs.core._prefer_method["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$3 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$3(mf, dispatch_val, dispatch_val_y) : m__4426__auto__.call(null, mf, dispatch_val, dispatch_val_y);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
    }
  }
};
cljs.core._prefer_method = function cljs$core$_prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefer_method$arity$3 == null)) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    return cljs$core$IMultiFn$_prefer_method$dyn_15208(mf, dispatch_val, dispatch_val_y);
  }
};
var cljs$core$IMultiFn$_get_method$dyn_15209 = function(mf, dispatch_val) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._get_method[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4429__auto__.call(null, mf, dispatch_val);
  } else {
    var m__4426__auto__ = cljs.core._get_method["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$2 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$2(mf, dispatch_val) : m__4426__auto__.call(null, mf, dispatch_val);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
    }
  }
};
cljs.core._get_method = function cljs$core$_get_method(mf, dispatch_val) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_get_method$arity$2 == null)) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    return cljs$core$IMultiFn$_get_method$dyn_15209(mf, dispatch_val);
  }
};
var cljs$core$IMultiFn$_methods$dyn_15210 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._methods[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._methods["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
    }
  }
};
cljs.core._methods = function cljs$core$_methods(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_methods$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_methods$dyn_15210(mf);
  }
};
var cljs$core$IMultiFn$_prefers$dyn_15211 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._prefers[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._prefers["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
    }
  }
};
cljs.core._prefers = function cljs$core$_prefers(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_prefers$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_prefers$dyn_15211(mf);
  }
};
var cljs$core$IMultiFn$_default_dispatch_val$dyn_15212 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._default_dispatch_val[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._default_dispatch_val["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-default-dispatch-val", mf);
    }
  }
};
cljs.core._default_dispatch_val = function cljs$core$_default_dispatch_val(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_default_dispatch_val$dyn_15212(mf);
  }
};
var cljs$core$IMultiFn$_dispatch_fn$dyn_15213 = function(mf) {
  var x__4428__auto__ = mf == null ? null : mf;
  var m__4429__auto__ = cljs.core._dispatch_fn[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4429__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4429__auto__.call(null, mf);
  } else {
    var m__4426__auto__ = cljs.core._dispatch_fn["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4426__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__4426__auto__.call(null, mf);
    } else {
      throw cljs.core.missing_protocol("IMultiFn.-dispatch-fn", mf);
    }
  }
};
cljs.core._dispatch_fn = function cljs$core$_dispatch_fn(mf) {
  if (!(mf == null) && !(mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 == null)) {
    return mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);
  } else {
    return cljs$core$IMultiFn$_dispatch_fn$dyn_15213(mf);
  }
};
cljs.core.throw_no_method_error = function cljs$core$throw_no_method_error(name, dispatch_val) {
  throw new Error(["No method in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(name), "' for dispatch value: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.call = function() {
  var G__15216 = null;
  var G__15216__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__15216__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
  };
  var G__15216__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
  };
  var G__15216__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
  };
  var G__15216__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
  };
  var G__15216__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
  };
  var G__15216__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
  };
  var G__15216__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
  };
  var G__15216__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
  };
  var G__15216__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__15216__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__15216__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__15216__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__15216__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__15216__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__15216__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__15216__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__15216__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__15216__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__15216__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__15216__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__15216__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__15216 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__15216__1.call(this, self__);
      case 2:
        return G__15216__2.call(this, self__, a);
      case 3:
        return G__15216__3.call(this, self__, a, b);
      case 4:
        return G__15216__4.call(this, self__, a, b, c);
      case 5:
        return G__15216__5.call(this, self__, a, b, c, d);
      case 6:
        return G__15216__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__15216__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__15216__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__15216__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__15216__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__15216__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__15216__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__15216__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__15216__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__15216__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__15216__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__15216__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__15216__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__15216__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__15216__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__15216__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__15216__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + (arguments.length - 1));
  };
  G__15216.cljs$core$IFn$_invoke$arity$1 = G__15216__1;
  G__15216.cljs$core$IFn$_invoke$arity$2 = G__15216__2;
  G__15216.cljs$core$IFn$_invoke$arity$3 = G__15216__3;
  G__15216.cljs$core$IFn$_invoke$arity$4 = G__15216__4;
  G__15216.cljs$core$IFn$_invoke$arity$5 = G__15216__5;
  G__15216.cljs$core$IFn$_invoke$arity$6 = G__15216__6;
  G__15216.cljs$core$IFn$_invoke$arity$7 = G__15216__7;
  G__15216.cljs$core$IFn$_invoke$arity$8 = G__15216__8;
  G__15216.cljs$core$IFn$_invoke$arity$9 = G__15216__9;
  G__15216.cljs$core$IFn$_invoke$arity$10 = G__15216__10;
  G__15216.cljs$core$IFn$_invoke$arity$11 = G__15216__11;
  G__15216.cljs$core$IFn$_invoke$arity$12 = G__15216__12;
  G__15216.cljs$core$IFn$_invoke$arity$13 = G__15216__13;
  G__15216.cljs$core$IFn$_invoke$arity$14 = G__15216__14;
  G__15216.cljs$core$IFn$_invoke$arity$15 = G__15216__15;
  G__15216.cljs$core$IFn$_invoke$arity$16 = G__15216__16;
  G__15216.cljs$core$IFn$_invoke$arity$17 = G__15216__17;
  G__15216.cljs$core$IFn$_invoke$arity$18 = G__15216__18;
  G__15216.cljs$core$IFn$_invoke$arity$19 = G__15216__19;
  G__15216.cljs$core$IFn$_invoke$arity$20 = G__15216__20;
  G__15216.cljs$core$IFn$_invoke$arity$21 = G__15216__21;
  G__15216.cljs$core$IFn$_invoke$arity$22 = G__15216__22;
  return G__15216;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args15214) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15214)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null, a);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null, a);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a, b) : self__.dispatch_fn.call(null, a, b);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a, b) : target_fn.call(null, a, b);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : self__.dispatch_fn.call(null, a, b, c);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a, b, c) : target_fn.call(null, a, b, c);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : self__.dispatch_fn.call(null, a, b, c, d);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a, b, c, d) : target_fn.call(null, a, b, c, d);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : self__.dispatch_fn.call(null, a, b, c, d, e);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a, b, c, d, e) : target_fn.call(null, a, b, c, d, e);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : self__.dispatch_fn.call(null, a, b, c, d, e, f);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a, b, c, d, e, f) : target_fn.call(null, a, b, c, d, e, f);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a, b, c, d, e, f, g) : target_fn.call(null, a, b, c, d, e, f, g);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a, b, c, d, e, f, g, h) : target_fn.call(null, a, b, c, d, e, f, g, h);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a, b, c, d, e, f, g, h, i) : target_fn.call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a, b, c, d, e, f, g, h, i, j) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a, b, c, d, e, f, g, h, i, j, k) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a, b, c, d, e, f, g, h, i, j, k, l) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a, b, c, d, e, f, g, h, i, j, k, l, m) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a, b, c, d, e, f, g, h, i, j, k, l, m, n) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : self__.dispatch_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) : target_fn.call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error(["Preference conflict in multimethod '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), "': ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y), " is already preferred to ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(old) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
  });
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.default_dispatch_val;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.method_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return cljs.core.deref(self__.prefer_table);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  return self__.dispatch_fn;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$2) {
    return cljs.core.PersistentArrayMap.EMPTY;
  });
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$2) {
    return null;
  });
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy), cljs.core.deref(self__.hierarchy))) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__5733__auto__ = function() {
    var fexpr__15215 = cljs.core.deref(self__.method_cache);
    return fexpr__15215.cljs$core$IFn$_invoke$arity$1 ? fexpr__15215.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__15215.call(null, dispatch_val);
  }();
  if (cljs.core.truth_(temp__5733__auto__)) {
    var target_fn = temp__5733__auto__;
    return target_fn;
  } else {
    return cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy, self__.default_dispatch_val);
  }
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return goog.getUid(this$__$1);
};
cljs.core.MultiFn.getBasis = function() {
  return new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "name", "name", -810760592, null), new cljs.core.Symbol(null, "dispatch-fn", "dispatch-fn", -1401088155, null), new cljs.core.Symbol(null, "default-dispatch-val", "default-dispatch-val", -1231201266, null), new cljs.core.Symbol(null, "hierarchy", "hierarchy", 587061186, null), new cljs.core.Symbol(null, "method-table", "method-table", -1878263165, null), new cljs.core.Symbol(null, 
  "prefer-table", "prefer-table", 462168584, null), new cljs.core.Symbol(null, "method-cache", "method-cache", 1230193905, null), new cljs.core.Symbol(null, "cached-hierarchy", "cached-hierarchy", -1085460203, null)], null);
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function cljs$core$__GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function cljs$core$remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function cljs$core$remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function cljs$core$prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function cljs$core$methods(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function cljs$core$get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function cljs$core$prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.default_dispatch_val = function cljs$core$default_dispatch_val(multifn) {
  return cljs.core._default_dispatch_val(multifn);
};
cljs.core.dispatch_fn = function cljs$core$dispatch_fn(multifn) {
  return cljs.core._dispatch_fn(multifn);
};
cljs.core.IUUID = function() {
};
cljs.core.UUID = function(uuid, __hash) {
  this.uuid = uuid;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
  this.cljs$lang$protocol_mask$partition1$ = 2048;
};
cljs.core.UUID.prototype.cljs$core$IUUID$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, ['#uuid "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid), '"'].join(""));
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.__hash == null) {
    self__.__hash = cljs.core.hash(self__.uuid);
  } else {
  }
  return self__.__hash;
};
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return goog.array.defaultCompare(self__.uuid, other.uuid);
};
cljs.core.UUID.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "uuid", "uuid", -504564192, null), cljs.core.with_meta(new cljs.core.Symbol(null, "__hash", "__hash", -1328796629, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "mutable", "mutable", 875778266), true], null))], null);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function cljs$core$__GT_UUID(uuid, __hash) {
  return new cljs.core.UUID(uuid, __hash);
};
cljs.core.uuid = function cljs$core$uuid(s) {
  if (typeof s === "string") {
  } else {
    throw new Error("Assert failed: (string? s)");
  }
  return new cljs.core.UUID(s.toLowerCase(), null);
};
cljs.core.random_uuid = function cljs$core$random_uuid() {
  var hex = function cljs$core$random_uuid_$_hex() {
    return cljs.core.rand_int(16).toString(16);
  };
  var rhex = (8 | 3 & cljs.core.rand_int(16)).toString(16);
  return cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", "4", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), "-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()), 
  cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(""));
};
cljs.core.uuid_QMARK_ = function cljs$core$uuid_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IUUID$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.pr_writer_ex_info = function cljs$core$pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#error {:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ExceptionInfo = function cljs$core$ExceptionInfo(message, data, cause) {
  var e = new Error(message);
  var this$ = this;
  this$.message = message;
  this$.data = data;
  this$.cause = cause;
  this$.name = e.name;
  this$.description = e.description;
  this$.number = e.number;
  this$.fileName = e.fileName;
  this$.lineNumber = e.lineNumber;
  this$.columnNumber = e.columnNumber;
  this$.stack = e.stack;
  return this$;
};
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
  var obj__$1 = this;
  return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
};
cljs.core.ExceptionInfo.prototype.toString = function() {
  var this$ = this;
  return cljs.core.pr_str_STAR_(this$);
};
cljs.core.ex_info = function cljs$core$ex_info(var_args) {
  var G__15219 = arguments.length;
  switch(G__15219) {
    case 2:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 = function(msg, data) {
  return cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
};
cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 = function(msg, data, cause) {
  return new cljs.core.ExceptionInfo(msg, data, cause);
};
cljs.core.ex_info.cljs$lang$maxFixedArity = 3;
cljs.core.ex_data = function cljs$core$ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function cljs$core$ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function cljs$core$ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function cljs$core$comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x, y) : pred.call(null, x, y))) {
      return -1;
    } else {
      if (cljs.core.truth_(pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y, x) : pred.call(null, y, x))) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function cljs$core$special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), "null", new cljs.core.Symbol(null, "case*", "case*", -1938255072, null), "null", new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), "null", new cljs.core.Symbol(null, "try", "try", -1273693247, null), "null", new cljs.core.Symbol(null, "ns*", "ns*", 1840949383, null), "null", new cljs.core.Symbol(null, 
  "finally", "finally", -1065347064, null), "null", new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), "null", new cljs.core.Symbol(null, "do", "do", 1686842252, null), "null", new cljs.core.Symbol(null, "letfn*", "letfn*", -110097810, null), "null", new cljs.core.Symbol(null, "if", "if", 1181717262, null), "null", new cljs.core.Symbol(null, "new", "new", -444906321, null), "null", new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), "null", new cljs.core.Symbol(null, "deftype*", 
  "deftype*", 962659890, null), "null", new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), "null", new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), "null", new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), "null", new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), "null", new cljs.core.Symbol(null, "set!", "set!", 250714521, null), "null", new cljs.core.Symbol(null, ".", ".", 1975675962, null), "null", new cljs.core.Symbol(null, "var", "var", 870848730, 
  null), "null", new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "null", new cljs.core.Symbol(null, "catch", "catch", -1616370245, null), "null", new cljs.core.Symbol(null, "throw", "throw", 595905694, null), "null", new cljs.core.Symbol(null, "def", "def", 597100991, null), "null"], null), null), x);
};
cljs.core.test = function cljs$core$test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
cljs.core.TaggedLiteral = function(tag, form) {
  this.tag = tag;
  this.form = form;
  this.cljs$lang$protocol_mask$partition0$ = 2153775360;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.TaggedLiteral.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  return other instanceof cljs.core.TaggedLiteral && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag, other.tag) && cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form, other.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return 31 * cljs.core.hash(self__.tag) + cljs.core.hash(self__.form);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this$, v) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.cljs$core$ILookup$_lookup$arity$3(null, v, null);
};
cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this$, v, not_found) {
  var self__ = this;
  var this$__$1 = this;
  var G__15221 = v;
  var G__15221__$1 = G__15221 instanceof cljs.core.Keyword ? G__15221.fqn : null;
  switch(G__15221__$1) {
    case "tag":
      return self__.tag;
      break;
    case "form":
      return self__.form;
      break;
    default:
      return not_found;
  }
};
cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, opts) {
  var self__ = this;
  var o__$1 = this;
  cljs.core._write(writer, ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag), " "].join(""));
  return cljs.core.pr_writer(self__.form, writer, opts);
};
cljs.core.TaggedLiteral.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "form", "form", 16469056, null)], null);
};
cljs.core.TaggedLiteral.cljs$lang$type = true;
cljs.core.TaggedLiteral.cljs$lang$ctorStr = "cljs.core/TaggedLiteral";
cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/TaggedLiteral");
};
cljs.core.__GT_TaggedLiteral = function cljs$core$__GT_TaggedLiteral(tag, form) {
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.tagged_literal_QMARK_ = function cljs$core$tagged_literal_QMARK_(value) {
  return value instanceof cljs.core.TaggedLiteral;
};
cljs.core.tagged_literal = function cljs$core$tagged_literal(tag, form) {
  if (tag instanceof cljs.core.Symbol) {
  } else {
    throw new Error("Assert failed: (symbol? tag)");
  }
  return new cljs.core.TaggedLiteral(tag, form);
};
cljs.core.js_reserved_arr = ["arguments", "abstract", "await", "boolean", "break", "byte", "case", "catch", "char", "class", "const", "continue", "debugger", "default", "delete", "do", "double", "else", "enum", "export", "extends", "final", "finally", "float", "for", "function", "goto", "if", "implements", "import", "in", "instanceof", "int", "interface", "let", "long", "native", "new", "package", "private", "protected", "public", "return", "short", "static", "super", "switch", "synchronized", "this", 
"throw", "throws", "transient", "try", "typeof", "var", "void", "volatile", "while", "with", "yield", "methods", "null", "constructor"];
cljs.core.js_reserved = null;
cljs.core.js_reserved_QMARK_ = function cljs$core$js_reserved_QMARK_(x) {
  if (cljs.core.js_reserved == null) {
    cljs.core.js_reserved = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__15223_SHARP_, p2__15224_SHARP_) {
      goog.object.set(p1__15223_SHARP_, p2__15224_SHARP_, true);
      return p1__15223_SHARP_;
    }, {}, cljs.core.js_reserved_arr);
  } else {
  }
  return cljs.core.js_reserved.hasOwnProperty(x);
};
cljs.core.demunge_pattern = function cljs$core$demunge_pattern() {
  if (cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)) {
  } else {
    cljs.core.DEMUNGE_PATTERN = function() {
      var ks = cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(a, b) {
        return b.length - a.length;
      }, cljs.core.js_keys(cljs.core.DEMUNGE_MAP));
      var ks__$1 = ks;
      var ret = "";
      while (true) {
        if (cljs.core.seq(ks__$1)) {
          var G__15227 = cljs.core.next(ks__$1);
          var G__15228 = [function() {
            var G__15226 = ret;
            if (!(ret === "")) {
              return [G__15226, "|"].join("");
            } else {
              return G__15226;
            }
          }(), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join("");
          ks__$1 = G__15227;
          ret = G__15228;
          continue;
        } else {
          return [ret, "|\\$"].join("");
        }
        break;
      }
    }();
  }
  return cljs.core.DEMUNGE_PATTERN;
};
cljs.core.munge_str = function cljs$core$munge_str(name) {
  var sb = new goog.string.StringBuffer;
  var i_15229 = 0;
  while (true) {
    if (i_15229 < name.length) {
      var c_15230 = name.charAt(i_15229);
      var sub_15231 = goog.object.get(cljs.core.CHAR_MAP, c_15230);
      if (!(sub_15231 == null)) {
        sb.append(sub_15231);
      } else {
        sb.append(c_15230);
      }
      var G__15232 = i_15229 + 1;
      i_15229 = G__15232;
      continue;
    } else {
    }
    break;
  }
  return sb.toString();
};
cljs.core.munge = function cljs$core$munge(name) {
  var name_SINGLEQUOTE_ = cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));
  var name_SINGLEQUOTE___$1 = name_SINGLEQUOTE_ === ".." ? "_DOT__DOT_" : cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_)) ? [name_SINGLEQUOTE_, "$"].join("") : name_SINGLEQUOTE_;
  if (name instanceof cljs.core.Symbol) {
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);
  } else {
    return name_SINGLEQUOTE___$1;
  }
};
cljs.core.demunge_str = function cljs$core$demunge_str(munged_name) {
  var r = new RegExp(cljs.core.demunge_pattern(), "g");
  var munged_name__$1 = goog.string.endsWith(munged_name, "$") ? munged_name.substring(0, munged_name.length - 1) : munged_name;
  var ret = "";
  var last_match_end = 0;
  while (true) {
    var temp__5733__auto__ = r.exec(munged_name__$1);
    if (cljs.core.truth_(temp__5733__auto__)) {
      var match = temp__5733__auto__;
      var vec__15236 = match;
      var x = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15236, 0, null);
      var G__15239 = [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, r.lastIndex - x.length)), cljs.core.str.cljs$core$IFn$_invoke$arity$1(x === "$" ? "/" : goog.object.get(cljs.core.DEMUNGE_MAP, x))].join("");
      var G__15240 = r.lastIndex;
      ret = G__15239;
      last_match_end = G__15240;
      continue;
    } else {
      return [ret, cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end, munged_name__$1.length))].join("");
    }
    break;
  }
};
cljs.core.demunge = function cljs$core$demunge(name) {
  var G__15242 = function() {
    var name_SINGLEQUOTE_ = cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);
    if (name_SINGLEQUOTE_ === "_DOT__DOT_") {
      return "..";
    } else {
      return cljs.core.demunge_str(name_SINGLEQUOTE_);
    }
  }();
  var fexpr__15241 = name instanceof cljs.core.Symbol ? cljs.core.symbol : cljs.core.str;
  return fexpr__15241.cljs$core$IFn$_invoke$arity$1 ? fexpr__15241.cljs$core$IFn$_invoke$arity$1(G__15242) : fexpr__15241.call(null, G__15242);
};
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core.tapset !== "undefined") {
} else {
  cljs.core.tapset = null;
}
cljs.core.maybe_init_tapset = function cljs$core$maybe_init_tapset() {
  if (cljs.core.tapset == null) {
    return cljs.core.tapset = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY);
  } else {
    return null;
  }
};
cljs.core.add_tap = function cljs$core$add_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.conj, f);
  return null;
};
cljs.core.remove_tap = function cljs$core$remove_tap(f) {
  cljs.core.maybe_init_tapset();
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset, cljs.core.disj, f);
  return null;
};
cljs.core.tap_GT_ = function cljs$core$tap_GT_(x) {
  cljs.core.maybe_init_tapset();
  return cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_exec_tap_fn_STAR_.cljs$core$IFn$_invoke$arity$1(function() {
    var seq__15243 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__15244 = null;
    var count__15245 = 0;
    var i__15246 = 0;
    while (true) {
      if (i__15246 < count__15245) {
        var tap = chunk__15244.cljs$core$IIndexed$_nth$arity$2(null, i__15246);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e15249) {
          if (e15249 instanceof Error) {
            var ex_15251 = e15249;
          } else {
            throw e15249;
          }
        }
        var G__15252 = seq__15243;
        var G__15253 = chunk__15244;
        var G__15254 = count__15245;
        var G__15255 = i__15246 + 1;
        seq__15243 = G__15252;
        chunk__15244 = G__15253;
        count__15245 = G__15254;
        i__15246 = G__15255;
        continue;
      } else {
        var temp__5735__auto__ = cljs.core.seq(seq__15243);
        if (temp__5735__auto__) {
          var seq__15243__$1 = temp__5735__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__15243__$1)) {
            var c__4556__auto__ = cljs.core.chunk_first(seq__15243__$1);
            var G__15256 = cljs.core.chunk_rest(seq__15243__$1);
            var G__15257 = c__4556__auto__;
            var G__15258 = cljs.core.count(c__4556__auto__);
            var G__15259 = 0;
            seq__15243 = G__15256;
            chunk__15244 = G__15257;
            count__15245 = G__15258;
            i__15246 = G__15259;
            continue;
          } else {
            var tap = cljs.core.first(seq__15243__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e15250) {
              if (e15250 instanceof Error) {
                var ex_15260 = e15250;
              } else {
                throw e15250;
              }
            }
            var G__15261 = cljs.core.next(seq__15243__$1);
            var G__15262 = null;
            var G__15263 = 0;
            var G__15264 = 0;
            seq__15243 = G__15261;
            chunk__15244 = G__15262;
            count__15245 = G__15263;
            i__15246 = G__15264;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  }) : cljs.core._STAR_exec_tap_fn_STAR_.call(null, function() {
    var seq__15243 = cljs.core.seq(cljs.core.deref(cljs.core.tapset));
    var chunk__15244 = null;
    var count__15245 = 0;
    var i__15246 = 0;
    while (true) {
      if (i__15246 < count__15245) {
        var tap = chunk__15244.cljs$core$IIndexed$_nth$arity$2(null, i__15246);
        try {
          tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
        } catch (e15249) {
          if (e15249 instanceof Error) {
            var ex_15265 = e15249;
          } else {
            throw e15249;
          }
        }
        var G__15266 = seq__15243;
        var G__15267 = chunk__15244;
        var G__15268 = count__15245;
        var G__15269 = i__15246 + 1;
        seq__15243 = G__15266;
        chunk__15244 = G__15267;
        count__15245 = G__15268;
        i__15246 = G__15269;
        continue;
      } else {
        var temp__5735__auto__ = cljs.core.seq(seq__15243);
        if (temp__5735__auto__) {
          var seq__15243__$1 = temp__5735__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__15243__$1)) {
            var c__4556__auto__ = cljs.core.chunk_first(seq__15243__$1);
            var G__15270 = cljs.core.chunk_rest(seq__15243__$1);
            var G__15271 = c__4556__auto__;
            var G__15272 = cljs.core.count(c__4556__auto__);
            var G__15273 = 0;
            seq__15243 = G__15270;
            chunk__15244 = G__15271;
            count__15245 = G__15272;
            i__15246 = G__15273;
            continue;
          } else {
            var tap = cljs.core.first(seq__15243__$1);
            try {
              tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null, x);
            } catch (e15250) {
              if (e15250 instanceof Error) {
                var ex_15274 = e15250;
              } else {
                throw e15250;
              }
            }
            var G__15275 = cljs.core.next(seq__15243__$1);
            var G__15276 = null;
            var G__15277 = 0;
            var G__15278 = 0;
            seq__15243 = G__15275;
            chunk__15244 = G__15276;
            count__15245 = G__15277;
            i__15246 = G__15278;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  });
};
cljs.core.ns_lookup = function cljs$core$ns_lookup(ns_obj, k) {
  return function() {
    return goog.object.get(ns_obj, k);
  };
};
cljs.core.Namespace = function(obj, name) {
  this.obj = obj;
  this.name = name;
  this.cljs$lang$protocol_mask$partition0$ = 6291456;
  this.cljs$lang$protocol_mask$partition1$ = 0;
};
cljs.core.Namespace.prototype.findInternedVar = function(sym) {
  var self__ = this;
  var this$ = this;
  var k = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
  if (goog.object.containsKey(self__.obj, k)) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));
    var var_meta = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), this$], null);
    return new cljs.core.Var(cljs.core.ns_lookup(self__.obj, k), var_sym, var_meta);
  } else {
    return null;
  }
};
cljs.core.Namespace.prototype.getName = function() {
  var self__ = this;
  var _ = this;
  return self__.name;
};
cljs.core.Namespace.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);
};
cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Namespace) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name, other.name);
  } else {
    return false;
  }
};
cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.hash(self__.name);
};
cljs.core.Namespace.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "obj", "obj", -1672671807, null), new cljs.core.Symbol(null, "name", "name", -810760592, null)], null);
};
cljs.core.Namespace.cljs$lang$type = true;
cljs.core.Namespace.cljs$lang$ctorStr = "cljs.core/Namespace";
cljs.core.Namespace.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write(writer__4370__auto__, "cljs.core/Namespace");
};
cljs.core.__GT_Namespace = function cljs$core$__GT_Namespace(obj, name) {
  return new cljs.core.Namespace(obj, name);
};
cljs.core.NS_CACHE = null;
cljs.core.find_ns_obj_STAR_ = function cljs$core$find_ns_obj_STAR_(ctxt, xs) {
  while (true) {
    if (ctxt == null) {
      return null;
    } else {
      if (xs == null) {
        return ctxt;
      } else {
        var G__15279 = goog.object.get(ctxt, cljs.core.first(xs));
        var G__15280 = cljs.core.next(xs);
        ctxt = G__15279;
        xs = G__15280;
        continue;
      }
    }
    break;
  }
};
cljs.core.find_ns_obj = function cljs$core$find_ns_obj(ns) {
  var munged_ns = cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));
  var segs = munged_ns.split(".");
  var G__15281 = cljs.core._STAR_target_STAR_;
  switch(G__15281) {
    case "nodejs":
      if (COMPILED) {
        return cljs.core.find_ns_obj_STAR_(function() {
          try {
            var ctxt = eval(cljs.core.first(segs));
            if (cljs.core.truth_(function() {
              var and__4115__auto__ = ctxt;
              if (cljs.core.truth_(and__4115__auto__)) {
                return cljs.core.object_QMARK_(ctxt);
              } else {
                return and__4115__auto__;
              }
            }())) {
              return ctxt;
            } else {
              return null;
            }
          } catch (e15282) {
            if (e15282 instanceof ReferenceError) {
              var e = e15282;
              return null;
            } else {
              throw e15282;
            }
          }
        }(), cljs.core.next(segs));
      } else {
        return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      }
      break;
    case "default":
    case "webworker":
      return cljs.core.find_ns_obj_STAR_(goog.global, segs);
      break;
    default:
      throw new Error(["find-ns-obj not supported for target ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_target_STAR_)].join(""));
  }
};
cljs.core.ns_interns_STAR_ = function cljs$core$ns_interns_STAR_(sym) {
  var ns_obj = cljs.core.find_ns_obj(sym);
  var ns = new cljs.core.Namespace(ns_obj, sym);
  var step = function cljs$core$ns_interns_STAR__$_step(ret, k) {
    var var_sym = cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, var_sym, new cljs.core.Var(function() {
      return goog.object.get(ns_obj, k);
    }, cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym), cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "ns", "ns", 441598760), ns], null)));
  };
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step, cljs.core.PersistentArrayMap.EMPTY, cljs.core.js_keys(ns_obj));
};
cljs.core.create_ns = function cljs$core$create_ns(var_args) {
  var G__15285 = arguments.length;
  switch(G__15285) {
    case 1:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 = function(sym) {
  return cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym, cljs.core.find_ns_obj(sym));
};
cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 = function(sym, ns_obj) {
  return new cljs.core.Namespace(ns_obj, sym);
};
cljs.core.create_ns.cljs$lang$maxFixedArity = 2;
cljs.core.find_ns = function cljs$core$find_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns, new_ns);
      return new_ns;
    }
  }
};
cljs.core.find_macros_ns = function cljs$core$find_macros_ns(ns) {
  if (cljs.core.NS_CACHE == null) {
    cljs.core.NS_CACHE = cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);
  } else {
  }
  var ns_str = cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);
  var ns__$1 = !goog.string.contains(ns_str, "$macros") ? cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str, "$macros"].join("")) : ns;
  var the_ns = cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE), ns__$1);
  if (!(the_ns == null)) {
    return the_ns;
  } else {
    var ns_obj = cljs.core.find_ns_obj(ns__$1);
    if (ns_obj == null) {
      return null;
    } else {
      var new_ns = cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1, ns_obj);
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE, cljs.core.assoc, ns__$1, new_ns);
      return new_ns;
    }
  }
};
cljs.core.ns_name = function cljs$core$ns_name(ns_obj) {
  return ns_obj.name;
};
cljs.core.uri_QMARK_ = function cljs$core$uri_QMARK_(x) {
  return x instanceof goog.Uri;
};
cljs.core.maybe_enable_print_BANG_ = function cljs$core$maybe_enable_print_BANG_() {
  if (typeof console !== "undefined") {
    return cljs.core.enable_console_print_BANG_();
  } else {
    if (cljs.core._STAR_target_STAR_ === "nashorn" || cljs.core._STAR_target_STAR_ === "graaljs") {
      var system = Java.type("java.lang.System");
      cljs.core._STAR_print_newline_STAR_ = false;
      cljs.core.set_print_fn_BANG_(function() {
        var xs = arguments;
        var s = goog.array.clone(xs).join("");
        return system.out.println(s);
      });
      return cljs.core.set_print_err_fn_BANG_(function() {
        var xs = arguments;
        var s = goog.array.clone(xs).join("");
        return system.error.println(s);
      });
    } else {
      return null;
    }
  }
};
cljs.core.maybe_enable_print_BANG_();
if (typeof cljs !== "undefined" && typeof cljs.core !== "undefined" && typeof cljs.core._STAR_eval_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_eval_STAR_ = function cljs$core$_STAR_eval_STAR_(_) {
    throw new Error("cljs.core/*eval* not bound");
  };
}
cljs.core.eval = function cljs$core$eval(form) {
  return cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_eval_STAR_.cljs$core$IFn$_invoke$arity$1(form) : cljs.core._STAR_eval_STAR_.call(null, form);
};
if (COMPILED) {
  if ("nodejs" === cljs.core._STAR_target_STAR_) {
    goog.global = global;
  } else {
  }
  if ("window" === cljs.core._STAR_global_STAR_) {
    goog.global = window;
  } else {
    if ("self" === cljs.core._STAR_global_STAR_) {
      goog.global = self;
    } else {
      if ("global" === cljs.core._STAR_global_STAR_) {
        goog.global = global;
      } else {
      }
    }
  }
} else {
}
;goog.provide("process.env");
goog.require("cljs.core");
process.env.NODE_ENV = goog.define("process.env.NODE_ENV", "development");
goog.provide("petitparser.input_stream");
goog.require("cljs.core");
petitparser.input_stream.make_stream = function petitparser$input_stream$make_stream(src) {
  return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "src", "src", -1651076051), src, new cljs.core.Keyword(null, "pos", "pos", -864607220), cljs.core.volatile_BANG_.call(null, 0)], null);
};
petitparser.input_stream.position = function petitparser$input_stream$position(p__2584) {
  var map__2585 = p__2584;
  var map__2585__$1 = (!(map__2585 == null) ? map__2585.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2585.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2585) : map__2585;
  var pos = cljs.core.get.call(null, map__2585__$1, new cljs.core.Keyword(null, "pos", "pos", -864607220));
  return cljs.core.deref.call(null, pos);
};
petitparser.input_stream.source = function petitparser$input_stream$source(stream) {
  return (new cljs.core.Keyword(null, "src", "src", -1651076051)).cljs$core$IFn$_invoke$arity$1(stream);
};
petitparser.input_stream.reset_position_BANG_ = function petitparser$input_stream$reset_position_BANG_(stream, pos) {
  cljs.core.vreset_BANG_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(stream), pos);
  return null;
};
petitparser.input_stream.peek = function petitparser$input_stream$peek(p__2587) {
  var map__2588 = p__2587;
  var map__2588__$1 = (!(map__2588 == null) ? map__2588.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2588.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2588) : map__2588;
  var src = cljs.core.get.call(null, map__2588__$1, new cljs.core.Keyword(null, "src", "src", -1651076051));
  var pos = cljs.core.get.call(null, map__2588__$1, new cljs.core.Keyword(null, "pos", "pos", -864607220));
  return cljs.core.nth.call(null, src, cljs.core.deref.call(null, pos), null);
};
petitparser.input_stream.next_BANG_ = function petitparser$input_stream$next_BANG_(stream) {
  var temp__5735__auto__ = petitparser.input_stream.peek.call(null, stream);
  if (cljs.core.truth_(temp__5735__auto__)) {
    var val = temp__5735__auto__;
    cljs.core.vreset_BANG_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(stream), petitparser.input_stream.position.call(null, stream) + 1);
    return val;
  } else {
    return null;
  }
};
petitparser.input_stream.end_QMARK_ = function petitparser$input_stream$end_QMARK_(stream) {
  return petitparser.input_stream.peek.call(null, stream) == null;
};
petitparser.input_stream.take_BANG_ = function petitparser$input_stream$take_BANG_(stream, length) {
  var start = petitparser.input_stream.position.call(null, stream);
  var end = function() {
    var x__4217__auto__ = cljs.core.count.call(null, (new cljs.core.Keyword(null, "src", "src", -1651076051)).cljs$core$IFn$_invoke$arity$1(stream));
    var y__4218__auto__ = length + start;
    return x__4217__auto__ < y__4218__auto__ ? x__4217__auto__ : y__4218__auto__;
  }();
  petitparser.input_stream.reset_position_BANG_.call(null, stream, end);
  return cljs.core.subs.call(null, (new cljs.core.Keyword(null, "src", "src", -1651076051)).cljs$core$IFn$_invoke$arity$1(stream), start, end);
};
goog.provide("petitparser.results");
goog.require("cljs.core");
petitparser.results.ParseResult = function() {
};
var petitparser$results$ParseResult$success_QMARK_$dyn_2592 = function(self) {
  var x__4428__auto__ = self == null ? null : self;
  var m__4429__auto__ = petitparser.results.success_QMARK_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, self);
  } else {
    var m__4426__auto__ = petitparser.results.success_QMARK_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, self);
    } else {
      throw cljs.core.missing_protocol.call(null, "ParseResult.success?", self);
    }
  }
};
petitparser.results.success_QMARK_ = function petitparser$results$success_QMARK_(self) {
  if (!(self == null) && !(self.petitparser$results$ParseResult$success_QMARK_$arity$1 == null)) {
    return self.petitparser$results$ParseResult$success_QMARK_$arity$1(self);
  } else {
    return petitparser$results$ParseResult$success_QMARK_$dyn_2592.call(null, self);
  }
};
var petitparser$results$ParseResult$failure_QMARK_$dyn_2593 = function(self) {
  var x__4428__auto__ = self == null ? null : self;
  var m__4429__auto__ = petitparser.results.failure_QMARK_[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, self);
  } else {
    var m__4426__auto__ = petitparser.results.failure_QMARK_["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, self);
    } else {
      throw cljs.core.missing_protocol.call(null, "ParseResult.failure?", self);
    }
  }
};
petitparser.results.failure_QMARK_ = function petitparser$results$failure_QMARK_(self) {
  if (!(self == null) && !(self.petitparser$results$ParseResult$failure_QMARK_$arity$1 == null)) {
    return self.petitparser$results$ParseResult$failure_QMARK_$arity$1(self);
  } else {
    return petitparser$results$ParseResult$failure_QMARK_$dyn_2593.call(null, self);
  }
};
var petitparser$results$ParseResult$actual_result$dyn_2594 = function(self) {
  var x__4428__auto__ = self == null ? null : self;
  var m__4429__auto__ = petitparser.results.actual_result[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, self);
  } else {
    var m__4426__auto__ = petitparser.results.actual_result["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, self);
    } else {
      throw cljs.core.missing_protocol.call(null, "ParseResult.actual-result", self);
    }
  }
};
petitparser.results.actual_result = function petitparser$results$actual_result(self) {
  if (!(self == null) && !(self.petitparser$results$ParseResult$actual_result$arity$1 == null)) {
    return self.petitparser$results$ParseResult$actual_result$arity$1(self);
  } else {
    return petitparser$results$ParseResult$actual_result$dyn_2594.call(null, self);
  }
};
petitparser.results.ParseSuccess = function(result) {
  this.result = result;
};
petitparser.results.ParseSuccess.prototype.petitparser$results$ParseResult$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.results.ParseSuccess.prototype.petitparser$results$ParseResult$success_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return true;
};
petitparser.results.ParseSuccess.prototype.petitparser$results$ParseResult$failure_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return false;
};
petitparser.results.ParseSuccess.prototype.petitparser$results$ParseResult$actual_result$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.result;
};
petitparser.results.ParseSuccess.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "result", "result", -1239343558, null)], null);
};
petitparser.results.ParseSuccess.cljs$lang$type = true;
petitparser.results.ParseSuccess.cljs$lang$ctorStr = "petitparser.results/ParseSuccess";
petitparser.results.ParseSuccess.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write.call(null, writer__4370__auto__, "petitparser.results/ParseSuccess");
};
petitparser.results.__GT_ParseSuccess = function petitparser$results$__GT_ParseSuccess(result) {
  return new petitparser.results.ParseSuccess(result);
};
petitparser.results.ParseFailure = function(position, message) {
  this.position = position;
  this.message = message;
};
petitparser.results.ParseFailure.prototype.petitparser$results$ParseResult$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.results.ParseFailure.prototype.petitparser$results$ParseResult$success_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return false;
};
petitparser.results.ParseFailure.prototype.petitparser$results$ParseResult$failure_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return true;
};
petitparser.results.ParseFailure.prototype.petitparser$results$ParseResult$actual_result$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  throw cljs.core.ex_info.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.message), " at ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.position)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "position", "position", -2011731912), self__.position], null));
};
petitparser.results.ParseFailure.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "position", "position", -371200385, null), new cljs.core.Symbol(null, "message", "message", 1234475525, null)], null);
};
petitparser.results.ParseFailure.cljs$lang$type = true;
petitparser.results.ParseFailure.cljs$lang$ctorStr = "petitparser.results/ParseFailure";
petitparser.results.ParseFailure.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
  return cljs.core._write.call(null, writer__4370__auto__, "petitparser.results/ParseFailure");
};
petitparser.results.__GT_ParseFailure = function petitparser$results$__GT_ParseFailure(position, message) {
  return new petitparser.results.ParseFailure(position, message);
};
petitparser.results.success = function petitparser$results$success(result) {
  return new petitparser.results.ParseSuccess(result);
};
petitparser.results.failure = function petitparser$results$failure(position, message) {
  return new petitparser.results.ParseFailure(position, message);
};
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
clojure.string.seq_reverse = function clojure$string$seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function clojure$string$reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace_all = function clojure$string$replace_all(s, re, replacement) {
  var r = new RegExp(re.source, function() {
    var G__15302 = "g";
    var G__15302__$1 = cljs.core.truth_(re.ignoreCase) ? [G__15302, "i"].join("") : G__15302;
    var G__15302__$2 = cljs.core.truth_(re.multiline) ? [G__15302__$1, "m"].join("") : G__15302__$1;
    if (cljs.core.truth_(re.unicode)) {
      return [G__15302__$2, "u"].join("");
    } else {
      return G__15302__$2;
    }
  }());
  return s.replace(r, replacement);
};
clojure.string.replace_with = function clojure$string$replace_with(f) {
  return function() {
    var G__15303__delegate = function(args) {
      var matches = cljs.core.drop_last.call(null, 2, args);
      if (cljs.core._EQ_.call(null, cljs.core.count.call(null, matches), 1)) {
        return f.call(null, cljs.core.first.call(null, matches));
      } else {
        return f.call(null, cljs.core.vec.call(null, matches));
      }
    };
    var G__15303 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__15304__i = 0, G__15304__a = new Array(arguments.length - 0);
        while (G__15304__i < G__15304__a.length) {
          G__15304__a[G__15304__i] = arguments[G__15304__i + 0];
          ++G__15304__i;
        }
        args = new cljs.core.IndexedSeq(G__15304__a, 0, null);
      }
      return G__15303__delegate.call(this, args);
    };
    G__15303.cljs$lang$maxFixedArity = 0;
    G__15303.cljs$lang$applyTo = function(arglist__15305) {
      var args = cljs.core.seq(arglist__15305);
      return G__15303__delegate(args);
    };
    G__15303.cljs$core$IFn$_invoke$arity$variadic = G__15303__delegate;
    return G__15303;
  }();
};
clojure.string.replace = function clojure$string$replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (match instanceof RegExp) {
      if (typeof replacement === "string") {
        return clojure.string.replace_all.call(null, s, match, replacement);
      } else {
        return clojure.string.replace_all.call(null, s, match, clojure.string.replace_with.call(null, replacement));
      }
    } else {
      throw ["Invalid match arg: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join("");
    }
  }
};
clojure.string.replace_first = function clojure$string$replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function clojure$string$join(var_args) {
  var G__15307 = arguments.length;
  switch(G__15307) {
    case 1:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return clojure.string.join.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__15309 = sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var G__15310 = cljs.core.next.call(null, coll__$1);
      sb = G__15309;
      coll__$1 = G__15310;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$core$IFn$_invoke$arity$2 = function(separator, coll) {
  var sb = new goog.string.StringBuffer;
  var coll__$1 = cljs.core.seq.call(null, coll);
  while (true) {
    if (!(coll__$1 == null)) {
      sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, coll__$1)));
      var coll__$2 = cljs.core.next.call(null, coll__$1);
      if (coll__$2 == null) {
      } else {
        sb.append(separator);
      }
      var G__15311 = sb;
      var G__15312 = coll__$2;
      sb = G__15311;
      coll__$1 = G__15312;
      continue;
    } else {
      return sb.toString();
    }
    break;
  }
};
clojure.string.join.cljs$lang$maxFixedArity = 2;
clojure.string.upper_case = function clojure$string$upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function clojure$string$lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function clojure$string$capitalize(s) {
  return goog.string.capitalize(s);
};
clojure.string.pop_last_while_empty = function clojure$string$pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if ("" === cljs.core.peek.call(null, v__$1)) {
      var G__15313 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__15313;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function clojure$string$discard_trailing_if_needed(limit, v) {
  if (0 === limit && 1 < cljs.core.count.call(null, v)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function clojure$string$split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__15314 = cljs.core._EQ__EQ_;
    var expr__15315 = limit;
    if (cljs.core.truth_(pred__15314.call(null, 1, expr__15315))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__15314.call(null, 2, expr__15315))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function clojure$string$split(var_args) {
  var G__15318 = arguments.length;
  switch(G__15318) {
    case 2:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.split.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.split.cljs$core$IFn$_invoke$arity$2 = function(s, re) {
  return clojure.string.split.call(null, s, re, 0);
};
clojure.string.split.cljs$core$IFn$_invoke$arity$3 = function(s, re, limit) {
  return clojure.string.discard_trailing_if_needed.call(null, limit, "/(?:)/" === cljs.core.str.cljs$core$IFn$_invoke$arity$1(re) ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)) : function() {
    var s__$1 = s;
    var limit__$1 = limit;
    var parts = cljs.core.PersistentVector.EMPTY;
    while (true) {
      if (1 === limit__$1) {
        return cljs.core.conj.call(null, parts, s__$1);
      } else {
        var m = cljs.core.re_find.call(null, re, s__$1);
        if (!(m == null)) {
          var index = s__$1.indexOf(m);
          var G__15320 = s__$1.substring(index + cljs.core.count.call(null, m));
          var G__15321 = limit__$1 - 1;
          var G__15322 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
          s__$1 = G__15320;
          limit__$1 = G__15321;
          parts = G__15322;
          continue;
        } else {
          return cljs.core.conj.call(null, parts, s__$1);
        }
      }
      break;
    }
  }());
};
clojure.string.split.cljs$lang$maxFixedArity = 3;
clojure.string.split_lines = function clojure$string$split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function clojure$string$trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function clojure$string$triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function clojure$string$trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function clojure$string$trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if ("\n" === ch || "\r" === ch) {
        var G__15323 = index - 1;
        index = G__15323;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function clojure$string$blank_QMARK_(s) {
  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(s));
};
clojure.string.escape = function clojure$string$escape(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (length === index) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var replacement = cljs.core.get.call(null, cmap, ch);
      if (!(replacement == null)) {
        buffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));
      } else {
        buffer.append(ch);
      }
      var G__15324 = index + 1;
      index = G__15324;
      continue;
    }
    break;
  }
};
clojure.string.index_of = function clojure$string$index_of(var_args) {
  var G__15326 = arguments.length;
  switch(G__15326) {
    case 2:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.indexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.indexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.index_of.cljs$lang$maxFixedArity = 3;
clojure.string.last_index_of = function clojure$string$last_index_of(var_args) {
  var G__15329 = arguments.length;
  switch(G__15329) {
    case 2:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 = function(s, value) {
  var result = s.lastIndexOf(value);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 = function(s, value, from_index) {
  var result = s.lastIndexOf(value, from_index);
  if (result < 0) {
    return null;
  } else {
    return result;
  }
};
clojure.string.last_index_of.cljs$lang$maxFixedArity = 3;
clojure.string.starts_with_QMARK_ = function clojure$string$starts_with_QMARK_(s, substr) {
  return goog.string.startsWith(s, substr);
};
clojure.string.ends_with_QMARK_ = function clojure$string$ends_with_QMARK_(s, substr) {
  return goog.string.endsWith(s, substr);
};
clojure.string.includes_QMARK_ = function clojure$string$includes_QMARK_(s, substr) {
  return goog.string.contains(s, substr);
};
goog.provide("cljs.pprint");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("goog.string");
goog.require("goog.string.StringBuffer");
cljs.pprint.print = function cljs$pprint$print(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___15428 = arguments.length;
  var i__4737__auto___15429 = 0;
  while (true) {
    if (i__4737__auto___15429 < len__4736__auto___15428) {
      args__4742__auto__.push(arguments[i__4737__auto___15429]);
      var G__15430 = i__4737__auto___15429 + 1;
      i__4737__auto___15429 = G__15430;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.print_str, more));
};
cljs.pprint.print.cljs$lang$maxFixedArity = 0;
cljs.pprint.print.cljs$lang$applyTo = function(seq15427) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq15427));
};
cljs.pprint.println = function cljs$pprint$println(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___15432 = arguments.length;
  var i__4737__auto___15433 = 0;
  while (true) {
    if (i__4737__auto___15433 < len__4736__auto___15432) {
      args__4742__auto__.push(arguments[i__4737__auto___15433]);
      var G__15434 = i__4737__auto___15433 + 1;
      i__4737__auto___15433 = G__15434;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.print, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.println.cljs$lang$maxFixedArity = 0;
cljs.pprint.println.cljs$lang$applyTo = function(seq15431) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq15431));
};
cljs.pprint.print_char = function cljs$pprint$print_char(c) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, function() {
    var pred__15435 = cljs.core._EQ_;
    var expr__15436 = c;
    if (cljs.core.truth_(pred__15435.call(null, "\b", expr__15436))) {
      return "\\backspace";
    } else {
      if (cljs.core.truth_(pred__15435.call(null, " ", expr__15436))) {
        return "\\space";
      } else {
        if (cljs.core.truth_(pred__15435.call(null, "\t", expr__15436))) {
          return "\\tab";
        } else {
          if (cljs.core.truth_(pred__15435.call(null, "\n", expr__15436))) {
            return "\\newline";
          } else {
            if (cljs.core.truth_(pred__15435.call(null, "\f", expr__15436))) {
              return "\\formfeed";
            } else {
              if (cljs.core.truth_(pred__15435.call(null, "\r", expr__15436))) {
                return "\\return";
              } else {
                if (cljs.core.truth_(pred__15435.call(null, '"', expr__15436))) {
                  return '\\"';
                } else {
                  if (cljs.core.truth_(pred__15435.call(null, "\\", expr__15436))) {
                    return "\\\\";
                  } else {
                    return ["\\", cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join("");
                  }
                }
              }
            }
          }
        }
      }
    }
  }());
};
cljs.pprint.pr = function cljs$pprint$pr(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___15439 = arguments.length;
  var i__4737__auto___15440 = 0;
  while (true) {
    if (i__4737__auto___15440 < len__4736__auto___15439) {
      args__4742__auto__.push(arguments[i__4737__auto___15440]);
      var G__15441 = i__4737__auto___15440 + 1;
      i__4737__auto___15440 = G__15441;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.apply.call(null, cljs.core.pr_str, more));
};
cljs.pprint.pr.cljs$lang$maxFixedArity = 0;
cljs.pprint.pr.cljs$lang$applyTo = function(seq15438) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq15438));
};
cljs.pprint.prn = function cljs$pprint$prn(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___15443 = arguments.length;
  var i__4737__auto___15444 = 0;
  while (true) {
    if (i__4737__auto___15444 < len__4736__auto___15443) {
      args__4742__auto__.push(arguments[i__4737__auto___15444]);
      var G__15445 = i__4737__auto___15444 + 1;
      i__4737__auto___15444 = G__15445;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic = function(more) {
  cljs.core.apply.call(null, cljs.pprint.pr, more);
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
};
cljs.pprint.prn.cljs$lang$maxFixedArity = 0;
cljs.pprint.prn.cljs$lang$applyTo = function(seq15442) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq15442));
};
cljs.pprint.float_QMARK_ = function cljs$pprint$float_QMARK_(n) {
  return typeof n === "number" && !isNaN(n) && !(n === Infinity) && !(parseFloat(n) === parseInt(n, 10));
};
cljs.pprint.char_code = function cljs$pprint$char_code(c) {
  if (typeof c === "number") {
    return c;
  } else {
    if (typeof c === "string" && c.length === 1) {
      return c.charCodeAt(0);
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.pprint.map_passing_context = function cljs$pprint$map_passing_context(func, initial_context, lis) {
  var context = initial_context;
  var lis__$1 = lis;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, lis__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var this$ = cljs.core.first.call(null, lis__$1);
      var remainder = cljs.core.next.call(null, lis__$1);
      var vec__15449 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, context], null));
      var result = cljs.core.nth.call(null, vec__15449, 0, null);
      var new_context = cljs.core.nth.call(null, vec__15449, 1, null);
      var G__15452 = new_context;
      var G__15453 = remainder;
      var G__15454 = cljs.core.conj.call(null, acc, result);
      context = G__15452;
      lis__$1 = G__15453;
      acc = G__15454;
      continue;
    }
    break;
  }
};
cljs.pprint.consume = function cljs$pprint$consume(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__15458 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__15458, 0, null);
    var new_context = cljs.core.nth.call(null, vec__15458, 1, null);
    if (cljs.core.not.call(null, result)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, new_context], null);
    } else {
      var G__15461 = new_context;
      var G__15462 = cljs.core.conj.call(null, acc, result);
      context = G__15461;
      acc = G__15462;
      continue;
    }
    break;
  }
};
cljs.pprint.consume_while = function cljs$pprint$consume_while(func, initial_context) {
  var context = initial_context;
  var acc = cljs.core.PersistentVector.EMPTY;
  while (true) {
    var vec__15466 = cljs.core.apply.call(null, func, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));
    var result = cljs.core.nth.call(null, vec__15466, 0, null);
    var continue$ = cljs.core.nth.call(null, vec__15466, 1, null);
    var new_context = cljs.core.nth.call(null, vec__15466, 2, null);
    if (cljs.core.not.call(null, continue$)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, context], null);
    } else {
      var G__15469 = new_context;
      var G__15470 = cljs.core.conj.call(null, acc, result);
      context = G__15469;
      acc = G__15470;
      continue;
    }
    break;
  }
};
cljs.pprint.unzip_map = function cljs$pprint$unzip_map(m) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4529__auto__ = function cljs$pprint$unzip_map_$_iter__15471(s__15472) {
      return new cljs.core.LazySeq(null, function() {
        var s__15472__$1 = s__15472;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__15472__$1);
          if (temp__5735__auto__) {
            var s__15472__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15472__$2)) {
              var c__4527__auto__ = cljs.core.chunk_first.call(null, s__15472__$2);
              var size__4528__auto__ = cljs.core.count.call(null, c__4527__auto__);
              var b__15474 = cljs.core.chunk_buffer.call(null, size__4528__auto__);
              if (function() {
                var i__15473 = 0;
                while (true) {
                  if (i__15473 < size__4528__auto__) {
                    var vec__15475 = cljs.core._nth.call(null, c__4527__auto__, i__15473);
                    var k = cljs.core.nth.call(null, vec__15475, 0, null);
                    var vec__15478 = cljs.core.nth.call(null, vec__15475, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__15478, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__15478, 1, null);
                    cljs.core.chunk_append.call(null, b__15474, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null));
                    var G__15503 = i__15473 + 1;
                    i__15473 = G__15503;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15474), cljs$pprint$unzip_map_$_iter__15471.call(null, cljs.core.chunk_rest.call(null, s__15472__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15474), null);
              }
            } else {
              var vec__15481 = cljs.core.first.call(null, s__15472__$2);
              var k = cljs.core.nth.call(null, vec__15481, 0, null);
              var vec__15484 = cljs.core.nth.call(null, vec__15481, 1, null);
              var v1 = cljs.core.nth.call(null, vec__15484, 0, null);
              var v2 = cljs.core.nth.call(null, vec__15484, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v1], null), cljs$pprint$unzip_map_$_iter__15471.call(null, cljs.core.rest.call(null, s__15472__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4529__auto__.call(null, m);
  }()), cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4529__auto__ = function cljs$pprint$unzip_map_$_iter__15487(s__15488) {
      return new cljs.core.LazySeq(null, function() {
        var s__15488__$1 = s__15488;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__15488__$1);
          if (temp__5735__auto__) {
            var s__15488__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15488__$2)) {
              var c__4527__auto__ = cljs.core.chunk_first.call(null, s__15488__$2);
              var size__4528__auto__ = cljs.core.count.call(null, c__4527__auto__);
              var b__15490 = cljs.core.chunk_buffer.call(null, size__4528__auto__);
              if (function() {
                var i__15489 = 0;
                while (true) {
                  if (i__15489 < size__4528__auto__) {
                    var vec__15491 = cljs.core._nth.call(null, c__4527__auto__, i__15489);
                    var k = cljs.core.nth.call(null, vec__15491, 0, null);
                    var vec__15494 = cljs.core.nth.call(null, vec__15491, 1, null);
                    var v1 = cljs.core.nth.call(null, vec__15494, 0, null);
                    var v2 = cljs.core.nth.call(null, vec__15494, 1, null);
                    cljs.core.chunk_append.call(null, b__15490, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null));
                    var G__15504 = i__15489 + 1;
                    i__15489 = G__15504;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15490), cljs$pprint$unzip_map_$_iter__15487.call(null, cljs.core.chunk_rest.call(null, s__15488__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15490), null);
              }
            } else {
              var vec__15497 = cljs.core.first.call(null, s__15488__$2);
              var k = cljs.core.nth.call(null, vec__15497, 0, null);
              var vec__15500 = cljs.core.nth.call(null, vec__15497, 1, null);
              var v1 = cljs.core.nth.call(null, vec__15500, 0, null);
              var v2 = cljs.core.nth.call(null, vec__15500, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v2], null), cljs$pprint$unzip_map_$_iter__15487.call(null, cljs.core.rest.call(null, s__15488__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4529__auto__.call(null, m);
  }())], null);
};
cljs.pprint.tuple_map = function cljs$pprint$tuple_map(m, v1) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, function() {
    var iter__4529__auto__ = function cljs$pprint$tuple_map_$_iter__15505(s__15506) {
      return new cljs.core.LazySeq(null, function() {
        var s__15506__$1 = s__15506;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__15506__$1);
          if (temp__5735__auto__) {
            var s__15506__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__15506__$2)) {
              var c__4527__auto__ = cljs.core.chunk_first.call(null, s__15506__$2);
              var size__4528__auto__ = cljs.core.count.call(null, c__4527__auto__);
              var b__15508 = cljs.core.chunk_buffer.call(null, size__4528__auto__);
              if (function() {
                var i__15507 = 0;
                while (true) {
                  if (i__15507 < size__4528__auto__) {
                    var vec__15509 = cljs.core._nth.call(null, c__4527__auto__, i__15507);
                    var k = cljs.core.nth.call(null, vec__15509, 0, null);
                    var v = cljs.core.nth.call(null, vec__15509, 1, null);
                    cljs.core.chunk_append.call(null, b__15508, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null));
                    var G__15515 = i__15507 + 1;
                    i__15507 = G__15515;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15508), cljs$pprint$tuple_map_$_iter__15505.call(null, cljs.core.chunk_rest.call(null, s__15506__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__15508), null);
              }
            } else {
              var vec__15512 = cljs.core.first.call(null, s__15506__$2);
              var k = cljs.core.nth.call(null, vec__15512, 0, null);
              var v = cljs.core.nth.call(null, vec__15512, 1, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, v1], null)], null), cljs$pprint$tuple_map_$_iter__15505.call(null, cljs.core.rest.call(null, s__15506__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4529__auto__.call(null, m);
  }());
};
cljs.pprint.rtrim = function cljs$pprint$rtrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1), c)) {
    var n = len - 1;
    while (true) {
      if (n < 0) {
        return "";
      } else {
        if (!cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
          return cljs.core.subs.call(null, s, 0, n + 1);
        } else {
          var G__15516 = n - 1;
          n = G__15516;
          continue;
        }
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.ltrim = function cljs$pprint$ltrim(s, c) {
  var len = cljs.core.count.call(null, s);
  if (len > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, 0), c)) {
    var n = 0;
    while (true) {
      if (cljs.core._EQ_.call(null, n, len) || !cljs.core._EQ_.call(null, cljs.core.nth.call(null, s, n), c)) {
        return cljs.core.subs.call(null, s, n);
      } else {
        var G__15517 = n + 1;
        n = G__15517;
        continue;
      }
      break;
    }
  } else {
    return s;
  }
};
cljs.pprint.prefix_count = function cljs$pprint$prefix_count(aseq, val) {
  var test = cljs.core.coll_QMARK_.call(null, val) ? cljs.core.set.call(null, val) : cljs.core.PersistentHashSet.createAsIfByAssoc([val]);
  var pos = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, pos, cljs.core.count.call(null, aseq)) || cljs.core.not.call(null, test.call(null, cljs.core.nth.call(null, aseq, pos)))) {
      return pos;
    } else {
      var G__15518 = pos + 1;
      pos = G__15518;
      continue;
    }
    break;
  }
};
cljs.pprint.IPrettyFlush = function() {
};
var cljs$pprint$IPrettyFlush$_ppflush$dyn_15519 = function(pp) {
  var x__4428__auto__ = pp == null ? null : pp;
  var m__4429__auto__ = cljs.pprint._ppflush[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, pp);
  } else {
    var m__4426__auto__ = cljs.pprint._ppflush["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, pp);
    } else {
      throw cljs.core.missing_protocol.call(null, "IPrettyFlush.-ppflush", pp);
    }
  }
};
cljs.pprint._ppflush = function cljs$pprint$_ppflush(pp) {
  if (!(pp == null) && !(pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 == null)) {
    return pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);
  } else {
    return cljs$pprint$IPrettyFlush$_ppflush$dyn_15519.call(null, pp);
  }
};
cljs.pprint._STAR_default_page_width_STAR_ = 72;
cljs.pprint.get_field = function cljs$pprint$get_field(this$, sym) {
  return sym.call(null, cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint.set_field = function cljs$pprint$set_field(this$, sym, new_val) {
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, sym, new_val);
};
cljs.pprint.get_column = function cljs$pprint$get_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599));
};
cljs.pprint.get_line = function cljs$pprint$get_line(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235));
};
cljs.pprint.get_max_column = function cljs$pprint$get_max_column(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548));
};
cljs.pprint.set_max_column = function cljs$pprint$set_max_column(this$, new_max) {
  cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "max", "max", 61366548), new_max);
  return null;
};
cljs.pprint.get_writer = function cljs$pprint$get_writer(this$) {
  return cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322));
};
cljs.pprint.c_write_char = function cljs$pprint$c_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, c, "\n")) {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0);
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "line", "line", 212345235)) + 1);
  } else {
    cljs.pprint.set_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + 1);
  }
  return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$, new cljs.core.Keyword(null, "base", "base", 185279322)), c);
};
cljs.pprint.column_writer = function cljs$pprint$column_writer(var_args) {
  var G__15522 = arguments.length;
  switch(G__15522) {
    case 1:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 = function(writer) {
  return cljs.pprint.column_writer.call(null, writer, cljs.pprint._STAR_default_page_width_STAR_);
};
cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 = function(writer, max_columns) {
  var fields = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "max", "max", 61366548), max_columns, new cljs.core.Keyword(null, "cur", "cur", 1153190599), 0, new cljs.core.Keyword(null, "line", "line", 212345235), 0, new cljs.core.Keyword(null, "base", "base", 185279322), writer], null));
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint15523 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint15523 = function(writer, max_columns, fields, meta15524) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.fields = fields;
      this.meta15524 = meta15524;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint15523.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15525, meta15524__$1) {
      var self__ = this;
      var _15525__$1 = this;
      return new cljs.pprint.t_cljs$pprint15523(self__.writer, self__.max_columns, self__.fields, meta15524__$1);
    };
    cljs.pprint.t_cljs$pprint15523.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15525) {
      var self__ = this;
      var _15525__$1 = this;
      return self__.meta15524;
    };
    cljs.pprint.t_cljs$pprint15523.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.fields;
    };
    cljs.pprint.t_cljs$pprint15523.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint15523.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__15526 = cljs.core._EQ_;
      var expr__15527 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__15526.call(null, String, expr__15527))) {
        var s = x;
        var nl = s.lastIndexOf("\n");
        if (nl < 0) {
          cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599)) + cljs.core.count.call(null, s));
        } else {
          cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "cur", "cur", 1153190599), cljs.core.count.call(null, s) - nl - 1);
          cljs.pprint.set_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235), cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "line", "line", 212345235)) + cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__15520_SHARP_) {
            return cljs.core._EQ_.call(null, p1__15520_SHARP_, "\n");
          }, s)));
        }
        return cljs.core._write.call(null, cljs.pprint.get_field.call(null, this$__$1, new cljs.core.Keyword(null, "base", "base", 185279322)), s);
      } else {
        if (cljs.core.truth_(pred__15526.call(null, Number, expr__15527))) {
          return cljs.pprint.c_write_char.call(null, this$__$1, x);
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__15527)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint15523.getBasis = function() {
      return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta15524", "meta15524", -673007126, null)], null);
    };
    cljs.pprint.t_cljs$pprint15523.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint15523.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint15523";
    cljs.pprint.t_cljs$pprint15523.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.pprint/t_cljs$pprint15523");
    };
    cljs.pprint.__GT_t_cljs$pprint15523 = function cljs$pprint$__GT_t_cljs$pprint15523(writer__$1, max_columns__$1, fields__$1, meta15524) {
      return new cljs.pprint.t_cljs$pprint15523(writer__$1, max_columns__$1, fields__$1, meta15524);
    };
  }
  return new cljs.pprint.t_cljs$pprint15523(writer, max_columns, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.column_writer.cljs$lang$maxFixedArity = 2;
cljs.pprint.logical_block = function(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, __meta, __extmap, __hash) {
  this.parent = parent;
  this.section = section;
  this.start_col = start_col;
  this.indent = indent;
  this.done_nl = done_nl;
  this.intra_block_nl = intra_block_nl;
  this.prefix = prefix;
  this.per_line_prefix = per_line_prefix;
  this.suffix = suffix;
  this.logical_block_callback = logical_block_callback;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k15531, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__15535 = k15531;
  var G__15535__$1 = G__15535 instanceof cljs.core.Keyword ? G__15535.fqn : null;
  switch(G__15535__$1) {
    case "parent":
      return self__.parent;
      break;
    case "section":
      return self__.section;
      break;
    case "start-col":
      return self__.start_col;
      break;
    case "indent":
      return self__.indent;
      break;
    case "done-nl":
      return self__.done_nl;
      break;
    case "intra-block-nl":
      return self__.intra_block_nl;
      break;
    case "prefix":
      return self__.prefix;
      break;
    case "per-line-prefix":
      return self__.per_line_prefix;
      break;
    case "suffix":
      return self__.suffix;
      break;
    case "logical-block-callback":
      return self__.logical_block_callback;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15531, else__4383__auto__);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__15536) {
    var vec__15537 = p__15536;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__15537, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__15537, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#cljs.pprint.logical-block{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "section", "section", -300141526), self__.section], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "indent", "indent", -148200125), self__.indent], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), self__.per_line_prefix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback], null)], null), 
  self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__15530) {
  var self__ = this;
  var G__15530__$1 = this;
  return new cljs.core.RecordIter(0, G__15530__$1, 10, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 
  1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 10 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 1977012399 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this15532, other15533) {
  var self__ = this;
  var this15532__$1 = this;
  return !(other15533 == null) && this15532__$1.constructor === other15533.constructor && cljs.core._EQ_.call(null, this15532__$1.parent, other15533.parent) && cljs.core._EQ_.call(null, this15532__$1.section, other15533.section) && cljs.core._EQ_.call(null, this15532__$1.start_col, other15533.start_col) && cljs.core._EQ_.call(null, this15532__$1.indent, other15533.indent) && cljs.core._EQ_.call(null, this15532__$1.done_nl, other15533.done_nl) && cljs.core._EQ_.call(null, this15532__$1.intra_block_nl, 
  other15533.intra_block_nl) && cljs.core._EQ_.call(null, this15532__$1.prefix, other15533.prefix) && cljs.core._EQ_.call(null, this15532__$1.per_line_prefix, other15533.per_line_prefix) && cljs.core._EQ_.call(null, this15532__$1.suffix, other15533.suffix) && cljs.core._EQ_.call(null, this15532__$1.logical_block_callback, other15533.logical_block_callback) && cljs.core._EQ_.call(null, this15532__$1.__extmap, other15533.__extmap);
};
cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null, "suffix", "suffix", 367373057), null, new cljs.core.Keyword(null, "indent", "indent", -148200125), null, new cljs.core.Keyword(null, "parent", "parent", -878878779), null, new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), null, new cljs.core.Keyword(null, "start-col", 
  "start-col", 668080143), null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__15530) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__15540 = cljs.core.keyword_identical_QMARK_;
  var expr__15541 = k__4388__auto__;
  if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "parent", "parent", -878878779), expr__15541))) {
    return new cljs.pprint.logical_block(G__15530, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "section", "section", -300141526), expr__15541))) {
      return new cljs.pprint.logical_block(self__.parent, G__15530, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "start-col", "start-col", 668080143), expr__15541))) {
        return new cljs.pprint.logical_block(self__.parent, self__.section, G__15530, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "indent", "indent", -148200125), expr__15541))) {
          return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, G__15530, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), expr__15541))) {
            return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, G__15530, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), expr__15541))) {
              return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, G__15530, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
            } else {
              if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "prefix", "prefix", -265908465), expr__15541))) {
                return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, G__15530, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
              } else {
                if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), expr__15541))) {
                  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, G__15530, self__.suffix, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                } else {
                  if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "suffix", "suffix", 367373057), expr__15541))) {
                    return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, G__15530, self__.logical_block_callback, self__.__meta, self__.__extmap, null);
                  } else {
                    if (cljs.core.truth_(pred__15540.call(null, new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), expr__15541))) {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, G__15530, self__.__meta, self__.__extmap, null);
                    } else {
                      return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__15530), null);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parent", "parent", -878878779), self__.parent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "section", "section", -300141526), self__.section, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-col", "start-col", 668080143), self__.start_col, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "indent", "indent", -148200125), self__.indent, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), self__.done_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), self__.intra_block_nl, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "prefix", "prefix", -265908465), self__.prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), 
  self__.per_line_prefix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "suffix", "suffix", 367373057), self__.suffix, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194), self__.logical_block_callback, null)], null), self__.__extmap));
};
cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__15530) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new cljs.pprint.logical_block(self__.parent, self__.section, self__.start_col, self__.indent, self__.done_nl, self__.intra_block_nl, self__.prefix, self__.per_line_prefix, self__.suffix, self__.logical_block_callback, G__15530, self__.__extmap, self__.__hash);
};
cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
cljs.pprint.logical_block.getBasis = function() {
  return new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parent", "parent", 761652748, null), new cljs.core.Symbol(null, "section", "section", 1340390001, null), new cljs.core.Symbol(null, "start-col", "start-col", -1986355626, null), new cljs.core.Symbol(null, "indent", "indent", 1492331402, null), new cljs.core.Symbol(null, "done-nl", "done-nl", 1259507187, null), new cljs.core.Symbol(null, "intra-block-nl", "intra-block-nl", -845608894, 
  null), new cljs.core.Symbol(null, "prefix", "prefix", 1374623062, null), new cljs.core.Symbol(null, "per-line-prefix", "per-line-prefix", -1807493956, null), new cljs.core.Symbol(null, "suffix", "suffix", 2007904584, null), new cljs.core.Symbol(null, "logical-block-callback", "logical-block-callback", -1041744575, null)], null);
};
cljs.pprint.logical_block.cljs$lang$type = true;
cljs.pprint.logical_block.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "cljs.pprint/logical-block", null, 1, null);
};
cljs.pprint.logical_block.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "cljs.pprint/logical-block");
};
cljs.pprint.__GT_logical_block = function cljs$pprint$__GT_logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback) {
  return new cljs.pprint.logical_block(parent, section, start_col, indent, done_nl, intra_block_nl, prefix, per_line_prefix, suffix, logical_block_callback, null, null, null);
};
cljs.pprint.map__GT_logical_block = function cljs$pprint$map__GT_logical_block(G__15534) {
  var extmap__4419__auto__ = function() {
    var G__15543 = cljs.core.dissoc.call(null, G__15534, new cljs.core.Keyword(null, "parent", "parent", -878878779), new cljs.core.Keyword(null, "section", "section", -300141526), new cljs.core.Keyword(null, "start-col", "start-col", 668080143), new cljs.core.Keyword(null, "indent", "indent", -148200125), new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340), new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875), new cljs.core.Keyword(null, "prefix", "prefix", -265908465), 
    new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813), new cljs.core.Keyword(null, "suffix", "suffix", 367373057), new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194));
    if (cljs.core.record_QMARK_.call(null, G__15534)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__15543);
    } else {
      return G__15543;
    }
  }();
  return new cljs.pprint.logical_block((new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(G__15534), (new cljs.core.Keyword(null, "section", "section", -300141526)).cljs$core$IFn$_invoke$arity$1(G__15534), (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(G__15534), (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(G__15534), (new cljs.core.Keyword(null, "done-nl", "done-nl", 
  -381024340)).cljs$core$IFn$_invoke$arity$1(G__15534), (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(G__15534), (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(G__15534), (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(G__15534), (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(G__15534), (new cljs.core.Keyword(null, 
  "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(G__15534), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
cljs.pprint.ancestor_QMARK_ = function cljs$pprint$ancestor_QMARK_(parent, child) {
  var child__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child);
  while (true) {
    if (child__$1 == null) {
      return false;
    } else {
      if (parent === child__$1) {
        return true;
      } else {
        var G__15545 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(child__$1);
        child__$1 = G__15545;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.buffer_length = function cljs$pprint$buffer_length(l) {
  var l__$1 = cljs.core.seq.call(null, l);
  if (l__$1) {
    return (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(cljs.core.last.call(null, l__$1)) - (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, l__$1));
  } else {
    return 0;
  }
};
cljs.pprint.buffer_blob = function(type_tag, data, trailing_white_space, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.data = data;
  this.trailing_white_space = trailing_white_space;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k15547, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__15551 = k15547;
  var G__15551__$1 = G__15551 instanceof cljs.core.Keyword ? G__15551.fqn : null;
  switch(G__15551__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "data":
      return self__.data;
      break;
    case "trailing-white-space":
      return self__.trailing_white_space;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15547, else__4383__auto__);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__15552) {
    var vec__15553 = p__15552;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__15553, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__15553, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#cljs.pprint.buffer-blob{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "data", "data", -232669377), self__.data], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__15546) {
  var self__ = this;
  var G__15546__$1 = this;
  return new cljs.core.RecordIter(0, G__15546__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? 
  cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 1809113693 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this15548, other15549) {
  var self__ = this;
  var this15548__$1 = this;
  return !(other15549 == null) && this15548__$1.constructor === other15549.constructor && cljs.core._EQ_.call(null, this15548__$1.type_tag, other15549.type_tag) && cljs.core._EQ_.call(null, this15548__$1.data, other15549.data) && cljs.core._EQ_.call(null, this15548__$1.trailing_white_space, other15549.trailing_white_space) && cljs.core._EQ_.call(null, this15548__$1.start_pos, other15549.start_pos) && cljs.core._EQ_.call(null, this15548__$1.end_pos, other15549.end_pos) && cljs.core._EQ_.call(null, 
  this15548__$1.__extmap, other15549.__extmap);
};
cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null, new cljs.core.Keyword(null, "data", "data", -232669377), null], null), 
  null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__15546) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__15556 = cljs.core.keyword_identical_QMARK_;
  var expr__15557 = k__4388__auto__;
  if (cljs.core.truth_(pred__15556.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__15557))) {
    return new cljs.pprint.buffer_blob(G__15546, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15556.call(null, new cljs.core.Keyword(null, "data", "data", -232669377), expr__15557))) {
      return new cljs.pprint.buffer_blob(self__.type_tag, G__15546, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15556.call(null, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), expr__15557))) {
        return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, G__15546, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__15556.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__15557))) {
          return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, G__15546, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__15556.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__15557))) {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, G__15546, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__15546), null);
          }
        }
      }
    }
  }
};
cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "data", "data", -232669377), self__.data, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), self__.trailing_white_space, null), 
  new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__15546) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new cljs.pprint.buffer_blob(self__.type_tag, self__.data, self__.trailing_white_space, self__.start_pos, self__.end_pos, G__15546, self__.__extmap, self__.__hash);
};
cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
cljs.pprint.buffer_blob.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "data", "data", 1407862150, null), new cljs.core.Symbol(null, "trailing-white-space", "trailing-white-space", -1158428773, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.buffer_blob.cljs$lang$type = true;
cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "cljs.pprint/buffer-blob", null, 1, null);
};
cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "cljs.pprint/buffer-blob");
};
cljs.pprint.__GT_buffer_blob = function cljs$pprint$__GT_buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(type_tag, data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_buffer_blob = function cljs$pprint$map__GT_buffer_blob(G__15550) {
  var extmap__4419__auto__ = function() {
    var G__15559 = cljs.core.dissoc.call(null, G__15550, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "data", "data", -232669377), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__15550)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__15559);
    } else {
      return G__15559;
    }
  }();
  return new cljs.pprint.buffer_blob((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__15550), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(G__15550), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(G__15550), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__15550), (new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__15550), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
cljs.pprint.make_buffer_blob = function cljs$pprint$make_buffer_blob(data, trailing_white_space, start_pos, end_pos) {
  return new cljs.pprint.buffer_blob(new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), data, trailing_white_space, start_pos, end_pos, null, null, null);
};
cljs.pprint.buffer_blob_QMARK_ = function cljs$pprint$buffer_blob_QMARK_(x__15358__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__15358__auto__), new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173));
};
cljs.pprint.nl_t = function(type_tag, type, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.type = type;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k15562, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__15566 = k15562;
  var G__15566__$1 = G__15566 instanceof cljs.core.Keyword ? G__15566.fqn : null;
  switch(G__15566__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "type":
      return self__.type;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15562, else__4383__auto__);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__15567) {
    var vec__15568 = p__15567;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__15568, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__15568, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#cljs.pprint.nl-t{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__15561) {
  var self__ = this;
  var G__15561__$1 = this;
  return new cljs.core.RecordIter(0, G__15561__$1, 5, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? 
  cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -1640656800 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this15563, other15564) {
  var self__ = this;
  var this15563__$1 = this;
  return !(other15564 == null) && this15563__$1.constructor === other15564.constructor && cljs.core._EQ_.call(null, this15563__$1.type_tag, other15564.type_tag) && cljs.core._EQ_.call(null, this15563__$1.type, other15564.type) && cljs.core._EQ_.call(null, this15563__$1.logical_block, other15564.logical_block) && cljs.core._EQ_.call(null, this15563__$1.start_pos, other15564.start_pos) && cljs.core._EQ_.call(null, this15563__$1.end_pos, other15564.end_pos) && cljs.core._EQ_.call(null, this15563__$1.__extmap, 
  other15564.__extmap);
};
cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "type", "type", 1174270348), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__15561) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__15571 = cljs.core.keyword_identical_QMARK_;
  var expr__15572 = k__4388__auto__;
  if (cljs.core.truth_(pred__15571.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__15572))) {
    return new cljs.pprint.nl_t(G__15561, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15571.call(null, new cljs.core.Keyword(null, "type", "type", 1174270348), expr__15572))) {
      return new cljs.pprint.nl_t(self__.type_tag, G__15561, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15571.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__15572))) {
        return new cljs.pprint.nl_t(self__.type_tag, self__.type, G__15561, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__15571.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__15572))) {
          return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, G__15561, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__15571.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__15572))) {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, G__15561, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__15561), null);
          }
        }
      }
    }
  }
};
cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "type", "type", 1174270348), self__.type, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__15561) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new cljs.pprint.nl_t(self__.type_tag, self__.type, self__.logical_block, self__.start_pos, self__.end_pos, G__15561, self__.__extmap, self__.__hash);
};
cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
cljs.pprint.nl_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "type", "type", -1480165421, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.nl_t.cljs$lang$type = true;
cljs.pprint.nl_t.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "cljs.pprint/nl-t", null, 1, null);
};
cljs.pprint.nl_t.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "cljs.pprint/nl-t");
};
cljs.pprint.__GT_nl_t = function cljs$pprint$__GT_nl_t(type_tag, type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(type_tag, type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_nl_t = function cljs$pprint$map__GT_nl_t(G__15565) {
  var extmap__4419__auto__ = function() {
    var G__15574 = cljs.core.dissoc.call(null, G__15565, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__15565)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__15574);
    } else {
      return G__15574;
    }
  }();
  return new cljs.pprint.nl_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__15565), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(G__15565), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__15565), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__15565), (new cljs.core.Keyword(null, "end-pos", 
  "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__15565), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
cljs.pprint.make_nl_t = function cljs$pprint$make_nl_t(type, logical_block, start_pos, end_pos) {
  return new cljs.pprint.nl_t(new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), type, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.nl_t_QMARK_ = function cljs$pprint$nl_t_QMARK_(x__15358__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__15358__auto__), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114));
};
cljs.pprint.start_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k15577, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__15581 = k15577;
  var G__15581__$1 = G__15581 instanceof cljs.core.Keyword ? G__15581.fqn : null;
  switch(G__15581__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15577, else__4383__auto__);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__15582) {
    var vec__15583 = p__15582;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__15583, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__15583, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#cljs.pprint.start-block-t{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__15576) {
  var self__ = this;
  var G__15576__$1 = this;
  return new cljs.core.RecordIter(0, G__15576__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : 
  cljs.core.nil_iter.call(null));
};
cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -414877272 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this15578, other15579) {
  var self__ = this;
  var this15578__$1 = this;
  return !(other15579 == null) && this15578__$1.constructor === other15579.constructor && cljs.core._EQ_.call(null, this15578__$1.type_tag, other15579.type_tag) && cljs.core._EQ_.call(null, this15578__$1.logical_block, other15579.logical_block) && cljs.core._EQ_.call(null, this15578__$1.start_pos, other15579.start_pos) && cljs.core._EQ_.call(null, this15578__$1.end_pos, other15579.end_pos) && cljs.core._EQ_.call(null, this15578__$1.__extmap, other15579.__extmap);
};
cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__15576) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__15586 = cljs.core.keyword_identical_QMARK_;
  var expr__15587 = k__4388__auto__;
  if (cljs.core.truth_(pred__15586.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__15587))) {
    return new cljs.pprint.start_block_t(G__15576, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15586.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__15587))) {
      return new cljs.pprint.start_block_t(self__.type_tag, G__15576, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15586.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__15587))) {
        return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, G__15576, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__15586.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__15587))) {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__15576, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__15576), null);
        }
      }
    }
  }
};
cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__15576) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new cljs.pprint.start_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__15576, self__.__extmap, self__.__hash);
};
cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
cljs.pprint.start_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.start_block_t.cljs$lang$type = true;
cljs.pprint.start_block_t.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "cljs.pprint/start-block-t", null, 1, null);
};
cljs.pprint.start_block_t.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "cljs.pprint/start-block-t");
};
cljs.pprint.__GT_start_block_t = function cljs$pprint$__GT_start_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_start_block_t = function cljs$pprint$map__GT_start_block_t(G__15580) {
  var extmap__4419__auto__ = function() {
    var G__15589 = cljs.core.dissoc.call(null, G__15580, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__15580)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__15589);
    } else {
      return G__15589;
    }
  }();
  return new cljs.pprint.start_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__15580), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__15580), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__15580), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__15580), null, cljs.core.not_empty.call(null, 
  extmap__4419__auto__), null);
};
cljs.pprint.make_start_block_t = function cljs$pprint$make_start_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.start_block_t(new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.start_block_t_QMARK_ = function cljs$pprint$start_block_t_QMARK_(x__15358__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__15358__auto__), new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594));
};
cljs.pprint.end_block_t = function(type_tag, logical_block, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k15592, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__15596 = k15592;
  var G__15596__$1 = G__15596 instanceof cljs.core.Keyword ? G__15596.fqn : null;
  switch(G__15596__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15592, else__4383__auto__);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__15597) {
    var vec__15598 = p__15597;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__15598, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__15598, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#cljs.pprint.end-block-t{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__15591) {
  var self__ = this;
  var G__15591__$1 = this;
  return new cljs.core.RecordIter(0, G__15591__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : 
  cljs.core.nil_iter.call(null));
};
cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 1365867980 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this15593, other15594) {
  var self__ = this;
  var this15593__$1 = this;
  return !(other15594 == null) && this15593__$1.constructor === other15594.constructor && cljs.core._EQ_.call(null, this15593__$1.type_tag, other15594.type_tag) && cljs.core._EQ_.call(null, this15593__$1.logical_block, other15594.logical_block) && cljs.core._EQ_.call(null, this15593__$1.start_pos, other15594.start_pos) && cljs.core._EQ_.call(null, this15593__$1.end_pos, other15594.end_pos) && cljs.core._EQ_.call(null, this15593__$1.__extmap, other15594.__extmap);
};
cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__15591) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__15601 = cljs.core.keyword_identical_QMARK_;
  var expr__15602 = k__4388__auto__;
  if (cljs.core.truth_(pred__15601.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__15602))) {
    return new cljs.pprint.end_block_t(G__15591, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15601.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__15602))) {
      return new cljs.pprint.end_block_t(self__.type_tag, G__15591, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15601.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__15602))) {
        return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, G__15591, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__15601.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__15602))) {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, G__15591, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__15591), null);
        }
      }
    }
  }
};
cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__15591) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new cljs.pprint.end_block_t(self__.type_tag, self__.logical_block, self__.start_pos, self__.end_pos, G__15591, self__.__extmap, self__.__hash);
};
cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
cljs.pprint.end_block_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", -3352399, null)], null);
};
cljs.pprint.end_block_t.cljs$lang$type = true;
cljs.pprint.end_block_t.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "cljs.pprint/end-block-t", null, 1, null);
};
cljs.pprint.end_block_t.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "cljs.pprint/end-block-t");
};
cljs.pprint.__GT_end_block_t = function cljs$pprint$__GT_end_block_t(type_tag, logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(type_tag, logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_end_block_t = function cljs$pprint$map__GT_end_block_t(G__15595) {
  var extmap__4419__auto__ = function() {
    var G__15604 = cljs.core.dissoc.call(null, G__15595, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__15595)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__15604);
    } else {
      return G__15604;
    }
  }();
  return new cljs.pprint.end_block_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__15595), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__15595), (new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__15595), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__15595), null, cljs.core.not_empty.call(null, 
  extmap__4419__auto__), null);
};
cljs.pprint.make_end_block_t = function cljs$pprint$make_end_block_t(logical_block, start_pos, end_pos) {
  return new cljs.pprint.end_block_t(new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), logical_block, start_pos, end_pos, null, null, null);
};
cljs.pprint.end_block_t_QMARK_ = function cljs$pprint$end_block_t_QMARK_(x__15358__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__15358__auto__), new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735));
};
cljs.pprint.indent_t = function(type_tag, logical_block, relative_to, offset, start_pos, end_pos, __meta, __extmap, __hash) {
  this.type_tag = type_tag;
  this.logical_block = logical_block;
  this.relative_to = relative_to;
  this.offset = offset;
  this.start_pos = start_pos;
  this.end_pos = end_pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k15607, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__15611 = k15607;
  var G__15611__$1 = G__15611 instanceof cljs.core.Keyword ? G__15611.fqn : null;
  switch(G__15611__$1) {
    case "type-tag":
      return self__.type_tag;
      break;
    case "logical-block":
      return self__.logical_block;
      break;
    case "relative-to":
      return self__.relative_to;
      break;
    case "offset":
      return self__.offset;
      break;
    case "start-pos":
      return self__.start_pos;
      break;
    case "end-pos":
      return self__.end_pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15607, else__4383__auto__);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__15612) {
    var vec__15613 = p__15612;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__15613, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__15613, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#cljs.pprint.indent-t{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos], null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__15606) {
  var self__ = this;
  var G__15606__$1 = this;
  return new cljs.core.RecordIter(0, G__15606__$1, 6, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, 
  "end-pos", "end-pos", -1643883926)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 6 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -1602780238 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this15608, other15609) {
  var self__ = this;
  var this15608__$1 = this;
  return !(other15609 == null) && this15608__$1.constructor === other15609.constructor && cljs.core._EQ_.call(null, this15608__$1.type_tag, other15609.type_tag) && cljs.core._EQ_.call(null, this15608__$1.logical_block, other15609.logical_block) && cljs.core._EQ_.call(null, this15608__$1.relative_to, other15609.relative_to) && cljs.core._EQ_.call(null, this15608__$1.offset, other15609.offset) && cljs.core._EQ_.call(null, this15608__$1.start_pos, other15609.start_pos) && cljs.core._EQ_.call(null, this15608__$1.end_pos, 
  other15609.end_pos) && cljs.core._EQ_.call(null, this15608__$1.__extmap, other15609.__extmap);
};
cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), null, new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__15606) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__15616 = cljs.core.keyword_identical_QMARK_;
  var expr__15617 = k__4388__auto__;
  if (cljs.core.truth_(pred__15616.call(null, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), expr__15617))) {
    return new cljs.pprint.indent_t(G__15606, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15616.call(null, new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), expr__15617))) {
      return new cljs.pprint.indent_t(self__.type_tag, G__15606, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15616.call(null, new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), expr__15617))) {
        return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, G__15606, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__15616.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__15617))) {
          return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, G__15606, self__.start_pos, self__.end_pos, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__15616.call(null, new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), expr__15617))) {
            return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, G__15606, self__.end_pos, self__.__meta, self__.__extmap, null);
          } else {
            if (cljs.core.truth_(pred__15616.call(null, new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), expr__15617))) {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, G__15606, self__.__meta, self__.__extmap, null);
            } else {
              return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__15606), null);
            }
          }
        }
      }
    }
  }
};
cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), self__.type_tag, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), self__.logical_block, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), self__.relative_to, null), 
  new cljs.core.MapEntry(new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), self__.start_pos, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926), self__.end_pos, null)], null), self__.__extmap));
};
cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__15606) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new cljs.pprint.indent_t(self__.type_tag, self__.logical_block, self__.relative_to, self__.offset, self__.start_pos, self__.end_pos, G__15606, self__.__extmap, self__.__hash);
};
cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
cljs.pprint.indent_t.getBasis = function() {
  return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "type-tag", "type-tag", -233331740, null), new cljs.core.Symbol(null, "logical-block", "logical-block", 1059508963, null), new cljs.core.Symbol(null, "relative-to", "relative-to", 1170431476, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null), new cljs.core.Symbol(null, "start-pos", "start-pos", -1985646683, null), new cljs.core.Symbol(null, "end-pos", "end-pos", 
  -3352399, null)], null);
};
cljs.pprint.indent_t.cljs$lang$type = true;
cljs.pprint.indent_t.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "cljs.pprint/indent-t", null, 1, null);
};
cljs.pprint.indent_t.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "cljs.pprint/indent-t");
};
cljs.pprint.__GT_indent_t = function cljs$pprint$__GT_indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(type_tag, logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.map__GT_indent_t = function cljs$pprint$map__GT_indent_t(G__15610) {
  var extmap__4419__auto__ = function() {
    var G__15619 = cljs.core.dissoc.call(null, G__15610, new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267), new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564), new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051), new cljs.core.Keyword(null, "offset", "offset", 296498311), new cljs.core.Keyword(null, "start-pos", "start-pos", 668789086), new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926));
    if (cljs.core.record_QMARK_.call(null, G__15610)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__15619);
    } else {
      return G__15619;
    }
  }();
  return new cljs.pprint.indent_t((new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(G__15610), (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(G__15610), (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(G__15610), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__15610), (new cljs.core.Keyword(null, 
  "start-pos", "start-pos", 668789086)).cljs$core$IFn$_invoke$arity$1(G__15610), (new cljs.core.Keyword(null, "end-pos", "end-pos", -1643883926)).cljs$core$IFn$_invoke$arity$1(G__15610), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
cljs.pprint.make_indent_t = function cljs$pprint$make_indent_t(logical_block, relative_to, offset, start_pos, end_pos) {
  return new cljs.pprint.indent_t(new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), logical_block, relative_to, offset, start_pos, end_pos, null, null, null);
};
cljs.pprint.indent_t_QMARK_ = function cljs$pprint$indent_t_QMARK_(x__15358__auto__) {
  return cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(x__15358__auto__), new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969));
};
cljs.pprint.pp_newline = function cljs$pprint$pp_newline() {
  return "\n";
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.write_token !== "undefined") {
} else {
  cljs.pprint.write_token = function() {
    var method_table__4619__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4620__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4621__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4622__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4623__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "write-token"), function(p1__15622_SHARP_, p2__15621_SHARP_) {
      return (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(p2__15621_SHARP_);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4623__auto__, method_table__4619__auto__, prefer_table__4620__auto__, method_cache__4621__auto__, cached_hierarchy__4622__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "start-block-t", "start-block-t", -373430594), function(this$, token) {
  var temp__5735__auto___15623 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5735__auto___15623)) {
    var cb_15624 = temp__5735__auto___15623;
    cb_15624.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
  } else {
  }
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  var temp__5735__auto___15625 = (new cljs.core.Keyword(null, "prefix", "prefix", -265908465)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(temp__5735__auto___15625)) {
    var prefix_15626 = temp__5735__auto___15625;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix_15626);
  } else {
  }
  var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb), col);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), col);
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "end-block-t", "end-block-t", 1544648735), function(this$, token) {
  var temp__5735__auto___15627 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5735__auto___15627)) {
    var cb_15628 = temp__5735__auto___15627;
    cb_15628.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
  } else {
  }
  var temp__5735__auto__ = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token));
  if (cljs.core.truth_(temp__5735__auto__)) {
    var suffix = temp__5735__auto__;
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
  } else {
    return null;
  }
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "indent-t", "indent-t", 528318969), function(this$, token) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token);
  return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(token) + function() {
    var pred__15629 = cljs.core._EQ_;
    var expr__15630 = (new cljs.core.Keyword(null, "relative-to", "relative-to", -470100051)).cljs$core$IFn$_invoke$arity$1(token);
    if (cljs.core.truth_(pred__15629.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__15630))) {
      return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
    } else {
      if (cljs.core.truth_(pred__15629.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__15630))) {
        return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
      } else {
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__15630)].join(""));
      }
    }
  }());
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "buffer-blob", "buffer-blob", -1830112173), function(this$, token) {
  return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), (new cljs.core.Keyword(null, "data", "data", -232669377)).cljs$core$IFn$_invoke$arity$1(token));
});
cljs.core._add_method.call(null, cljs.pprint.write_token, new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114), function(this$, token) {
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336));
    if (or__4126__auto__) {
      return or__4126__auto__;
    } else {
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "fill", "fill", 883462889))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(token)));
      } else {
        return false;
      }
    }
  }())) {
    cljs.pprint.emit_nl.call(null, this$, token);
  } else {
    var temp__5733__auto___15632 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__5733__auto___15632)) {
      var tws_15633 = temp__5733__auto___15632;
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_15633);
    } else {
    }
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
});
cljs.pprint.write_tokens = function cljs$pprint$write_tokens(this$, tokens, force_trailing_whitespace) {
  var seq__15634 = cljs.core.seq.call(null, tokens);
  var chunk__15635 = null;
  var count__15636 = 0;
  var i__15637 = 0;
  while (true) {
    if (i__15637 < count__15636) {
      var token = cljs.core._nth.call(null, chunk__15635, i__15637);
      if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
        var temp__5733__auto___15638 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
        if (cljs.core.truth_(temp__5733__auto___15638)) {
          var tws_15639 = temp__5733__auto___15638;
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_15639);
        } else {
        }
      } else {
      }
      cljs.pprint.write_token.call(null, this$, token);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
      var tws_15640 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      if (cljs.core.truth_(function() {
        var and__4115__auto__ = force_trailing_whitespace;
        if (cljs.core.truth_(and__4115__auto__)) {
          return tws_15640;
        } else {
          return and__4115__auto__;
        }
      }())) {
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_15640);
        cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
      } else {
      }
      var G__15641 = seq__15634;
      var G__15642 = chunk__15635;
      var G__15643 = count__15636;
      var G__15644 = i__15637 + 1;
      seq__15634 = G__15641;
      chunk__15635 = G__15642;
      count__15636 = G__15643;
      i__15637 = G__15644;
      continue;
    } else {
      var temp__5735__auto__ = cljs.core.seq.call(null, seq__15634);
      if (temp__5735__auto__) {
        var seq__15634__$1 = temp__5735__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__15634__$1)) {
          var c__4556__auto__ = cljs.core.chunk_first.call(null, seq__15634__$1);
          var G__15645 = cljs.core.chunk_rest.call(null, seq__15634__$1);
          var G__15646 = c__4556__auto__;
          var G__15647 = cljs.core.count.call(null, c__4556__auto__);
          var G__15648 = 0;
          seq__15634 = G__15645;
          chunk__15635 = G__15646;
          count__15636 = G__15647;
          i__15637 = G__15648;
          continue;
        } else {
          var token = cljs.core.first.call(null, seq__15634__$1);
          if (!cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "type-tag", "type-tag", -1873863267)).cljs$core$IFn$_invoke$arity$1(token), new cljs.core.Keyword(null, "nl-t", "nl-t", -1608382114))) {
            var temp__5733__auto___15649 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
            if (cljs.core.truth_(temp__5733__auto___15649)) {
              var tws_15650 = temp__5733__auto___15649;
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_15650);
            } else {
            }
          } else {
          }
          cljs.pprint.write_token.call(null, this$, token);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(token));
          var tws_15651 = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
          if (cljs.core.truth_(function() {
            var and__4115__auto__ = force_trailing_whitespace;
            if (cljs.core.truth_(and__4115__auto__)) {
              return tws_15651;
            } else {
              return and__4115__auto__;
            }
          }())) {
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws_15651);
            cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
          } else {
          }
          var G__15652 = cljs.core.next.call(null, seq__15634__$1);
          var G__15653 = null;
          var G__15654 = 0;
          var G__15655 = 0;
          seq__15634 = G__15652;
          chunk__15635 = G__15653;
          count__15636 = G__15654;
          i__15637 = G__15655;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.pprint.tokens_fit_QMARK_ = function cljs$pprint$tokens_fit_QMARK_(this$, tokens) {
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  return maxcol == null || cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))) + cljs.pprint.buffer_length.call(null, tokens) < maxcol;
};
cljs.pprint.linear_nl_QMARK_ = function cljs$pprint$linear_nl_QMARK_(this$, lb, section) {
  var or__4126__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return !cljs.pprint.tokens_fit_QMARK_.call(null, this$, section);
  }
};
cljs.pprint.miser_nl_QMARK_ = function cljs$pprint$miser_nl_QMARK_(this$, lb, section) {
  var miser_width = cljs.pprint.get_miser_width.call(null, this$);
  var maxcol = cljs.pprint.get_max_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
  var and__4115__auto__ = miser_width;
  if (cljs.core.truth_(and__4115__auto__)) {
    var and__4115__auto____$1 = maxcol;
    if (cljs.core.truth_(and__4115__auto____$1)) {
      if (cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb)) >= maxcol - miser_width) {
        return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
      } else {
        return false;
      }
    } else {
      return and__4115__auto____$1;
    }
  } else {
    return and__4115__auto__;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.emit_nl_QMARK_ !== "undefined") {
} else {
  cljs.pprint.emit_nl_QMARK_ = function() {
    var method_table__4619__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4620__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4621__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4622__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4623__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "emit-nl?"), function(t, _, ___$1, ___$2) {
      return (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(t);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4623__auto__, method_table__4619__auto__, prefer_table__4620__auto__, method_cache__4621__auto__, cached_hierarchy__4622__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "linear", "linear", 872268697), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.linear_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "miser", "miser", -556060186), function(newl, this$, section, _) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "fill", "fill", 883462889), function(newl, this$, section, subsection) {
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(newl);
  var or__4126__auto__ = cljs.core.deref.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb));
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    var or__4126__auto____$1 = !cljs.pprint.tokens_fit_QMARK_.call(null, this$, subsection);
    if (or__4126__auto____$1) {
      return or__4126__auto____$1;
    } else {
      return cljs.pprint.miser_nl_QMARK_.call(null, this$, lb, section);
    }
  }
});
cljs.core._add_method.call(null, cljs.pprint.emit_nl_QMARK_, new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), function(_, ___$1, ___$2, ___$3) {
  return true;
});
cljs.pprint.get_section = function cljs$pprint$get_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__15656_SHARP_) {
    return !(cljs.pprint.nl_t_QMARK_.call(null, p1__15656_SHARP_) && cljs.pprint.ancestor_QMARK_.call(null, (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__15656_SHARP_), lb));
  }, cljs.core.next.call(null, buffer)));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, section) + 1, buffer))], null);
};
cljs.pprint.get_sub_section = function cljs$pprint$get_sub_section(buffer) {
  var nl = cljs.core.first.call(null, buffer);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var section = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__15657_SHARP_) {
    var nl_lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(p1__15657_SHARP_);
    return !(cljs.pprint.nl_t_QMARK_.call(null, p1__15657_SHARP_) && (cljs.core._EQ_.call(null, nl_lb, lb) || cljs.pprint.ancestor_QMARK_.call(null, nl_lb, lb)));
  }, cljs.core.next.call(null, buffer)));
  return section;
};
cljs.pprint.update_nl_state = function cljs$pprint$update_nl_state(lb) {
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb), true);
  cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb), true);
  var lb__$1 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb);
  while (true) {
    if (cljs.core.truth_(lb__$1)) {
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "done-nl", "done-nl", -381024340)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "intra-block-nl", "intra-block-nl", 1808826875)).cljs$core$IFn$_invoke$arity$1(lb__$1), true);
      var G__15658 = (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb__$1);
      lb__$1 = G__15658;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.emit_nl = function cljs$pprint$emit_nl(this$, nl) {
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  var lb = (new cljs.core.Keyword(null, "logical-block", "logical-block", -581022564)).cljs$core$IFn$_invoke$arity$1(nl);
  var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core.truth_(prefix)) {
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
  } else {
  }
  var istr_15659 = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, cljs.core.deref.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count.call(null, prefix), " "));
  cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), istr_15659);
  return cljs.pprint.update_nl_state.call(null, lb);
};
cljs.pprint.split_at_newline = function cljs$pprint$split_at_newline(tokens) {
  var pre = cljs.core.seq.call(null, cljs.core.take_while.call(null, function(p1__15660_SHARP_) {
    return !cljs.pprint.nl_t_QMARK_.call(null, p1__15660_SHARP_);
  }, tokens));
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, pre), tokens))], null);
};
cljs.pprint.write_token_string = function cljs$pprint$write_token_string(this$, tokens) {
  var vec__15661 = cljs.pprint.split_at_newline.call(null, tokens);
  var a = cljs.core.nth.call(null, vec__15661, 0, null);
  var b = cljs.core.nth.call(null, vec__15661, 1, null);
  if (cljs.core.truth_(a)) {
    cljs.pprint.write_tokens.call(null, this$, a, false);
  } else {
  }
  if (cljs.core.truth_(b)) {
    var vec__15664 = cljs.pprint.get_section.call(null, b);
    var section = cljs.core.nth.call(null, vec__15664, 0, null);
    var remainder = cljs.core.nth.call(null, vec__15664, 1, null);
    var newl = cljs.core.first.call(null, b);
    var do_nl = cljs.pprint.emit_nl_QMARK_.call(null, newl, this$, section, cljs.pprint.get_sub_section.call(null, b));
    var result = cljs.core.truth_(do_nl) ? function() {
      cljs.pprint.emit_nl.call(null, this$, newl);
      return cljs.core.next.call(null, b);
    }() : b;
    var long_section = !cljs.pprint.tokens_fit_QMARK_.call(null, this$, result);
    var result__$1 = long_section ? function() {
      var rem2 = cljs.pprint.write_token_string.call(null, this$, section);
      if (cljs.core._EQ_.call(null, rem2, section)) {
        cljs.pprint.write_tokens.call(null, this$, section, false);
        return remainder;
      } else {
        return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.concat.call(null, rem2, remainder));
      }
    }() : result;
    return result__$1;
  } else {
    return null;
  }
};
cljs.pprint.write_line = function cljs$pprint$write_line(this$) {
  var buffer = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  while (true) {
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, buffer));
    if (!cljs.pprint.tokens_fit_QMARK_.call(null, this$, buffer)) {
      var new_buffer = cljs.pprint.write_token_string.call(null, this$, buffer);
      if (!(buffer === new_buffer)) {
        var G__15667 = new_buffer;
        buffer = G__15667;
        continue;
      } else {
        return null;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.pprint.add_to_buffer = function cljs$pprint$add_to_buffer(this$, token) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.conj.call(null, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), token));
  if (!cljs.pprint.tokens_fit_QMARK_.call(null, this$, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
    return cljs.pprint.write_line.call(null, this$);
  } else {
    return null;
  }
};
cljs.pprint.write_buffered_output = function cljs$pprint$write_buffered_output(this$) {
  cljs.pprint.write_line.call(null, this$);
  var temp__5733__auto__ = (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5733__auto__)) {
    var buf = temp__5733__auto__;
    cljs.pprint.write_tokens.call(null, this$, buf, true);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
  } else {
    return null;
  }
};
cljs.pprint.write_white_space = function cljs$pprint$write_white_space(this$) {
  var temp__5735__auto__ = (new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core.truth_(temp__5735__auto__)) {
    var tws = temp__5735__auto__;
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), tws);
    return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), null);
  } else {
    return null;
  }
};
cljs.pprint.write_initial_lines = function cljs$pprint$write_initial_lines(this$, s) {
  var lines = clojure.string.split.call(null, s, "\n", -1);
  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, lines), 1)) {
    return s;
  } else {
    var prefix = (new cljs.core.Keyword(null, "per-line-prefix", "per-line-prefix", 846941813)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)))));
    var l = cljs.core.first.call(null, lines);
    if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))))) {
      var oldpos_15672 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos_15673 = oldpos_15672 + cljs.core.count.call(null, l);
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_15673);
      cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, l, null, oldpos_15672, newpos_15673));
      cljs.pprint.write_buffered_output.call(null, this$);
    } else {
      cljs.pprint.write_white_space.call(null, this$);
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l);
    }
    cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), "\n");
    var seq__15668_15674 = cljs.core.seq.call(null, cljs.core.next.call(null, cljs.core.butlast.call(null, lines)));
    var chunk__15669_15675 = null;
    var count__15670_15676 = 0;
    var i__15671_15677 = 0;
    while (true) {
      if (i__15671_15677 < count__15670_15676) {
        var l_15678__$1 = cljs.core._nth.call(null, chunk__15669_15675, i__15671_15677);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_15678__$1);
        cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
        if (cljs.core.truth_(prefix)) {
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
        } else {
        }
        var G__15679 = seq__15668_15674;
        var G__15680 = chunk__15669_15675;
        var G__15681 = count__15670_15676;
        var G__15682 = i__15671_15677 + 1;
        seq__15668_15674 = G__15679;
        chunk__15669_15675 = G__15680;
        count__15670_15676 = G__15681;
        i__15671_15677 = G__15682;
        continue;
      } else {
        var temp__5735__auto___15683 = cljs.core.seq.call(null, seq__15668_15674);
        if (temp__5735__auto___15683) {
          var seq__15668_15684__$1 = temp__5735__auto___15683;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__15668_15684__$1)) {
            var c__4556__auto___15685 = cljs.core.chunk_first.call(null, seq__15668_15684__$1);
            var G__15686 = cljs.core.chunk_rest.call(null, seq__15668_15684__$1);
            var G__15687 = c__4556__auto___15685;
            var G__15688 = cljs.core.count.call(null, c__4556__auto___15685);
            var G__15689 = 0;
            seq__15668_15674 = G__15686;
            chunk__15669_15675 = G__15687;
            count__15670_15676 = G__15688;
            i__15671_15677 = G__15689;
            continue;
          } else {
            var l_15690__$1 = cljs.core.first.call(null, seq__15668_15684__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), l_15690__$1);
            cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), cljs.pprint.pp_newline.call(null));
            if (cljs.core.truth_(prefix)) {
              cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
            } else {
            }
            var G__15691 = cljs.core.next.call(null, seq__15668_15684__$1);
            var G__15692 = null;
            var G__15693 = 0;
            var G__15694 = 0;
            seq__15668_15674 = G__15691;
            chunk__15669_15675 = G__15692;
            count__15670_15676 = G__15693;
            i__15671_15677 = G__15694;
            continue;
          }
        } else {
        }
      }
      break;
    }
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "buffering", "buffering", -876713613), new cljs.core.Keyword(null, "writing", "writing", -1486865108));
    return cljs.core.last.call(null, lines);
  }
};
cljs.pprint.p_write_char = function cljs$pprint$p_write_char(this$, c) {
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), c);
  } else {
    if (cljs.core._EQ_.call(null, c, "\n")) {
      return cljs.pprint.write_initial_lines.call(null, this$, "\n");
    } else {
      var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
      var newpos = oldpos + 1;
      cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
      return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_buffer_blob.call(null, cljs.core.char$.call(null, c), null, oldpos, newpos));
    }
  }
};
cljs.pprint.pretty_writer = function cljs$pprint$pretty_writer(writer, max_columns, miser_width) {
  var lb = new cljs.pprint.logical_block(null, null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), null, null, null, null, null, null, null);
  var fields = cljs.core.atom.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437), new cljs.core.Keyword(null, "buffer-block", "buffer-block", -10937307), new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267), new cljs.core.Keyword(null, "sections", "sections", -886710106), new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, 
  "pos", "pos", -864607220), new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.Keyword(null, "buffer-level", "buffer-level", 928864731), new cljs.core.Keyword(null, "buffer", "buffer", 617295198)], [lb, miser_width, lb, true, null, new cljs.core.Keyword(null, "writing", "writing", -1486865108), 0, null, cljs.pprint.column_writer.call(null, writer, max_columns), 1, cljs.core.PersistentVector.EMPTY]));
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint15695 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint15695 = function(writer, max_columns, miser_width, lb, fields, meta15696) {
      this.writer = writer;
      this.max_columns = max_columns;
      this.miser_width = miser_width;
      this.lb = lb;
      this.fields = fields;
      this.meta15696 = meta15696;
      this.cljs$lang$protocol_mask$partition0$ = 1074167808;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint15695.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15697, meta15696__$1) {
      var self__ = this;
      var _15697__$1 = this;
      return new cljs.pprint.t_cljs$pprint15695(self__.writer, self__.max_columns, self__.miser_width, self__.lb, self__.fields, meta15696__$1);
    };
    cljs.pprint.t_cljs$pprint15695.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15697) {
      var self__ = this;
      var _15697__$1 = this;
      return self__.meta15696;
    };
    cljs.pprint.t_cljs$pprint15695.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.fields;
    };
    cljs.pprint.t_cljs$pprint15695.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__15698 = cljs.core._EQ_;
      var expr__15699 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__15698.call(null, String, expr__15699))) {
        var s0 = cljs.pprint.write_initial_lines.call(null, this$__$1, x);
        var s = clojure.string.replace_first.call(null, s0, /\s+$/, "");
        var white_space = cljs.core.subs.call(null, s0, s.length);
        var mode = (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
        if (cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
          cljs.pprint.write_white_space.call(null, this$__$1);
          cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), s);
          return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "trailing-white-space", "trailing-white-space", 1496006996), white_space);
        } else {
          var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1)));
          var newpos = oldpos + cljs.core.count.call(null, s0);
          cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
          return cljs.pprint.add_to_buffer.call(null, this$__$1, cljs.pprint.make_buffer_blob.call(null, s, white_space, oldpos, newpos));
        }
      } else {
        if (cljs.core.truth_(pred__15698.call(null, Number, expr__15699))) {
          return cljs.pprint.p_write_char.call(null, this$__$1, x);
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__15699)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint15695.prototype.cljs$core$IWriter$_flush$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      cljs.pprint._ppflush.call(null, this$__$1);
      return cljs.core._flush.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))));
    };
    cljs.pprint.t_cljs$pprint15695.prototype.cljs$pprint$IPrettyFlush$ = cljs.core.PROTOCOL_SENTINEL;
    cljs.pprint.t_cljs$pprint15695.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 = function(this$) {
      var self__ = this;
      var this$__$1 = this;
      if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), new cljs.core.Keyword(null, "buffering", "buffering", -876713613))) {
        cljs.pprint.write_tokens.call(null, this$__$1, (new cljs.core.Keyword(null, "buffer", "buffer", 617295198)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$__$1))), true);
        return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$__$1), cljs.core.assoc, new cljs.core.Keyword(null, "buffer", "buffer", 617295198), cljs.core.PersistentVector.EMPTY);
      } else {
        return cljs.pprint.write_white_space.call(null, this$__$1);
      }
    };
    cljs.pprint.t_cljs$pprint15695.getBasis = function() {
      return new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "max-columns", "max-columns", -912112507, null), new cljs.core.Symbol(null, "miser-width", "miser-width", 330482090, null), new cljs.core.Symbol(null, "lb", "lb", 950310490, null), new cljs.core.Symbol(null, "fields", "fields", -291534703, null), new cljs.core.Symbol(null, "meta15696", "meta15696", 726493518, null)], 
      null);
    };
    cljs.pprint.t_cljs$pprint15695.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint15695.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint15695";
    cljs.pprint.t_cljs$pprint15695.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.pprint/t_cljs$pprint15695");
    };
    cljs.pprint.__GT_t_cljs$pprint15695 = function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint15695(writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta15696) {
      return new cljs.pprint.t_cljs$pprint15695(writer__$1, max_columns__$1, miser_width__$1, lb__$1, fields__$1, meta15696);
    };
  }
  return new cljs.pprint.t_cljs$pprint15695(writer, max_columns, miser_width, lb, fields, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.start_block = function cljs$pprint$start_block(this$, prefix, per_line_prefix, suffix) {
  var lb = new cljs.pprint.logical_block((new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), null, cljs.core.atom.call(null, 0), cljs.core.atom.call(null, 0), cljs.core.atom.call(null, false), cljs.core.atom.call(null, false), prefix, per_line_prefix, suffix, null, null, null, null);
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    var temp__5735__auto___15701 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__5735__auto___15701)) {
      var cb_15702 = temp__5735__auto___15701;
      cb_15702.call(null, new cljs.core.Keyword(null, "start", "start", -355208981));
    } else {
    }
    if (cljs.core.truth_(prefix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), prefix);
    } else {
    }
    var col = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
    cljs.core.reset_BANG_.call(null, lb.start_col, col);
    return cljs.core.reset_BANG_.call(null, lb.indent, col);
  } else {
    var oldpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos = oldpos + (cljs.core.truth_(prefix) ? cljs.core.count.call(null, prefix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos);
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_start_block_t.call(null, lb, oldpos, newpos));
  }
};
cljs.pprint.end_block = function cljs$pprint$end_block(this$) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  var suffix = (new cljs.core.Keyword(null, "suffix", "suffix", 367373057)).cljs$core$IFn$_invoke$arity$1(lb);
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    if (cljs.core.truth_(suffix)) {
      cljs.core._write.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), suffix);
    } else {
    }
    var temp__5735__auto___15703 = (new cljs.core.Keyword(null, "logical-block-callback", "logical-block-callback", 1612691194)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    if (cljs.core.truth_(temp__5735__auto___15703)) {
      var cb_15704 = temp__5735__auto___15703;
      cb_15704.call(null, new cljs.core.Keyword(null, "end", "end", -268185958));
    } else {
    }
  } else {
    var oldpos_15705 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    var newpos_15706 = oldpos_15705 + (cljs.core.truth_(suffix) ? cljs.core.count.call(null, suffix) : 0);
    cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "pos", "pos", -864607220), newpos_15706);
    cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_end_block_t.call(null, lb, oldpos_15705, newpos_15706));
  }
  return cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776), (new cljs.core.Keyword(null, "parent", "parent", -878878779)).cljs$core$IFn$_invoke$arity$1(lb));
};
cljs.pprint.nl = function cljs$pprint$nl(this$, type) {
  cljs.core.swap_BANG_.call(null, cljs.core.deref.call(null, this$), cljs.core.assoc, new cljs.core.Keyword(null, "mode", "mode", 654403691), new cljs.core.Keyword(null, "buffering", "buffering", -876713613));
  var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_nl_t.call(null, type, (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), pos, pos));
};
cljs.pprint.indent = function cljs$pprint$indent(this$, relative_to, offset) {
  var lb = (new cljs.core.Keyword(null, "logical-blocks", "logical-blocks", -1466339776)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
  if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "mode", "mode", 654403691)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))), new cljs.core.Keyword(null, "writing", "writing", -1486865108))) {
    cljs.pprint.write_white_space.call(null, this$);
    return cljs.core.reset_BANG_.call(null, (new cljs.core.Keyword(null, "indent", "indent", -148200125)).cljs$core$IFn$_invoke$arity$1(lb), offset + function() {
      var pred__15707 = cljs.core._EQ_;
      var expr__15708 = relative_to;
      if (cljs.core.truth_(pred__15707.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), expr__15708))) {
        return cljs.core.deref.call(null, (new cljs.core.Keyword(null, "start-col", "start-col", 668080143)).cljs$core$IFn$_invoke$arity$1(lb));
      } else {
        if (cljs.core.truth_(pred__15707.call(null, new cljs.core.Keyword(null, "current", "current", -1088038603), expr__15708))) {
          return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$))));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__15708)].join(""));
        }
      }
    }());
  } else {
    var pos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
    return cljs.pprint.add_to_buffer.call(null, this$, cljs.pprint.make_indent_t.call(null, lb, relative_to, offset, pos, pos));
  }
};
cljs.pprint.get_miser_width = function cljs$pprint$get_miser_width(this$) {
  return (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, this$)));
};
cljs.pprint._STAR_print_pretty_STAR_ = true;
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !== "undefined") {
} else {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = null;
}
cljs.pprint._STAR_print_right_margin_STAR_ = 72;
cljs.pprint._STAR_print_miser_width_STAR_ = 40;
cljs.pprint._STAR_print_lines_STAR_ = null;
cljs.pprint._STAR_print_circle_STAR_ = null;
cljs.pprint._STAR_print_shared_STAR_ = null;
cljs.pprint._STAR_print_suppress_namespaces_STAR_ = null;
cljs.pprint._STAR_print_radix_STAR_ = null;
cljs.pprint._STAR_print_base_STAR_ = 10;
cljs.pprint._STAR_current_level_STAR_ = 0;
cljs.pprint._STAR_current_length_STAR_ = null;
cljs.pprint.table_ize = function cljs$pprint$table_ize(t, m) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.mapcat.call(null, function(p1__15710_SHARP_) {
    var temp__5735__auto__ = cljs.core.get.call(null, t, cljs.core.key.call(null, p1__15710_SHARP_));
    if (cljs.core.truth_(temp__5735__auto__)) {
      var v = temp__5735__auto__;
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v, cljs.core.val.call(null, p1__15710_SHARP_)], null);
    } else {
      return null;
    }
  }, m));
};
cljs.pprint.pretty_writer_QMARK_ = function cljs$pprint$pretty_writer_QMARK_(x) {
  if (!(x == null) ? x.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === x.cljs$core$IDeref$ ? true : !x.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, x)) {
    return (new cljs.core.Keyword(null, "pretty-writer", "pretty-writer", -1222834267)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, x)));
  } else {
    return false;
  }
};
cljs.pprint.make_pretty_writer = function cljs$pprint$make_pretty_writer(base_writer, right_margin, miser_width) {
  return cljs.pprint.pretty_writer.call(null, base_writer, right_margin, miser_width);
};
cljs.pprint.write_out = function cljs$pprint$write_out(object) {
  var length_reached = function() {
    var and__4115__auto__ = cljs.pprint._STAR_current_length_STAR_;
    if (cljs.core.truth_(and__4115__auto__)) {
      var and__4115__auto____$1 = cljs.core._STAR_print_length_STAR_;
      if (cljs.core.truth_(and__4115__auto____$1)) {
        return cljs.pprint._STAR_current_length_STAR_ >= cljs.core._STAR_print_length_STAR_;
      } else {
        return and__4115__auto____$1;
      }
    } else {
      return and__4115__auto__;
    }
  }();
  if (cljs.core.not.call(null, cljs.pprint._STAR_print_pretty_STAR_)) {
    cljs.pprint.pr.call(null, object);
  } else {
    if (cljs.core.truth_(length_reached)) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
    } else {
      if (cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)) {
        cljs.pprint._STAR_current_length_STAR_ = cljs.pprint._STAR_current_length_STAR_ + 1;
      } else {
      }
      cljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null, object);
    }
  }
  return length_reached;
};
cljs.pprint.write = function cljs$pprint$write(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___15744 = arguments.length;
  var i__4737__auto___15745 = 0;
  while (true) {
    if (i__4737__auto___15745 < len__4736__auto___15744) {
      args__4742__auto__.push(arguments[i__4737__auto___15745]);
      var G__15746 = i__4737__auto___15745 + 1;
      i__4737__auto___15745 = G__15746;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 1 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(1), 0, null) : null;
  return cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic(arguments[0], argseq__4743__auto__);
};
cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic = function(object, kw_args) {
  var options = cljs.core.merge.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "stream", "stream", 1534941648), true], null), cljs.core.apply.call(null, cljs.core.hash_map, kw_args));
  var _STAR_print_base_STAR__orig_val__15716 = cljs.pprint._STAR_print_base_STAR_;
  var _STAR_print_circle_STAR__orig_val__15717 = cljs.pprint._STAR_print_circle_STAR_;
  var _STAR_print_length_STAR__orig_val__15718 = cljs.core._STAR_print_length_STAR_;
  var _STAR_print_level_STAR__orig_val__15719 = cljs.core._STAR_print_level_STAR_;
  var _STAR_print_lines_STAR__orig_val__15720 = cljs.pprint._STAR_print_lines_STAR_;
  var _STAR_print_miser_width_STAR__orig_val__15721 = cljs.pprint._STAR_print_miser_width_STAR_;
  var _STAR_print_pprint_dispatch_STAR__orig_val__15722 = cljs.pprint._STAR_print_pprint_dispatch_STAR_;
  var _STAR_print_pretty_STAR__orig_val__15723 = cljs.pprint._STAR_print_pretty_STAR_;
  var _STAR_print_radix_STAR__orig_val__15724 = cljs.pprint._STAR_print_radix_STAR_;
  var _STAR_print_readably_STAR__orig_val__15725 = cljs.core._STAR_print_readably_STAR_;
  var _STAR_print_right_margin_STAR__orig_val__15726 = cljs.pprint._STAR_print_right_margin_STAR_;
  var _STAR_print_suppress_namespaces_STAR__orig_val__15727 = cljs.pprint._STAR_print_suppress_namespaces_STAR_;
  var _STAR_print_base_STAR__temp_val__15728 = (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_base_STAR_);
  var _STAR_print_circle_STAR__temp_val__15729 = (new cljs.core.Keyword(null, "circle", "circle", 1903212362)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_circle_STAR_);
  var _STAR_print_length_STAR__temp_val__15730 = (new cljs.core.Keyword(null, "length", "length", 588987862)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_length_STAR_);
  var _STAR_print_level_STAR__temp_val__15731 = (new cljs.core.Keyword(null, "level", "level", 1290497552)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_level_STAR_);
  var _STAR_print_lines_STAR__temp_val__15732 = (new cljs.core.Keyword(null, "lines", "lines", -700165781)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_lines_STAR_);
  var _STAR_print_miser_width_STAR__temp_val__15733 = (new cljs.core.Keyword(null, "miser-width", "miser-width", -1310049437)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_miser_width_STAR_);
  var _STAR_print_pprint_dispatch_STAR__temp_val__15734 = (new cljs.core.Keyword(null, "dispatch", "dispatch", 1319337009)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pprint_dispatch_STAR_);
  var _STAR_print_pretty_STAR__temp_val__15735 = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_pretty_STAR_);
  var _STAR_print_radix_STAR__temp_val__15736 = (new cljs.core.Keyword(null, "radix", "radix", 857016463)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_radix_STAR_);
  var _STAR_print_readably_STAR__temp_val__15737 = (new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$2(options, cljs.core._STAR_print_readably_STAR_);
  var _STAR_print_right_margin_STAR__temp_val__15738 = (new cljs.core.Keyword(null, "right-margin", "right-margin", -810413306)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_right_margin_STAR_);
  var _STAR_print_suppress_namespaces_STAR__temp_val__15739 = (new cljs.core.Keyword(null, "suppress-namespaces", "suppress-namespaces", 2130686956)).cljs$core$IFn$_invoke$arity$2(options, cljs.pprint._STAR_print_suppress_namespaces_STAR_);
  cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR__temp_val__15728;
  cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR__temp_val__15729;
  cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__temp_val__15730;
  cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__temp_val__15731;
  cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR__temp_val__15732;
  cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR__temp_val__15733;
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR__temp_val__15734;
  cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__temp_val__15735;
  cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR__temp_val__15736;
  cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__temp_val__15737;
  cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR__temp_val__15738;
  cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR__temp_val__15739;
  try {
    try {
      var sb = new goog.string.StringBuffer;
      var optval = cljs.core.contains_QMARK_.call(null, options, new cljs.core.Keyword(null, "stream", "stream", 1534941648)) ? (new cljs.core.Keyword(null, "stream", "stream", 1534941648)).cljs$core$IFn$_invoke$arity$1(options) : true;
      var base_writer = optval === true || optval == null ? new cljs.core.StringBufferWriter(sb) : optval;
      if (cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)) {
        var base_writer__15341__auto___15747 = base_writer;
        var new_writer__15342__auto___15748 = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__15341__auto___15747));
        var _STAR_out_STAR__orig_val__15740_15749 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__15741_15750 = new_writer__15342__auto___15748 ? cljs.pprint.make_pretty_writer.call(null, base_writer__15341__auto___15747, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__15341__auto___15747;
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__15741_15750;
        try {
          cljs.pprint.write_out.call(null, object);
          cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__15740_15749;
        }
      } else {
        var _STAR_out_STAR__orig_val__15742_15751 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__15743_15752 = base_writer;
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__15743_15752;
        try {
          cljs.pprint.pr.call(null, object);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__15742_15751;
        }
      }
      if (optval === true) {
        cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
      } else {
      }
      if (optval == null) {
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
      } else {
        return null;
      }
    } finally {
    }
  } finally {
    cljs.pprint._STAR_print_suppress_namespaces_STAR_ = _STAR_print_suppress_namespaces_STAR__orig_val__15727;
    cljs.pprint._STAR_print_right_margin_STAR_ = _STAR_print_right_margin_STAR__orig_val__15726;
    cljs.core._STAR_print_readably_STAR_ = _STAR_print_readably_STAR__orig_val__15725;
    cljs.pprint._STAR_print_radix_STAR_ = _STAR_print_radix_STAR__orig_val__15724;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__orig_val__15723;
    cljs.pprint._STAR_print_pprint_dispatch_STAR_ = _STAR_print_pprint_dispatch_STAR__orig_val__15722;
    cljs.pprint._STAR_print_miser_width_STAR_ = _STAR_print_miser_width_STAR__orig_val__15721;
    cljs.pprint._STAR_print_lines_STAR_ = _STAR_print_lines_STAR__orig_val__15720;
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR__orig_val__15719;
    cljs.core._STAR_print_length_STAR_ = _STAR_print_length_STAR__orig_val__15718;
    cljs.pprint._STAR_print_circle_STAR_ = _STAR_print_circle_STAR__orig_val__15717;
    cljs.pprint._STAR_print_base_STAR_ = _STAR_print_base_STAR__orig_val__15716;
  }
};
cljs.pprint.write.cljs$lang$maxFixedArity = 1;
cljs.pprint.write.cljs$lang$applyTo = function(seq15714) {
  var G__15715 = cljs.core.first.call(null, seq15714);
  var seq15714__$1 = cljs.core.next.call(null, seq15714);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15715, seq15714__$1);
};
cljs.pprint.pprint = function cljs$pprint$pprint(var_args) {
  var G__15754 = arguments.length;
  switch(G__15754) {
    case 1:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 = function(object) {
  var sb = new goog.string.StringBuffer;
  var _STAR_out_STAR__orig_val__15755 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__15756 = new cljs.core.StringBufferWriter(sb);
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__15756;
  try {
    cljs.pprint.pprint.call(null, object, cljs.core._STAR_out_STAR_);
    return cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__15755;
  }
};
cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 = function(object, writer) {
  var base_writer__15341__auto__ = writer;
  var new_writer__15342__auto__ = cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, base_writer__15341__auto__));
  var _STAR_out_STAR__orig_val__15757 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__15758 = new_writer__15342__auto__ ? cljs.pprint.make_pretty_writer.call(null, base_writer__15341__auto__, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_) : base_writer__15341__auto__;
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__15758;
  try {
    var _STAR_print_pretty_STAR__orig_val__15759_15762 = cljs.pprint._STAR_print_pretty_STAR_;
    var _STAR_print_pretty_STAR__temp_val__15760_15763 = true;
    cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__temp_val__15760_15763;
    try {
      cljs.pprint.write_out.call(null, object);
    } finally {
      cljs.pprint._STAR_print_pretty_STAR_ = _STAR_print_pretty_STAR__orig_val__15759_15762;
    }
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, cljs.core._STAR_out_STAR_))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "\n");
    } else {
    }
    return cljs.pprint._ppflush.call(null, cljs.core._STAR_out_STAR_);
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__15757;
  }
};
cljs.pprint.pprint.cljs$lang$maxFixedArity = 2;
cljs.pprint.set_pprint_dispatch = function cljs$pprint$set_pprint_dispatch(function$) {
  cljs.pprint._STAR_print_pprint_dispatch_STAR_ = function$;
  return null;
};
cljs.pprint.check_enumerated_arg = function cljs$pprint$check_enumerated_arg(arg, choices) {
  if (cljs.core.not.call(null, choices.call(null, arg))) {
    throw new Error(["Bad argument: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arg), ". It must be one of ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(choices)].join(""));
  } else {
    return null;
  }
};
cljs.pprint.level_exceeded = function cljs$pprint$level_exceeded() {
  var and__4115__auto__ = cljs.core._STAR_print_level_STAR_;
  if (cljs.core.truth_(and__4115__auto__)) {
    return cljs.pprint._STAR_current_level_STAR_ >= cljs.core._STAR_print_level_STAR_;
  } else {
    return and__4115__auto__;
  }
};
cljs.pprint.pprint_newline = function cljs$pprint$pprint_newline(kind) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336), null, new cljs.core.Keyword(null, "miser", "miser", -556060186), null, new cljs.core.Keyword(null, "fill", "fill", 883462889), null, new cljs.core.Keyword(null, "linear", "linear", 872268697), null], null), null));
  return cljs.pprint.nl.call(null, cljs.core._STAR_out_STAR_, kind);
};
cljs.pprint.pprint_indent = function cljs$pprint$pprint_indent(relative_to, n) {
  cljs.pprint.check_enumerated_arg.call(null, relative_to, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "block", "block", 664686210), null, new cljs.core.Keyword(null, "current", "current", -1088038603), null], null), null));
  return cljs.pprint.indent.call(null, cljs.core._STAR_out_STAR_, relative_to, n);
};
cljs.pprint.pprint_tab = function cljs$pprint$pprint_tab(kind, colnum, colinc) {
  cljs.pprint.check_enumerated_arg.call(null, kind, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "section", "section", -300141526), null, new cljs.core.Keyword(null, "line", "line", 212345235), null, new cljs.core.Keyword(null, "line-relative", "line-relative", 1149548219), null, new cljs.core.Keyword(null, "section-relative", "section-relative", -658298724), null], null), null));
  throw new Error("pprint-tab is not yet implemented");
};
cljs.pprint.cl_format = function cljs$pprint$cl_format(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___15767 = arguments.length;
  var i__4737__auto___15768 = 0;
  while (true) {
    if (i__4737__auto___15768 < len__4736__auto___15767) {
      args__4742__auto__.push(arguments[i__4737__auto___15768]);
      var G__15769 = i__4737__auto___15768 + 1;
      i__4737__auto___15768 = G__15769;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 2 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(2), 0, null) : null;
  return cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4743__auto__);
};
cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic = function(writer, format_in, args) {
  var compiled_format = typeof format_in === "string" ? cljs.pprint.compile_format.call(null, format_in) : format_in;
  var navigator = cljs.pprint.init_navigator.call(null, args);
  return cljs.pprint.execute_format.call(null, writer, compiled_format, navigator);
};
cljs.pprint.cl_format.cljs$lang$maxFixedArity = 2;
cljs.pprint.cl_format.cljs$lang$applyTo = function(seq15764) {
  var G__15765 = cljs.core.first.call(null, seq15764);
  var seq15764__$1 = cljs.core.next.call(null, seq15764);
  var G__15766 = cljs.core.first.call(null, seq15764__$1);
  var seq15764__$2 = cljs.core.next.call(null, seq15764__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15765, G__15766, seq15764__$2);
};
cljs.pprint._STAR_format_str_STAR_ = null;
cljs.pprint.format_error = function cljs$pprint$format_error(message, offset) {
  var full_message = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(message), "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_format_str_STAR_), "\n", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, offset, " "))), "^", "\n"].join("");
  throw Error(full_message);
};
cljs.pprint.arg_navigator = function(seq, rest, pos, __meta, __extmap, __hash) {
  this.seq = seq;
  this.rest = rest;
  this.pos = pos;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k15771, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__15775 = k15771;
  var G__15775__$1 = G__15775 instanceof cljs.core.Keyword ? G__15775.fqn : null;
  switch(G__15775__$1) {
    case "seq":
      return self__.seq;
      break;
    case "rest":
      return self__.rest;
      break;
    case "pos":
      return self__.pos;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15771, else__4383__auto__);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__15776) {
    var vec__15777 = p__15776;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__15777, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__15777, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#cljs.pprint.arg-navigator{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos], null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__15770) {
  var self__ = this;
  var G__15770__$1 = this;
  return new cljs.core.RecordIter(0, G__15770__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -402038447 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this15772, other15773) {
  var self__ = this;
  var this15772__$1 = this;
  return !(other15773 == null) && this15772__$1.constructor === other15773.constructor && cljs.core._EQ_.call(null, this15772__$1.seq, other15773.seq) && cljs.core._EQ_.call(null, this15772__$1.rest, other15773.rest) && cljs.core._EQ_.call(null, this15772__$1.pos, other15773.pos) && cljs.core._EQ_.call(null, this15772__$1.__extmap, other15773.__extmap);
};
cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "pos", "pos", -864607220), null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__15770) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__15780 = cljs.core.keyword_identical_QMARK_;
  var expr__15781 = k__4388__auto__;
  if (cljs.core.truth_(pred__15780.call(null, new cljs.core.Keyword(null, "seq", "seq", -1817803783), expr__15781))) {
    return new cljs.pprint.arg_navigator(G__15770, self__.rest, self__.pos, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15780.call(null, new cljs.core.Keyword(null, "rest", "rest", -1241696419), expr__15781))) {
      return new cljs.pprint.arg_navigator(self__.seq, G__15770, self__.pos, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15780.call(null, new cljs.core.Keyword(null, "pos", "pos", -864607220), expr__15781))) {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, G__15770, self__.__meta, self__.__extmap, null);
      } else {
        return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__15770), null);
      }
    }
  }
};
cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "seq", "seq", -1817803783), self__.seq, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "rest", "rest", -1241696419), self__.rest, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "pos", "pos", -864607220), self__.pos, null)], null), self__.__extmap));
};
cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__15770) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new cljs.pprint.arg_navigator(self__.seq, self__.rest, self__.pos, G__15770, self__.__extmap, self__.__hash);
};
cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
cljs.pprint.arg_navigator.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "seq", "seq", -177272256, null), new cljs.core.Symbol(null, "rest", "rest", 398835108, null), new cljs.core.Symbol(null, "pos", "pos", 775924307, null)], null);
};
cljs.pprint.arg_navigator.cljs$lang$type = true;
cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "cljs.pprint/arg-navigator", null, 1, null);
};
cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "cljs.pprint/arg-navigator");
};
cljs.pprint.__GT_arg_navigator = function cljs$pprint$__GT_arg_navigator(seq, rest, pos) {
  return new cljs.pprint.arg_navigator(seq, rest, pos, null, null, null);
};
cljs.pprint.map__GT_arg_navigator = function cljs$pprint$map__GT_arg_navigator(G__15774) {
  var extmap__4419__auto__ = function() {
    var G__15783 = cljs.core.dissoc.call(null, G__15774, new cljs.core.Keyword(null, "seq", "seq", -1817803783), new cljs.core.Keyword(null, "rest", "rest", -1241696419), new cljs.core.Keyword(null, "pos", "pos", -864607220));
    if (cljs.core.record_QMARK_.call(null, G__15774)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__15783);
    } else {
      return G__15783;
    }
  }();
  return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(G__15774), (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(G__15774), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(G__15774), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
cljs.pprint.init_navigator = function cljs$pprint$init_navigator(s) {
  var s__$1 = cljs.core.seq.call(null, s);
  return new cljs.pprint.arg_navigator(s__$1, s__$1, 0, null, null, null);
};
cljs.pprint.next_arg = function cljs$pprint$next_arg(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    throw Error("Not enough arguments for format definition");
  }
};
cljs.pprint.next_arg_or_nil = function cljs$pprint$next_arg_or_nil(navigator) {
  var rst = (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator);
  if (cljs.core.truth_(rst)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, rst), new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.next.call(null, rst), (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + 1, null, null, null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, navigator], null);
  }
};
cljs.pprint.get_format_arg = function cljs$pprint$get_format_arg(navigator) {
  var vec__15785 = cljs.pprint.next_arg.call(null, navigator);
  var raw_format = cljs.core.nth.call(null, vec__15785, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15785, 1, null);
  var compiled_format = typeof raw_format === "string" ? cljs.pprint.compile_format.call(null, raw_format) : raw_format;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format, navigator__$1], null);
};
cljs.pprint.absolute_reposition = function cljs$pprint$absolute_reposition(navigator, position) {
  if (position >= (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator)) {
    return cljs.pprint.relative_reposition.call(null, navigator, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) - position);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator)), position, null, null, null);
  }
};
cljs.pprint.relative_reposition = function cljs$pprint$relative_reposition(navigator, position) {
  var newpos = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator) + position;
  if (position < 0) {
    return cljs.pprint.absolute_reposition.call(null, navigator, newpos);
  } else {
    return new cljs.pprint.arg_navigator((new cljs.core.Keyword(null, "seq", "seq", -1817803783)).cljs$core$IFn$_invoke$arity$1(navigator), cljs.core.drop.call(null, position, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), newpos, null, null, null);
  }
};
cljs.pprint.compiled_directive = function(func, def, params, offset, __meta, __extmap, __hash) {
  this.func = func;
  this.def = def;
  this.params = params;
  this.offset = offset;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k15789, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__15793 = k15789;
  var G__15793__$1 = G__15793 instanceof cljs.core.Keyword ? G__15793.fqn : null;
  switch(G__15793__$1) {
    case "func":
      return self__.func;
      break;
    case "def":
      return self__.def;
      break;
    case "params":
      return self__.params;
      break;
    case "offset":
      return self__.offset;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k15789, else__4383__auto__);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__15794) {
    var vec__15795 = p__15794;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__15795, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__15795, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#cljs.pprint.compiled-directive{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), self__.func], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "params", "params", 710516235), self__.params], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "offset", "offset", 296498311), self__.offset], null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__15788) {
  var self__ = this;
  var G__15788__$1 = this;
  return new cljs.core.RecordIter(0, G__15788__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -829256337 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this15790, other15791) {
  var self__ = this;
  var this15790__$1 = this;
  return !(other15791 == null) && this15790__$1.constructor === other15791.constructor && cljs.core._EQ_.call(null, this15790__$1.func, other15791.func) && cljs.core._EQ_.call(null, this15790__$1.def, other15791.def) && cljs.core._EQ_.call(null, this15790__$1.params, other15791.params) && cljs.core._EQ_.call(null, this15790__$1.offset, other15791.offset) && cljs.core._EQ_.call(null, this15790__$1.__extmap, other15791.__extmap);
};
cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "offset", "offset", 296498311), null, new cljs.core.Keyword(null, "func", "func", -238706040), null, new cljs.core.Keyword(null, "params", "params", 710516235), null, new cljs.core.Keyword(null, "def", "def", -1043430536), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__15788) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__15798 = cljs.core.keyword_identical_QMARK_;
  var expr__15799 = k__4388__auto__;
  if (cljs.core.truth_(pred__15798.call(null, new cljs.core.Keyword(null, "func", "func", -238706040), expr__15799))) {
    return new cljs.pprint.compiled_directive(G__15788, self__.def, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__15798.call(null, new cljs.core.Keyword(null, "def", "def", -1043430536), expr__15799))) {
      return new cljs.pprint.compiled_directive(self__.func, G__15788, self__.params, self__.offset, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__15798.call(null, new cljs.core.Keyword(null, "params", "params", 710516235), expr__15799))) {
        return new cljs.pprint.compiled_directive(self__.func, self__.def, G__15788, self__.offset, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__15798.call(null, new cljs.core.Keyword(null, "offset", "offset", 296498311), expr__15799))) {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, G__15788, self__.__meta, self__.__extmap, null);
        } else {
          return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__15788), null);
        }
      }
    }
  }
};
cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "func", "func", -238706040), self__.func, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "def", "def", -1043430536), self__.def, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "params", "params", 710516235), self__.params, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "offset", 
  "offset", 296498311), self__.offset, null)], null), self__.__extmap));
};
cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__15788) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new cljs.pprint.compiled_directive(self__.func, self__.def, self__.params, self__.offset, G__15788, self__.__extmap, self__.__hash);
};
cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
cljs.pprint.compiled_directive.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "func", "func", 1401825487, null), new cljs.core.Symbol(null, "def", "def", 597100991, null), new cljs.core.Symbol(null, "params", "params", -1943919534, null), new cljs.core.Symbol(null, "offset", "offset", 1937029838, null)], null);
};
cljs.pprint.compiled_directive.cljs$lang$type = true;
cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "cljs.pprint/compiled-directive", null, 1, null);
};
cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "cljs.pprint/compiled-directive");
};
cljs.pprint.__GT_compiled_directive = function cljs$pprint$__GT_compiled_directive(func, def, params, offset) {
  return new cljs.pprint.compiled_directive(func, def, params, offset, null, null, null);
};
cljs.pprint.map__GT_compiled_directive = function cljs$pprint$map__GT_compiled_directive(G__15792) {
  var extmap__4419__auto__ = function() {
    var G__15801 = cljs.core.dissoc.call(null, G__15792, new cljs.core.Keyword(null, "func", "func", -238706040), new cljs.core.Keyword(null, "def", "def", -1043430536), new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.Keyword(null, "offset", "offset", 296498311));
    if (cljs.core.record_QMARK_.call(null, G__15792)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__15801);
    } else {
      return G__15801;
    }
  }();
  return new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(G__15792), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(G__15792), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(G__15792), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(G__15792), null, cljs.core.not_empty.call(null, extmap__4419__auto__), 
  null);
};
cljs.pprint.realize_parameter = function cljs$pprint$realize_parameter(p__15803, navigator) {
  var vec__15804 = p__15803;
  var param = cljs.core.nth.call(null, vec__15804, 0, null);
  var vec__15807 = cljs.core.nth.call(null, vec__15804, 1, null);
  var raw_val = cljs.core.nth.call(null, vec__15807, 0, null);
  var offset = cljs.core.nth.call(null, vec__15807, 1, null);
  var vec__15810 = cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), param) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val, navigator], null) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", 
  -758446196)) ? cljs.pprint.next_arg.call(null, navigator) : cljs.core._EQ_.call(null, raw_val, new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator)), navigator], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [raw_val, navigator], null);
  var real_param = cljs.core.nth.call(null, vec__15810, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__15810, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param, offset], null)], null), new_navigator], null);
};
cljs.pprint.realize_parameter_list = function cljs$pprint$realize_parameter_list(parameter_map, navigator) {
  var vec__15813 = cljs.pprint.map_passing_context.call(null, cljs.pprint.realize_parameter, navigator, parameter_map);
  var pairs = cljs.core.nth.call(null, vec__15813, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__15813, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, pairs), new_navigator], null);
};
cljs.pprint.special_radix_markers = new cljs.core.PersistentArrayMap(null, 3, [2, "#b", 8, "#o", 16, "#x"], null);
cljs.pprint.format_simple_number = function cljs$pprint$format_simple_number(n) {
  if (cljs.core.integer_QMARK_.call(null, n)) {
    if (cljs.core._EQ_.call(null, cljs.pprint._STAR_print_base_STAR_, 10)) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(n), cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? "." : null].join("");
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_) ? function() {
        var or__4126__auto__ = cljs.core.get.call(null, cljs.pprint.special_radix_markers, cljs.pprint._STAR_print_base_STAR_);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          return ["#", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_print_base_STAR_), "r"].join("");
        }
      }() : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.opt_base_str.call(null, cljs.pprint._STAR_print_base_STAR_, n))].join("");
    }
  } else {
    return null;
  }
};
cljs.pprint.format_ascii = function cljs$pprint$format_ascii(print_func, params, arg_navigator, offsets) {
  var vec__15816 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__15816, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__15816, 1, null);
  var base_output = function() {
    var or__4126__auto__ = cljs.pprint.format_simple_number.call(null, arg);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return print_func.call(null, arg);
    }
  }();
  var base_width = base_output.length;
  var min_width = base_width + (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var width = min_width >= (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? min_width : min_width + (cljs.core.quot.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - min_width - 1, (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params)) + 1) * (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var chars = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, width - base_width, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars), cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output)].join(""));
  } else {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output), cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars)].join(""));
  }
  return arg_navigator__$1;
};
cljs.pprint.integral_QMARK_ = function cljs$pprint$integral_QMARK_(x) {
  if (cljs.core.integer_QMARK_.call(null, x)) {
    return true;
  } else {
    if (cljs.pprint.float_QMARK_.call(null, x)) {
      return cljs.core._EQ_.call(null, x, Math.floor(x));
    } else {
      return false;
    }
  }
};
cljs.pprint.remainders = function cljs$pprint$remainders(base, val) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p1__15819_SHARP_) {
    if (p1__15819_SHARP_ > 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem.call(null, p1__15819_SHARP_, base), cljs.core.quot.call(null, p1__15819_SHARP_, base)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    }
  }, val)));
};
cljs.pprint.base_str = function cljs$pprint$base_str(base, val) {
  if (val === 0) {
    return "0";
  } else {
    var xlated_val = val;
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.map.call(null, function(p1__15820_SHARP_) {
      if (p1__15820_SHARP_ < 10) {
        return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "0") + p1__15820_SHARP_);
      } else {
        return cljs.core.char$.call(null, cljs.pprint.char_code.call(null, "a") + (p1__15820_SHARP_ - 10));
      }
    }, cljs.pprint.remainders.call(null, base, val)));
  }
};
cljs.pprint.javascript_base_formats = new cljs.core.PersistentArrayMap(null, 3, [8, "%o", 10, "%d", 16, "%x"], null);
cljs.pprint.opt_base_str = function cljs$pprint$opt_base_str(base, val) {
  return cljs.pprint.base_str.call(null, base, val);
};
cljs.pprint.group_by_STAR_ = function cljs$pprint$group_by_STAR_(unit, lis) {
  return cljs.core.reverse.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(x) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.take.call(null, unit, x))), cljs.core.seq.call(null, cljs.core.drop.call(null, unit, x))], null);
  }, cljs.core.reverse.call(null, lis))));
};
cljs.pprint.format_integer = function cljs$pprint$format_integer(base, params, arg_navigator, offsets) {
  var vec__15822 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__15822, 0, null);
  var arg_navigator__$1 = cljs.core.nth.call(null, vec__15822, 1, null);
  if (cljs.pprint.integral_QMARK_.call(null, arg)) {
    var neg_15825 = arg < 0;
    var pos_arg_15826 = neg_15825 ? -arg : arg;
    var raw_str_15827 = cljs.pprint.opt_base_str.call(null, base, pos_arg_15826);
    var group_str_15828 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? function() {
      var groups = cljs.core.map.call(null, function(p1__15821_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.str, p1__15821_SHARP_);
      }, cljs.pprint.group_by_STAR_.call(null, (new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083)).cljs$core$IFn$_invoke$arity$1(params), raw_str_15827));
      var commas = cljs.core.repeat.call(null, cljs.core.count.call(null, groups), (new cljs.core.Keyword(null, "commachar", "commachar", 652859327)).cljs$core$IFn$_invoke$arity$1(params));
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.next.call(null, cljs.core.interleave.call(null, commas, groups)));
    }() : raw_str_15827;
    var signed_str_15829 = neg_15825 ? ["-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_15828)].join("") : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? ["+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_15828)].join("") : group_str_15828;
    var padded_str_15830 = signed_str_15829.length < (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params) - signed_str_15829.length, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), 
    cljs.core.str.cljs$core$IFn$_invoke$arity$1(signed_str_15829)].join("") : signed_str_15829;
    cljs.pprint.print.call(null, padded_str_15830);
  } else {
    cljs.pprint.format_ascii.call(null, cljs.core.print_str, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), 1, new cljs.core.Keyword(null, "minpad", "minpad", 323570901), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), null);
  }
  return arg_navigator__$1;
};
cljs.pprint.english_cardinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "ten", "eleven", "twelve", "thirteen", "fourteen", "fifteen", "sixteen", "seventeen", "eighteen", "nineteen"], null);
cljs.pprint.english_ordinal_units = new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, ["zeroth", "first", "second", "third", "fourth", "fifth", "sixth", "seventh", "eighth", "ninth", "tenth", "eleventh", "twelfth", "thirteenth", "fourteenth", "fifteenth", "sixteenth", "seventeenth", "eighteenth", "nineteenth"], null);
cljs.pprint.english_cardinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twenty", "thirty", "forty", "fifty", "sixty", "seventy", "eighty", "ninety"], null);
cljs.pprint.english_ordinal_tens = new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "", "twentieth", "thirtieth", "fortieth", "fiftieth", "sixtieth", "seventieth", "eightieth", "ninetieth"], null);
cljs.pprint.english_scale_numbers = new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "thousand", "million", "billion", "trillion", "quadrillion", "quintillion", "sextillion", "septillion", "octillion", "nonillion", "decillion", "undecillion", "duodecillion", "tredecillion", "quattuordecillion", "quindecillion", "sexdecillion", "septendecillion", "octodecillion", "novemdecillion", "vigintillion"], null);
cljs.pprint.format_simple_cardinal = function cljs$pprint$format_simple_cardinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [hundreds > 0 ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), " hundred"].join("") : null, hundreds > 0 && tens > 0 ? " " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), ten_digit > 0 && unit_digit > 0 ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, unit_digit) : null)].join("");
  }() : null)].join("");
};
cljs.pprint.add_english_scales = function cljs$pprint$add_english_scales(parts, offset) {
  var cnt = cljs.core.count.call(null, parts);
  var acc = cljs.core.PersistentVector.EMPTY;
  var pos = cnt - 1;
  var this$ = cljs.core.first.call(null, parts);
  var remainder = cljs.core.next.call(null, parts);
  while (true) {
    if (remainder == null) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, ", ", acc))), !cljs.core.empty_QMARK_.call(null, this$) && !cljs.core.empty_QMARK_.call(null, acc) ? ", " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$), !cljs.core.empty_QMARK_.call(null, this$) && pos + offset > 0 ? [" ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join("") : null].join("");
    } else {
      var G__15831 = cljs.core.empty_QMARK_.call(null, this$) ? acc : cljs.core.conj.call(null, acc, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$), " ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_scale_numbers, pos + offset))].join(""));
      var G__15832 = pos - 1;
      var G__15833 = cljs.core.first.call(null, remainder);
      var G__15834 = cljs.core.next.call(null, remainder);
      acc = G__15831;
      pos = G__15832;
      this$ = G__15833;
      remainder = G__15834;
      continue;
    }
    break;
  }
};
cljs.pprint.format_cardinal_english = function cljs$pprint$format_cardinal_english(params, navigator, offsets) {
  var vec__15835 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__15835, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15835, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zero");
  } else {
    var abs_arg_15838 = arg < 0 ? -arg : arg;
    var parts_15839 = cljs.pprint.remainders.call(null, 1000, abs_arg_15838);
    if (cljs.core.count.call(null, parts_15839) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_15840 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, parts_15839);
      var full_str_15841 = cljs.pprint.add_english_scales.call(null, parts_strs_15840, 0);
      cljs.pprint.print.call(null, [arg < 0 ? "minus " : null, full_str_15841].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
    }
  }
  return navigator__$1;
};
cljs.pprint.format_simple_ordinal = function cljs$pprint$format_simple_ordinal(num) {
  var hundreds = cljs.core.quot.call(null, num, 100);
  var tens = cljs.core.rem.call(null, num, 100);
  return [hundreds > 0 ? [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.call(null, cljs.pprint.english_cardinal_units, hundreds)), " hundred"].join("") : null, hundreds > 0 && tens > 0 ? " " : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(tens > 0 ? tens < 20 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, tens) : function() {
    var ten_digit = cljs.core.quot.call(null, tens, 10);
    var unit_digit = cljs.core.rem.call(null, tens, 10);
    if (ten_digit > 0 && !(unit_digit > 0)) {
      return cljs.core.nth.call(null, cljs.pprint.english_ordinal_tens, ten_digit);
    } else {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ten_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_cardinal_tens, ten_digit) : null), ten_digit > 0 && unit_digit > 0 ? "-" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(unit_digit > 0 ? cljs.core.nth.call(null, cljs.pprint.english_ordinal_units, unit_digit) : null)].join("");
    }
  }() : hundreds > 0 ? "th" : null)].join("");
};
cljs.pprint.format_ordinal_english = function cljs$pprint$format_ordinal_english(params, navigator, offsets) {
  var vec__15842 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__15842, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15842, 1, null);
  if (cljs.core._EQ_.call(null, 0, arg)) {
    cljs.pprint.print.call(null, "zeroth");
  } else {
    var abs_arg_15845 = arg < 0 ? -arg : arg;
    var parts_15846 = cljs.pprint.remainders.call(null, 1000, abs_arg_15845);
    if (cljs.core.count.call(null, parts_15846) <= cljs.core.count.call(null, cljs.pprint.english_scale_numbers)) {
      var parts_strs_15847 = cljs.core.map.call(null, cljs.pprint.format_simple_cardinal, cljs.core.drop_last.call(null, parts_15846));
      var head_str_15848 = cljs.pprint.add_english_scales.call(null, parts_strs_15847, 1);
      var tail_str_15849 = cljs.pprint.format_simple_ordinal.call(null, cljs.core.last.call(null, parts_15846));
      cljs.pprint.print.call(null, [arg < 0 ? "minus " : null, !cljs.core.empty_QMARK_.call(null, head_str_15848) && !cljs.core.empty_QMARK_.call(null, tail_str_15849) ? [head_str_15848, ", ", tail_str_15849].join("") : !cljs.core.empty_QMARK_.call(null, head_str_15848) ? [head_str_15848, "th"].join("") : tail_str_15849].join(""));
    } else {
      cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
      1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
      var low_two_digits_15850 = cljs.core.rem.call(null, arg, 100);
      var not_teens_15851 = 11 < low_two_digits_15850 || 19 > low_two_digits_15850;
      var low_digit_15852 = cljs.core.rem.call(null, low_two_digits_15850, 10);
      cljs.pprint.print.call(null, low_digit_15852 === 1 && not_teens_15851 ? "st" : low_digit_15852 === 2 && not_teens_15851 ? "nd" : low_digit_15852 === 3 && not_teens_15851 ? "rd" : "th");
    }
  }
  return navigator__$1;
};
cljs.pprint.old_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IIII", "V", "VI", "VII", "VIII", "VIIII"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XXXX", "L", "LX", "LXX", "LXXX", "LXXXX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", 
"CC", "CCC", "CCCC", "D", "DC", "DCC", "DCCC", "DCCCC"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.new_roman_table = new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["I", "II", "III", "IV", "V", "VI", "VII", "VIII", "IX"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["X", "XX", "XXX", "XL", "L", "LX", "LXX", "LXXX", "XC"], null), new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, ["C", "CC", 
"CCC", "CD", "D", "DC", "DCC", "DCCC", "CM"], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["M", "MM", "MMM"], null)], null);
cljs.pprint.format_roman = function cljs$pprint$format_roman(table, params, navigator, offsets) {
  var vec__15853 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__15853, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15853, 1, null);
  if (typeof arg === "number" && arg > 0 && arg < 4000) {
    var digits_15856 = cljs.pprint.remainders.call(null, 10, arg);
    var acc_15857 = cljs.core.PersistentVector.EMPTY;
    var pos_15858 = cljs.core.count.call(null, digits_15856) - 1;
    var digits_15859__$1 = digits_15856;
    while (true) {
      if (cljs.core.empty_QMARK_.call(null, digits_15859__$1)) {
        cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, acc_15857));
      } else {
        var digit_15860 = cljs.core.first.call(null, digits_15859__$1);
        var G__15861 = cljs.core._EQ_.call(null, 0, digit_15860) ? acc_15857 : cljs.core.conj.call(null, acc_15857, cljs.core.nth.call(null, cljs.core.nth.call(null, table, pos_15858), digit_15860 - 1));
        var G__15862 = pos_15858 - 1;
        var G__15863 = cljs.core.next.call(null, digits_15859__$1);
        acc_15857 = G__15861;
        pos_15858 = G__15862;
        digits_15859__$1 = G__15863;
        continue;
      }
      break;
    }
  } else {
    cljs.pprint.format_integer.call(null, 10, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), " ", new cljs.core.Keyword(null, "commachar", "commachar", 652859327), ",", new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 3, new cljs.core.Keyword(null, "colon", "colon", -965200945), true], null), cljs.pprint.init_navigator.call(null, new cljs.core.PersistentVector(null, 
    1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), 0, new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 0, new cljs.core.Keyword(null, "commachar", "commachar", 652859327), 0, new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), 0], null));
  }
  return navigator__$1;
};
cljs.pprint.format_old_roman = function cljs$pprint$format_old_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.old_roman_table, params, navigator, offsets);
};
cljs.pprint.format_new_roman = function cljs$pprint$format_new_roman(params, navigator, offsets) {
  return cljs.pprint.format_roman.call(null, cljs.pprint.new_roman_table, params, navigator, offsets);
};
cljs.pprint.special_chars = new cljs.core.PersistentArrayMap(null, 5, [8, "Backspace", 9, "Tab", 10, "Newline", 13, "Return", 32, "Space"], null);
cljs.pprint.pretty_character = function cljs$pprint$pretty_character(params, navigator, offsets) {
  var vec__15864 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__15864, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15864, 1, null);
  var as_int = cljs.pprint.char_code.call(null, c);
  var base_char = as_int & 127;
  var meta = as_int & 128;
  var special = cljs.core.get.call(null, cljs.pprint.special_chars, base_char);
  if (meta > 0) {
    cljs.pprint.print.call(null, "Meta-");
  } else {
  }
  cljs.pprint.print.call(null, cljs.core.truth_(special) ? special : base_char < 32 ? ["Control-", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$.call(null, base_char + 64))].join("") : cljs.core._EQ_.call(null, base_char, 127) ? "Control-?" : cljs.core.char$.call(null, base_char));
  return navigator__$1;
};
cljs.pprint.readable_character = function cljs$pprint$readable_character(params, navigator, offsets) {
  var vec__15867 = cljs.pprint.next_arg.call(null, navigator);
  var c = cljs.core.nth.call(null, vec__15867, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15867, 1, null);
  var pred__15870_15873 = cljs.core._EQ_;
  var expr__15871_15874 = (new cljs.core.Keyword(null, "char-format", "char-format", -1016499218)).cljs$core$IFn$_invoke$arity$1(params);
  if (cljs.core.truth_(pred__15870_15873.call(null, "o", expr__15871_15874))) {
    cljs.pprint.cl_format.call(null, true, "\\o~3, '0o", cljs.pprint.char_code.call(null, c));
  } else {
    if (cljs.core.truth_(pred__15870_15873.call(null, "u", expr__15871_15874))) {
      cljs.pprint.cl_format.call(null, true, "\\u~4, '0x", cljs.pprint.char_code.call(null, c));
    } else {
      if (cljs.core.truth_(pred__15870_15873.call(null, null, expr__15871_15874))) {
        cljs.pprint.print_char.call(null, c);
      } else {
        throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__15871_15874)].join(""));
      }
    }
  }
  return navigator__$1;
};
cljs.pprint.plain_character = function cljs$pprint$plain_character(params, navigator, offsets) {
  var vec__15875 = cljs.pprint.next_arg.call(null, navigator);
  var char$ = cljs.core.nth.call(null, vec__15875, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15875, 1, null);
  cljs.pprint.print.call(null, char$);
  return navigator__$1;
};
cljs.pprint.abort_QMARK_ = function cljs$pprint$abort_QMARK_(context) {
  var token = cljs.core.first.call(null, context);
  return cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), token) || cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), token);
};
cljs.pprint.execute_sub_format = function cljs$pprint$execute_sub_format(format, args, base_args) {
  return cljs.core.second.call(null, cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.pprint.abort_QMARK_.call(null, context)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__15878 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__15878, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__15878, 1, null);
      var vec__15881 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__15881, 0, null);
      var offsets = cljs.core.nth.call(null, vec__15881, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), base_args);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format));
};
cljs.pprint.float_parts_base = function cljs$pprint$float_parts_base(f) {
  var s = clojure.string.lower_case.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(f));
  var exploc = s.indexOf("e");
  var dotloc = s.indexOf(".");
  if (exploc < 0) {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.length - 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, s, 0, dotloc), cljs.core.subs.call(null, s, dotloc + 1)].join(""), cljs.core.str.cljs$core$IFn$_invoke$arity$1(dotloc - 1)], null);
    }
  } else {
    if (dotloc < 0) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, 0, exploc), cljs.core.subs.call(null, s, exploc + 1)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, s, 0, 1), cljs.core.subs.call(null, s, 2, exploc)].join(""), cljs.core.subs.call(null, s, exploc + 1)], null);
    }
  }
};
cljs.pprint.float_parts = function cljs$pprint$float_parts(f) {
  var vec__15884 = cljs.pprint.float_parts_base.call(null, f);
  var m = cljs.core.nth.call(null, vec__15884, 0, null);
  var e = cljs.core.nth.call(null, vec__15884, 1, null);
  var m1 = cljs.pprint.rtrim.call(null, m, "0");
  var m2 = cljs.pprint.ltrim.call(null, m1, "0");
  var delta = cljs.core.count.call(null, m1) - cljs.core.count.call(null, m2);
  var e__$1 = cljs.core.count.call(null, e) > 0 && cljs.core._EQ_.call(null, cljs.core.nth.call(null, e, 0), "+") ? cljs.core.subs.call(null, e, 1) : e;
  if (cljs.core.empty_QMARK_.call(null, m2)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2, parseInt(e__$1, 10) - delta], null);
  }
};
cljs.pprint.inc_s = function cljs$pprint$inc_s(s) {
  var len_1 = cljs.core.count.call(null, s) - 1;
  var i = len_1 | 0;
  while (true) {
    if (i < 0) {
      return cljs.core.apply.call(null, cljs.core.str, "1", cljs.core.repeat.call(null, len_1 + 1, "0"));
    } else {
      if (cljs.core._EQ_.call(null, "9", s.charAt(i))) {
        var G__15887 = i - 1;
        i = G__15887;
        continue;
      } else {
        return cljs.core.apply.call(null, cljs.core.str, cljs.core.subs.call(null, s, 0, i), cljs.core.char$.call(null, cljs.pprint.char_code.call(null, s.charAt(i)) + 1), cljs.core.repeat.call(null, len_1 - i, "0"));
      }
    }
    break;
  }
};
cljs.pprint.round_str = function cljs$pprint$round_str(m, e, d, w) {
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = d;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return w;
    }
  }())) {
    var len = cljs.core.count.call(null, m);
    var w__$1 = cljs.core.truth_(w) ? function() {
      var x__4214__auto__ = 2;
      var y__4215__auto__ = w;
      return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
    }() : 0;
    var round_pos = cljs.core.truth_(d) ? e + d + 1 : e >= 0 ? function() {
      var x__4214__auto__ = e + 1;
      var y__4215__auto__ = w__$1 - 1;
      return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
    }() : w__$1 + e;
    var vec__15888 = cljs.core._EQ_.call(null, round_pos, 0) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [["0", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""), e + 1, 1, len + 1], null) : new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, round_pos, len], null);
    var m1 = cljs.core.nth.call(null, vec__15888, 0, null);
    var e1 = cljs.core.nth.call(null, vec__15888, 1, null);
    var round_pos__$1 = cljs.core.nth.call(null, vec__15888, 2, null);
    var len__$1 = cljs.core.nth.call(null, vec__15888, 3, null);
    if (cljs.core.truth_(round_pos__$1)) {
      if (round_pos__$1 < 0) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["0", 0, false], null);
      } else {
        if (len__$1 > round_pos__$1) {
          var round_char = cljs.core.nth.call(null, m1, round_pos__$1);
          var result = cljs.core.subs.call(null, m1, 0, round_pos__$1);
          if (cljs.pprint.char_code.call(null, round_char) >= cljs.pprint.char_code.call(null, "5")) {
            var round_up_result = cljs.pprint.inc_s.call(null, result);
            var expanded = cljs.core.count.call(null, round_up_result) > result.length;
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [expanded ? cljs.core.subs.call(null, round_up_result, 0, cljs.core.count.call(null, round_up_result) - 1) : round_up_result, e1, expanded], null);
          } else {
            return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result, e1, false], null);
          }
        } else {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
        }
      }
    } else {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
    }
  } else {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e, false], null);
  }
};
cljs.pprint.expand_fixed = function cljs$pprint$expand_fixed(m, e, d) {
  var vec__15891 = e < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -e - 1, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(""), -1], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m, e], null);
  var m1 = cljs.core.nth.call(null, vec__15891, 0, null);
  var e1 = cljs.core.nth.call(null, vec__15891, 1, null);
  var len = cljs.core.count.call(null, m1);
  var target_len = cljs.core.truth_(d) ? e1 + d + 1 : e1 + 1;
  if (len < target_len) {
    return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(m1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, target_len - len, "0")))].join("");
  } else {
    return m1;
  }
};
cljs.pprint.insert_decimal = function cljs$pprint$insert_decimal(m, e) {
  if (e < 0) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join("");
  } else {
    var loc = e + 1;
    return [cljs.core.subs.call(null, m, 0, loc), ".", cljs.core.subs.call(null, m, loc)].join("");
  }
};
cljs.pprint.get_fixed = function cljs$pprint$get_fixed(m, e, d) {
  return cljs.pprint.insert_decimal.call(null, cljs.pprint.expand_fixed.call(null, m, e, d), e);
};
cljs.pprint.insert_scaled_decimal = function cljs$pprint$insert_scaled_decimal(m, k) {
  if (k < 0) {
    return [".", cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join("");
  } else {
    return [cljs.core.subs.call(null, m, 0, k), ".", cljs.core.subs.call(null, m, k)].join("");
  }
};
cljs.pprint.convert_ratio = function cljs$pprint$convert_ratio(x) {
  return x;
};
cljs.pprint.fixed_float = function cljs$pprint$fixed_float(params, navigator, offsets) {
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__15894 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__15894, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15894, 1, null);
  var vec__15897 = arg < 0 ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["-", -arg], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["+", arg], null);
  var sign = cljs.core.nth.call(null, vec__15897, 0, null);
  var abs = cljs.core.nth.call(null, vec__15897, 1, null);
  var abs__$1 = cljs.pprint.convert_ratio.call(null, abs);
  var vec__15900 = cljs.pprint.float_parts.call(null, abs__$1);
  var mantissa = cljs.core.nth.call(null, vec__15900, 0, null);
  var exp = cljs.core.nth.call(null, vec__15900, 1, null);
  var scaled_exp = exp + (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4126__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return arg < 0;
    }
  }();
  var append_zero = cljs.core.not.call(null, d) && cljs.core.count.call(null, mantissa) - 1 <= scaled_exp;
  var vec__15903 = cljs.pprint.round_str.call(null, mantissa, scaled_exp, d, cljs.core.truth_(w) ? w - (cljs.core.truth_(add_sign) ? 1 : 0) : null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__15903, 0, null);
  var scaled_exp__$1 = cljs.core.nth.call(null, vec__15903, 1, null);
  var expanded = cljs.core.nth.call(null, vec__15903, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp__$1 + 1 : scaled_exp__$1, d);
  var fixed_repr__$1 = cljs.core.truth_(function() {
    var and__4115__auto__ = w;
    if (cljs.core.truth_(and__4115__auto__)) {
      var and__4115__auto____$1 = d;
      if (cljs.core.truth_(and__4115__auto____$1)) {
        return d >= 1 && cljs.core._EQ_.call(null, fixed_repr.charAt(0), "0") && cljs.core._EQ_.call(null, fixed_repr.charAt(1), ".") && fixed_repr.length > w - (cljs.core.truth_(add_sign) ? 1 : 0);
      } else {
        return and__4115__auto____$1;
      }
    } else {
      return and__4115__auto__;
    }
  }()) ? cljs.core.subs.call(null, fixed_repr, 1) : fixed_repr;
  var prepend_zero = cljs.core._EQ_.call(null, cljs.core.first.call(null, fixed_repr__$1), ".");
  if (cljs.core.truth_(w)) {
    var len_15906 = fixed_repr__$1.length;
    var signed_len_15907 = cljs.core.truth_(add_sign) ? len_15906 + 1 : len_15906;
    var prepend_zero_15908__$1 = prepend_zero && !(signed_len_15907 >= w);
    var append_zero_15909__$1 = append_zero && !(signed_len_15907 >= w);
    var full_len_15910 = prepend_zero_15908__$1 || append_zero_15909__$1 ? signed_len_15907 + 1 : signed_len_15907;
    if (cljs.core.truth_(full_len_15910 > w ? (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params) : false)) {
      cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
    } else {
      cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len_15910, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(add_sign) ? sign : null), prepend_zero_15908__$1 ? "0" : null, fixed_repr__$1, append_zero_15909__$1 ? "0" : null].join(""));
    }
  } else {
    cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(add_sign) ? sign : null), prepend_zero ? "0" : null, fixed_repr__$1, append_zero ? "0" : null].join(""));
  }
  return navigator__$1;
};
cljs.pprint.exponential_float = function cljs$pprint$exponential_float(params, navigator, offset) {
  var vec__15911 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__15911, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15911, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var G__15917_15927 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var vec__15918_15928 = G__15917_15927;
  var mantissa_15929 = cljs.core.nth.call(null, vec__15918_15928, 0, null);
  var exp_15930 = cljs.core.nth.call(null, vec__15918_15928, 1, null);
  var G__15917_15931__$1 = G__15917_15927;
  while (true) {
    var vec__15921_15932 = G__15917_15931__$1;
    var mantissa_15933__$1 = cljs.core.nth.call(null, vec__15921_15932, 0, null);
    var exp_15934__$1 = cljs.core.nth.call(null, vec__15921_15932, 1, null);
    var w_15935 = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
    var d_15936 = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
    var e_15937 = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
    var k_15938 = (new cljs.core.Keyword(null, "k", "k", -2146297393)).cljs$core$IFn$_invoke$arity$1(params);
    var expchar_15939 = function() {
      var or__4126__auto__ = (new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return "E";
      }
    }();
    var add_sign_15940 = function() {
      var or__4126__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return arg__$1 < 0;
      }
    }();
    var prepend_zero_15941 = k_15938 <= 0;
    var scaled_exp_15942 = exp_15934__$1 - (k_15938 - 1);
    var scaled_exp_str_15943 = cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.abs(scaled_exp_15942));
    var scaled_exp_str_15944__$1 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(expchar_15939), scaled_exp_15942 < 0 ? "-" : "+", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(e_15937) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, e_15937 - scaled_exp_str_15943.length, "0")) : null), scaled_exp_str_15943].join("");
    var exp_width_15945 = scaled_exp_str_15944__$1.length;
    var base_mantissa_width_15946 = cljs.core.count.call(null, mantissa_15933__$1);
    var scaled_mantissa_15947 = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, -k_15938, "0"))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(mantissa_15933__$1), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(d_15936) ? cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, d_15936 - (base_mantissa_width_15946 - 1) - (k_15938 < 0 ? -k_15938 : 0), "0")) : null)].join("");
    var w_mantissa_15948 = cljs.core.truth_(w_15935) ? w_15935 - exp_width_15945 : null;
    var vec__15924_15949 = cljs.pprint.round_str.call(null, scaled_mantissa_15947, 0, cljs.core._EQ_.call(null, k_15938, 0) ? d_15936 - 1 : k_15938 > 0 ? d_15936 : k_15938 < 0 ? d_15936 - 1 : null, cljs.core.truth_(w_mantissa_15948) ? w_mantissa_15948 - (cljs.core.truth_(add_sign_15940) ? 1 : 0) : null);
    var rounded_mantissa_15950 = cljs.core.nth.call(null, vec__15924_15949, 0, null);
    var __15951 = cljs.core.nth.call(null, vec__15924_15949, 1, null);
    var incr_exp_15952 = cljs.core.nth.call(null, vec__15924_15949, 2, null);
    var full_mantissa_15953 = cljs.pprint.insert_scaled_decimal.call(null, rounded_mantissa_15950, k_15938);
    var append_zero_15954 = cljs.core._EQ_.call(null, k_15938, cljs.core.count.call(null, rounded_mantissa_15950)) && d_15936 == null;
    if (cljs.core.not.call(null, incr_exp_15952)) {
      if (cljs.core.truth_(w_15935)) {
        var len_15955 = full_mantissa_15953.length + exp_width_15945;
        var signed_len_15956 = cljs.core.truth_(add_sign_15940) ? len_15955 + 1 : len_15955;
        var prepend_zero_15957__$1 = prepend_zero_15941 && !cljs.core._EQ_.call(null, signed_len_15956, w_15935);
        var full_len_15958 = prepend_zero_15957__$1 ? signed_len_15956 + 1 : signed_len_15956;
        var append_zero_15959__$1 = append_zero_15954 && full_len_15958 < w_15935;
        if (cljs.core.truth_(function() {
          var and__4115__auto__ = function() {
            var or__4126__auto__ = full_len_15958 > w_15935;
            if (or__4126__auto__) {
              return or__4126__auto__;
            } else {
              var and__4115__auto__ = e_15937;
              if (cljs.core.truth_(and__4115__auto__)) {
                return exp_width_15945 - 2 > e_15937;
              } else {
                return and__4115__auto__;
              }
            }
          }();
          if (cljs.core.truth_(and__4115__auto__)) {
            return (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params);
          } else {
            return and__4115__auto__;
          }
        }())) {
          cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_15935, (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params))));
        } else {
          cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w_15935 - full_len_15958 - (append_zero_15959__$1 ? 1 : 0), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.truth_(add_sign_15940) ? arg__$1 < 0 ? "-" : "+" : null, prepend_zero_15957__$1 ? "0" : null, full_mantissa_15953, append_zero_15959__$1 ? "0" : null, scaled_exp_str_15944__$1].join(""));
        }
      } else {
        cljs.pprint.print.call(null, [cljs.core.truth_(add_sign_15940) ? arg__$1 < 0 ? "-" : "+" : null, prepend_zero_15941 ? "0" : null, full_mantissa_15953, append_zero_15954 ? "0" : null, scaled_exp_str_15944__$1].join(""));
      }
    } else {
      var G__15960 = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_15950, exp_15934__$1 + 1], null);
      G__15917_15931__$1 = G__15960;
      continue;
    }
    break;
  }
  return navigator__$1;
};
cljs.pprint.general_float = function cljs$pprint$general_float(params, navigator, offsets) {
  var vec__15961 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__15961, 0, null);
  var _ = cljs.core.nth.call(null, vec__15961, 1, null);
  var arg__$1 = cljs.pprint.convert_ratio.call(null, arg);
  var vec__15964 = cljs.pprint.float_parts.call(null, arg__$1 < 0 ? -arg__$1 : arg__$1);
  var mantissa = cljs.core.nth.call(null, vec__15964, 0, null);
  var exp = cljs.core.nth.call(null, vec__15964, 1, null);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var e = (new cljs.core.Keyword(null, "e", "e", 1381269198)).cljs$core$IFn$_invoke$arity$1(params);
  var n = cljs.core._EQ_.call(null, arg__$1, 0.0) ? 0 : exp + 1;
  var ee = cljs.core.truth_(e) ? e + 2 : 4;
  var ww = cljs.core.truth_(w) ? w - ee : null;
  var d__$1 = cljs.core.truth_(d) ? d : function() {
    var x__4214__auto__ = cljs.core.count.call(null, mantissa);
    var y__4215__auto__ = function() {
      var x__4217__auto__ = n;
      var y__4218__auto__ = 7;
      return x__4217__auto__ < y__4218__auto__ ? x__4217__auto__ : y__4218__auto__;
    }();
    return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
  }();
  var dd = d__$1 - n;
  if (0 <= dd && dd <= d__$1) {
    var navigator__$1 = cljs.pprint.fixed_float.call(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null, "w", "w", 354169001), ww, new cljs.core.Keyword(null, "d", "d", 1972142424), dd, new cljs.core.Keyword(null, "k", "k", -2146297393), 0, new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), (new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "padchar", "padchar", 
    2018584530), (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params), new cljs.core.Keyword(null, "at", "at", 1476951349), (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)], null), navigator, offsets);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, ee, " ")));
    return navigator__$1;
  } else {
    return cljs.pprint.exponential_float.call(null, params, navigator, offsets);
  }
};
cljs.pprint.dollar_float = function cljs$pprint$dollar_float(params, navigator, offsets) {
  var vec__15967 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__15967, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15967, 1, null);
  var vec__15970 = cljs.pprint.float_parts.call(null, Math.abs(arg));
  var mantissa = cljs.core.nth.call(null, vec__15970, 0, null);
  var exp = cljs.core.nth.call(null, vec__15970, 1, null);
  var d = (new cljs.core.Keyword(null, "d", "d", 1972142424)).cljs$core$IFn$_invoke$arity$1(params);
  var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params);
  var w = (new cljs.core.Keyword(null, "w", "w", 354169001)).cljs$core$IFn$_invoke$arity$1(params);
  var add_sign = function() {
    var or__4126__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return arg < 0;
    }
  }();
  var vec__15973 = cljs.pprint.round_str.call(null, mantissa, exp, d, null);
  var rounded_mantissa = cljs.core.nth.call(null, vec__15973, 0, null);
  var scaled_exp = cljs.core.nth.call(null, vec__15973, 1, null);
  var expanded = cljs.core.nth.call(null, vec__15973, 2, null);
  var fixed_repr = cljs.pprint.get_fixed.call(null, rounded_mantissa, cljs.core.truth_(expanded) ? scaled_exp + 1 : scaled_exp, d);
  var full_repr = [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n - fixed_repr.indexOf("."), "0"))), fixed_repr].join("");
  var full_len = full_repr.length + (cljs.core.truth_(add_sign) ? 1 : 0);
  cljs.pprint.print.call(null, [cljs.core.truth_(function() {
    var and__4115__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4115__auto__)) {
      return add_sign;
    } else {
      return and__4115__auto__;
    }
  }()) ? arg < 0 ? "-" : "+" : null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, w - full_len, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)))), cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? add_sign : false) ? arg < 0 ? "-" : "+" : null, full_repr].join(""));
  return navigator__$1;
};
cljs.pprint.choice_conditional = function cljs$pprint$choice_conditional(params, arg_navigator, offsets) {
  var arg = (new cljs.core.Keyword(null, "selector", "selector", 762528866)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__15976 = cljs.core.truth_(arg) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg, arg_navigator], null) : cljs.pprint.next_arg.call(null, arg_navigator);
  var arg__$1 = cljs.core.nth.call(null, vec__15976, 0, null);
  var navigator = cljs.core.nth.call(null, vec__15976, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = arg__$1 < 0 || arg__$1 >= cljs.core.count.call(null, clauses) ? cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params)) : cljs.core.nth.call(null, clauses, arg__$1);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.boolean_conditional = function cljs$pprint$boolean_conditional(params, arg_navigator, offsets) {
  var vec__15979 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__15979, 0, null);
  var navigator = cljs.core.nth.call(null, vec__15979, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.second.call(null, clauses) : cljs.core.first.call(null, clauses);
  if (cljs.core.truth_(clause)) {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } else {
    return navigator;
  }
};
cljs.pprint.check_arg_conditional = function cljs$pprint$check_arg_conditional(params, arg_navigator, offsets) {
  var vec__15982 = cljs.pprint.next_arg.call(null, arg_navigator);
  var arg = cljs.core.nth.call(null, vec__15982, 0, null);
  var navigator = cljs.core.nth.call(null, vec__15982, 1, null);
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause = cljs.core.truth_(arg) ? cljs.core.first.call(null, clauses) : null;
  if (cljs.core.truth_(arg)) {
    if (cljs.core.truth_(clause)) {
      return cljs.pprint.execute_sub_format.call(null, clause, arg_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return arg_navigator;
    }
  } else {
    return navigator;
  }
};
cljs.pprint.iterate_sublist = function cljs$pprint$iterate_sublist(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__15985 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__15985, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15985, 1, null);
  var vec__15988 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__15988, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__15988, 1, null);
  var args = cljs.pprint.init_navigator.call(null, arg_list);
  var count = 0;
  var args__$1 = args;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1), last_pos) && count > 1) {
      throw Error("%{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4126__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(args__$1)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        var and__4115__auto__ = max_count;
        if (cljs.core.truth_(and__4115__auto__)) {
          return count >= max_count;
        } else {
          return and__4115__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, args__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__15991 = count + 1;
        var G__15992 = iter_result;
        var G__15993 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(args__$1);
        count = G__15991;
        args__$1 = G__15992;
        last_pos = G__15993;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_list_of_sublists = function cljs$pprint$iterate_list_of_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__15994 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__15994, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__15994, 1, null);
  var vec__15997 = cljs.pprint.next_arg.call(null, navigator__$1);
  var arg_list = cljs.core.nth.call(null, vec__15997, 0, null);
  var navigator__$2 = cljs.core.nth.call(null, vec__15997, 1, null);
  var count = 0;
  var arg_list__$1 = arg_list;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4126__auto__ = cljs.core.empty_QMARK_.call(null, arg_list__$1) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        var and__4115__auto__ = max_count;
        if (cljs.core.truth_(and__4115__auto__)) {
          return count >= max_count;
        } else {
          return and__4115__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, cljs.core.first.call(null, arg_list__$1)), cljs.pprint.init_navigator.call(null, cljs.core.next.call(null, arg_list__$1)));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$2;
      } else {
        var G__16000 = count + 1;
        var G__16001 = cljs.core.next.call(null, arg_list__$1);
        count = G__16000;
        arg_list__$1 = G__16001;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_list = function cljs$pprint$iterate_main_list(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__16002 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__16002, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__16002, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  var last_pos = -1 | 0;
  while (true) {
    if (cljs.core.not.call(null, max_count) && cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2), last_pos) && count > 1) {
      throw Error("%@{ construct not consuming any arguments: Infinite loop!");
    } else {
    }
    if (cljs.core.truth_(function() {
      var or__4126__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        var and__4115__auto__ = max_count;
        if (cljs.core.truth_(and__4115__auto__)) {
          return count >= max_count;
        } else {
          return and__4115__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return cljs.core.second.call(null, iter_result);
      } else {
        var G__16005 = count + 1;
        var G__16006 = iter_result;
        var G__16007 = (new cljs.core.Keyword(null, "pos", "pos", -864607220)).cljs$core$IFn$_invoke$arity$1(navigator__$2);
        count = G__16005;
        navigator__$2 = G__16006;
        last_pos = G__16007;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.iterate_main_sublists = function cljs$pprint$iterate_main_sublists(params, navigator, offsets) {
  var max_count = (new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563)).cljs$core$IFn$_invoke$arity$1(params);
  var param_clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var vec__16008 = cljs.core.empty_QMARK_.call(null, param_clause) ? cljs.pprint.get_format_arg.call(null, navigator) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause, navigator], null);
  var clause = cljs.core.nth.call(null, vec__16008, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__16008, 1, null);
  var count = 0;
  var navigator__$2 = navigator__$1;
  while (true) {
    if (cljs.core.truth_(function() {
      var or__4126__auto__ = cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator__$2)) && (cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params))) || count > 0);
      if (or__4126__auto__) {
        return or__4126__auto__;
      } else {
        var and__4115__auto__ = max_count;
        if (cljs.core.truth_(and__4115__auto__)) {
          return count >= max_count;
        } else {
          return and__4115__auto__;
        }
      }
    }())) {
      return navigator__$2;
    } else {
      var vec__16014 = cljs.pprint.next_arg_or_nil.call(null, navigator__$2);
      var sublist = cljs.core.nth.call(null, vec__16014, 0, null);
      var navigator__$3 = cljs.core.nth.call(null, vec__16014, 1, null);
      var iter_result = cljs.pprint.execute_sub_format.call(null, clause, cljs.pprint.init_navigator.call(null, sublist), navigator__$3);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007), cljs.core.first.call(null, iter_result))) {
        return navigator__$3;
      } else {
        var G__16017 = count + 1;
        var G__16018 = navigator__$3;
        count = G__16017;
        navigator__$2 = G__16018;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.logical_block_or_justify = function cljs$pprint$logical_block_or_justify(params, navigator, offsets) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "right-params", "right-params", -1790676237)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return cljs.pprint.format_logical_block.call(null, params, navigator, offsets);
  } else {
    return cljs.pprint.justify_clauses.call(null, params, navigator, offsets);
  }
};
cljs.pprint.render_clauses = function cljs$pprint$render_clauses(clauses, navigator, base_navigator) {
  var clauses__$1 = clauses;
  var acc = cljs.core.PersistentVector.EMPTY;
  var navigator__$1 = navigator;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, clauses__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, navigator__$1], null);
    } else {
      var clause = cljs.core.first.call(null, clauses__$1);
      var vec__16024 = function() {
        var sb = new goog.string.StringBuffer;
        var _STAR_out_STAR__orig_val__16027 = cljs.core._STAR_out_STAR_;
        var _STAR_out_STAR__temp_val__16028 = new cljs.core.StringBufferWriter(sb);
        cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__16028;
        try {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format.call(null, clause, navigator__$1, base_navigator), cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)], null);
        } finally {
          cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__16027;
        }
      }();
      var iter_result = cljs.core.nth.call(null, vec__16024, 0, null);
      var result_str = cljs.core.nth.call(null, vec__16024, 1, null);
      if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), cljs.core.first.call(null, iter_result))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc, cljs.core.second.call(null, iter_result)], null);
      } else {
        var G__16029 = cljs.core.next.call(null, clauses__$1);
        var G__16030 = cljs.core.conj.call(null, acc, result_str);
        var G__16031 = iter_result;
        clauses__$1 = G__16029;
        acc = G__16030;
        navigator__$1 = G__16031;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.justify_clauses = function cljs$pprint$justify_clauses(params, navigator, offsets) {
  var vec__16032 = function() {
    var temp__5735__auto__ = (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var else$ = temp__5735__auto__;
      return cljs.pprint.render_clauses.call(null, else$, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
    } else {
      return null;
    }
  }();
  var vec__16035 = cljs.core.nth.call(null, vec__16032, 0, null);
  var eol_str = cljs.core.nth.call(null, vec__16035, 0, null);
  var new_navigator = cljs.core.nth.call(null, vec__16032, 1, null);
  var navigator__$1 = function() {
    var or__4126__auto__ = new_navigator;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return navigator;
    }
  }();
  var vec__16038 = function() {
    var temp__5735__auto__ = (new cljs.core.Keyword(null, "else-params", "else-params", -832171646)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var p = temp__5735__auto__;
      return cljs.pprint.realize_parameter_list.call(null, p, navigator__$1);
    } else {
      return null;
    }
  }();
  var else_params = cljs.core.nth.call(null, vec__16038, 0, null);
  var new_navigator__$1 = cljs.core.nth.call(null, vec__16038, 1, null);
  var navigator__$2 = function() {
    var or__4126__auto__ = new_navigator__$1;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return navigator__$1;
    }
  }();
  var min_remaining = function() {
    var or__4126__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return 0;
    }
  }();
  var max_columns = function() {
    var or__4126__auto__ = cljs.core.first.call(null, (new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262)).cljs$core$IFn$_invoke$arity$1(else_params));
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return cljs.pprint.get_max_column.call(null, cljs.core._STAR_out_STAR_);
    }
  }();
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var vec__16041 = cljs.pprint.render_clauses.call(null, clauses, navigator__$2, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  var strs = cljs.core.nth.call(null, vec__16041, 0, null);
  var navigator__$3 = cljs.core.nth.call(null, vec__16041, 1, null);
  var slots = function() {
    var x__4214__auto__ = 1;
    var y__4215__auto__ = cljs.core.count.call(null, strs) - 1 + (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0) + (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? 1 : 0);
    return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
  }();
  var chars = cljs.core.reduce.call(null, cljs.core._PLUS_, cljs.core.map.call(null, cljs.core.count, strs));
  var mincol = (new cljs.core.Keyword(null, "mincol", "mincol", 1230695445)).cljs$core$IFn$_invoke$arity$1(params);
  var minpad = (new cljs.core.Keyword(null, "minpad", "minpad", 323570901)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var minout = chars + slots * minpad;
  var result_columns = minout <= mincol ? mincol : mincol + colinc * (1 + cljs.core.quot.call(null, minout - mincol - 1, colinc));
  var total_pad = result_columns - chars;
  var pad = function() {
    var x__4214__auto__ = minpad;
    var y__4215__auto__ = cljs.core.quot.call(null, total_pad, slots);
    return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
  }();
  var extra_pad = total_pad - pad * slots;
  var pad_str = cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, pad, (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params)));
  if (cljs.core.truth_(function() {
    var and__4115__auto__ = eol_str;
    if (cljs.core.truth_(and__4115__auto__)) {
      return cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))) + min_remaining + result_columns > max_columns;
    } else {
      return and__4115__auto__;
    }
  }())) {
    cljs.pprint.print.call(null, eol_str);
  } else {
  }
  var slots_16044__$1 = slots;
  var extra_pad_16045__$1 = extra_pad;
  var strs_16046__$1 = strs;
  var pad_only_16047 = function() {
    var or__4126__auto__ = (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, strs_16046__$1), 1) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params));
    }
  }();
  while (true) {
    if (cljs.core.seq.call(null, strs_16046__$1)) {
      cljs.pprint.print.call(null, [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.not.call(null, pad_only_16047) ? cljs.core.first.call(null, strs_16046__$1) : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.truth_(function() {
        var or__4126__auto__ = pad_only_16047;
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          var or__4126__auto____$1 = cljs.core.next.call(null, strs_16046__$1);
          if (or__4126__auto____$1) {
            return or__4126__auto____$1;
          } else {
            return (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
          }
        }
      }()) ? pad_str : null), cljs.core.str.cljs$core$IFn$_invoke$arity$1(extra_pad_16045__$1 > 0 ? (new cljs.core.Keyword(null, "padchar", "padchar", 2018584530)).cljs$core$IFn$_invoke$arity$1(params) : null)].join(""));
      var G__16048 = slots_16044__$1 - 1;
      var G__16049 = extra_pad_16045__$1 - 1;
      var G__16050 = cljs.core.truth_(pad_only_16047) ? strs_16046__$1 : cljs.core.next.call(null, strs_16046__$1);
      var G__16051 = false;
      slots_16044__$1 = G__16048;
      extra_pad_16045__$1 = G__16049;
      strs_16046__$1 = G__16050;
      pad_only_16047 = G__16051;
      continue;
    } else {
    }
    break;
  }
  return navigator__$3;
};
cljs.pprint.downcase_writer = function cljs$pprint$downcase_writer(writer) {
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint16052 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint16052 = function(writer, meta16053) {
      this.writer = writer;
      this.meta16053 = meta16053;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint16052.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16054, meta16053__$1) {
      var self__ = this;
      var _16054__$1 = this;
      return new cljs.pprint.t_cljs$pprint16052(self__.writer, meta16053__$1);
    };
    cljs.pprint.t_cljs$pprint16052.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16054) {
      var self__ = this;
      var _16054__$1 = this;
      return self__.meta16053;
    };
    cljs.pprint.t_cljs$pprint16052.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint16052.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__16055 = cljs.core._EQ_;
      var expr__16056 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__16055.call(null, String, expr__16056))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__16055.call(null, Number, expr__16056))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__16056)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint16052.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta16053", "meta16053", -256698896, null)], null);
    };
    cljs.pprint.t_cljs$pprint16052.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint16052.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint16052";
    cljs.pprint.t_cljs$pprint16052.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.pprint/t_cljs$pprint16052");
    };
    cljs.pprint.__GT_t_cljs$pprint16052 = function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint16052(writer__$1, meta16053) {
      return new cljs.pprint.t_cljs$pprint16052(writer__$1, meta16053);
    };
  }
  return new cljs.pprint.t_cljs$pprint16052(writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.upcase_writer = function cljs$pprint$upcase_writer(writer) {
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint16058 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint16058 = function(writer, meta16059) {
      this.writer = writer;
      this.meta16059 = meta16059;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint16058.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16060, meta16059__$1) {
      var self__ = this;
      var _16060__$1 = this;
      return new cljs.pprint.t_cljs$pprint16058(self__.writer, meta16059__$1);
    };
    cljs.pprint.t_cljs$pprint16058.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16060) {
      var self__ = this;
      var _16060__$1 = this;
      return self__.meta16059;
    };
    cljs.pprint.t_cljs$pprint16058.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint16058.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__16061 = cljs.core._EQ_;
      var expr__16062 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__16061.call(null, String, expr__16062))) {
        var s = x;
        return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, s));
      } else {
        if (cljs.core.truth_(pred__16061.call(null, Number, expr__16062))) {
          var c = x;
          return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, cljs.core.char$.call(null, c)));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__16062)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint16058.getBasis = function() {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "meta16059", "meta16059", 1142276405, null)], null);
    };
    cljs.pprint.t_cljs$pprint16058.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint16058.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint16058";
    cljs.pprint.t_cljs$pprint16058.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.pprint/t_cljs$pprint16058");
    };
    cljs.pprint.__GT_t_cljs$pprint16058 = function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint16058(writer__$1, meta16059) {
      return new cljs.pprint.t_cljs$pprint16058(writer__$1, meta16059);
    };
  }
  return new cljs.pprint.t_cljs$pprint16058(writer, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.capitalize_string = function cljs$pprint$capitalize_string(s, first_QMARK_) {
  var f = cljs.core.first.call(null, s);
  var s__$1 = cljs.core.truth_(function() {
    var and__4115__auto__ = first_QMARK_;
    if (cljs.core.truth_(and__4115__auto__)) {
      var and__4115__auto____$1 = f;
      if (cljs.core.truth_(and__4115__auto____$1)) {
        return goog.string.isUnicodeChar(f);
      } else {
        return and__4115__auto____$1;
      }
    } else {
      return and__4115__auto__;
    }
  }()) ? [clojure.string.upper_case.call(null, f), cljs.core.subs.call(null, s, 1)].join("") : s;
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(s__$2) {
    if (cljs.core.empty_QMARK_.call(null, s__$2)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, null], null);
    } else {
      var m = RegExp("\\W\\w", "g").exec(s__$2);
      var offset = function() {
        var and__4115__auto__ = m;
        if (cljs.core.truth_(and__4115__auto__)) {
          return m.index + 1;
        } else {
          return and__4115__auto__;
        }
      }();
      if (cljs.core.truth_(offset)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.call(null, s__$2, 0, offset), clojure.string.upper_case.call(null, cljs.core.nth.call(null, s__$2, offset))].join(""), cljs.core.subs.call(null, s__$2, offset + 1)], null);
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2, null], null);
      }
    }
  }, s__$1)));
};
cljs.pprint.capitalize_word_writer = function cljs$pprint$capitalize_word_writer(writer) {
  var last_was_whitespace_QMARK_ = cljs.core.atom.call(null, true);
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint16064 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint16064 = function(writer, last_was_whitespace_QMARK_, meta16065) {
      this.writer = writer;
      this.last_was_whitespace_QMARK_ = last_was_whitespace_QMARK_;
      this.meta16065 = meta16065;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint16064.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16066, meta16065__$1) {
      var self__ = this;
      var _16066__$1 = this;
      return new cljs.pprint.t_cljs$pprint16064(self__.writer, self__.last_was_whitespace_QMARK_, meta16065__$1);
    };
    cljs.pprint.t_cljs$pprint16064.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16066) {
      var self__ = this;
      var _16066__$1 = this;
      return self__.meta16065;
    };
    cljs.pprint.t_cljs$pprint16064.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint16064.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__16067 = cljs.core._EQ_;
      var expr__16068 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__16067.call(null, String, expr__16068))) {
        var s = x;
        cljs.core._write.call(null, self__.writer, cljs.pprint.capitalize_string.call(null, s.toLowerCase(), cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)));
        if (s.length > 0) {
          return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(cljs.core.nth.call(null, s, cljs.core.count.call(null, s) - 1)));
        } else {
          return null;
        }
      } else {
        if (cljs.core.truth_(pred__16067.call(null, Number, expr__16068))) {
          var c = cljs.core.char$.call(null, x);
          var mod_c = cljs.core.truth_(cljs.core.deref.call(null, self__.last_was_whitespace_QMARK_)) ? clojure.string.upper_case.call(null, c) : c;
          cljs.core._write.call(null, self__.writer, mod_c);
          return cljs.core.reset_BANG_.call(null, self__.last_was_whitespace_QMARK_, goog.string.isEmptyOrWhitespace(c));
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__16068)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint16064.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "last-was-whitespace?", "last-was-whitespace?", -1073928093, null), new cljs.core.Symbol(null, "meta16065", "meta16065", -496568330, null)], null);
    };
    cljs.pprint.t_cljs$pprint16064.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint16064.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint16064";
    cljs.pprint.t_cljs$pprint16064.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.pprint/t_cljs$pprint16064");
    };
    cljs.pprint.__GT_t_cljs$pprint16064 = function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint16064(writer__$1, last_was_whitespace_QMARK___$1, meta16065) {
      return new cljs.pprint.t_cljs$pprint16064(writer__$1, last_was_whitespace_QMARK___$1, meta16065);
    };
  }
  return new cljs.pprint.t_cljs$pprint16064(writer, last_was_whitespace_QMARK_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.init_cap_writer = function cljs$pprint$init_cap_writer(writer) {
  var capped = cljs.core.atom.call(null, false);
  if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.t_cljs$pprint16070 !== "undefined") {
  } else {
    cljs.pprint.t_cljs$pprint16070 = function(writer, capped, meta16071) {
      this.writer = writer;
      this.capped = capped;
      this.meta16071 = meta16071;
      this.cljs$lang$protocol_mask$partition0$ = 1074135040;
      this.cljs$lang$protocol_mask$partition1$ = 0;
    };
    cljs.pprint.t_cljs$pprint16070.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_16072, meta16071__$1) {
      var self__ = this;
      var _16072__$1 = this;
      return new cljs.pprint.t_cljs$pprint16070(self__.writer, self__.capped, meta16071__$1);
    };
    cljs.pprint.t_cljs$pprint16070.prototype.cljs$core$IMeta$_meta$arity$1 = function(_16072) {
      var self__ = this;
      var _16072__$1 = this;
      return self__.meta16071;
    };
    cljs.pprint.t_cljs$pprint16070.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core._flush.call(null, self__.writer);
    };
    cljs.pprint.t_cljs$pprint16070.prototype.cljs$core$IWriter$_write$arity$2 = function(this$, x) {
      var self__ = this;
      var this$__$1 = this;
      var pred__16073 = cljs.core._EQ_;
      var expr__16074 = cljs.core.type.call(null, x);
      if (cljs.core.truth_(pred__16073.call(null, String, expr__16074))) {
        var s = clojure.string.lower_case.call(null, x);
        if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped))) {
          var m = RegExp("\\S", "g").exec(s);
          var offset = function() {
            var and__4115__auto__ = m;
            if (cljs.core.truth_(and__4115__auto__)) {
              return m.index;
            } else {
              return and__4115__auto__;
            }
          }();
          if (cljs.core.truth_(offset)) {
            cljs.core._write.call(null, self__.writer, [cljs.core.subs.call(null, s, 0, offset), clojure.string.upper_case.call(null, cljs.core.nth.call(null, s, offset)), clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, offset + 1))].join(""));
            return cljs.core.reset_BANG_.call(null, self__.capped, true);
          } else {
            return cljs.core._write.call(null, self__.writer, s);
          }
        } else {
          return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, s));
        }
      } else {
        if (cljs.core.truth_(pred__16073.call(null, Number, expr__16074))) {
          var c = cljs.core.char$.call(null, x);
          if (cljs.core.not.call(null, cljs.core.deref.call(null, self__.capped)) && goog.string.isUnicodeChar(c)) {
            cljs.core.reset_BANG_.call(null, self__.capped, true);
            return cljs.core._write.call(null, self__.writer, clojure.string.upper_case.call(null, c));
          } else {
            return cljs.core._write.call(null, self__.writer, clojure.string.lower_case.call(null, c));
          }
        } else {
          throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__16074)].join(""));
        }
      }
    };
    cljs.pprint.t_cljs$pprint16070.getBasis = function() {
      return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "writer", "writer", 1362963291, null), new cljs.core.Symbol(null, "capped", "capped", -1650988402, null), new cljs.core.Symbol(null, "meta16071", "meta16071", -1091800578, null)], null);
    };
    cljs.pprint.t_cljs$pprint16070.cljs$lang$type = true;
    cljs.pprint.t_cljs$pprint16070.cljs$lang$ctorStr = "cljs.pprint/t_cljs$pprint16070";
    cljs.pprint.t_cljs$pprint16070.cljs$lang$ctorPrWriter = function(this__4369__auto__, writer__4370__auto__, opt__4371__auto__) {
      return cljs.core._write.call(null, writer__4370__auto__, "cljs.pprint/t_cljs$pprint16070");
    };
    cljs.pprint.__GT_t_cljs$pprint16070 = function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint16070(writer__$1, capped__$1, meta16071) {
      return new cljs.pprint.t_cljs$pprint16070(writer__$1, capped__$1, meta16071);
    };
  }
  return new cljs.pprint.t_cljs$pprint16070(writer, capped, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.pprint.modify_case = function cljs$pprint$modify_case(make_writer, params, navigator, offsets) {
  var clause = cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params));
  var _STAR_out_STAR__orig_val__16076 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__16077 = make_writer.call(null, cljs.core._STAR_out_STAR_);
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__16077;
  try {
    return cljs.pprint.execute_sub_format.call(null, clause, navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__16076;
  }
};
cljs.pprint.get_pretty_writer = function cljs$pprint$get_pretty_writer(writer) {
  if (cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_.call(null, writer))) {
    return writer;
  } else {
    return cljs.pprint.pretty_writer.call(null, writer, cljs.pprint._STAR_print_right_margin_STAR_, cljs.pprint._STAR_print_miser_width_STAR_);
  }
};
cljs.pprint.fresh_line = function cljs$pprint$fresh_line() {
  if (!(cljs.core._STAR_out_STAR_ == null) ? cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === cljs.core._STAR_out_STAR_.cljs$core$IDeref$ ? true : !cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, cljs.core._STAR_out_STAR_)) {
    if (!cljs.core._EQ_.call(null, 0, cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_)))))) {
      return cljs.pprint.prn.call(null);
    } else {
      return null;
    }
  } else {
    return cljs.pprint.prn.call(null);
  }
};
cljs.pprint.absolute_tabulation = function cljs$pprint$absolute_tabulation(params, navigator, offsets) {
  var colnum_16079 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_16080 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var current_16081 = cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var space_count_16082 = current_16081 < colnum_16079 ? colnum_16079 - current_16081 : cljs.core._EQ_.call(null, colinc_16080, 0) ? 0 : colinc_16080 - cljs.core.rem.call(null, current_16081 - colnum_16079, colinc_16080);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_16082, " ")));
  return navigator;
};
cljs.pprint.relative_tabulation = function cljs$pprint$relative_tabulation(params, navigator, offsets) {
  var colrel_16083 = (new cljs.core.Keyword(null, "colnum", "colnum", 2023796854)).cljs$core$IFn$_invoke$arity$1(params);
  var colinc_16084 = (new cljs.core.Keyword(null, "colinc", "colinc", -584873385)).cljs$core$IFn$_invoke$arity$1(params);
  var start_col_16085 = colrel_16083 + cljs.pprint.get_column.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(cljs.core.deref.call(null, cljs.core.deref.call(null, cljs.core._STAR_out_STAR_))));
  var offset_16086 = colinc_16084 > 0 ? cljs.core.rem.call(null, start_col_16085, colinc_16084) : 0;
  var space_count_16087 = colrel_16083 + (cljs.core._EQ_.call(null, 0, offset_16086) ? 0 : colinc_16084 - offset_16086);
  cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, space_count_16087, " ")));
  return navigator;
};
cljs.pprint.format_logical_block = function cljs$pprint$format_logical_block(params, navigator, offsets) {
  var clauses = (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(params);
  var clause_count = cljs.core.count.call(null, clauses);
  var prefix = clause_count > 1 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.first.call(null, clauses)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? "(" : null;
  var body = cljs.core.nth.call(null, clauses, clause_count > 1 ? 1 : 0);
  var suffix = clause_count > 2 ? (new cljs.core.Keyword(null, "string", "string", -1989541586)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, cljs.core.nth.call(null, clauses, 2)))) : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? ")" : null;
  var vec__16088 = cljs.pprint.next_arg.call(null, navigator);
  var arg = cljs.core.nth.call(null, vec__16088, 0, null);
  var navigator__$1 = cljs.core.nth.call(null, vec__16088, 1, null);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__16091_16095 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__16092_16096 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__16093_16097 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__16094_16098 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16093_16097;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16094_16098;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, suffix);
      cljs.pprint.execute_sub_format.call(null, body, cljs.pprint.init_navigator.call(null, arg), (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16092_16096;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16091_16095;
    }
  }
  return navigator__$1;
};
cljs.pprint.set_indent = function cljs$pprint$set_indent(params, navigator, offsets) {
  var relative_to = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "current", "current", -1088038603) : new cljs.core.Keyword(null, "block", "block", 664686210);
  cljs.pprint.pprint_indent.call(null, relative_to, (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params));
  return navigator;
};
cljs.pprint.conditional_newline = function cljs$pprint$conditional_newline(params, navigator, offsets) {
  var kind = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, "mandatory", "mandatory", 542802336) : new cljs.core.Keyword(null, "fill", "fill", 883462889) : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.Keyword(null, 
  "miser", "miser", -556060186) : new cljs.core.Keyword(null, "linear", "linear", 872268697);
  cljs.pprint.pprint_newline.call(null, kind);
  return navigator;
};
cljs.pprint.directive_table = cljs.core.PersistentHashMap.fromArrays(["A", "S", "D", "B", "O", "X", "R", "P", "C", "F", "E", "G", "$", "%", "\x26", "|", "~", "\n", "T", "*", "?", "(", ")", "[", ";", "]", "{", "}", "\x3c", "\x3e", "^", "W", "_", "I"], [new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "A", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", 
"mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), 
new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__16099_SHARP_, p2__16100_SHARP_, p3__16101_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.print_str, p1__16099_SHARP_, p2__16100_SHARP_, p3__16101_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "S", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__16102_SHARP_, p2__16103_SHARP_, p3__16104_SHARP_) {
    return cljs.pprint.format_ascii.call(null, cljs.core.pr_str, p1__16102_SHARP_, p2__16103_SHARP_, p3__16104_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "D", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__16105_SHARP_, p2__16106_SHARP_, p3__16107_SHARP_) {
    return cljs.pprint.format_integer.call(null, 10, p1__16105_SHARP_, p2__16106_SHARP_, p3__16107_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "B", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__16108_SHARP_, p2__16109_SHARP_, p3__16110_SHARP_) {
    return cljs.pprint.format_integer.call(null, 2, p1__16108_SHARP_, p2__16109_SHARP_, p3__16110_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "O", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__16111_SHARP_, p2__16112_SHARP_, p3__16113_SHARP_) {
    return cljs.pprint.format_integer.call(null, 8, p1__16111_SHARP_, p2__16112_SHARP_, p3__16113_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "X", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(p1__16114_SHARP_, p2__16115_SHARP_, p3__16116_SHARP_) {
    return cljs.pprint.format_integer.call(null, 16, p1__16114_SHARP_, p2__16115_SHARP_, p3__16116_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "R", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "base", "base", 185279322), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "commachar", "commachar", 652859327), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [",", String], null), new cljs.core.Keyword(null, "commainterval", "commainterval", -1980061083), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[3, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(cljs.core.first.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(params)))) {
    return function(p1__16117_SHARP_, p2__16118_SHARP_, p3__16119_SHARP_) {
      return cljs.pprint.format_integer.call(null, (new cljs.core.Keyword(null, "base", "base", 185279322)).cljs$core$IFn$_invoke$arity$1(p1__16117_SHARP_), p1__16117_SHARP_, p2__16118_SHARP_, p3__16119_SHARP_);
    };
  } else {
    if (cljs.core.truth_(function() {
      var and__4115__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
      if (cljs.core.truth_(and__4115__auto__)) {
        return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
      } else {
        return and__4115__auto__;
      }
    }())) {
      return function(p1__16120_SHARP_, p2__16121_SHARP_, p3__16122_SHARP_) {
        return cljs.pprint.format_old_roman.call(null, p1__16120_SHARP_, p2__16121_SHARP_, p3__16122_SHARP_);
      };
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return function(p1__16123_SHARP_, p2__16124_SHARP_, p3__16125_SHARP_) {
          return cljs.pprint.format_new_roman.call(null, p1__16123_SHARP_, p2__16124_SHARP_, p3__16125_SHARP_);
        };
      } else {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
          return function(p1__16126_SHARP_, p2__16127_SHARP_, p3__16128_SHARP_) {
            return cljs.pprint.format_ordinal_english.call(null, p1__16126_SHARP_, p2__16127_SHARP_, p3__16128_SHARP_);
          };
        } else {
          return function(p1__16129_SHARP_, p2__16130_SHARP_, p3__16131_SHARP_) {
            return cljs.pprint.format_cardinal_english.call(null, p1__16129_SHARP_, p2__16130_SHARP_, p3__16131_SHARP_);
          };
        }
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "P", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var navigator__$1 = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.pprint.relative_reposition.call(null, navigator, -1) : navigator;
    var strs = cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["y", "ies"], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", "s"], null);
    var vec__16141 = cljs.pprint.next_arg.call(null, navigator__$1);
    var arg = cljs.core.nth.call(null, vec__16141, 0, null);
    var navigator__$2 = cljs.core.nth.call(null, vec__16141, 1, null);
    cljs.pprint.print.call(null, cljs.core._EQ_.call(null, arg, 1) ? cljs.core.first.call(null, strs) : cljs.core.second.call(null, strs));
    return navigator__$2;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "C", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "char-format", "char-format", -1016499218), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.pretty_character;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.readable_character;
    } else {
      return cljs.pprint.plain_character;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "F", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.fixed_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "E", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.exponential_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "G", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "e", "e", 1381269198), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "k", "k", -2146297393), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "overflowchar", "overflowchar", -1620088106), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], 
null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null), new cljs.core.Keyword(null, "exponentchar", "exponentchar", 1986664222), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, 
"at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.general_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "$", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "d", "d", 1972142424), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [2, Number], null), new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "w", "w", 354169001), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.dollar_float;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "%", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__4613__auto___16159 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_16160 = 0;
    while (true) {
      if (i_16160 < n__4613__auto___16159) {
        cljs.pprint.prn.call(null);
        var G__16161 = i_16160 + 1;
        i_16160 = G__16161;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x26", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var cnt_16162 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cnt_16162 > 0) {
      cljs.pprint.fresh_line.call(null);
    } else {
    }
    var n__4613__auto___16163 = cnt_16162 - 1;
    var i_16164 = 0;
    while (true) {
      if (i_16164 < n__4613__auto___16163) {
        cljs.pprint.prn.call(null);
        var G__16165 = i_16164 + 1;
        i_16164 = G__16165;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "|", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "count", "count", 2139924085), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n__4613__auto___16166 = (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var i_16167 = 0;
    while (true) {
      if (i_16167 < n__4613__auto___16166) {
        cljs.pprint.print.call(null, "\f");
        var G__16168 = i_16167 + 1;
        i_16167 = G__16168;
        continue;
      } else {
      }
      break;
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "~", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, 
"bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    cljs.pprint.print.call(null, cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, n, "~")));
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\n", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), 
new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, arg_navigator, offsets) {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      cljs.pprint.prn.call(null);
    } else {
    }
    return arg_navigator;
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "T", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colnum", "colnum", 2023796854), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(p1__16132_SHARP_, p2__16133_SHARP_, p3__16134_SHARP_) {
      return cljs.pprint.relative_tabulation.call(null, p1__16132_SHARP_, p2__16133_SHARP_, p3__16134_SHARP_);
    };
  } else {
    return function(p1__16135_SHARP_, p2__16136_SHARP_, p3__16137_SHARP_) {
      return cljs.pprint.absolute_tabulation.call(null, p1__16135_SHARP_, p2__16136_SHARP_, p3__16137_SHARP_);
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "*", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var n = (new cljs.core.Keyword(null, "n", "n", 562130025)).cljs$core$IFn$_invoke$arity$1(params__$1);
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params__$1))) {
      return cljs.pprint.absolute_reposition.call(null, navigator, n);
    } else {
      return cljs.pprint.relative_reposition.call(null, navigator, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? -n : n);
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "?", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), 
cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
    return function(params__$1, navigator, offsets) {
      var vec__16144 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__16144, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__16144, 1, null);
      return cljs.pprint.execute_sub_format.call(null, subformat, navigator__$1, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__16147 = cljs.pprint.get_format_arg.call(null, navigator);
      var subformat = cljs.core.nth.call(null, vec__16147, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__16147, 1, null);
      var vec__16150 = cljs.pprint.next_arg.call(null, navigator__$1);
      var subargs = cljs.core.nth.call(null, vec__16150, 0, null);
      var navigator__$2 = cljs.core.nth.call(null, vec__16150, 1, null);
      var sub_navigator = cljs.pprint.init_navigator.call(null, subargs);
      cljs.pprint.execute_sub_format.call(null, subformat, sub_navigator, (new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1));
      return navigator__$2;
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "(", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), ")", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), null, new cljs.core.Keyword(null, "else", "else", -1508377146), null], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  var mod_case_writer = cljs.core.truth_(function() {
    var and__4115__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4115__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4115__auto__;
    }
  }()) ? cljs.pprint.upcase_writer : cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.capitalize_word_writer : cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? cljs.pprint.init_cap_writer : cljs.pprint.downcase_writer;
  return function(p1__16138_SHARP_, p2__16139_SHARP_, p3__16140_SHARP_) {
    return cljs.pprint.modify_case.call(null, mod_case_writer, p1__16138_SHARP_, p2__16139_SHARP_, p3__16140_SHARP_);
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ")", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "[", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "selector", "selector", 762528866), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "]", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), true, new cljs.core.Keyword(null, "else", "else", -1508377146), 
new cljs.core.Keyword(null, "last", "last", 1105735132)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
    return cljs.pprint.boolean_conditional;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.check_arg_conditional;
    } else {
      return cljs.pprint.choice_conditional;
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), ";", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "min-remaining", "min-remaining", 962687677), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "max-columns", "max-columns", 1742323262), new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), true], null), new cljs.core.Keyword(null, 
"generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "]", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), cljs.core.PersistentHashSet.EMPTY, new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, 
offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "{", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "max-iterations", "max-iterations", 2021275563), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, 
new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "right", "right", -452581833), "}", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
false], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var and__4115__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(and__4115__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    } else {
      return and__4115__auto__;
    }
  }())) {
    return cljs.pprint.iterate_main_sublists;
  } else {
    if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params))) {
      return cljs.pprint.iterate_list_of_sublists;
    } else {
      if (cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params))) {
        return cljs.pprint.iterate_main_list;
      } else {
        return cljs.pprint.iterate_sublist;
      }
    }
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "}", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3c", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "mincol", "mincol", 1230695445), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "colinc", "colinc", -584873385), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[1, Number], null), new cljs.core.Keyword(null, "minpad", "minpad", 323570901), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null), new cljs.core.Keyword(null, "padchar", "padchar", 2018584530), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", String], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, 
"colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, "both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "right", "right", -452581833), "\x3e", new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742), 
true, new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.Keyword(null, "first", "first", -644103046)], null), new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.logical_block_or_justify;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "\x3e", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", 
-1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return null;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "^", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "arg1", "arg1", 951899358), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null), new cljs.core.Keyword(null, "arg2", "arg2", 1729550917), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
[null, Number], null), new cljs.core.Keyword(null, "arg3", "arg3", -1486822496), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, 
new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return function(params__$1, navigator, offsets) {
    var arg1 = (new cljs.core.Keyword(null, "arg1", "arg1", 951899358)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg2 = (new cljs.core.Keyword(null, "arg2", "arg2", 1729550917)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var arg3 = (new cljs.core.Keyword(null, "arg3", "arg3", -1486822496)).cljs$core$IFn$_invoke$arity$1(params__$1);
    var exit = cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? new cljs.core.Keyword(null, "colon-up-arrow", "colon-up-arrow", 244853007) : new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333);
    if (cljs.core.truth_(function() {
      var and__4115__auto__ = arg1;
      if (cljs.core.truth_(and__4115__auto__)) {
        var and__4115__auto____$1 = arg2;
        if (cljs.core.truth_(and__4115__auto____$1)) {
          return arg3;
        } else {
          return and__4115__auto____$1;
        }
      } else {
        return and__4115__auto__;
      }
    }())) {
      if (arg1 <= arg2 && arg2 <= arg3) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
      } else {
        return navigator;
      }
    } else {
      if (cljs.core.truth_(function() {
        var and__4115__auto__ = arg1;
        if (cljs.core.truth_(and__4115__auto__)) {
          return arg2;
        } else {
          return and__4115__auto__;
        }
      }())) {
        if (cljs.core._EQ_.call(null, arg1, arg2)) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
        } else {
          return navigator;
        }
      } else {
        if (cljs.core.truth_(arg1)) {
          if (cljs.core._EQ_.call(null, arg1, 0)) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        } else {
          if (cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params__$1)) ? cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "base-args", "base-args", -1268706822)).cljs$core$IFn$_invoke$arity$1(params__$1))) : cljs.core.empty_QMARK_.call(null, (new cljs.core.Keyword(null, "rest", "rest", -1241696419)).cljs$core$IFn$_invoke$arity$1(navigator))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit, navigator], null);
          } else {
            return navigator;
          }
        }
      }
    }
  };
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "W", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null, new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params);
    }
  }())) {
    var bindings = cljs.core.concat.call(null, cljs.core.truth_((new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(params)) ? new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "level", "level", 1290497552), null, new cljs.core.Keyword(null, "length", "length", 588987862), null], null) : cljs.core.PersistentVector.EMPTY, cljs.core.truth_((new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params)) ? 
    new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "pretty", "pretty", -1916372486), true], null) : cljs.core.PersistentVector.EMPTY);
    return function(params__$1, navigator, offsets) {
      var vec__16153 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__16153, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__16153, 1, null);
      if (cljs.core.truth_(cljs.core.apply.call(null, cljs.pprint.write, arg, bindings))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  } else {
    return function(params__$1, navigator, offsets) {
      var vec__16156 = cljs.pprint.next_arg.call(null, navigator);
      var arg = cljs.core.nth.call(null, vec__16156, 0, null);
      var navigator__$1 = cljs.core.nth.call(null, vec__16156, 1, null);
      if (cljs.core.truth_(cljs.pprint.write_out.call(null, arg))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "up-arrow", "up-arrow", 1705310333), navigator__$1], null);
      } else {
        return navigator__$1;
      }
    };
  }
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "_", new cljs.core.Keyword(null, "params", "params", 710516235), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null, new cljs.core.Keyword(null, "at", "at", 1476951349), null, new cljs.core.Keyword(null, 
"both", "both", -393648840), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.conditional_newline;
}], null), new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "directive", "directive", 793559132), "I", new cljs.core.Keyword(null, "params", "params", 710516235), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "n", "n", 562130025), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [0, Number], null)], null), new cljs.core.Keyword(null, "flags", "flags", 1775418075), new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 
1, [new cljs.core.Keyword(null, "colon", "colon", -965200945), null], null), null), new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656), function(params, offset) {
  return cljs.pprint.set_indent;
}], null)]);
cljs.pprint.param_pattern = /^([vV]|#|('.)|([+-]?\d+)|(?=,))/;
cljs.pprint.special_params = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335), null, new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196), null], null), null);
cljs.pprint.extract_param = function cljs$pprint$extract_param(p__16169) {
  var vec__16170 = p__16169;
  var s = cljs.core.nth.call(null, vec__16170, 0, null);
  var offset = cljs.core.nth.call(null, vec__16170, 1, null);
  var saw_comma = cljs.core.nth.call(null, vec__16170, 2, null);
  var m = new RegExp(cljs.pprint.param_pattern.source, "g");
  var param = m.exec(s);
  if (cljs.core.truth_(param)) {
    var token_str = cljs.core.first.call(null, param);
    var remainder = cljs.core.subs.call(null, s, m.lastIndex);
    var new_offset = offset + m.lastIndex;
    if (!cljs.core._EQ_.call(null, ",", cljs.core.nth.call(null, remainder, 0))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder, new_offset, false], null)], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str, offset], null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, remainder, 1), new_offset + 1, true], null)], null);
    }
  } else {
    if (cljs.core.truth_(saw_comma)) {
      return cljs.pprint.format_error.call(null, "Badly formed parameters in format directive", offset);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset], null)], null);
    }
  }
};
cljs.pprint.extract_params = function cljs$pprint$extract_params(s, offset) {
  return cljs.pprint.consume.call(null, cljs.pprint.extract_param, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, false], null));
};
cljs.pprint.translate_param = function cljs$pprint$translate_param(p__16173) {
  var vec__16174 = p__16173;
  var p = cljs.core.nth.call(null, vec__16174, 0, null);
  var offset = cljs.core.nth.call(null, vec__16174, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core._EQ_.call(null, p.length, 0) ? null : cljs.core._EQ_.call(null, p.length, 1) && cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, ["V", null, "v", null], null), null), cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "parameter-from-args", "parameter-from-args", -758446196) : cljs.core._EQ_.call(null, p.length, 1) && 
  cljs.core._EQ_.call(null, "#", cljs.core.nth.call(null, p, 0)) ? new cljs.core.Keyword(null, "remaining-arg-count", "remaining-arg-count", -1216589335) : cljs.core._EQ_.call(null, p.length, 2) && cljs.core._EQ_.call(null, "'", cljs.core.nth.call(null, p, 0)) ? cljs.core.nth.call(null, p, 1) : parseInt(p, 10), offset], null);
};
cljs.pprint.flag_defs = new cljs.core.PersistentArrayMap(null, 2, [":", new cljs.core.Keyword(null, "colon", "colon", -965200945), "@", new cljs.core.Keyword(null, "at", "at", 1476951349)], null);
cljs.pprint.extract_flags = function cljs$pprint$extract_flags(s, offset) {
  return cljs.pprint.consume.call(null, function(p__16177) {
    var vec__16178 = p__16177;
    var s__$1 = cljs.core.nth.call(null, vec__16178, 0, null);
    var offset__$1 = cljs.core.nth.call(null, vec__16178, 1, null);
    var flags = cljs.core.nth.call(null, vec__16178, 2, null);
    if (cljs.core.empty_QMARK_.call(null, s__$1)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
    } else {
      var flag = cljs.core.get.call(null, cljs.pprint.flag_defs, cljs.core.first.call(null, s__$1));
      if (cljs.core.truth_(flag)) {
        if (cljs.core.contains_QMARK_.call(null, flags, flag)) {
          return cljs.pprint.format_error.call(null, ['Flag "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, s__$1)), '" appears more than once in a directive'].join(""), offset__$1);
        } else {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s__$1, 1), offset__$1 + 1, cljs.core.assoc.call(null, flags, flag, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, offset__$1], null))], null)], null);
        }
      } else {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1, offset__$1, flags], null)], null);
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s, offset, cljs.core.PersistentArrayMap.EMPTY], null));
};
cljs.pprint.check_flags = function cljs$pprint$check_flags(def, flags) {
  var allowed = (new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1(def);
  if (cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(allowed)) ? (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags) : false)) {
    cljs.pprint.format_error.call(null, ['"@" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(allowed)) ? (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags) : false)) {
    cljs.pprint.format_error.call(null, ['":" is an illegal flag for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1));
  } else {
  }
  if (cljs.core.truth_(cljs.core.not.call(null, (new cljs.core.Keyword(null, "both", "both", -393648840)).cljs$core$IFn$_invoke$arity$1(allowed)) ? function() {
    var and__4115__auto__ = (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags);
    if (cljs.core.truth_(and__4115__auto__)) {
      return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags);
    } else {
      return and__4115__auto__;
    }
  }() : false)) {
    return cljs.pprint.format_error.call(null, ['Cannot combine "@" and ":" flags for format directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '"'].join(""), function() {
      var x__4217__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      var y__4218__auto__ = cljs.core.nth.call(null, (new cljs.core.Keyword(null, "at", "at", 1476951349)).cljs$core$IFn$_invoke$arity$1(flags), 1);
      return x__4217__auto__ < y__4218__auto__ ? x__4217__auto__ : y__4218__auto__;
    }());
  } else {
    return null;
  }
};
cljs.pprint.map_params = function cljs$pprint$map_params(def, params, flags, offset) {
  cljs.pprint.check_flags.call(null, def, flags);
  if (cljs.core.count.call(null, params) > cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))) {
    cljs.pprint.format_error.call(null, cljs.pprint.cl_format.call(null, null, 'Too many parameters for directive "~C": ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed', (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def), cljs.core.count.call(null, params), cljs.core.count.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def))), cljs.core.second.call(null, cljs.core.first.call(null, 
    params)));
  } else {
  }
  cljs.core.doall.call(null, cljs.core.map.call(null, function(p1__16181_SHARP_, p2__16182_SHARP_) {
    var val = cljs.core.first.call(null, p1__16181_SHARP_);
    if (!(val == null || cljs.core.contains_QMARK_.call(null, cljs.pprint.special_params, val) || cljs.core._EQ_.call(null, cljs.core.second.call(null, cljs.core.second.call(null, p2__16182_SHARP_)), cljs.core.type.call(null, val)))) {
      return cljs.pprint.format_error.call(null, ["Parameter ", cljs.core.name.call(null, cljs.core.first.call(null, p2__16182_SHARP_)), ' has bad type in directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)), '": ', cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type.call(null, val))].join(""), cljs.core.second.call(null, p1__16181_SHARP_));
    } else {
      return null;
    }
  }, params, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)));
  return cljs.core.merge.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.reverse.call(null, function() {
    var iter__4529__auto__ = function cljs$pprint$map_params_$_iter__16186(s__16187) {
      return new cljs.core.LazySeq(null, function() {
        var s__16187__$1 = s__16187;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__16187__$1);
          if (temp__5735__auto__) {
            var s__16187__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__16187__$2)) {
              var c__4527__auto__ = cljs.core.chunk_first.call(null, s__16187__$2);
              var size__4528__auto__ = cljs.core.count.call(null, c__4527__auto__);
              var b__16189 = cljs.core.chunk_buffer.call(null, size__4528__auto__);
              if (function() {
                var i__16188 = 0;
                while (true) {
                  if (i__16188 < size__4528__auto__) {
                    var vec__16190 = cljs.core._nth.call(null, c__4527__auto__, i__16188);
                    var name = cljs.core.nth.call(null, vec__16190, 0, null);
                    var vec__16193 = cljs.core.nth.call(null, vec__16190, 1, null);
                    var default$ = cljs.core.nth.call(null, vec__16193, 0, null);
                    cljs.core.chunk_append.call(null, b__16189, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null));
                    var G__16202 = i__16188 + 1;
                    i__16188 = G__16202;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16189), cljs$pprint$map_params_$_iter__16186.call(null, cljs.core.chunk_rest.call(null, s__16187__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16189), null);
              }
            } else {
              var vec__16196 = cljs.core.first.call(null, s__16187__$2);
              var name = cljs.core.nth.call(null, vec__16196, 0, null);
              var vec__16199 = cljs.core.nth.call(null, vec__16196, 1, null);
              var default$ = cljs.core.nth.call(null, vec__16199, 0, null);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$, offset], null)], null), cljs$pprint$map_params_$_iter__16186.call(null, cljs.core.rest.call(null, s__16187__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4529__auto__.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def));
  }())), cljs.core.reduce.call(null, function(p1__16183_SHARP_, p2__16184_SHARP_) {
    return cljs.core.apply.call(null, cljs.core.assoc, p1__16183_SHARP_, p2__16184_SHARP_);
  }, cljs.core.PersistentArrayMap.EMPTY, cljs.core.filter.call(null, function(p1__16185_SHARP_) {
    return cljs.core.first.call(null, cljs.core.nth.call(null, p1__16185_SHARP_, 1));
  }, cljs.core.zipmap.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(def)), params))), flags);
};
cljs.pprint.compile_directive = function cljs$pprint$compile_directive(s, offset) {
  var vec__16203 = cljs.pprint.extract_params.call(null, s, offset);
  var raw_params = cljs.core.nth.call(null, vec__16203, 0, null);
  var vec__16206 = cljs.core.nth.call(null, vec__16203, 1, null);
  var rest = cljs.core.nth.call(null, vec__16206, 0, null);
  var offset__$1 = cljs.core.nth.call(null, vec__16206, 1, null);
  var vec__16209 = cljs.pprint.extract_flags.call(null, rest, offset__$1);
  var _ = cljs.core.nth.call(null, vec__16209, 0, null);
  var vec__16212 = cljs.core.nth.call(null, vec__16209, 1, null);
  var rest__$1 = cljs.core.nth.call(null, vec__16212, 0, null);
  var offset__$2 = cljs.core.nth.call(null, vec__16212, 1, null);
  var flags = cljs.core.nth.call(null, vec__16212, 2, null);
  var directive = cljs.core.first.call(null, rest__$1);
  var def = cljs.core.get.call(null, cljs.pprint.directive_table, clojure.string.upper_case.call(null, directive));
  var params = cljs.core.truth_(def) ? cljs.pprint.map_params.call(null, def, cljs.core.map.call(null, cljs.pprint.translate_param, raw_params), flags, offset__$2) : null;
  if (cljs.core.not.call(null, directive)) {
    cljs.pprint.format_error.call(null, "Format string ended in the middle of a directive", offset__$2);
  } else {
  }
  if (cljs.core.not.call(null, def)) {
    cljs.pprint.format_error.call(null, ['Directive "', cljs.core.str.cljs$core$IFn$_invoke$arity$1(directive), '" is undefined'].join(""), offset__$2);
  } else {
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "generator-fn", "generator-fn", 811851656)).cljs$core$IFn$_invoke$arity$1(def).call(null, params, offset__$2), def, params, offset__$2, null, null, null), function() {
    var remainder = cljs.core.subs.call(null, rest__$1, 1);
    var offset__$3 = offset__$2 + 1;
    var trim_QMARK_ = cljs.core._EQ_.call(null, "\n", (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1(def)) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1(params));
    var trim_count = trim_QMARK_ ? cljs.pprint.prefix_count.call(null, remainder, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [" ", "\t"], null)) : 0;
    var remainder__$1 = cljs.core.subs.call(null, remainder, trim_count);
    var offset__$4 = offset__$3 + trim_count;
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1, offset__$4], null);
  }()], null);
};
cljs.pprint.compile_raw_string = function cljs$pprint$compile_raw_string(s, offset) {
  return new cljs.pprint.compiled_directive(function(_, a, ___$1) {
    cljs.pprint.print.call(null, s);
    return a;
  }, null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "string", "string", -1989541586), s], null), offset, null, null, null);
};
cljs.pprint.right_bracket = function cljs$pprint$right_bracket(this$) {
  return (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.separator_QMARK_ = function cljs$pprint$separator_QMARK_(this$) {
  return (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
};
cljs.pprint.else_separator_QMARK_ = function cljs$pprint$else_separator_QMARK_(this$) {
  var and__4115__auto__ = (new cljs.core.Keyword(null, "separator", "separator", -1628749125)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)));
  if (cljs.core.truth_(and__4115__auto__)) {
    return (new cljs.core.Keyword(null, "colon", "colon", -965200945)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$));
  } else {
    return and__4115__auto__;
  }
};
cljs.pprint.process_bracket = function cljs$pprint$process_bracket(this$, remainder) {
  var vec__16215 = cljs.pprint.collect_clauses.call(null, (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), remainder);
  var subex = cljs.core.nth.call(null, vec__16215, 0, null);
  var remainder__$1 = cljs.core.nth.call(null, vec__16215, 1, null);
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.pprint.compiled_directive((new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(this$), (new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$), cljs.core.merge.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), cljs.pprint.tuple_map.call(null, subex, (new cljs.core.Keyword(null, 
  "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$))), (new cljs.core.Keyword(null, "offset", "offset", 296498311)).cljs$core$IFn$_invoke$arity$1(this$), null, null, null), remainder__$1], null);
};
cljs.pprint.process_clause = function cljs$pprint$process_clause(bracket_info, offset, remainder) {
  return cljs.pprint.consume.call(null, function(remainder__$1) {
    if (cljs.core.empty_QMARK_.call(null, remainder__$1)) {
      return cljs.pprint.format_error.call(null, "No closing bracket found.", offset);
    } else {
      var this$ = cljs.core.first.call(null, remainder__$1);
      var remainder__$2 = cljs.core.next.call(null, remainder__$1);
      if (cljs.core.truth_(cljs.pprint.right_bracket.call(null, this$))) {
        return cljs.pprint.process_bracket.call(null, this$, remainder__$2);
      } else {
        if (cljs.core._EQ_.call(null, (new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket_info), (new cljs.core.Keyword(null, "directive", "directive", 793559132)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$)))) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080), (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), null, remainder__$2], null)], null);
        } else {
          if (cljs.core.truth_(cljs.pprint.else_separator_QMARK_.call(null, this$))) {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "else", "else", -1508377146), null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(this$), remainder__$2], null)], null);
          } else {
            if (cljs.core.truth_(cljs.pprint.separator_QMARK_.call(null, this$))) {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "separator", "separator", -1628749125), null, null, remainder__$2], null)], null);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$2], null);
            }
          }
        }
      }
    }
  }, remainder);
};
cljs.pprint.collect_clauses = function cljs$pprint$collect_clauses(bracket_info, offset, remainder) {
  return cljs.core.second.call(null, cljs.pprint.consume.call(null, function(p__16218) {
    var vec__16219 = p__16218;
    var clause_map = cljs.core.nth.call(null, vec__16219, 0, null);
    var saw_else = cljs.core.nth.call(null, vec__16219, 1, null);
    var remainder__$1 = cljs.core.nth.call(null, vec__16219, 2, null);
    var vec__16222 = cljs.pprint.process_clause.call(null, bracket_info, offset, remainder__$1);
    var clause = cljs.core.nth.call(null, vec__16222, 0, null);
    var vec__16225 = cljs.core.nth.call(null, vec__16222, 1, null);
    var type = cljs.core.nth.call(null, vec__16225, 0, null);
    var right_params = cljs.core.nth.call(null, vec__16225, 1, null);
    var else_params = cljs.core.nth.call(null, vec__16225, 2, null);
    var remainder__$2 = cljs.core.nth.call(null, vec__16225, 3, null);
    if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "right-bracket", "right-bracket", 951856080))) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.truth_(saw_else) ? new cljs.core.Keyword(null, "else", "else", -1508377146) : new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, 
      [clause], null), new cljs.core.Keyword(null, "right-params", "right-params", -1790676237), right_params])), remainder__$2], null)], null);
    } else {
      if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "else", "else", -1508377146))) {
        if (cljs.core.truth_((new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
          return cljs.pprint.format_error.call(null, 'Two else clauses ("~:;") inside bracket construction.', offset);
        } else {
          if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
            return cljs.pprint.format_error.call(null, 'An else clause ("~:;") is in a bracket type that doesn\'t support it.', offset);
          } else {
            if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info)) && cljs.core.seq.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1(clause_map))) {
              return cljs.pprint.format_error.call(null, 'The else clause ("~:;") is only allowed in the first position for this directive.', offset);
            } else {
              if (cljs.core._EQ_.call(null, new cljs.core.Keyword(null, "first", "first", -644103046), (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "else", "else", -1508377146), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null), new cljs.core.Keyword(null, "else-params", "else-params", 
                -832171646), else_params], null)), false, remainder__$2], null)], null);
              } else {
                return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), true, remainder__$2], null)], 
                null);
              }
            }
          }
        }
      } else {
        if (cljs.core._EQ_.call(null, type, new cljs.core.Keyword(null, "separator", "separator", -1628749125))) {
          if (cljs.core.truth_(saw_else)) {
            return cljs.pprint.format_error.call(null, 'A plain clause (with "~;") follows an else clause ("~:;") inside bracket construction.', offset);
          } else {
            if (cljs.core.not.call(null, (new cljs.core.Keyword(null, "allows-separator", "allows-separator", -818967742)).cljs$core$IFn$_invoke$arity$1(bracket_info))) {
              return cljs.pprint.format_error.call(null, 'A separator ("~;") is in a bracket type that doesn\'t support it.', offset);
            } else {
              return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.call(null, cljs.core.concat, clause_map, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)), false, remainder__$2], null)], null);
            }
          }
        } else {
          return null;
        }
      }
    }
  }, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "clauses", "clauses", 1454841241), cljs.core.PersistentVector.EMPTY], null), false, remainder], null)));
};
cljs.pprint.process_nesting = function cljs$pprint$process_nesting(format) {
  return cljs.core.first.call(null, cljs.pprint.consume.call(null, function(remainder) {
    var this$ = cljs.core.first.call(null, remainder);
    var remainder__$1 = cljs.core.next.call(null, remainder);
    var bracket = (new cljs.core.Keyword(null, "bracket-info", "bracket-info", -1600092774)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(this$));
    if (cljs.core.truth_((new cljs.core.Keyword(null, "right", "right", -452581833)).cljs$core$IFn$_invoke$arity$1(bracket))) {
      return cljs.pprint.process_bracket.call(null, this$, remainder__$1);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$, remainder__$1], null);
    }
  }, format));
};
cljs.pprint.compile_format = function cljs$pprint$compile_format(format_str) {
  var _STAR_format_str_STAR__orig_val__16228 = cljs.pprint._STAR_format_str_STAR_;
  var _STAR_format_str_STAR__temp_val__16229 = format_str;
  cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR__temp_val__16229;
  try {
    return cljs.pprint.process_nesting.call(null, cljs.core.first.call(null, cljs.pprint.consume.call(null, function(p__16230) {
      var vec__16231 = p__16230;
      var s = cljs.core.nth.call(null, vec__16231, 0, null);
      var offset = cljs.core.nth.call(null, vec__16231, 1, null);
      if (cljs.core.empty_QMARK_.call(null, s)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, s], null);
      } else {
        var tilde = s.indexOf("~");
        if (tilde < 0) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, s, offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", offset + s.length], null)], null);
        } else {
          if (tilde === 0) {
            return cljs.pprint.compile_directive.call(null, cljs.core.subs.call(null, s, 1), offset + 1);
          } else {
            return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string.call(null, cljs.core.subs.call(null, s, 0, tilde), offset), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.call(null, s, tilde), tilde + offset], null)], null);
          }
        }
      }
    }, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str, 0], null))));
  } finally {
    cljs.pprint._STAR_format_str_STAR_ = _STAR_format_str_STAR__orig_val__16228;
  }
};
cljs.pprint.needs_pretty = function cljs$pprint$needs_pretty(format) {
  var format__$1 = format;
  while (true) {
    if (cljs.core.empty_QMARK_.call(null, format__$1)) {
      return false;
    } else {
      if (cljs.core.truth_(function() {
        var or__4126__auto__ = (new cljs.core.Keyword(null, "pretty", "pretty", -1916372486)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "flags", "flags", 1775418075)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "def", "def", -1043430536)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1))));
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          var or__4126__auto____$1 = cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "clauses", "clauses", 1454841241)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          if (cljs.core.truth_(or__4126__auto____$1)) {
            return or__4126__auto____$1;
          } else {
            return cljs.core.some.call(null, cljs.pprint.needs_pretty, cljs.core.first.call(null, (new cljs.core.Keyword(null, "else", "else", -1508377146)).cljs$core$IFn$_invoke$arity$1((new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(cljs.core.first.call(null, format__$1)))));
          }
        }
      }())) {
        return true;
      } else {
        var G__16234 = cljs.core.next.call(null, format__$1);
        format__$1 = G__16234;
        continue;
      }
    }
    break;
  }
};
cljs.pprint.execute_format = function cljs$pprint$execute_format(var_args) {
  var G__16236 = arguments.length;
  switch(G__16236) {
    case 3:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    case 2:
      return cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 = function(stream, format, args) {
  var sb = new goog.string.StringBuffer;
  var real_stream = cljs.core.not.call(null, stream) || stream === true ? new cljs.core.StringBufferWriter(sb) : stream;
  var wrapped_stream = cljs.pprint.needs_pretty.call(null, format) && cljs.core.not.call(null, cljs.pprint.pretty_writer_QMARK_.call(null, real_stream)) ? cljs.pprint.get_pretty_writer.call(null, real_stream) : real_stream;
  var _STAR_out_STAR__orig_val__16237 = cljs.core._STAR_out_STAR_;
  var _STAR_out_STAR__temp_val__16238 = wrapped_stream;
  cljs.core._STAR_out_STAR_ = _STAR_out_STAR__temp_val__16238;
  try {
    try {
      cljs.pprint.execute_format.call(null, format, args);
    } finally {
      if (!(real_stream === wrapped_stream)) {
        cljs.core._flush.call(null, wrapped_stream);
      } else {
      }
    }
    if (cljs.core.not.call(null, stream)) {
      return cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);
    } else {
      if (stream === true) {
        return cljs.core.string_print.call(null, cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));
      } else {
        return null;
      }
    }
  } finally {
    cljs.core._STAR_out_STAR_ = _STAR_out_STAR__orig_val__16237;
  }
};
cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 = function(format, args) {
  cljs.pprint.map_passing_context.call(null, function(element, context) {
    if (cljs.pprint.abort_QMARK_.call(null, context)) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, context], null);
    } else {
      var vec__16239 = cljs.pprint.realize_parameter_list.call(null, (new cljs.core.Keyword(null, "params", "params", 710516235)).cljs$core$IFn$_invoke$arity$1(element), context);
      var params = cljs.core.nth.call(null, vec__16239, 0, null);
      var args__$1 = cljs.core.nth.call(null, vec__16239, 1, null);
      var vec__16242 = cljs.pprint.unzip_map.call(null, params);
      var params__$1 = cljs.core.nth.call(null, vec__16242, 0, null);
      var offsets = cljs.core.nth.call(null, vec__16242, 1, null);
      var params__$2 = cljs.core.assoc.call(null, params__$1, new cljs.core.Keyword(null, "base-args", "base-args", -1268706822), args__$1);
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, cljs.core.apply.call(null, (new cljs.core.Keyword(null, "func", "func", -238706040)).cljs$core$IFn$_invoke$arity$1(element), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2, args__$1, offsets], null))], null);
    }
  }, args, format);
  return null;
};
cljs.pprint.execute_format.cljs$lang$maxFixedArity = 3;
cljs.pprint.cached_compile = cljs.core.memoize.call(null, cljs.pprint.compile_format);
cljs.pprint.use_method = function cljs$pprint$use_method(multifn, dispatch_val, func) {
  return cljs.core._add_method.call(null, multifn, dispatch_val, func);
};
cljs.pprint.reader_macros = new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), "'", new cljs.core.Symbol(null, "var", "var", 870848730, null), "#'", new cljs.core.Symbol("clojure.core", "deref", "clojure.core/deref", 188719157, null), "@", new cljs.core.Symbol("clojure.core", "unquote", "clojure.core/unquote", 843087510, null), "~", new cljs.core.Symbol("cljs.core", "deref", "cljs.core/deref", 1901963335, null), "@", new cljs.core.Symbol("cljs.core", 
"unquote", "cljs.core/unquote", 1013085760, null), "~"], null);
cljs.pprint.pprint_reader_macro = function cljs$pprint$pprint_reader_macro(alis) {
  var macro_char = cljs.pprint.reader_macros.call(null, cljs.core.first.call(null, alis));
  if (cljs.core.truth_(function() {
    var and__4115__auto__ = macro_char;
    if (cljs.core.truth_(and__4115__auto__)) {
      return cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, alis));
    } else {
      return and__4115__auto__;
    }
  }())) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, macro_char);
    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis));
    return true;
  } else {
    return null;
  }
};
cljs.pprint.pprint_simple_list = function cljs$pprint$pprint_simple_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__16246_16251 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__16247_16252 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__16248_16253 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__16249_16254 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16248_16253;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16249_16254;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      var length_count16250_16255 = 0;
      var alis_16256__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count16250_16255 < cljs.core._STAR_print_length_STAR_) {
          if (alis_16256__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_16256__$1));
            if (cljs.core.next.call(null, alis_16256__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__16257 = length_count16250_16255 + 1;
              var G__16258 = cljs.core.next.call(null, alis_16256__$1);
              length_count16250_16255 = G__16257;
              alis_16256__$1 = G__16258;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16247_16252;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16246_16251;
    }
  }
  return null;
};
cljs.pprint.pprint_list = function cljs$pprint$pprint_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    return cljs.pprint.pprint_simple_list.call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_vector = function cljs$pprint$pprint_vector(avec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__16259_16264 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__16260_16265 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__16261_16266 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__16262_16267 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16261_16266;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16262_16267;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count16263_16268 = 0;
      var aseq_16269 = cljs.core.seq.call(null, avec);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count16263_16268 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_16269) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, aseq_16269));
            if (cljs.core.next.call(null, aseq_16269)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__16270 = length_count16263_16268 + 1;
              var G__16271 = cljs.core.next.call(null, aseq_16269);
              length_count16263_16268 = G__16270;
              aseq_16269 = G__16271;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16260_16265;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16259_16264;
    }
  }
  return null;
};
cljs.pprint.pprint_array = function() {
  var format_in__15406__auto__ = "~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e";
  var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
  return function() {
    var G__16272__delegate = function(args__15408__auto__) {
      var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
      return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
    };
    var G__16272 = function(var_args) {
      var args__15408__auto__ = null;
      if (arguments.length > 0) {
        var G__16273__i = 0, G__16273__a = new Array(arguments.length - 0);
        while (G__16273__i < G__16273__a.length) {
          G__16273__a[G__16273__i] = arguments[G__16273__i + 0];
          ++G__16273__i;
        }
        args__15408__auto__ = new cljs.core.IndexedSeq(G__16273__a, 0, null);
      }
      return G__16272__delegate.call(this, args__15408__auto__);
    };
    G__16272.cljs$lang$maxFixedArity = 0;
    G__16272.cljs$lang$applyTo = function(arglist__16274) {
      var args__15408__auto__ = cljs.core.seq(arglist__16274);
      return G__16272__delegate(args__15408__auto__);
    };
    G__16272.cljs$core$IFn$_invoke$arity$variadic = G__16272__delegate;
    return G__16272;
  }();
}();
cljs.pprint.pprint_map = function cljs$pprint$pprint_map(amap) {
  var vec__16275 = !cljs.core.record_QMARK_.call(null, amap) ? (new cljs.core.Var(function() {
    return cljs.core.lift_ns;
  }, new cljs.core.Symbol("cljs.core", "lift-ns", "cljs.core/lift-ns", 463499081, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "private", "private", -558947994), new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
  "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [true, new cljs.core.Symbol(null, "cljs.core", "cljs.core", 770546058, null), new cljs.core.Symbol(null, "lift-ns", "lift-ns", 602311926, null), "cljs/core.cljs", 15, 1, 10307, 10307, cljs.core.list(new cljs.core.PersistentVector(null, 
  1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "m", "m", -1021758608, null)], null)), "Returns [lifted-ns lifted-map] or nil if m can't be lifted.", cljs.core.truth_(cljs.core.lift_ns) ? cljs.core.lift_ns.cljs$lang$test : null]))).call(null, amap) : null;
  var ns = cljs.core.nth.call(null, vec__16275, 0, null);
  var lift_map = cljs.core.nth.call(null, vec__16275, 1, null);
  var amap__$1 = function() {
    var or__4126__auto__ = lift_map;
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return amap;
    }
  }();
  var prefix = cljs.core.truth_(ns) ? ["#:", cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns), "{"].join("") : "{";
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__16278_16287 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__16279_16288 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__16280_16289 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__16281_16290 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16280_16289;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16281_16290;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "}");
      var length_count16282_16291 = 0;
      var aseq_16292 = cljs.core.seq.call(null, amap__$1);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count16282_16291 < cljs.core._STAR_print_length_STAR_) {
          if (aseq_16292) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR__orig_val__16283_16293 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR__orig_val__16284_16294 = cljs.pprint._STAR_current_length_STAR_;
              var _STAR_current_level_STAR__temp_val__16285_16295 = cljs.pprint._STAR_current_level_STAR_ + 1;
              var _STAR_current_length_STAR__temp_val__16286_16296 = 0;
              cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16285_16295;
              cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16286_16296;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.ffirst.call(null, aseq_16292));
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                cljs.pprint._STAR_current_length_STAR_ = 0;
                cljs.pprint.write_out.call(null, cljs.core.fnext.call(null, cljs.core.first.call(null, aseq_16292)));
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16284_16294;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16283_16293;
              }
            }
            if (cljs.core.next.call(null, aseq_16292)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, ", ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__16297 = length_count16282_16291 + 1;
              var G__16298 = cljs.core.next.call(null, aseq_16292);
              length_count16282_16291 = G__16297;
              aseq_16292 = G__16298;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16279_16288;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16278_16287;
    }
  }
  return null;
};
cljs.pprint.pprint_simple_default = function cljs$pprint$pprint_simple_default(obj) {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, obj));
};
cljs.pprint.pprint_set = function() {
  var format_in__15406__auto__ = "~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e";
  var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
  return function() {
    var G__16299__delegate = function(args__15408__auto__) {
      var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
      return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
    };
    var G__16299 = function(var_args) {
      var args__15408__auto__ = null;
      if (arguments.length > 0) {
        var G__16300__i = 0, G__16300__a = new Array(arguments.length - 0);
        while (G__16300__i < G__16300__a.length) {
          G__16300__a[G__16300__i] = arguments[G__16300__i + 0];
          ++G__16300__i;
        }
        args__15408__auto__ = new cljs.core.IndexedSeq(G__16300__a, 0, null);
      }
      return G__16299__delegate.call(this, args__15408__auto__);
    };
    G__16299.cljs$lang$maxFixedArity = 0;
    G__16299.cljs$lang$applyTo = function(arglist__16301) {
      var args__15408__auto__ = cljs.core.seq(arglist__16301);
      return G__16299__delegate(args__15408__auto__);
    };
    G__16299.cljs$core$IFn$_invoke$arity$variadic = G__16299__delegate;
    return G__16299;
  }();
}();
cljs.pprint.type_map = new cljs.core.PersistentArrayMap(null, 2, ["core$future_call", "Future", "core$promise", "Promise"], null);
cljs.pprint.map_ref_type = function cljs$pprint$map_ref_type(name) {
  var or__4126__auto__ = function() {
    var temp__5735__auto__ = cljs.core.re_find.call(null, /^[^$]+\$[^$]+/, name);
    if (cljs.core.truth_(temp__5735__auto__)) {
      var match = temp__5735__auto__;
      return cljs.pprint.type_map.call(null, match);
    } else {
      return null;
    }
  }();
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return name;
  }
};
cljs.pprint.pprint_ideref = function cljs$pprint$pprint_ideref(o) {
  var prefix = ["#\x3c", cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.map_ref_type.call(null, cljs.core.type.call(null, o).name)), "@", cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.getUid(o)), ": "].join("");
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__16302_16309 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__16303_16310 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__16304_16311 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__16305_16312 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16304_16311;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16305_16312;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, prefix, null, "\x3e");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), -(prefix.length - 2));
      cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
      cljs.pprint.write_out.call(null, ((!(o == null) ? o.cljs$lang$protocol_mask$partition1$ & 1 || cljs.core.PROTOCOL_SENTINEL === o.cljs$core$IPending$ ? true : !o.cljs$lang$protocol_mask$partition1$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IPending, o)) ? !cljs.core._realized_QMARK_.call(null, o) : false) ? new cljs.core.Keyword(null, "not-delivered", "not-delivered", 1599158697) : cljs.core.deref.call(null, 
      o));
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16303_16310;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16302_16309;
    }
  }
  return null;
};
cljs.pprint.pprint_pqueue = function() {
  var format_in__15406__auto__ = "~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e";
  var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
  return function() {
    var G__16313__delegate = function(args__15408__auto__) {
      var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
      return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
    };
    var G__16313 = function(var_args) {
      var args__15408__auto__ = null;
      if (arguments.length > 0) {
        var G__16314__i = 0, G__16314__a = new Array(arguments.length - 0);
        while (G__16314__i < G__16314__a.length) {
          G__16314__a[G__16314__i] = arguments[G__16314__i + 0];
          ++G__16314__i;
        }
        args__15408__auto__ = new cljs.core.IndexedSeq(G__16314__a, 0, null);
      }
      return G__16313__delegate.call(this, args__15408__auto__);
    };
    G__16313.cljs$lang$maxFixedArity = 0;
    G__16313.cljs$lang$applyTo = function(arglist__16315) {
      var args__15408__auto__ = cljs.core.seq(arglist__16315);
      return G__16313__delegate(args__15408__auto__);
    };
    G__16313.cljs$core$IFn$_invoke$arity$variadic = G__16313__delegate;
    return G__16313;
  }();
}();
cljs.pprint.type_dispatcher = function cljs$pprint$type_dispatcher(obj) {
  if (obj instanceof cljs.core.PersistentQueue) {
    return new cljs.core.Keyword(null, "queue", "queue", 1455835879);
  } else {
    if (!(obj == null) ? obj.cljs$lang$protocol_mask$partition0$ & 32768 || cljs.core.PROTOCOL_SENTINEL === obj.cljs$core$IDeref$ ? true : !obj.cljs$lang$protocol_mask$partition0$ ? cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, cljs.core.IDeref, obj)) {
      return new cljs.core.Keyword(null, "deref", "deref", -145586795);
    } else {
      if (obj instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(null, "symbol", "symbol", -1038572696);
      } else {
        if (cljs.core.seq_QMARK_.call(null, obj)) {
          return new cljs.core.Keyword(null, "list", "list", 765357683);
        } else {
          if (cljs.core.map_QMARK_.call(null, obj)) {
            return new cljs.core.Keyword(null, "map", "map", 1371690461);
          } else {
            if (cljs.core.vector_QMARK_.call(null, obj)) {
              return new cljs.core.Keyword(null, "vector", "vector", 1902966158);
            } else {
              if (cljs.core.set_QMARK_.call(null, obj)) {
                return new cljs.core.Keyword(null, "set", "set", 304602554);
              } else {
                if (obj == null) {
                  return null;
                } else {
                  return new cljs.core.Keyword(null, "default", "default", -1987822328);
                }
              }
            }
          }
        }
      }
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.simple_dispatch !== "undefined") {
} else {
  cljs.pprint.simple_dispatch = function() {
    var method_table__4619__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4620__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4621__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4622__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4623__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "simple-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4623__auto__, method_table__4619__auto__, prefer_table__4620__auto__, method_cache__4621__auto__, cached_hierarchy__4622__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_list);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, null, function() {
  return cljs.core._write.call(null, cljs.core._STAR_out_STAR_, cljs.core.pr_str.call(null, null));
});
cljs.pprint.use_method.call(null, cljs.pprint.simple_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.brackets = function cljs$pprint$brackets(form) {
  if (cljs.core.vector_QMARK_.call(null, form)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", "]"], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["(", ")"], null);
  }
};
cljs.pprint.pprint_ns_reference = function cljs$pprint$pprint_ns_reference(reference) {
  if (cljs.core.sequential_QMARK_.call(null, reference)) {
    var vec__16317 = cljs.pprint.brackets.call(null, reference);
    var start = cljs.core.nth.call(null, vec__16317, 0, null);
    var end = cljs.core.nth.call(null, vec__16317, 1, null);
    var vec__16320 = reference;
    var seq__16321 = cljs.core.seq.call(null, vec__16320);
    var first__16322 = cljs.core.first.call(null, seq__16321);
    var seq__16321__$1 = cljs.core.next.call(null, seq__16321);
    var keyw = first__16322;
    var args = seq__16321__$1;
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__16323_16337 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__16324_16338 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__16325_16339 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__16326_16340 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16325_16339;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16326_16340;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start, null, end);
        (function() {
          var format_in__15406__auto__ = "~w~:i";
          var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
          return function() {
            var G__16341__delegate = function(args__15408__auto__) {
              var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
              return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
            };
            var G__16341 = function(var_args) {
              var args__15408__auto__ = null;
              if (arguments.length > 0) {
                var G__16342__i = 0, G__16342__a = new Array(arguments.length - 0);
                while (G__16342__i < G__16342__a.length) {
                  G__16342__a[G__16342__i] = arguments[G__16342__i + 0];
                  ++G__16342__i;
                }
                args__15408__auto__ = new cljs.core.IndexedSeq(G__16342__a, 0, null);
              }
              return G__16341__delegate.call(this, args__15408__auto__);
            };
            G__16341.cljs$lang$maxFixedArity = 0;
            G__16341.cljs$lang$applyTo = function(arglist__16343) {
              var args__15408__auto__ = cljs.core.seq(arglist__16343);
              return G__16341__delegate(args__15408__auto__);
            };
            G__16341.cljs$core$IFn$_invoke$arity$variadic = G__16341__delegate;
            return G__16341;
          }();
        })().call(null, keyw);
        var args_16344__$1 = args;
        while (true) {
          if (cljs.core.seq.call(null, args_16344__$1)) {
            (function() {
              var format_in__15406__auto__ = " ";
              var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
              return function(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args) {
                return function() {
                  var G__16345__delegate = function(args__15408__auto__) {
                    var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                    return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
                  };
                  var G__16345 = function(var_args) {
                    var args__15408__auto__ = null;
                    if (arguments.length > 0) {
                      var G__16346__i = 0, G__16346__a = new Array(arguments.length - 0);
                      while (G__16346__i < G__16346__a.length) {
                        G__16346__a[G__16346__i] = arguments[G__16346__i + 0];
                        ++G__16346__i;
                      }
                      args__15408__auto__ = new cljs.core.IndexedSeq(G__16346__a, 0, null);
                    }
                    return G__16345__delegate.call(this, args__15408__auto__);
                  };
                  G__16345.cljs$lang$maxFixedArity = 0;
                  G__16345.cljs$lang$applyTo = function(arglist__16347) {
                    var args__15408__auto__ = cljs.core.seq(arglist__16347);
                    return G__16345__delegate(args__15408__auto__);
                  };
                  G__16345.cljs$core$IFn$_invoke$arity$variadic = G__16345__delegate;
                  return G__16345;
                }();
              }(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args);
            })().call(null);
            var arg_16348 = cljs.core.first.call(null, args_16344__$1);
            if (cljs.core.sequential_QMARK_.call(null, arg_16348)) {
              var vec__16327_16349 = cljs.pprint.brackets.call(null, arg_16348);
              var start_16350__$1 = cljs.core.nth.call(null, vec__16327_16349, 0, null);
              var end_16351__$1 = cljs.core.nth.call(null, vec__16327_16349, 1, null);
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__16330_16352 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__16331_16353 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__16332_16354 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__16333_16355 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16332_16354;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16333_16355;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, start_16350__$1, null, end_16351__$1);
                  if (cljs.core._EQ_.call(null, cljs.core.count.call(null, arg_16348), 3) && cljs.core.second.call(null, arg_16348) instanceof cljs.core.Keyword) {
                    var vec__16334_16356 = arg_16348;
                    var ns_16357 = cljs.core.nth.call(null, vec__16334_16356, 0, null);
                    var kw_16358 = cljs.core.nth.call(null, vec__16334_16356, 1, null);
                    var lis_16359 = cljs.core.nth.call(null, vec__16334_16356, 2, null);
                    (function() {
                      var format_in__15406__auto__ = "~w ~w ";
                      var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
                      return function(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, vec__16334_16356, ns_16357, kw_16358, lis_16359, _STAR_current_level_STAR__orig_val__16330_16352, _STAR_current_length_STAR__orig_val__16331_16353, _STAR_current_level_STAR__temp_val__16332_16354, _STAR_current_length_STAR__temp_val__16333_16355, vec__16327_16349, start_16350__$1, end_16351__$1, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, 
                      _STAR_current_level_STAR__temp_val__16325_16339, _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args) {
                        return function() {
                          var G__16360__delegate = function(args__15408__auto__) {
                            var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                            return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
                          };
                          var G__16360 = function(var_args) {
                            var args__15408__auto__ = null;
                            if (arguments.length > 0) {
                              var G__16361__i = 0, G__16361__a = new Array(arguments.length - 0);
                              while (G__16361__i < G__16361__a.length) {
                                G__16361__a[G__16361__i] = arguments[G__16361__i + 0];
                                ++G__16361__i;
                              }
                              args__15408__auto__ = new cljs.core.IndexedSeq(G__16361__a, 0, null);
                            }
                            return G__16360__delegate.call(this, args__15408__auto__);
                          };
                          G__16360.cljs$lang$maxFixedArity = 0;
                          G__16360.cljs$lang$applyTo = function(arglist__16362) {
                            var args__15408__auto__ = cljs.core.seq(arglist__16362);
                            return G__16360__delegate(args__15408__auto__);
                          };
                          G__16360.cljs$core$IFn$_invoke$arity$variadic = G__16360__delegate;
                          return G__16360;
                        }();
                      }(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, vec__16334_16356, ns_16357, kw_16358, lis_16359, _STAR_current_level_STAR__orig_val__16330_16352, _STAR_current_length_STAR__orig_val__16331_16353, _STAR_current_level_STAR__temp_val__16332_16354, _STAR_current_length_STAR__temp_val__16333_16355, vec__16327_16349, start_16350__$1, end_16351__$1, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, 
                      _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args);
                    })().call(null, ns_16357, kw_16358);
                    if (cljs.core.sequential_QMARK_.call(null, lis_16359)) {
                      (function() {
                        var format_in__15406__auto__ = cljs.core.vector_QMARK_.call(null, lis_16359) ? "~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e" : "~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e";
                        var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
                        return function(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, vec__16334_16356, ns_16357, kw_16358, lis_16359, _STAR_current_level_STAR__orig_val__16330_16352, _STAR_current_length_STAR__orig_val__16331_16353, _STAR_current_level_STAR__temp_val__16332_16354, _STAR_current_length_STAR__temp_val__16333_16355, vec__16327_16349, start_16350__$1, end_16351__$1, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, 
                        _STAR_current_level_STAR__temp_val__16325_16339, _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args) {
                          return function() {
                            var G__16363__delegate = function(args__15408__auto__) {
                              var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                              return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
                            };
                            var G__16363 = function(var_args) {
                              var args__15408__auto__ = null;
                              if (arguments.length > 0) {
                                var G__16364__i = 0, G__16364__a = new Array(arguments.length - 0);
                                while (G__16364__i < G__16364__a.length) {
                                  G__16364__a[G__16364__i] = arguments[G__16364__i + 0];
                                  ++G__16364__i;
                                }
                                args__15408__auto__ = new cljs.core.IndexedSeq(G__16364__a, 0, null);
                              }
                              return G__16363__delegate.call(this, args__15408__auto__);
                            };
                            G__16363.cljs$lang$maxFixedArity = 0;
                            G__16363.cljs$lang$applyTo = function(arglist__16365) {
                              var args__15408__auto__ = cljs.core.seq(arglist__16365);
                              return G__16363__delegate(args__15408__auto__);
                            };
                            G__16363.cljs$core$IFn$_invoke$arity$variadic = G__16363__delegate;
                            return G__16363;
                          }();
                        }(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, vec__16334_16356, ns_16357, kw_16358, lis_16359, _STAR_current_level_STAR__orig_val__16330_16352, _STAR_current_length_STAR__orig_val__16331_16353, _STAR_current_level_STAR__temp_val__16332_16354, _STAR_current_length_STAR__temp_val__16333_16355, vec__16327_16349, start_16350__$1, end_16351__$1, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, 
                        _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args);
                      })().call(null, lis_16359);
                    } else {
                      cljs.pprint.write_out.call(null, lis_16359);
                    }
                  } else {
                    cljs.core.apply.call(null, function() {
                      var format_in__15406__auto__ = "~w ~:i~@{~w~^ ~:_~}";
                      var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
                      return function(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, _STAR_current_level_STAR__orig_val__16330_16352, _STAR_current_length_STAR__orig_val__16331_16353, _STAR_current_level_STAR__temp_val__16332_16354, _STAR_current_length_STAR__temp_val__16333_16355, vec__16327_16349, start_16350__$1, end_16351__$1, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, 
                      _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args) {
                        return function() {
                          var G__16366__delegate = function(args__15408__auto__) {
                            var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                            return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
                          };
                          var G__16366 = function(var_args) {
                            var args__15408__auto__ = null;
                            if (arguments.length > 0) {
                              var G__16367__i = 0, G__16367__a = new Array(arguments.length - 0);
                              while (G__16367__i < G__16367__a.length) {
                                G__16367__a[G__16367__i] = arguments[G__16367__i + 0];
                                ++G__16367__i;
                              }
                              args__15408__auto__ = new cljs.core.IndexedSeq(G__16367__a, 0, null);
                            }
                            return G__16366__delegate.call(this, args__15408__auto__);
                          };
                          G__16366.cljs$lang$maxFixedArity = 0;
                          G__16366.cljs$lang$applyTo = function(arglist__16368) {
                            var args__15408__auto__ = cljs.core.seq(arglist__16368);
                            return G__16366__delegate(args__15408__auto__);
                          };
                          G__16366.cljs$core$IFn$_invoke$arity$variadic = G__16366__delegate;
                          return G__16366;
                        }();
                      }(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, _STAR_current_level_STAR__orig_val__16330_16352, _STAR_current_length_STAR__orig_val__16331_16353, _STAR_current_level_STAR__temp_val__16332_16354, _STAR_current_length_STAR__temp_val__16333_16355, vec__16327_16349, start_16350__$1, end_16351__$1, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, _STAR_current_length_STAR__temp_val__16326_16340, 
                      vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args);
                    }(), arg_16348);
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16331_16353;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16330_16352;
                }
              }
              if (cljs.core.next.call(null, args_16344__$1)) {
                (function() {
                  var format_in__15406__auto__ = "~_";
                  var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
                  return function(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, vec__16327_16349, start_16350__$1, end_16351__$1, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args) {
                    return function() {
                      var G__16369__delegate = function(args__15408__auto__) {
                        var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                        return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
                      };
                      var G__16369 = function(var_args) {
                        var args__15408__auto__ = null;
                        if (arguments.length > 0) {
                          var G__16370__i = 0, G__16370__a = new Array(arguments.length - 0);
                          while (G__16370__i < G__16370__a.length) {
                            G__16370__a[G__16370__i] = arguments[G__16370__i + 0];
                            ++G__16370__i;
                          }
                          args__15408__auto__ = new cljs.core.IndexedSeq(G__16370__a, 0, null);
                        }
                        return G__16369__delegate.call(this, args__15408__auto__);
                      };
                      G__16369.cljs$lang$maxFixedArity = 0;
                      G__16369.cljs$lang$applyTo = function(arglist__16371) {
                        var args__15408__auto__ = cljs.core.seq(arglist__16371);
                        return G__16369__delegate(args__15408__auto__);
                      };
                      G__16369.cljs$core$IFn$_invoke$arity$variadic = G__16369__delegate;
                      return G__16369;
                    }();
                  }(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, vec__16327_16349, start_16350__$1, end_16351__$1, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args);
                })().call(null);
              } else {
              }
            } else {
              cljs.pprint.write_out.call(null, arg_16348);
              if (cljs.core.next.call(null, args_16344__$1)) {
                (function() {
                  var format_in__15406__auto__ = "~:_";
                  var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
                  return function(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args) {
                    return function() {
                      var G__16372__delegate = function(args__15408__auto__) {
                        var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                        return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
                      };
                      var G__16372 = function(var_args) {
                        var args__15408__auto__ = null;
                        if (arguments.length > 0) {
                          var G__16373__i = 0, G__16373__a = new Array(arguments.length - 0);
                          while (G__16373__i < G__16373__a.length) {
                            G__16373__a[G__16373__i] = arguments[G__16373__i + 0];
                            ++G__16373__i;
                          }
                          args__15408__auto__ = new cljs.core.IndexedSeq(G__16373__a, 0, null);
                        }
                        return G__16372__delegate.call(this, args__15408__auto__);
                      };
                      G__16372.cljs$lang$maxFixedArity = 0;
                      G__16372.cljs$lang$applyTo = function(arglist__16374) {
                        var args__15408__auto__ = cljs.core.seq(arglist__16374);
                        return G__16372__delegate(args__15408__auto__);
                      };
                      G__16372.cljs$core$IFn$_invoke$arity$variadic = G__16372__delegate;
                      return G__16372;
                    }();
                  }(args_16344__$1, format_in__15406__auto__, cf__15407__auto__, arg_16348, _STAR_current_level_STAR__orig_val__16323_16337, _STAR_current_length_STAR__orig_val__16324_16338, _STAR_current_level_STAR__temp_val__16325_16339, _STAR_current_length_STAR__temp_val__16326_16340, vec__16317, start, end, vec__16320, seq__16321, first__16322, seq__16321__$1, keyw, args);
                })().call(null);
              } else {
              }
            }
            var G__16375 = cljs.core.next.call(null, args_16344__$1);
            args_16344__$1 = G__16375;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16324_16338;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16323_16337;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, reference);
  }
};
cljs.pprint.pprint_ns = function cljs$pprint$pprint_ns(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__16376 = alis;
    var seq__16377 = cljs.core.seq.call(null, vec__16376);
    var first__16378 = cljs.core.first.call(null, seq__16377);
    var seq__16377__$1 = cljs.core.next.call(null, seq__16377);
    var ns_sym = first__16378;
    var first__16378__$1 = cljs.core.first.call(null, seq__16377__$1);
    var seq__16377__$2 = cljs.core.next.call(null, seq__16377__$1);
    var ns_name = first__16378__$1;
    var stuff = seq__16377__$2;
    var vec__16379 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__16379, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__16379, 1, null);
    var vec__16382 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__16382, 0, null);
    var references = cljs.core.nth.call(null, vec__16382, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__16385_16389 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__16386_16390 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__16387_16391 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__16388_16392 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16387_16391;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16388_16392;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__15406__auto__ = "~w ~1I~@_~w";
          var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
          return function() {
            var G__16393__delegate = function(args__15408__auto__) {
              var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
              return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
            };
            var G__16393 = function(var_args) {
              var args__15408__auto__ = null;
              if (arguments.length > 0) {
                var G__16394__i = 0, G__16394__a = new Array(arguments.length - 0);
                while (G__16394__i < G__16394__a.length) {
                  G__16394__a[G__16394__i] = arguments[G__16394__i + 0];
                  ++G__16394__i;
                }
                args__15408__auto__ = new cljs.core.IndexedSeq(G__16394__a, 0, null);
              }
              return G__16393__delegate.call(this, args__15408__auto__);
            };
            G__16393.cljs$lang$maxFixedArity = 0;
            G__16393.cljs$lang$applyTo = function(arglist__16395) {
              var args__15408__auto__ = cljs.core.seq(arglist__16395);
              return G__16393__delegate(args__15408__auto__);
            };
            G__16393.cljs$core$IFn$_invoke$arity$variadic = G__16393__delegate;
            return G__16393;
          }();
        })().call(null, ns_sym, ns_name);
        if (cljs.core.truth_(function() {
          var or__4126__auto__ = doc_str;
          if (cljs.core.truth_(or__4126__auto__)) {
            return or__4126__auto__;
          } else {
            var or__4126__auto____$1 = attr_map;
            if (cljs.core.truth_(or__4126__auto____$1)) {
              return or__4126__auto____$1;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }
        }())) {
          (function() {
            var format_in__15406__auto__ = "~@:_";
            var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
            return function() {
              var G__16396__delegate = function(args__15408__auto__) {
                var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
              };
              var G__16396 = function(var_args) {
                var args__15408__auto__ = null;
                if (arguments.length > 0) {
                  var G__16397__i = 0, G__16397__a = new Array(arguments.length - 0);
                  while (G__16397__i < G__16397__a.length) {
                    G__16397__a[G__16397__i] = arguments[G__16397__i + 0];
                    ++G__16397__i;
                  }
                  args__15408__auto__ = new cljs.core.IndexedSeq(G__16397__a, 0, null);
                }
                return G__16396__delegate.call(this, args__15408__auto__);
              };
              G__16396.cljs$lang$maxFixedArity = 0;
              G__16396.cljs$lang$applyTo = function(arglist__16398) {
                var args__15408__auto__ = cljs.core.seq(arglist__16398);
                return G__16396__delegate(args__15408__auto__);
              };
              G__16396.cljs$core$IFn$_invoke$arity$variadic = G__16396__delegate;
              return G__16396;
            }();
          })().call(null);
        } else {
        }
        if (cljs.core.truth_(doc_str)) {
          cljs.pprint.cl_format.call(null, true, '"~a"~:[~;~:@_~]', doc_str, function() {
            var or__4126__auto__ = attr_map;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return cljs.core.seq.call(null, references);
            }
          }());
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__15406__auto__ = "~w~:[~;~:@_~]";
            var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
            return function() {
              var G__16399__delegate = function(args__15408__auto__) {
                var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
              };
              var G__16399 = function(var_args) {
                var args__15408__auto__ = null;
                if (arguments.length > 0) {
                  var G__16400__i = 0, G__16400__a = new Array(arguments.length - 0);
                  while (G__16400__i < G__16400__a.length) {
                    G__16400__a[G__16400__i] = arguments[G__16400__i + 0];
                    ++G__16400__i;
                  }
                  args__15408__auto__ = new cljs.core.IndexedSeq(G__16400__a, 0, null);
                }
                return G__16399__delegate.call(this, args__15408__auto__);
              };
              G__16399.cljs$lang$maxFixedArity = 0;
              G__16399.cljs$lang$applyTo = function(arglist__16401) {
                var args__15408__auto__ = cljs.core.seq(arglist__16401);
                return G__16399__delegate(args__15408__auto__);
              };
              G__16399.cljs$core$IFn$_invoke$arity$variadic = G__16399__delegate;
              return G__16399;
            }();
          })().call(null, attr_map, cljs.core.seq.call(null, references));
        } else {
        }
        var references_16402__$1 = references;
        while (true) {
          cljs.pprint.pprint_ns_reference.call(null, cljs.core.first.call(null, references_16402__$1));
          var temp__5735__auto___16403 = cljs.core.next.call(null, references_16402__$1);
          if (temp__5735__auto___16403) {
            var references_16404__$2 = temp__5735__auto___16403;
            cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
            var G__16405 = references_16404__$2;
            references_16402__$1 = G__16405;
            continue;
          } else {
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16386_16390;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16385_16389;
      }
    }
    return null;
  } else {
    return cljs.pprint.write_out.call(null, alis);
  }
};
cljs.pprint.pprint_hold_first = function() {
  var format_in__15406__auto__ = "~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e";
  var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
  return function() {
    var G__16406__delegate = function(args__15408__auto__) {
      var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
      return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
    };
    var G__16406 = function(var_args) {
      var args__15408__auto__ = null;
      if (arguments.length > 0) {
        var G__16407__i = 0, G__16407__a = new Array(arguments.length - 0);
        while (G__16407__i < G__16407__a.length) {
          G__16407__a[G__16407__i] = arguments[G__16407__i + 0];
          ++G__16407__i;
        }
        args__15408__auto__ = new cljs.core.IndexedSeq(G__16407__a, 0, null);
      }
      return G__16406__delegate.call(this, args__15408__auto__);
    };
    G__16406.cljs$lang$maxFixedArity = 0;
    G__16406.cljs$lang$applyTo = function(arglist__16408) {
      var args__15408__auto__ = cljs.core.seq(arglist__16408);
      return G__16406__delegate(args__15408__auto__);
    };
    G__16406.cljs$core$IFn$_invoke$arity$variadic = G__16406__delegate;
    return G__16406;
  }();
}();
cljs.pprint.single_defn = function cljs$pprint$single_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    if (cljs.core.truth_(has_doc_str_QMARK_)) {
      (function() {
        var format_in__15406__auto__ = " ~_";
        var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
        return function() {
          var G__16409__delegate = function(args__15408__auto__) {
            var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
            return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
          };
          var G__16409 = function(var_args) {
            var args__15408__auto__ = null;
            if (arguments.length > 0) {
              var G__16410__i = 0, G__16410__a = new Array(arguments.length - 0);
              while (G__16410__i < G__16410__a.length) {
                G__16410__a[G__16410__i] = arguments[G__16410__i + 0];
                ++G__16410__i;
              }
              args__15408__auto__ = new cljs.core.IndexedSeq(G__16410__a, 0, null);
            }
            return G__16409__delegate.call(this, args__15408__auto__);
          };
          G__16409.cljs$lang$maxFixedArity = 0;
          G__16409.cljs$lang$applyTo = function(arglist__16411) {
            var args__15408__auto__ = cljs.core.seq(arglist__16411);
            return G__16409__delegate(args__15408__auto__);
          };
          G__16409.cljs$core$IFn$_invoke$arity$variadic = G__16409__delegate;
          return G__16409;
        }();
      })().call(null);
    } else {
      (function() {
        var format_in__15406__auto__ = " ~@_";
        var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
        return function() {
          var G__16412__delegate = function(args__15408__auto__) {
            var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
            return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
          };
          var G__16412 = function(var_args) {
            var args__15408__auto__ = null;
            if (arguments.length > 0) {
              var G__16413__i = 0, G__16413__a = new Array(arguments.length - 0);
              while (G__16413__i < G__16413__a.length) {
                G__16413__a[G__16413__i] = arguments[G__16413__i + 0];
                ++G__16413__i;
              }
              args__15408__auto__ = new cljs.core.IndexedSeq(G__16413__a, 0, null);
            }
            return G__16412__delegate.call(this, args__15408__auto__);
          };
          G__16412.cljs$lang$maxFixedArity = 0;
          G__16412.cljs$lang$applyTo = function(arglist__16414) {
            var args__15408__auto__ = cljs.core.seq(arglist__16414);
            return G__16412__delegate(args__15408__auto__);
          };
          G__16412.cljs$core$IFn$_invoke$arity$variadic = G__16412__delegate;
          return G__16412;
        }();
      })().call(null);
    }
    return function() {
      var format_in__15406__auto__ = "~{~w~^ ~_~}";
      var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
      return function() {
        var G__16415__delegate = function(args__15408__auto__) {
          var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
          return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
        };
        var G__16415 = function(var_args) {
          var args__15408__auto__ = null;
          if (arguments.length > 0) {
            var G__16416__i = 0, G__16416__a = new Array(arguments.length - 0);
            while (G__16416__i < G__16416__a.length) {
              G__16416__a[G__16416__i] = arguments[G__16416__i + 0];
              ++G__16416__i;
            }
            args__15408__auto__ = new cljs.core.IndexedSeq(G__16416__a, 0, null);
          }
          return G__16415__delegate.call(this, args__15408__auto__);
        };
        G__16415.cljs$lang$maxFixedArity = 0;
        G__16415.cljs$lang$applyTo = function(arglist__16417) {
          var args__15408__auto__ = cljs.core.seq(arglist__16417);
          return G__16415__delegate(args__15408__auto__);
        };
        G__16415.cljs$core$IFn$_invoke$arity$variadic = G__16415__delegate;
        return G__16415;
      }();
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.multi_defn = function cljs$pprint$multi_defn(alis, has_doc_str_QMARK_) {
  if (cljs.core.seq.call(null, alis)) {
    return function() {
      var format_in__15406__auto__ = " ~_~{~w~^ ~_~}";
      var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
      return function() {
        var G__16418__delegate = function(args__15408__auto__) {
          var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
          return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
        };
        var G__16418 = function(var_args) {
          var args__15408__auto__ = null;
          if (arguments.length > 0) {
            var G__16419__i = 0, G__16419__a = new Array(arguments.length - 0);
            while (G__16419__i < G__16419__a.length) {
              G__16419__a[G__16419__i] = arguments[G__16419__i + 0];
              ++G__16419__i;
            }
            args__15408__auto__ = new cljs.core.IndexedSeq(G__16419__a, 0, null);
          }
          return G__16418__delegate.call(this, args__15408__auto__);
        };
        G__16418.cljs$lang$maxFixedArity = 0;
        G__16418.cljs$lang$applyTo = function(arglist__16420) {
          var args__15408__auto__ = cljs.core.seq(arglist__16420);
          return G__16418__delegate(args__15408__auto__);
        };
        G__16418.cljs$core$IFn$_invoke$arity$variadic = G__16418__delegate;
        return G__16418;
      }();
    }().call(null, alis);
  } else {
    return null;
  }
};
cljs.pprint.pprint_defn = function cljs$pprint$pprint_defn(alis) {
  if (cljs.core.next.call(null, alis)) {
    var vec__16421 = alis;
    var seq__16422 = cljs.core.seq.call(null, vec__16421);
    var first__16423 = cljs.core.first.call(null, seq__16422);
    var seq__16422__$1 = cljs.core.next.call(null, seq__16422);
    var defn_sym = first__16423;
    var first__16423__$1 = cljs.core.first.call(null, seq__16422__$1);
    var seq__16422__$2 = cljs.core.next.call(null, seq__16422__$1);
    var defn_name = first__16423__$1;
    var stuff = seq__16422__$2;
    var vec__16424 = typeof cljs.core.first.call(null, stuff) === "string" ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff), cljs.core.next.call(null, stuff)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff], null);
    var doc_str = cljs.core.nth.call(null, vec__16424, 0, null);
    var stuff__$1 = cljs.core.nth.call(null, vec__16424, 1, null);
    var vec__16427 = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, stuff__$1)) ? new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, stuff__$1), cljs.core.next.call(null, stuff__$1)], null) : new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, stuff__$1], null);
    var attr_map = cljs.core.nth.call(null, vec__16427, 0, null);
    var stuff__$2 = cljs.core.nth.call(null, vec__16427, 1, null);
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__16430_16434 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__16431_16435 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__16432_16436 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__16433_16437 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16432_16436;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16433_16437;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        (function() {
          var format_in__15406__auto__ = "~w ~1I~@_~w";
          var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
          return function() {
            var G__16438__delegate = function(args__15408__auto__) {
              var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
              return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
            };
            var G__16438 = function(var_args) {
              var args__15408__auto__ = null;
              if (arguments.length > 0) {
                var G__16439__i = 0, G__16439__a = new Array(arguments.length - 0);
                while (G__16439__i < G__16439__a.length) {
                  G__16439__a[G__16439__i] = arguments[G__16439__i + 0];
                  ++G__16439__i;
                }
                args__15408__auto__ = new cljs.core.IndexedSeq(G__16439__a, 0, null);
              }
              return G__16438__delegate.call(this, args__15408__auto__);
            };
            G__16438.cljs$lang$maxFixedArity = 0;
            G__16438.cljs$lang$applyTo = function(arglist__16440) {
              var args__15408__auto__ = cljs.core.seq(arglist__16440);
              return G__16438__delegate(args__15408__auto__);
            };
            G__16438.cljs$core$IFn$_invoke$arity$variadic = G__16438__delegate;
            return G__16438;
          }();
        })().call(null, defn_sym, defn_name);
        if (cljs.core.truth_(doc_str)) {
          (function() {
            var format_in__15406__auto__ = " ~_~w";
            var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
            return function() {
              var G__16441__delegate = function(args__15408__auto__) {
                var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
              };
              var G__16441 = function(var_args) {
                var args__15408__auto__ = null;
                if (arguments.length > 0) {
                  var G__16442__i = 0, G__16442__a = new Array(arguments.length - 0);
                  while (G__16442__i < G__16442__a.length) {
                    G__16442__a[G__16442__i] = arguments[G__16442__i + 0];
                    ++G__16442__i;
                  }
                  args__15408__auto__ = new cljs.core.IndexedSeq(G__16442__a, 0, null);
                }
                return G__16441__delegate.call(this, args__15408__auto__);
              };
              G__16441.cljs$lang$maxFixedArity = 0;
              G__16441.cljs$lang$applyTo = function(arglist__16443) {
                var args__15408__auto__ = cljs.core.seq(arglist__16443);
                return G__16441__delegate(args__15408__auto__);
              };
              G__16441.cljs$core$IFn$_invoke$arity$variadic = G__16441__delegate;
              return G__16441;
            }();
          })().call(null, doc_str);
        } else {
        }
        if (cljs.core.truth_(attr_map)) {
          (function() {
            var format_in__15406__auto__ = " ~_~w";
            var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
            return function() {
              var G__16444__delegate = function(args__15408__auto__) {
                var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
                return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
              };
              var G__16444 = function(var_args) {
                var args__15408__auto__ = null;
                if (arguments.length > 0) {
                  var G__16445__i = 0, G__16445__a = new Array(arguments.length - 0);
                  while (G__16445__i < G__16445__a.length) {
                    G__16445__a[G__16445__i] = arguments[G__16445__i + 0];
                    ++G__16445__i;
                  }
                  args__15408__auto__ = new cljs.core.IndexedSeq(G__16445__a, 0, null);
                }
                return G__16444__delegate.call(this, args__15408__auto__);
              };
              G__16444.cljs$lang$maxFixedArity = 0;
              G__16444.cljs$lang$applyTo = function(arglist__16446) {
                var args__15408__auto__ = cljs.core.seq(arglist__16446);
                return G__16444__delegate(args__15408__auto__);
              };
              G__16444.cljs$core$IFn$_invoke$arity$variadic = G__16444__delegate;
              return G__16444;
            }();
          })().call(null, attr_map);
        } else {
        }
        if (cljs.core.vector_QMARK_.call(null, cljs.core.first.call(null, stuff__$2))) {
          cljs.pprint.single_defn.call(null, stuff__$2, function() {
            var or__4126__auto__ = doc_str;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return attr_map;
            }
          }());
        } else {
          cljs.pprint.multi_defn.call(null, stuff__$2, function() {
            var or__4126__auto__ = doc_str;
            if (cljs.core.truth_(or__4126__auto__)) {
              return or__4126__auto__;
            } else {
              return attr_map;
            }
          }());
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16431_16435;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16430_16434;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_binding_form = function cljs$pprint$pprint_binding_form(binding_vec) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__16447_16456 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__16448_16457 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__16449_16458 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__16450_16459 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16449_16458;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16450_16459;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "[", null, "]");
      var length_count16451_16460 = 0;
      var binding_16461 = binding_vec;
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count16451_16460 < cljs.core._STAR_print_length_STAR_) {
          if (cljs.core.seq.call(null, binding_16461)) {
            if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
            } else {
              var _STAR_current_level_STAR__orig_val__16452_16462 = cljs.pprint._STAR_current_level_STAR_;
              var _STAR_current_length_STAR__orig_val__16453_16463 = cljs.pprint._STAR_current_length_STAR_;
              var _STAR_current_level_STAR__temp_val__16454_16464 = cljs.pprint._STAR_current_level_STAR_ + 1;
              var _STAR_current_length_STAR__temp_val__16455_16465 = 0;
              cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16454_16464;
              cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16455_16465;
              try {
                cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                cljs.pprint.write_out.call(null, cljs.core.first.call(null, binding_16461));
                if (cljs.core.next.call(null, binding_16461)) {
                  cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                  cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                  cljs.pprint.write_out.call(null, cljs.core.second.call(null, binding_16461));
                } else {
                }
                cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
              } finally {
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16453_16463;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16452_16462;
              }
            }
            if (cljs.core.next.call(null, cljs.core.rest.call(null, binding_16461))) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__16466 = length_count16451_16460 + 1;
              var G__16467 = cljs.core.next.call(null, cljs.core.rest.call(null, binding_16461));
              length_count16451_16460 = G__16466;
              binding_16461 = G__16467;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16448_16457;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16447_16456;
    }
  }
  return null;
};
cljs.pprint.pprint_let = function cljs$pprint$pprint_let(alis) {
  var base_sym = cljs.core.first.call(null, alis);
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__16468_16472 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__16469_16473 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__16470_16474 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__16471_16475 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16470_16474;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16471_16475;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      if (cljs.core.next.call(null, alis) && cljs.core.vector_QMARK_.call(null, cljs.core.second.call(null, alis))) {
        (function() {
          var format_in__15406__auto__ = "~w ~1I~@_";
          var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
          return function() {
            var G__16476__delegate = function(args__15408__auto__) {
              var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
              return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
            };
            var G__16476 = function(var_args) {
              var args__15408__auto__ = null;
              if (arguments.length > 0) {
                var G__16477__i = 0, G__16477__a = new Array(arguments.length - 0);
                while (G__16477__i < G__16477__a.length) {
                  G__16477__a[G__16477__i] = arguments[G__16477__i + 0];
                  ++G__16477__i;
                }
                args__15408__auto__ = new cljs.core.IndexedSeq(G__16477__a, 0, null);
              }
              return G__16476__delegate.call(this, args__15408__auto__);
            };
            G__16476.cljs$lang$maxFixedArity = 0;
            G__16476.cljs$lang$applyTo = function(arglist__16478) {
              var args__15408__auto__ = cljs.core.seq(arglist__16478);
              return G__16476__delegate(args__15408__auto__);
            };
            G__16476.cljs$core$IFn$_invoke$arity$variadic = G__16476__delegate;
            return G__16476;
          }();
        })().call(null, base_sym);
        cljs.pprint.pprint_binding_form.call(null, cljs.core.second.call(null, alis));
        (function() {
          var format_in__15406__auto__ = " ~_~{~w~^ ~_~}";
          var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
          return function() {
            var G__16479__delegate = function(args__15408__auto__) {
              var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
              return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
            };
            var G__16479 = function(var_args) {
              var args__15408__auto__ = null;
              if (arguments.length > 0) {
                var G__16480__i = 0, G__16480__a = new Array(arguments.length - 0);
                while (G__16480__i < G__16480__a.length) {
                  G__16480__a[G__16480__i] = arguments[G__16480__i + 0];
                  ++G__16480__i;
                }
                args__15408__auto__ = new cljs.core.IndexedSeq(G__16480__a, 0, null);
              }
              return G__16479__delegate.call(this, args__15408__auto__);
            };
            G__16479.cljs$lang$maxFixedArity = 0;
            G__16479.cljs$lang$applyTo = function(arglist__16481) {
              var args__15408__auto__ = cljs.core.seq(arglist__16481);
              return G__16479__delegate(args__15408__auto__);
            };
            G__16479.cljs$core$IFn$_invoke$arity$variadic = G__16479__delegate;
            return G__16479;
          }();
        })().call(null, cljs.core.next.call(null, cljs.core.rest.call(null, alis)));
      } else {
        cljs.pprint.pprint_simple_code_list.call(null, alis);
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16469_16473;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16468_16472;
    }
  }
  return null;
};
cljs.pprint.pprint_if = function() {
  var format_in__15406__auto__ = "~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e";
  var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
  return function() {
    var G__16482__delegate = function(args__15408__auto__) {
      var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
      return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
    };
    var G__16482 = function(var_args) {
      var args__15408__auto__ = null;
      if (arguments.length > 0) {
        var G__16483__i = 0, G__16483__a = new Array(arguments.length - 0);
        while (G__16483__i < G__16483__a.length) {
          G__16483__a[G__16483__i] = arguments[G__16483__i + 0];
          ++G__16483__i;
        }
        args__15408__auto__ = new cljs.core.IndexedSeq(G__16483__a, 0, null);
      }
      return G__16482__delegate.call(this, args__15408__auto__);
    };
    G__16482.cljs$lang$maxFixedArity = 0;
    G__16482.cljs$lang$applyTo = function(arglist__16484) {
      var args__15408__auto__ = cljs.core.seq(arglist__16484);
      return G__16482__delegate(args__15408__auto__);
    };
    G__16482.cljs$core$IFn$_invoke$arity$variadic = G__16482__delegate;
    return G__16482;
  }();
}();
cljs.pprint.pprint_cond = function cljs$pprint$pprint_cond(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__16485_16494 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__16486_16495 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__16487_16496 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__16488_16497 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16487_16496;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16488_16497;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis));
      if (cljs.core.next.call(null, alis)) {
        cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
        cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
        var length_count16489_16498 = 0;
        var alis_16499__$1 = cljs.core.next.call(null, alis);
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count16489_16498 < cljs.core._STAR_print_length_STAR_) {
            if (alis_16499__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__16490_16500 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__16491_16501 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__16492_16502 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__16493_16503 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16492_16502;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16493_16503;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_16499__$1));
                  if (cljs.core.next.call(null, alis_16499__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_16499__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16491_16501;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16490_16500;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_16499__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__16504 = length_count16489_16498 + 1;
                var G__16505 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_16499__$1));
                length_count16489_16498 = G__16504;
                alis_16499__$1 = G__16505;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
      } else {
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16486_16495;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16485_16494;
    }
  }
  return null;
};
cljs.pprint.pprint_condp = function cljs$pprint$pprint_condp(alis) {
  if (cljs.core.count.call(null, alis) > 3) {
    if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
      cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
    } else {
      var _STAR_current_level_STAR__orig_val__16506_16515 = cljs.pprint._STAR_current_level_STAR_;
      var _STAR_current_length_STAR__orig_val__16507_16516 = cljs.pprint._STAR_current_length_STAR_;
      var _STAR_current_level_STAR__temp_val__16508_16517 = cljs.pprint._STAR_current_level_STAR_ + 1;
      var _STAR_current_length_STAR__temp_val__16509_16518 = 0;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16508_16517;
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16509_16518;
      try {
        cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
        cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
        cljs.core.apply.call(null, function() {
          var format_in__15406__auto__ = "~w ~@_~w ~@_~w ~_";
          var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
          return function() {
            var G__16519__delegate = function(args__15408__auto__) {
              var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
              return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
            };
            var G__16519 = function(var_args) {
              var args__15408__auto__ = null;
              if (arguments.length > 0) {
                var G__16520__i = 0, G__16520__a = new Array(arguments.length - 0);
                while (G__16520__i < G__16520__a.length) {
                  G__16520__a[G__16520__i] = arguments[G__16520__i + 0];
                  ++G__16520__i;
                }
                args__15408__auto__ = new cljs.core.IndexedSeq(G__16520__a, 0, null);
              }
              return G__16519__delegate.call(this, args__15408__auto__);
            };
            G__16519.cljs$lang$maxFixedArity = 0;
            G__16519.cljs$lang$applyTo = function(arglist__16521) {
              var args__15408__auto__ = cljs.core.seq(arglist__16521);
              return G__16519__delegate(args__15408__auto__);
            };
            G__16519.cljs$core$IFn$_invoke$arity$variadic = G__16519__delegate;
            return G__16519;
          }();
        }(), alis);
        var length_count16510_16522 = 0;
        var alis_16523__$1 = cljs.core.seq.call(null, cljs.core.drop.call(null, 3, alis));
        while (true) {
          if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count16510_16522 < cljs.core._STAR_print_length_STAR_) {
            if (alis_16523__$1) {
              if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
              } else {
                var _STAR_current_level_STAR__orig_val__16511_16524 = cljs.pprint._STAR_current_level_STAR_;
                var _STAR_current_length_STAR__orig_val__16512_16525 = cljs.pprint._STAR_current_length_STAR_;
                var _STAR_current_level_STAR__temp_val__16513_16526 = cljs.pprint._STAR_current_level_STAR_ + 1;
                var _STAR_current_length_STAR__temp_val__16514_16527 = 0;
                cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16513_16526;
                cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16514_16527;
                try {
                  cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, null, null, null);
                  cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_16523__$1));
                  if (cljs.core.next.call(null, alis_16523__$1)) {
                    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                    cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "miser", "miser", -556060186));
                    cljs.pprint.write_out.call(null, cljs.core.second.call(null, alis_16523__$1));
                  } else {
                  }
                  cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
                } finally {
                  cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16512_16525;
                  cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16511_16524;
                }
              }
              if (cljs.core.next.call(null, cljs.core.rest.call(null, alis_16523__$1))) {
                cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
                cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
                var G__16528 = length_count16510_16522 + 1;
                var G__16529 = cljs.core.next.call(null, cljs.core.rest.call(null, alis_16523__$1));
                length_count16510_16522 = G__16528;
                alis_16523__$1 = G__16529;
                continue;
              } else {
              }
            } else {
            }
          } else {
            cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
          }
          break;
        }
        cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
      } finally {
        cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16507_16516;
        cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16506_16515;
      }
    }
    return null;
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint._STAR_symbol_map_STAR_ = cljs.core.PersistentArrayMap.EMPTY;
cljs.pprint.pprint_anon_func = function cljs$pprint$pprint_anon_func(alis) {
  var args = cljs.core.second.call(null, alis);
  var nlis = cljs.core.first.call(null, cljs.core.rest.call(null, cljs.core.rest.call(null, alis)));
  if (cljs.core.vector_QMARK_.call(null, args)) {
    var _STAR_symbol_map_STAR__orig_val__16532 = cljs.pprint._STAR_symbol_map_STAR_;
    var _STAR_symbol_map_STAR__temp_val__16533 = cljs.core._EQ_.call(null, 1, cljs.core.count.call(null, args)) ? cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first.call(null, args), "%"]) : cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p1__16530_SHARP_, p2__16531_SHARP_) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__16530_SHARP_, ["%", cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__16531_SHARP_)].join("")], null);
    }, args, cljs.core.range.call(null, 1, cljs.core.count.call(null, args) + 1)));
    cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR__temp_val__16533;
    try {
      return function() {
        var format_in__15406__auto__ = "~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e";
        var cf__15407__auto__ = typeof format_in__15406__auto__ === "string" ? cljs.pprint.cached_compile.call(null, format_in__15406__auto__) : format_in__15406__auto__;
        return function() {
          var G__16534__delegate = function(args__15408__auto__) {
            var navigator__15409__auto__ = cljs.pprint.init_navigator.call(null, args__15408__auto__);
            return cljs.pprint.execute_format.call(null, cf__15407__auto__, navigator__15409__auto__);
          };
          var G__16534 = function(var_args) {
            var args__15408__auto__ = null;
            if (arguments.length > 0) {
              var G__16535__i = 0, G__16535__a = new Array(arguments.length - 0);
              while (G__16535__i < G__16535__a.length) {
                G__16535__a[G__16535__i] = arguments[G__16535__i + 0];
                ++G__16535__i;
              }
              args__15408__auto__ = new cljs.core.IndexedSeq(G__16535__a, 0, null);
            }
            return G__16534__delegate.call(this, args__15408__auto__);
          };
          G__16534.cljs$lang$maxFixedArity = 0;
          G__16534.cljs$lang$applyTo = function(arglist__16536) {
            var args__15408__auto__ = cljs.core.seq(arglist__16536);
            return G__16534__delegate(args__15408__auto__);
          };
          G__16534.cljs$core$IFn$_invoke$arity$variadic = G__16534__delegate;
          return G__16534;
        }();
      }().call(null, nlis);
    } finally {
      cljs.pprint._STAR_symbol_map_STAR_ = _STAR_symbol_map_STAR__orig_val__16532;
    }
  } else {
    return cljs.pprint.pprint_simple_code_list.call(null, alis);
  }
};
cljs.pprint.pprint_simple_code_list = function cljs$pprint$pprint_simple_code_list(alis) {
  if (cljs.core.truth_(cljs.pprint.level_exceeded.call(null))) {
    cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "#");
  } else {
    var _STAR_current_level_STAR__orig_val__16537_16542 = cljs.pprint._STAR_current_level_STAR_;
    var _STAR_current_length_STAR__orig_val__16538_16543 = cljs.pprint._STAR_current_length_STAR_;
    var _STAR_current_level_STAR__temp_val__16539_16544 = cljs.pprint._STAR_current_level_STAR_ + 1;
    var _STAR_current_length_STAR__temp_val__16540_16545 = 0;
    cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__temp_val__16539_16544;
    cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__temp_val__16540_16545;
    try {
      cljs.pprint.start_block.call(null, cljs.core._STAR_out_STAR_, "(", null, ")");
      cljs.pprint.pprint_indent.call(null, new cljs.core.Keyword(null, "block", "block", 664686210), 1);
      var length_count16541_16546 = 0;
      var alis_16547__$1 = cljs.core.seq.call(null, alis);
      while (true) {
        if (cljs.core.not.call(null, cljs.core._STAR_print_length_STAR_) || length_count16541_16546 < cljs.core._STAR_print_length_STAR_) {
          if (alis_16547__$1) {
            cljs.pprint.write_out.call(null, cljs.core.first.call(null, alis_16547__$1));
            if (cljs.core.next.call(null, alis_16547__$1)) {
              cljs.core._write.call(null, cljs.core._STAR_out_STAR_, " ");
              cljs.pprint.pprint_newline.call(null, new cljs.core.Keyword(null, "linear", "linear", 872268697));
              var G__16548 = length_count16541_16546 + 1;
              var G__16549 = cljs.core.next.call(null, alis_16547__$1);
              length_count16541_16546 = G__16548;
              alis_16547__$1 = G__16549;
              continue;
            } else {
            }
          } else {
          }
        } else {
          cljs.core._write.call(null, cljs.core._STAR_out_STAR_, "...");
        }
        break;
      }
      cljs.pprint.end_block.call(null, cljs.core._STAR_out_STAR_);
    } finally {
      cljs.pprint._STAR_current_length_STAR_ = _STAR_current_length_STAR__orig_val__16538_16543;
      cljs.pprint._STAR_current_level_STAR_ = _STAR_current_level_STAR__orig_val__16537_16542;
    }
  }
  return null;
};
cljs.pprint.two_forms = function cljs$pprint$two_forms(amap) {
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.mapcat.call(null, cljs.core.identity, function() {
    var iter__4529__auto__ = function cljs$pprint$two_forms_$_iter__16550(s__16551) {
      return new cljs.core.LazySeq(null, function() {
        var s__16551__$1 = s__16551;
        while (true) {
          var temp__5735__auto__ = cljs.core.seq.call(null, s__16551__$1);
          if (temp__5735__auto__) {
            var s__16551__$2 = temp__5735__auto__;
            if (cljs.core.chunked_seq_QMARK_.call(null, s__16551__$2)) {
              var c__4527__auto__ = cljs.core.chunk_first.call(null, s__16551__$2);
              var size__4528__auto__ = cljs.core.count.call(null, c__4527__auto__);
              var b__16553 = cljs.core.chunk_buffer.call(null, size__4528__auto__);
              if (function() {
                var i__16552 = 0;
                while (true) {
                  if (i__16552 < size__4528__auto__) {
                    var x = cljs.core._nth.call(null, c__4527__auto__, i__16552);
                    cljs.core.chunk_append.call(null, b__16553, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null));
                    var G__16554 = i__16552 + 1;
                    i__16552 = G__16554;
                    continue;
                  } else {
                    return true;
                  }
                  break;
                }
              }()) {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16553), cljs$pprint$two_forms_$_iter__16550.call(null, cljs.core.chunk_rest.call(null, s__16551__$2)));
              } else {
                return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16553), null);
              }
            } else {
              var x = cljs.core.first.call(null, s__16551__$2);
              return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, cljs.core.name.call(null, cljs.core.first.call(null, x))), cljs.core.second.call(null, x)], null)], null), cljs$pprint$two_forms_$_iter__16550.call(null, cljs.core.rest.call(null, s__16551__$2)));
            }
          } else {
            return null;
          }
          break;
        }
      }, null, null);
    };
    return iter__4529__auto__.call(null, amap);
  }()));
};
cljs.pprint.add_core_ns = function cljs$pprint$add_core_ns(amap) {
  var core = "clojure.core";
  return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p1__16555_SHARP_) {
    var vec__16556 = p1__16555_SHARP_;
    var s = cljs.core.nth.call(null, vec__16556, 0, null);
    var f = cljs.core.nth.call(null, vec__16556, 1, null);
    if (cljs.core.not.call(null, function() {
      var or__4126__auto__ = cljs.core.namespace.call(null, s);
      if (cljs.core.truth_(or__4126__auto__)) {
        return or__4126__auto__;
      } else {
        return cljs.core.special_symbol_QMARK_.call(null, s);
      }
    }())) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.call(null, core, cljs.core.name.call(null, s)), f], null);
    } else {
      return p1__16555_SHARP_;
    }
  }, amap));
};
cljs.pprint._STAR_code_table_STAR_ = cljs.pprint.two_forms.call(null, cljs.pprint.add_core_ns.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null, ".", ".", 1975675962, null), new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), new cljs.core.Symbol(null, "when-first", "when-first", 821699168, null), new cljs.core.Symbol(null, "if", "if", 1181717262, null), new cljs.core.Symbol(null, "condp", "condp", 1054325175, null), new cljs.core.Symbol(null, "..", "..", -300507420, 
null), new cljs.core.Symbol(null, "defmacro", "defmacro", 2054157304, null), new cljs.core.Symbol(null, "defn", "defn", -126010802, null), new cljs.core.Symbol(null, "loop", "loop", 1244978678, null), new cljs.core.Symbol(null, "struct", "struct", 325972931, null), new cljs.core.Symbol(null, "doseq", "doseq", 221164135, null), new cljs.core.Symbol(null, "if-not", "if-not", -265415609, null), new cljs.core.Symbol(null, "when-not", "when-not", -1223136340, null), new cljs.core.Symbol(null, "def", "def", 
597100991, null), new cljs.core.Symbol(null, "when", "when", 1064114221, null), new cljs.core.Symbol(null, "with-open", "with-open", 172119667, null), new cljs.core.Symbol(null, "with-local-vars", "with-local-vars", 837642072, null), new cljs.core.Symbol(null, "defonce", "defonce", -1681484013, null), new cljs.core.Symbol(null, "when-let", "when-let", -1383043480, null), new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), new cljs.core.Symbol(null, "dotimes", "dotimes", -818708397, null), new cljs.core.Symbol(null, 
"cond", "cond", 1606708055, null), new cljs.core.Symbol(null, "let", "let", 358118826, null), new cljs.core.Symbol(null, "fn", "fn", 465265323, null), new cljs.core.Symbol(null, "defn-", "defn-", 1097765044, null), new cljs.core.Symbol(null, "locking", "locking", 1542862874, null), new cljs.core.Symbol(null, "-\x3e", "-\x3e", -2139605430, null), new cljs.core.Symbol(null, "if-let", "if-let", 1803593690, null), new cljs.core.Symbol(null, "binding", "binding", -2114503176, null), new cljs.core.Symbol(null, 
"struct-map", "struct-map", -1387540878, null)], [cljs.pprint.pprint_hold_first, cljs.pprint.pprint_anon_func, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_condp, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_if, cljs.pprint.pprint_if, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_if, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first, 
cljs.pprint.pprint_let, cljs.pprint.pprint_ns, cljs.pprint.pprint_let, cljs.pprint.pprint_cond, cljs.pprint.pprint_let, cljs.pprint.pprint_defn, cljs.pprint.pprint_defn, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_hold_first, cljs.pprint.pprint_let, cljs.pprint.pprint_let, cljs.pprint.pprint_hold_first])));
cljs.pprint.pprint_code_list = function cljs$pprint$pprint_code_list(alis) {
  if (cljs.core.not.call(null, cljs.pprint.pprint_reader_macro.call(null, alis))) {
    var temp__5733__auto__ = cljs.pprint._STAR_code_table_STAR_.call(null, cljs.core.first.call(null, alis));
    if (cljs.core.truth_(temp__5733__auto__)) {
      var special_form = temp__5733__auto__;
      return special_form.call(null, alis);
    } else {
      return cljs.pprint.pprint_simple_code_list.call(null, alis);
    }
  } else {
    return null;
  }
};
cljs.pprint.pprint_code_symbol = function cljs$pprint$pprint_code_symbol(sym) {
  var temp__5733__auto__ = sym.call(null, cljs.pprint._STAR_symbol_map_STAR_);
  if (cljs.core.truth_(temp__5733__auto__)) {
    var arg_num = temp__5733__auto__;
    return cljs.pprint.print.call(null, arg_num);
  } else {
    if (cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)) {
      return cljs.pprint.print.call(null, cljs.core.name.call(null, sym));
    } else {
      return cljs.pprint.pr.call(null, sym);
    }
  }
};
if (typeof cljs !== "undefined" && typeof cljs.pprint !== "undefined" && typeof cljs.pprint.code_dispatch !== "undefined") {
} else {
  cljs.pprint.code_dispatch = function() {
    var method_table__4619__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4620__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4621__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4622__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4623__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.pprint", "code-dispatch"), cljs.pprint.type_dispatcher, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4623__auto__, method_table__4619__auto__, prefer_table__4620__auto__, method_cache__4621__auto__, cached_hierarchy__4622__auto__);
  }();
}
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "list", "list", 765357683), cljs.pprint.pprint_code_list);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "symbol", "symbol", -1038572696), cljs.pprint.pprint_code_symbol);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "vector", "vector", 1902966158), cljs.pprint.pprint_vector);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "map", "map", 1371690461), cljs.pprint.pprint_map);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "set", "set", 304602554), cljs.pprint.pprint_set);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "queue", "queue", 1455835879), cljs.pprint.pprint_pqueue);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "deref", "deref", -145586795), cljs.pprint.pprint_ideref);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, null, cljs.pprint.pr);
cljs.pprint.use_method.call(null, cljs.pprint.code_dispatch, new cljs.core.Keyword(null, "default", "default", -1987822328), cljs.pprint.pprint_simple_default);
cljs.pprint.set_pprint_dispatch.call(null, cljs.pprint.simple_dispatch);
cljs.pprint.add_padding = function cljs$pprint$add_padding(width, s) {
  var padding = function() {
    var x__4214__auto__ = 0;
    var y__4215__auto__ = width - cljs.core.count.call(null, s);
    return x__4214__auto__ > y__4215__auto__ ? x__4214__auto__ : y__4215__auto__;
  }();
  return cljs.core.apply.call(null, cljs.core.str, clojure.string.join.call(null, cljs.core.repeat.call(null, padding, " ")), s);
};
cljs.pprint.print_table = function cljs$pprint$print_table(var_args) {
  var G__16563 = arguments.length;
  switch(G__16563) {
    case 2:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 1:
      return cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 = function(ks, rows) {
  if (cljs.core.seq.call(null, rows)) {
    var widths = cljs.core.map.call(null, function(k) {
      return cljs.core.apply.call(null, cljs.core.max, cljs.core.str.cljs$core$IFn$_invoke$arity$1(k).length, cljs.core.map.call(null, function(p1__16559_SHARP_) {
        return cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.call(null, p1__16559_SHARP_, k)).length;
      }, rows));
    }, ks);
    var spacers = cljs.core.map.call(null, function(p1__16560_SHARP_) {
      return cljs.core.apply.call(null, cljs.core.str, cljs.core.repeat.call(null, p1__16560_SHARP_, "-"));
    }, widths);
    var fmt_row = function(leader, divider, trailer, row) {
      return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(leader), cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, divider, function() {
        var iter__4529__auto__ = function cljs$pprint$iter__16574(s__16575) {
          return new cljs.core.LazySeq(null, function() {
            var s__16575__$1 = s__16575;
            while (true) {
              var temp__5735__auto__ = cljs.core.seq.call(null, s__16575__$1);
              if (temp__5735__auto__) {
                var s__16575__$2 = temp__5735__auto__;
                if (cljs.core.chunked_seq_QMARK_.call(null, s__16575__$2)) {
                  var c__4527__auto__ = cljs.core.chunk_first.call(null, s__16575__$2);
                  var size__4528__auto__ = cljs.core.count.call(null, c__4527__auto__);
                  var b__16577 = cljs.core.chunk_buffer.call(null, size__4528__auto__);
                  if (function() {
                    var i__16576 = 0;
                    while (true) {
                      if (i__16576 < size__4528__auto__) {
                        var vec__16578 = cljs.core._nth.call(null, c__4527__auto__, i__16576);
                        var col = cljs.core.nth.call(null, vec__16578, 0, null);
                        var width = cljs.core.nth.call(null, vec__16578, 1, null);
                        cljs.core.chunk_append.call(null, b__16577, cljs.pprint.add_padding.call(null, width, cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)));
                        var G__16589 = i__16576 + 1;
                        i__16576 = G__16589;
                        continue;
                      } else {
                        return true;
                      }
                      break;
                    }
                  }()) {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16577), cljs$pprint$iter__16574.call(null, cljs.core.chunk_rest.call(null, s__16575__$2)));
                  } else {
                    return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__16577), null);
                  }
                } else {
                  var vec__16581 = cljs.core.first.call(null, s__16575__$2);
                  var col = cljs.core.nth.call(null, vec__16581, 0, null);
                  var width = cljs.core.nth.call(null, vec__16581, 1, null);
                  return cljs.core.cons.call(null, cljs.pprint.add_padding.call(null, width, cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)), cljs$pprint$iter__16574.call(null, cljs.core.rest.call(null, s__16575__$2)));
                }
              } else {
                return null;
              }
              break;
            }
          }, null, null);
        };
        return iter__4529__auto__.call(null, cljs.core.map.call(null, cljs.core.vector, cljs.core.map.call(null, function(p1__16561_SHARP_) {
          return cljs.core.get.call(null, row, p1__16561_SHARP_);
        }, ks), widths));
      }()))), cljs.core.str.cljs$core$IFn$_invoke$arity$1(trailer)].join("");
    };
    cljs.core.println.call(null);
    cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", cljs.core.zipmap.call(null, ks, ks)));
    cljs.core.println.call(null, fmt_row.call(null, "|-", "-+-", "-|", cljs.core.zipmap.call(null, ks, spacers)));
    var seq__16584 = cljs.core.seq.call(null, rows);
    var chunk__16585 = null;
    var count__16586 = 0;
    var i__16587 = 0;
    while (true) {
      if (i__16587 < count__16586) {
        var row = cljs.core._nth.call(null, chunk__16585, i__16587);
        cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
        var G__16590 = seq__16584;
        var G__16591 = chunk__16585;
        var G__16592 = count__16586;
        var G__16593 = i__16587 + 1;
        seq__16584 = G__16590;
        chunk__16585 = G__16591;
        count__16586 = G__16592;
        i__16587 = G__16593;
        continue;
      } else {
        var temp__5735__auto__ = cljs.core.seq.call(null, seq__16584);
        if (temp__5735__auto__) {
          var seq__16584__$1 = temp__5735__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__16584__$1)) {
            var c__4556__auto__ = cljs.core.chunk_first.call(null, seq__16584__$1);
            var G__16594 = cljs.core.chunk_rest.call(null, seq__16584__$1);
            var G__16595 = c__4556__auto__;
            var G__16596 = cljs.core.count.call(null, c__4556__auto__);
            var G__16597 = 0;
            seq__16584 = G__16594;
            chunk__16585 = G__16595;
            count__16586 = G__16596;
            i__16587 = G__16597;
            continue;
          } else {
            var row = cljs.core.first.call(null, seq__16584__$1);
            cljs.core.println.call(null, fmt_row.call(null, "| ", " | ", " |", row));
            var G__16598 = cljs.core.next.call(null, seq__16584__$1);
            var G__16599 = null;
            var G__16600 = 0;
            var G__16601 = 0;
            seq__16584 = G__16598;
            chunk__16585 = G__16599;
            count__16586 = G__16600;
            i__16587 = G__16601;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 = function(rows) {
  return cljs.pprint.print_table.call(null, cljs.core.keys.call(null, cljs.core.first.call(null, rows)), rows);
};
cljs.pprint.print_table.cljs$lang$maxFixedArity = 2;
goog.provide("cljs.test");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.pprint");
cljs.test.empty_env = function cljs$test$empty_env(var_args) {
  var G__16801 = arguments.length;
  switch(G__16801) {
    case 0:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0();
      break;
    case 1:
      return cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$0 = function() {
  return cljs.test.empty_env.call(null, new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322));
};
cljs.test.empty_env.cljs$core$IFn$_invoke$arity$1 = function(reporter) {
  var G__16802 = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "test", "test", 577538877), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0], null), new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150), 
  cljs.core.List.EMPTY, new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523), cljs.core.List.EMPTY, new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.core.pr_str, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), reporter], null);
  if (cljs.core._EQ_.call(null, new cljs.core.Keyword("cljs.test", "pprint", "cljs.test/pprint", 1627393641), reporter)) {
    return cljs.core.assoc.call(null, G__16802, new cljs.core.Keyword(null, "reporter", "reporter", -805360621), new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "formatter", "formatter", -483008823), cljs.pprint.pprint);
  } else {
    return G__16802;
  }
};
cljs.test.empty_env.cljs$lang$maxFixedArity = 1;
cljs.test._STAR_current_env_STAR_ = null;
cljs.test.get_current_env = function cljs$test$get_current_env() {
  var or__4126__auto__ = cljs.test._STAR_current_env_STAR_;
  if (cljs.core.truth_(or__4126__auto__)) {
    return or__4126__auto__;
  } else {
    return cljs.test.empty_env.call(null);
  }
};
cljs.test.update_current_env_BANG_ = function cljs$test$update_current_env_BANG_(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___16807 = arguments.length;
  var i__4737__auto___16808 = 0;
  while (true) {
    if (i__4737__auto___16808 < len__4736__auto___16807) {
      args__4742__auto__.push(arguments[i__4737__auto___16808]);
      var G__16809 = i__4737__auto___16808 + 1;
      i__4737__auto___16808 = G__16809;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 2 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(2), 0, null) : null;
  return cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic(arguments[0], arguments[1], argseq__4743__auto__);
};
cljs.test.update_current_env_BANG_.cljs$core$IFn$_invoke$arity$variadic = function(ks, f, args) {
  return cljs.test._STAR_current_env_STAR_ = cljs.core.apply.call(null, cljs.core.update_in, cljs.test.get_current_env.call(null), ks, f, args);
};
cljs.test.update_current_env_BANG_.cljs$lang$maxFixedArity = 2;
cljs.test.update_current_env_BANG_.cljs$lang$applyTo = function(seq16804) {
  var G__16805 = cljs.core.first.call(null, seq16804);
  var seq16804__$1 = cljs.core.next.call(null, seq16804);
  var G__16806 = cljs.core.first.call(null, seq16804__$1);
  var seq16804__$2 = cljs.core.next.call(null, seq16804__$1);
  var self__4723__auto__ = this;
  return self__4723__auto__.cljs$core$IFn$_invoke$arity$variadic(G__16805, G__16806, seq16804__$2);
};
cljs.test.set_env_BANG_ = function cljs$test$set_env_BANG_(new_env) {
  return cljs.test._STAR_current_env_STAR_ = new_env;
};
cljs.test.clear_env_BANG_ = function cljs$test$clear_env_BANG_() {
  return cljs.test._STAR_current_env_STAR_ = null;
};
cljs.test.get_and_clear_env_BANG_ = function cljs$test$get_and_clear_env_BANG_() {
  var env = cljs.test.get_current_env.call(null);
  cljs.test.clear_env_BANG_.call(null);
  return env;
};
cljs.test.testing_vars_str = function cljs$test$testing_vars_str(m) {
  var map__16811 = m;
  var map__16811__$1 = (!(map__16811 == null) ? map__16811.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__16811.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16811) : map__16811;
  var file = cljs.core.get.call(null, map__16811__$1, new cljs.core.Keyword(null, "file", "file", -1269645878));
  var line = cljs.core.get.call(null, map__16811__$1, new cljs.core.Keyword(null, "line", "line", 212345235));
  var column = cljs.core.get.call(null, map__16811__$1, new cljs.core.Keyword(null, "column", "column", 2078222095));
  return [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.reverse.call(null, cljs.core.map.call(null, function(p1__16810_SHARP_) {
    return (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, p1__16810_SHARP_));
  }, (new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null))))), " (", cljs.core.str.cljs$core$IFn$_invoke$arity$1(file), ":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(line), cljs.core.truth_(column) ? [":", cljs.core.str.cljs$core$IFn$_invoke$arity$1(column)].join("") : null, ")"].join("");
};
cljs.test.testing_contexts_str = function cljs$test$testing_contexts_str() {
  return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, " ", cljs.core.reverse.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))));
};
cljs.test.inc_report_counter_BANG_ = function cljs$test$inc_report_counter_BANG_(name) {
  if (cljs.core.truth_((new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), name], null), cljs.core.fnil.call(null, cljs.core.inc, 0));
  } else {
    return null;
  }
};
if (typeof cljs !== "undefined" && typeof cljs.test !== "undefined" && typeof cljs.test.report !== "undefined") {
} else {
  cljs.test.report = function() {
    var method_table__4619__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var prefer_table__4620__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var method_cache__4621__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var cached_hierarchy__4622__auto__ = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var hierarchy__4623__auto__ = cljs.core.get.call(null, cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "hierarchy", "hierarchy", -1053470341), cljs.core.get_global_hierarchy.call(null));
    return new cljs.core.MultiFn(cljs.core.symbol.call(null, "cljs.test", "report"), function(m) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "reporter", "reporter", -805360621)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)), (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m)], null);
    }, new cljs.core.Keyword(null, "default", "default", -1987822328), hierarchy__4623__auto__, method_table__4619__auto__, prefer_table__4620__auto__, method_cache__4621__auto__, cached_hierarchy__4622__auto__);
  }();
}
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.Keyword(null, "default", "default", -1987822328), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "pass", "pass", 1574159993)], null), function(m) {
  return cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "pass", "pass", 1574159993));
});
cljs.test.print_comparison = function cljs$test$print_comparison(m) {
  var formatter_fn = function() {
    var or__4126__auto__ = (new cljs.core.Keyword(null, "formatter", "formatter", -483008823)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return cljs.core.pr_str;
    }
  }();
  cljs.core.println.call(null, "expected:", formatter_fn.call(null, (new cljs.core.Keyword(null, "expected", "expected", 1583670997)).cljs$core$IFn$_invoke$arity$1(m)));
  return cljs.core.println.call(null, "  actual:", formatter_fn.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m)));
};
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "fail", "fail", 1706214930)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "fail", "fail", 1706214930));
  cljs.core.println.call(null, "\nFAIL in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__5735__auto___16813 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__5735__auto___16813)) {
    var message_16814 = temp__5735__auto___16813;
    cljs.core.println.call(null, message_16814);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "error", "error", -978969032)], null), function(m) {
  cljs.test.inc_report_counter_BANG_.call(null, new cljs.core.Keyword(null, "error", "error", -978969032));
  cljs.core.println.call(null, "\nERROR in", cljs.test.testing_vars_str.call(null, m));
  if (cljs.core.seq.call(null, (new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null)))) {
    cljs.core.println.call(null, cljs.test.testing_contexts_str.call(null));
  } else {
  }
  var temp__5735__auto___16815 = (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(m);
  if (cljs.core.truth_(temp__5735__auto___16815)) {
    var message_16816 = temp__5735__auto___16815;
    cljs.core.println.call(null, message_16816);
  } else {
  }
  return cljs.test.print_comparison.call(null, m);
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "summary", "summary", 380847952)], null), function(m) {
  cljs.core.println.call(null, "\nRan", (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(m), "tests containing", (new cljs.core.Keyword(null, "pass", "pass", 1574159993)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m) + (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "assertions.");
  return cljs.core.println.call(null, (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$1(m), "failures,", (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$1(m), "errors.");
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null), function(m) {
  return cljs.core.println.call(null, "\nTesting", cljs.core.name.call(null, (new cljs.core.Keyword(null, "ns", "ns", 441598760)).cljs$core$IFn$_invoke$arity$1(m)));
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-all-vars", "end-test-all-vars", 548827253)], null), function(m) {
  return null;
});
cljs.core._add_method.call(null, cljs.test.report, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword("cljs.test", "default", "cljs.test/default", -1581405322), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713)], null), function(m) {
  return null;
});
cljs.test.js_line_and_column = function cljs$test$js_line_and_column(stack_element) {
  var parts = stack_element.split(":");
  var cnt = cljs.core.count.call(null, parts);
  if (cnt > 1) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parseInt(cljs.core.nth.call(null, parts, cnt - 2), 10), parseInt(cljs.core.nth.call(null, parts, cnt - 1), 10)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [NaN, NaN], null);
  }
};
cljs.test.js_filename = function cljs$test$js_filename(stack_element) {
  var output_dir = "target/cljsbuild-compiler-1";
  var output_dir__$1 = function() {
    var G__16817 = output_dir;
    if (!clojure.string.ends_with_QMARK_.call(null, output_dir, "/")) {
      return [G__16817, "/"].join("");
    } else {
      return G__16817;
    }
  }();
  return cljs.core.first.call(null, cljs.core.last.call(null, stack_element.split(output_dir__$1)).split(":"));
};
cljs.test.mapped_line_and_column = function cljs$test$mapped_line_and_column(filename, line, column) {
  var default$ = new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line, column], null);
  var temp__5733__auto__ = (new cljs.core.Keyword(null, "source-map", "source-map", 1706252311)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_current_env.call(null));
  if (cljs.core.truth_(temp__5733__auto__)) {
    var source_map = temp__5733__auto__;
    var temp__5733__auto____$1 = cljs.core.get_in.call(null, source_map, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [filename, line - 1], null));
    if (cljs.core.truth_(temp__5733__auto____$1)) {
      var columns = temp__5733__auto____$1;
      return cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.first.call(null, function() {
        var temp__5733__auto____$2 = cljs.core.get.call(null, columns, column - 1);
        if (cljs.core.truth_(temp__5733__auto____$2)) {
          var mapping = temp__5733__auto____$2;
          return mapping;
        } else {
          return cljs.core.second.call(null, cljs.core.first.call(null, columns));
        }
      }()), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "source", "source", -433931539), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "col", "col", -1959363084)], null)));
    } else {
      return default$;
    }
  } else {
    return default$;
  }
};
cljs.test.file_and_line = function cljs$test$file_and_line(exception, depth) {
  var temp__5733__auto__ = typeof exception.stack === "string" ? function() {
    var G__16819 = exception.stack;
    var G__16819__$1 = G__16819 == null ? null : clojure.string.split_lines.call(null, G__16819);
    var G__16819__$2 = G__16819__$1 == null ? null : cljs.core.get.call(null, G__16819__$1, depth);
    if (G__16819__$2 == null) {
      return null;
    } else {
      return clojure.string.trim.call(null, G__16819__$2);
    }
  }() : false;
  if (cljs.core.truth_(temp__5733__auto__)) {
    var stack_element = temp__5733__auto__;
    var fname = cljs.test.js_filename.call(null, stack_element);
    var vec__16820 = cljs.test.js_line_and_column.call(null, stack_element);
    var line = cljs.core.nth.call(null, vec__16820, 0, null);
    var column = cljs.core.nth.call(null, vec__16820, 1, null);
    var vec__16823 = cljs.test.mapped_line_and_column.call(null, fname, line, column);
    var fname__$1 = cljs.core.nth.call(null, vec__16823, 0, null);
    var line__$1 = cljs.core.nth.call(null, vec__16823, 1, null);
    var column__$1 = cljs.core.nth.call(null, vec__16823, 2, null);
    return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "file", "file", -1269645878), fname__$1, new cljs.core.Keyword(null, "line", "line", 212345235), line__$1, new cljs.core.Keyword(null, "column", "column", 2078222095), column__$1], null);
  } else {
    return new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "file", "file", -1269645878), exception.fileName, new cljs.core.Keyword(null, "line", "line", 212345235), exception.lineNumber], null);
  }
};
cljs.test.do_report = function cljs$test$do_report(m) {
  var m__$1 = function() {
    var G__16826 = (new cljs.core.Keyword(null, "type", "type", 1174270348)).cljs$core$IFn$_invoke$arity$1(m);
    var G__16826__$1 = G__16826 instanceof cljs.core.Keyword ? G__16826.fqn : null;
    switch(G__16826__$1) {
      case "fail":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, new Error, 4), m);
        break;
      case "error":
        return cljs.core.merge.call(null, cljs.test.file_and_line.call(null, (new cljs.core.Keyword(null, "actual", "actual", 107306363)).cljs$core$IFn$_invoke$arity$1(m), 0), m);
        break;
      default:
        return m;
    }
  }();
  return cljs.test.report.call(null, m__$1);
};
cljs.test.IAsyncTest = function() {
};
cljs.test.async_QMARK_ = function cljs$test$async_QMARK_(x) {
  if (!(x == null)) {
    if (false || cljs.core.PROTOCOL_SENTINEL === x.cljs$test$IAsyncTest$) {
      return true;
    } else {
      if (!x.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.test.IAsyncTest, x);
  }
};
cljs.test.run_block = function cljs$test$run_block(fns) {
  while (true) {
    var temp__5735__auto__ = cljs.core.seq.call(null, fns);
    if (temp__5735__auto__) {
      var xs__6292__auto__ = temp__5735__auto__;
      var f = cljs.core.first.call(null, xs__6292__auto__);
      var obj = f.call(null);
      if (cljs.test.async_QMARK_.call(null, obj)) {
        return obj.call(null, function() {
          var d = new cljs.core.Delay(function(fns, obj, f, xs__6292__auto__, temp__5735__auto__) {
            return function() {
              return cljs.test.run_block.call(null, cljs.core.rest.call(null, fns));
            };
          }(fns, obj, f, xs__6292__auto__, temp__5735__auto__), null);
          return function(fns, d, obj, f, xs__6292__auto__, temp__5735__auto__) {
            return function() {
              if (cljs.core.realized_QMARK_.call(null, d)) {
                return cljs.core.println.call(null, "WARNING: Async test called done more than one time.");
              } else {
                return cljs.core.deref.call(null, d);
              }
            };
          }(fns, d, obj, f, xs__6292__auto__, temp__5735__auto__);
        }());
      } else {
        var G__16830 = function() {
          var G__16829 = cljs.core.rest.call(null, fns);
          if (cljs.core.truth_((new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, obj)))) {
            return cljs.core.concat.call(null, obj, G__16829);
          } else {
            return G__16829;
          }
        }();
        fns = G__16830;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.test.block = function cljs$test$block(fns) {
  var G__16831 = fns;
  if (G__16831 == null) {
    return null;
  } else {
    return cljs.core.vary_meta.call(null, G__16831, cljs.core.assoc, new cljs.core.Keyword("cljs.test", "block?", "cljs.test/block?", 686379965), true);
  }
};
cljs.test.test_var_block_STAR_ = function cljs$test$test_var_block_STAR_(v, t) {
  if (v instanceof cljs.core.Var) {
  } else {
    throw new Error("Assert failed: (instance? Var v)");
  }
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.conj, v);
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242), new cljs.core.Keyword(null, "test", "test", 577538877)], null), cljs.core.inc);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-var", "begin-test-var", -908571100), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    try {
      return t.call(null);
    } catch (e16832) {
      var e = e16832;
      var G__16833 = e;
      var G__16833__$1 = G__16833 instanceof cljs.core.Keyword ? G__16833.fqn : null;
      switch(G__16833__$1) {
        case "cljs.test/async-disabled":
          throw "Async tests require fixtures to be specified as maps.  Testing aborted.";
          break;
        default:
          return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "error", "error", -978969032), new cljs.core.Keyword(null, "message", "message", -406056002), "Uncaught exception, not in assertion.", new cljs.core.Keyword(null, "expected", "expected", 1583670997), null, new cljs.core.Keyword(null, "actual", "actual", 107306363), e], null));
      }
    }
  }, function() {
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-var", "end-test-var", 984198545), new cljs.core.Keyword(null, "var", "var", -769682797), v], null));
    return cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-vars", "testing-vars", -2114769150)], null), cljs.core.rest);
  }], null);
};
cljs.test.test_var_block = function cljs$test$test_var_block(v) {
  var temp__5733__auto__ = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
  if (cljs.core.truth_(temp__5733__auto__)) {
    var t = temp__5733__auto__;
    return cljs.test.test_var_block_STAR_.call(null, v, t);
  } else {
    return null;
  }
};
cljs.test.test_var = function cljs$test$test_var(v) {
  return cljs.test.run_block.call(null, cljs.test.test_var_block.call(null, v));
};
cljs.test.default_fixture = function cljs$test$default_fixture(f) {
  return f.call(null);
};
cljs.test.compose_fixtures = function cljs$test$compose_fixtures(f1, f2) {
  return function(g) {
    return f1.call(null, function() {
      return f2.call(null, g);
    });
  };
};
cljs.test.join_fixtures = function cljs$test$join_fixtures(fixtures) {
  return cljs.core.reduce.call(null, cljs.test.compose_fixtures, cljs.test.default_fixture, fixtures);
};
cljs.test.wrap_map_fixtures = function cljs$test$wrap_map_fixtures(map_fixtures, block) {
  return cljs.core.concat.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "before", "before", -1633692388), map_fixtures), block, cljs.core.reverse.call(null, cljs.core.keep.call(null, new cljs.core.Keyword(null, "after", "after", 594996914), map_fixtures)));
};
cljs.test.execution_strategy = function cljs$test$execution_strategy(once, each) {
  var fixtures_type = function cljs$test$execution_strategy_$_fixtures_type(coll) {
    if (cljs.core.empty_QMARK_.call(null, coll)) {
      return new cljs.core.Keyword(null, "none", "none", 1333468478);
    } else {
      if (cljs.core.every_QMARK_.call(null, cljs.core.map_QMARK_, coll)) {
        return new cljs.core.Keyword(null, "map", "map", 1371690461);
      } else {
        if (cljs.core.every_QMARK_.call(null, cljs.core.fn_QMARK_, coll)) {
          return new cljs.core.Keyword(null, "fn", "fn", -1175266204);
        } else {
          return null;
        }
      }
    }
  };
  var fixtures_types = function cljs$test$execution_strategy_$_fixtures_types() {
    return cljs.core.distinct.call(null, cljs.core.remove.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "none", "none", 1333468478), null], null), null), cljs.core.map.call(null, fixtures_type, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [once, each], null))));
  };
  var vec__16835 = fixtures_types.call(null);
  var type = cljs.core.nth.call(null, vec__16835, 0, null);
  var types = vec__16835;
  if (cljs.core.not_any_QMARK_.call(null, cljs.core.nil_QMARK_, types)) {
  } else {
    throw new Error(["Assert failed: ", "Fixtures may not be of mixed types", "\n", "(not-any? nil? types)"].join(""));
  }
  if (2 > cljs.core.count.call(null, types)) {
  } else {
    throw new Error(["Assert failed: ", "fixtures specified in :once and :each must be of the same type", "\n", "(\x3e 2 (count types))"].join(""));
  }
  return (new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "map", "map", 1371690461), new cljs.core.Keyword(null, "async", "async", 1050769601), new cljs.core.Keyword(null, "fn", "fn", -1175266204), new cljs.core.Keyword(null, "sync", "sync", -624148946)], null)).call(null, type, new cljs.core.Keyword(null, "async", "async", 1050769601));
};
cljs.test.disable_async = function cljs$test$disable_async(f) {
  return function() {
    var obj = f.call(null);
    if (cljs.test.async_QMARK_.call(null, obj)) {
      throw new cljs.core.Keyword("cljs.test", "async-disabled", "cljs.test/async-disabled", -772095377);
    } else {
    }
    return obj;
  };
};
cljs.test.test_vars_block = function cljs$test$test_vars_block(vars) {
  return cljs.core.map.call(null, function(p__16838) {
    var vec__16839 = p__16838;
    var ns = cljs.core.nth.call(null, vec__16839, 0, null);
    var vars__$1 = cljs.core.nth.call(null, vec__16839, 1, null);
    return function() {
      return cljs.test.block.call(null, function() {
        var env = cljs.test.get_current_env.call(null);
        var once_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "once-fixtures", "once-fixtures", 1253947167), ns], null));
        var each_fixtures = cljs.core.get_in.call(null, env, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "each-fixtures", "each-fixtures", 802243977), ns], null));
        var G__16842 = cljs.test.execution_strategy.call(null, once_fixtures, each_fixtures);
        var G__16842__$1 = G__16842 instanceof cljs.core.Keyword ? G__16842.fqn : null;
        switch(G__16842__$1) {
          case "async":
            return cljs.test.wrap_map_fixtures.call(null, once_fixtures, cljs.core.mapcat.call(null, cljs.core.comp.call(null, cljs.core.partial.call(null, cljs.test.wrap_map_fixtures, each_fixtures), cljs.test.test_var_block), cljs.core.filter.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "test", "test", 577538877), cljs.core.meta), vars__$1)));
            break;
          case "sync":
            var each_fixture_fn = cljs.test.join_fixtures.call(null, each_fixtures);
            return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
              return cljs.test.join_fixtures.call(null, once_fixtures).call(null, function() {
                var seq__16843 = cljs.core.seq.call(null, vars__$1);
                var chunk__16844 = null;
                var count__16845 = 0;
                var i__16846 = 0;
                while (true) {
                  if (i__16846 < count__16845) {
                    var v = cljs.core._nth.call(null, chunk__16844, i__16846);
                    var temp__5735__auto___16848 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                    if (cljs.core.truth_(temp__5735__auto___16848)) {
                      var t_16849 = temp__5735__auto___16848;
                      each_fixture_fn.call(null, function(seq__16843, chunk__16844, count__16845, i__16846, t_16849, temp__5735__auto___16848, v, each_fixture_fn, G__16842, G__16842__$1, env, once_fixtures, each_fixtures, vec__16839, ns, vars__$1) {
                        return function() {
                          return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_16849)));
                        };
                      }(seq__16843, chunk__16844, count__16845, i__16846, t_16849, temp__5735__auto___16848, v, each_fixture_fn, G__16842, G__16842__$1, env, once_fixtures, each_fixtures, vec__16839, ns, vars__$1));
                    } else {
                    }
                    var G__16850 = seq__16843;
                    var G__16851 = chunk__16844;
                    var G__16852 = count__16845;
                    var G__16853 = i__16846 + 1;
                    seq__16843 = G__16850;
                    chunk__16844 = G__16851;
                    count__16845 = G__16852;
                    i__16846 = G__16853;
                    continue;
                  } else {
                    var temp__5735__auto__ = cljs.core.seq.call(null, seq__16843);
                    if (temp__5735__auto__) {
                      var seq__16843__$1 = temp__5735__auto__;
                      if (cljs.core.chunked_seq_QMARK_.call(null, seq__16843__$1)) {
                        var c__4556__auto__ = cljs.core.chunk_first.call(null, seq__16843__$1);
                        var G__16854 = cljs.core.chunk_rest.call(null, seq__16843__$1);
                        var G__16855 = c__4556__auto__;
                        var G__16856 = cljs.core.count.call(null, c__4556__auto__);
                        var G__16857 = 0;
                        seq__16843 = G__16854;
                        chunk__16844 = G__16855;
                        count__16845 = G__16856;
                        i__16846 = G__16857;
                        continue;
                      } else {
                        var v = cljs.core.first.call(null, seq__16843__$1);
                        var temp__5735__auto___16858__$1 = (new cljs.core.Keyword(null, "test", "test", 577538877)).cljs$core$IFn$_invoke$arity$1(cljs.core.meta.call(null, v));
                        if (cljs.core.truth_(temp__5735__auto___16858__$1)) {
                          var t_16859 = temp__5735__auto___16858__$1;
                          each_fixture_fn.call(null, function(seq__16843, chunk__16844, count__16845, i__16846, t_16859, temp__5735__auto___16858__$1, v, seq__16843__$1, temp__5735__auto__, each_fixture_fn, G__16842, G__16842__$1, env, once_fixtures, each_fixtures, vec__16839, ns, vars__$1) {
                            return function() {
                              return cljs.test.run_block.call(null, cljs.test.test_var_block_STAR_.call(null, v, cljs.test.disable_async.call(null, t_16859)));
                            };
                          }(seq__16843, chunk__16844, count__16845, i__16846, t_16859, temp__5735__auto___16858__$1, v, seq__16843__$1, temp__5735__auto__, each_fixture_fn, G__16842, G__16842__$1, env, once_fixtures, each_fixtures, vec__16839, ns, vars__$1));
                        } else {
                        }
                        var G__16860 = cljs.core.next.call(null, seq__16843__$1);
                        var G__16861 = null;
                        var G__16862 = 0;
                        var G__16863 = 0;
                        seq__16843 = G__16860;
                        chunk__16844 = G__16861;
                        count__16845 = G__16862;
                        i__16846 = G__16863;
                        continue;
                      }
                    } else {
                      return null;
                    }
                  }
                  break;
                }
              });
            }], null);
            break;
          default:
            throw new Error(["No matching clause: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__16842__$1)].join(""));
        }
      }());
    };
  }, cljs.core.group_by.call(null, cljs.core.comp.call(null, new cljs.core.Keyword(null, "ns", "ns", 441598760), cljs.core.meta), vars));
};
cljs.test.test_vars = function cljs$test$test_vars(vars) {
  return cljs.test.run_block.call(null, cljs.core.concat.call(null, cljs.test.test_vars_block.call(null, vars), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.test.report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-vars", "end-test-vars", -1394419713), new cljs.core.Keyword(null, "vars", "vars", -2046957217), vars], null));
  }], null)));
};
cljs.test.successful_QMARK_ = function cljs$test$successful_QMARK_(summary) {
  return (new cljs.core.Keyword(null, "fail", "fail", 1706214930)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0 && (new cljs.core.Keyword(null, "error", "error", -978969032)).cljs$core$IFn$_invoke$arity$2(summary, 0) === 0;
};
goog.provide("petitparser.token");
goog.require("cljs.core");
petitparser.token.make_token = function petitparser$token$make_token(source, start, count, value) {
  return new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "source", "source", -433931539), source, new cljs.core.Keyword(null, "start", "start", -355208981), start, new cljs.core.Keyword(null, "count", "count", 2139924085), count, new cljs.core.Keyword(null, "parsed-value", "parsed-value", 1966931188), value], null);
};
petitparser.token.source = function petitparser$token$source(token) {
  return (new cljs.core.Keyword(null, "source", "source", -433931539)).cljs$core$IFn$_invoke$arity$1(token);
};
petitparser.token.start = function petitparser$token$start(token) {
  return (new cljs.core.Keyword(null, "start", "start", -355208981)).cljs$core$IFn$_invoke$arity$1(token);
};
petitparser.token.count = function petitparser$token$count(token) {
  return (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(token);
};
petitparser.token.parsed_value = function petitparser$token$parsed_value(token) {
  return (new cljs.core.Keyword(null, "parsed-value", "parsed-value", 1966931188)).cljs$core$IFn$_invoke$arity$1(token);
};
petitparser.token.stop = function petitparser$token$stop(p__2597) {
  var map__2598 = p__2597;
  var map__2598__$1 = (!(map__2598 == null) ? map__2598.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2598.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2598) : map__2598;
  var start = cljs.core.get.call(null, map__2598__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var count = cljs.core.get.call(null, map__2598__$1, new cljs.core.Keyword(null, "count", "count", 2139924085));
  return start + count;
};
petitparser.token.input_value = function petitparser$token$input_value(p__2600) {
  var map__2601 = p__2600;
  var map__2601__$1 = (!(map__2601 == null) ? map__2601.cljs$lang$protocol_mask$partition0$ & 64 || cljs.core.PROTOCOL_SENTINEL === map__2601.cljs$core$ISeq$ ? true : false : false) ? cljs.core.apply.call(null, cljs.core.hash_map, map__2601) : map__2601;
  var source = cljs.core.get.call(null, map__2601__$1, new cljs.core.Keyword(null, "source", "source", -433931539));
  var start = cljs.core.get.call(null, map__2601__$1, new cljs.core.Keyword(null, "start", "start", -355208981));
  var count = cljs.core.get.call(null, map__2601__$1, new cljs.core.Keyword(null, "count", "count", 2139924085));
  return cljs.core.subs.call(null, source, start, start + count);
};
goog.provide("petitparser.parsers");
goog.require("cljs.core");
goog.require("petitparser.input_stream");
goog.require("petitparser.token");
goog.require("petitparser.results");
petitparser.parsers.Parser = function() {
};
var petitparser$parsers$Parser$parse_on$dyn_2605 = function(self, stream) {
  var x__4428__auto__ = self == null ? null : self;
  var m__4429__auto__ = petitparser.parsers.parse_on[goog.typeOf(x__4428__auto__)];
  if (!(m__4429__auto__ == null)) {
    return m__4429__auto__.call(null, self, stream);
  } else {
    var m__4426__auto__ = petitparser.parsers.parse_on["_"];
    if (!(m__4426__auto__ == null)) {
      return m__4426__auto__.call(null, self, stream);
    } else {
      throw cljs.core.missing_protocol.call(null, "Parser.parse-on", self);
    }
  }
};
petitparser.parsers.parse_on = function petitparser$parsers$parse_on(self, stream) {
  if (!(self == null) && !(self.petitparser$parsers$Parser$parse_on$arity$2 == null)) {
    return self.petitparser$parsers$Parser$parse_on$arity$2(self, stream);
  } else {
    return petitparser$parsers$Parser$parse_on$dyn_2605.call(null, self, stream);
  }
};
petitparser.parsers.LiteralObjectParser = function(literal, __meta, __extmap, __hash) {
  this.literal = literal;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2607, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2611 = k2607;
  var G__2611__$1 = G__2611 instanceof cljs.core.Keyword ? G__2611.fqn : null;
  switch(G__2611__$1) {
    case "literal":
      return self__.literal;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2607, else__4383__auto__);
  }
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2612) {
    var vec__2613 = p__2612;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2613, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2613, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.LiteralObjectParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "literal", "literal", 1664775605), self__.literal], null)], null), self__.__extmap));
};
petitparser.parsers.LiteralObjectParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.LiteralObjectParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core._EQ_.call(null, self__.literal, petitparser.input_stream.peek.call(null, stream))) {
    return petitparser.results.success.call(null, petitparser.input_stream.next_BANG_.call(null, stream));
  } else {
    return petitparser.results.failure.call(null, petitparser.input_stream.position.call(null, stream), ["Literal '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.literal), "' expected"].join(""));
  }
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2606) {
  var self__ = this;
  var G__2606__$1 = this;
  return new cljs.core.RecordIter(0, G__2606__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "literal", "literal", 1664775605)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.LiteralObjectParser(self__.literal, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -199828739 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2608, other2609) {
  var self__ = this;
  var this2608__$1 = this;
  return !(other2609 == null) && this2608__$1.constructor === other2609.constructor && cljs.core._EQ_.call(null, this2608__$1.literal, other2609.literal) && cljs.core._EQ_.call(null, this2608__$1.__extmap, other2609.__extmap);
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "literal", "literal", 1664775605), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.LiteralObjectParser(self__.literal, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2606) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2616 = cljs.core.keyword_identical_QMARK_;
  var expr__2617 = k__4388__auto__;
  if (cljs.core.truth_(pred__2616.call(null, new cljs.core.Keyword(null, "literal", "literal", 1664775605), expr__2617))) {
    return new petitparser.parsers.LiteralObjectParser(G__2606, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.LiteralObjectParser(self__.literal, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2606), null);
  }
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "literal", "literal", 1664775605), self__.literal, null)], null), self__.__extmap));
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2606) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.LiteralObjectParser(self__.literal, G__2606, self__.__extmap, self__.__hash);
};
petitparser.parsers.LiteralObjectParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.LiteralObjectParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "literal", "literal", -989660164, null)], null);
};
petitparser.parsers.LiteralObjectParser.cljs$lang$type = true;
petitparser.parsers.LiteralObjectParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/LiteralObjectParser", null, 1, null);
};
petitparser.parsers.LiteralObjectParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/LiteralObjectParser");
};
petitparser.parsers.__GT_LiteralObjectParser = function petitparser$parsers$__GT_LiteralObjectParser(literal) {
  return new petitparser.parsers.LiteralObjectParser(literal, null, null, null);
};
petitparser.parsers.map__GT_LiteralObjectParser = function petitparser$parsers$map__GT_LiteralObjectParser(G__2610) {
  var extmap__4419__auto__ = function() {
    var G__2619 = cljs.core.dissoc.call(null, G__2610, new cljs.core.Keyword(null, "literal", "literal", 1664775605));
    if (cljs.core.record_QMARK_.call(null, G__2610)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2619);
    } else {
      return G__2619;
    }
  }();
  return new petitparser.parsers.LiteralObjectParser((new cljs.core.Keyword(null, "literal", "literal", 1664775605)).cljs$core$IFn$_invoke$arity$1(G__2610), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.LiteralSequenceParser = function(literal, count, __meta, __extmap, __hash) {
  this.literal = literal;
  this.count = count;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2622, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2626 = k2622;
  var G__2626__$1 = G__2626 instanceof cljs.core.Keyword ? G__2626.fqn : null;
  switch(G__2626__$1) {
    case "literal":
      return self__.literal;
      break;
    case "count":
      return self__.count;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2622, else__4383__auto__);
  }
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2627) {
    var vec__2628 = p__2627;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2628, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2628, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.LiteralSequenceParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "literal", "literal", 1664775605), self__.literal], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "count", "count", 2139924085), self__.count], null)], null), self__.__extmap));
};
petitparser.parsers.LiteralSequenceParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.LiteralSequenceParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var position = petitparser.input_stream.position.call(null, stream);
  var result = petitparser.input_stream.take_BANG_.call(null, stream, self__.count);
  if (cljs.core._EQ_.call(null, self__.literal, result)) {
    return petitparser.results.success.call(null, result);
  } else {
    petitparser.input_stream.reset_position_BANG_.call(null, stream, position);
    return petitparser.results.failure.call(null, position, ["Literal '", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.literal), "' expected"].join(""));
  }
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2621) {
  var self__ = this;
  var G__2621__$1 = this;
  return new cljs.core.RecordIter(0, G__2621__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "literal", "literal", 1664775605), new cljs.core.Keyword(null, "count", "count", 2139924085)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.LiteralSequenceParser(self__.literal, self__.count, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 1046473603 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2623, other2624) {
  var self__ = this;
  var this2623__$1 = this;
  return !(other2624 == null) && this2623__$1.constructor === other2624.constructor && cljs.core._EQ_.call(null, this2623__$1.literal, other2624.literal) && cljs.core._EQ_.call(null, this2623__$1.count, other2624.count) && cljs.core._EQ_.call(null, this2623__$1.__extmap, other2624.__extmap);
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "literal", "literal", 1664775605), null, new cljs.core.Keyword(null, "count", "count", 2139924085), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.LiteralSequenceParser(self__.literal, self__.count, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2621) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2631 = cljs.core.keyword_identical_QMARK_;
  var expr__2632 = k__4388__auto__;
  if (cljs.core.truth_(pred__2631.call(null, new cljs.core.Keyword(null, "literal", "literal", 1664775605), expr__2632))) {
    return new petitparser.parsers.LiteralSequenceParser(G__2621, self__.count, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2631.call(null, new cljs.core.Keyword(null, "count", "count", 2139924085), expr__2632))) {
      return new petitparser.parsers.LiteralSequenceParser(self__.literal, G__2621, self__.__meta, self__.__extmap, null);
    } else {
      return new petitparser.parsers.LiteralSequenceParser(self__.literal, self__.count, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2621), null);
    }
  }
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "literal", "literal", 1664775605), self__.literal, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "count", "count", 2139924085), self__.count, null)], null), self__.__extmap));
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2621) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.LiteralSequenceParser(self__.literal, self__.count, G__2621, self__.__extmap, self__.__hash);
};
petitparser.parsers.LiteralSequenceParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.LiteralSequenceParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "literal", "literal", -989660164, null), new cljs.core.Symbol(null, "count", "count", -514511684, null)], null);
};
petitparser.parsers.LiteralSequenceParser.cljs$lang$type = true;
petitparser.parsers.LiteralSequenceParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/LiteralSequenceParser", null, 1, null);
};
petitparser.parsers.LiteralSequenceParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/LiteralSequenceParser");
};
petitparser.parsers.__GT_LiteralSequenceParser = function petitparser$parsers$__GT_LiteralSequenceParser(literal, count) {
  return new petitparser.parsers.LiteralSequenceParser(literal, count, null, null, null);
};
petitparser.parsers.map__GT_LiteralSequenceParser = function petitparser$parsers$map__GT_LiteralSequenceParser(G__2625) {
  var extmap__4419__auto__ = function() {
    var G__2634 = cljs.core.dissoc.call(null, G__2625, new cljs.core.Keyword(null, "literal", "literal", 1664775605), new cljs.core.Keyword(null, "count", "count", 2139924085));
    if (cljs.core.record_QMARK_.call(null, G__2625)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2634);
    } else {
      return G__2634;
    }
  }();
  return new petitparser.parsers.LiteralSequenceParser((new cljs.core.Keyword(null, "literal", "literal", 1664775605)).cljs$core$IFn$_invoke$arity$1(G__2625), (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(G__2625), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.SequenceParser = function(parsers, __meta, __extmap, __hash) {
  this.parsers = parsers;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.SequenceParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.SequenceParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2637, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2641 = k2637;
  var G__2641__$1 = G__2641 instanceof cljs.core.Keyword ? G__2641.fqn : null;
  switch(G__2641__$1) {
    case "parsers":
      return self__.parsers;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2637, else__4383__auto__);
  }
};
petitparser.parsers.SequenceParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2642) {
    var vec__2643 = p__2642;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2643, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2643, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.SequenceParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.SequenceParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parsers", "parsers", -804353827), self__.parsers], null)], null), self__.__extmap));
};
petitparser.parsers.SequenceParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.SequenceParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var elements = cljs.core.volatile_BANG_.call(null, cljs.core.PersistentVector.EMPTY);
  var return$ = cljs.core.volatile_BANG_.call(null, null);
  var parser_2651 = cljs.core.first.call(null, self__.parsers);
  var rest_2652 = cljs.core.next.call(null, self__.parsers);
  while (true) {
    if (cljs.core.truth_(parser_2651)) {
      var result_2653 = petitparser.parsers.parse_on.call(null, parser_2651, stream);
      if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result_2653))) {
        elements.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.call(null, elements.cljs$core$IDeref$_deref$arity$1(null), petitparser.results.actual_result.call(null, result_2653)));
        var G__2654 = cljs.core.first.call(null, rest_2652);
        var G__2655 = cljs.core.next.call(null, rest_2652);
        parser_2651 = G__2654;
        rest_2652 = G__2655;
        continue;
      } else {
        petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
        cljs.core.vreset_BANG_.call(null, return$, result_2653);
      }
    } else {
    }
    break;
  }
  if (cljs.core.truth_(cljs.core.deref.call(null, return$))) {
    return cljs.core.deref.call(null, return$);
  } else {
    return petitparser.results.success.call(null, cljs.core.deref.call(null, elements));
  }
};
petitparser.parsers.SequenceParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2636) {
  var self__ = this;
  var G__2636__$1 = this;
  return new cljs.core.RecordIter(0, G__2636__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parsers", "parsers", -804353827)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.SequenceParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.SequenceParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.SequenceParser(self__.parsers, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.SequenceParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.SequenceParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 1756768646 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.SequenceParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2638, other2639) {
  var self__ = this;
  var this2638__$1 = this;
  return !(other2639 == null) && this2638__$1.constructor === other2639.constructor && cljs.core._EQ_.call(null, this2638__$1.parsers, other2639.parsers) && cljs.core._EQ_.call(null, this2638__$1.__extmap, other2639.__extmap);
};
petitparser.parsers.SequenceParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parsers", "parsers", -804353827), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.SequenceParser(self__.parsers, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.SequenceParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2636) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2646 = cljs.core.keyword_identical_QMARK_;
  var expr__2647 = k__4388__auto__;
  if (cljs.core.truth_(pred__2646.call(null, new cljs.core.Keyword(null, "parsers", "parsers", -804353827), expr__2647))) {
    return new petitparser.parsers.SequenceParser(G__2636, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.SequenceParser(self__.parsers, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2636), null);
  }
};
petitparser.parsers.SequenceParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parsers", "parsers", -804353827), self__.parsers, null)], null), self__.__extmap));
};
petitparser.parsers.SequenceParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2636) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.SequenceParser(self__.parsers, G__2636, self__.__extmap, self__.__hash);
};
petitparser.parsers.SequenceParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.SequenceParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parsers", "parsers", 836177700, null)], null);
};
petitparser.parsers.SequenceParser.cljs$lang$type = true;
petitparser.parsers.SequenceParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/SequenceParser", null, 1, null);
};
petitparser.parsers.SequenceParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/SequenceParser");
};
petitparser.parsers.__GT_SequenceParser = function petitparser$parsers$__GT_SequenceParser(parsers) {
  return new petitparser.parsers.SequenceParser(parsers, null, null, null);
};
petitparser.parsers.map__GT_SequenceParser = function petitparser$parsers$map__GT_SequenceParser(G__2640) {
  var extmap__4419__auto__ = function() {
    var G__2649 = cljs.core.dissoc.call(null, G__2640, new cljs.core.Keyword(null, "parsers", "parsers", -804353827));
    if (cljs.core.record_QMARK_.call(null, G__2640)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2649);
    } else {
      return G__2649;
    }
  }();
  return new petitparser.parsers.SequenceParser((new cljs.core.Keyword(null, "parsers", "parsers", -804353827)).cljs$core$IFn$_invoke$arity$1(G__2640), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.ChoiceParser = function(parsers, __meta, __extmap, __hash) {
  this.parsers = parsers;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2657, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2661 = k2657;
  var G__2661__$1 = G__2661 instanceof cljs.core.Keyword ? G__2661.fqn : null;
  switch(G__2661__$1) {
    case "parsers":
      return self__.parsers;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2657, else__4383__auto__);
  }
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2662) {
    var vec__2663 = p__2662;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2663, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2663, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.ChoiceParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parsers", "parsers", -804353827), self__.parsers], null)], null), self__.__extmap));
};
petitparser.parsers.ChoiceParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.ChoiceParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var parser = cljs.core.first.call(null, self__.parsers);
  var rest = cljs.core.next.call(null, self__.parsers);
  var fail = petitparser.results.failure.call(null, 0, "");
  while (true) {
    var temp__5733__auto__ = cljs.core.truth_(parser) ? petitparser.parsers.parse_on.call(null, parser, stream) : null;
    if (cljs.core.truth_(temp__5733__auto__)) {
      var result = temp__5733__auto__;
      if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result))) {
        return result;
      } else {
        var G__2671 = cljs.core.first.call(null, rest);
        var G__2672 = cljs.core.next.call(null, rest);
        var G__2673 = result;
        parser = G__2671;
        rest = G__2672;
        fail = G__2673;
        continue;
      }
    } else {
      return fail;
    }
    break;
  }
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2656) {
  var self__ = this;
  var G__2656__$1 = this;
  return new cljs.core.RecordIter(0, G__2656__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parsers", "parsers", -804353827)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.ChoiceParser(self__.parsers, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -2107093721 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2658, other2659) {
  var self__ = this;
  var this2658__$1 = this;
  return !(other2659 == null) && this2658__$1.constructor === other2659.constructor && cljs.core._EQ_.call(null, this2658__$1.parsers, other2659.parsers) && cljs.core._EQ_.call(null, this2658__$1.__extmap, other2659.__extmap);
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parsers", "parsers", -804353827), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.ChoiceParser(self__.parsers, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2656) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2666 = cljs.core.keyword_identical_QMARK_;
  var expr__2667 = k__4388__auto__;
  if (cljs.core.truth_(pred__2666.call(null, new cljs.core.Keyword(null, "parsers", "parsers", -804353827), expr__2667))) {
    return new petitparser.parsers.ChoiceParser(G__2656, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.ChoiceParser(self__.parsers, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2656), null);
  }
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parsers", "parsers", -804353827), self__.parsers, null)], null), self__.__extmap));
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2656) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.ChoiceParser(self__.parsers, G__2656, self__.__extmap, self__.__hash);
};
petitparser.parsers.ChoiceParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.ChoiceParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parsers", "parsers", 836177700, null)], null);
};
petitparser.parsers.ChoiceParser.cljs$lang$type = true;
petitparser.parsers.ChoiceParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/ChoiceParser", null, 1, null);
};
petitparser.parsers.ChoiceParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/ChoiceParser");
};
petitparser.parsers.__GT_ChoiceParser = function petitparser$parsers$__GT_ChoiceParser(parsers) {
  return new petitparser.parsers.ChoiceParser(parsers, null, null, null);
};
petitparser.parsers.map__GT_ChoiceParser = function petitparser$parsers$map__GT_ChoiceParser(G__2660) {
  var extmap__4419__auto__ = function() {
    var G__2669 = cljs.core.dissoc.call(null, G__2660, new cljs.core.Keyword(null, "parsers", "parsers", -804353827));
    if (cljs.core.record_QMARK_.call(null, G__2660)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2669);
    } else {
      return G__2669;
    }
  }();
  return new petitparser.parsers.ChoiceParser((new cljs.core.Keyword(null, "parsers", "parsers", -804353827)).cljs$core$IFn$_invoke$arity$1(G__2660), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.FlattenParser = function(parser, __meta, __extmap, __hash) {
  this.parser = parser;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.FlattenParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.FlattenParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2675, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2679 = k2675;
  var G__2679__$1 = G__2679 instanceof cljs.core.Keyword ? G__2679.fqn : null;
  switch(G__2679__$1) {
    case "parser":
      return self__.parser;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2675, else__4383__auto__);
  }
};
petitparser.parsers.FlattenParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2680) {
    var vec__2681 = p__2680;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2681, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2681, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.FlattenParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.FlattenParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null)], null), self__.__extmap));
};
petitparser.parsers.FlattenParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.FlattenParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var result = petitparser.parsers.parse_on.call(null, self__.parser, stream);
  if (cljs.core.truth_(petitparser.results.failure_QMARK_.call(null, result))) {
    return result;
  } else {
    return petitparser.results.success.call(null, cljs.core.subs.call(null, petitparser.input_stream.source.call(null, stream), start, petitparser.input_stream.position.call(null, stream)));
  }
};
petitparser.parsers.FlattenParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2674) {
  var self__ = this;
  var G__2674__$1 = this;
  return new cljs.core.RecordIter(0, G__2674__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.FlattenParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.FlattenParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.FlattenParser(self__.parser, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.FlattenParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.FlattenParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 618375376 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.FlattenParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2676, other2677) {
  var self__ = this;
  var this2676__$1 = this;
  return !(other2677 == null) && this2676__$1.constructor === other2677.constructor && cljs.core._EQ_.call(null, this2676__$1.parser, other2677.parser) && cljs.core._EQ_.call(null, this2676__$1.__extmap, other2677.__extmap);
};
petitparser.parsers.FlattenParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.FlattenParser(self__.parser, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.FlattenParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2674) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2684 = cljs.core.keyword_identical_QMARK_;
  var expr__2685 = k__4388__auto__;
  if (cljs.core.truth_(pred__2684.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2685))) {
    return new petitparser.parsers.FlattenParser(G__2674, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.FlattenParser(self__.parser, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2674), null);
  }
};
petitparser.parsers.FlattenParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null)], null), self__.__extmap));
};
petitparser.parsers.FlattenParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2674) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.FlattenParser(self__.parser, G__2674, self__.__extmap, self__.__hash);
};
petitparser.parsers.FlattenParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.FlattenParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null)], null);
};
petitparser.parsers.FlattenParser.cljs$lang$type = true;
petitparser.parsers.FlattenParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/FlattenParser", null, 1, null);
};
petitparser.parsers.FlattenParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/FlattenParser");
};
petitparser.parsers.__GT_FlattenParser = function petitparser$parsers$__GT_FlattenParser(parser) {
  return new petitparser.parsers.FlattenParser(parser, null, null, null);
};
petitparser.parsers.map__GT_FlattenParser = function petitparser$parsers$map__GT_FlattenParser(G__2678) {
  var extmap__4419__auto__ = function() {
    var G__2687 = cljs.core.dissoc.call(null, G__2678, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
    if (cljs.core.record_QMARK_.call(null, G__2678)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2687);
    } else {
      return G__2687;
    }
  }();
  return new petitparser.parsers.FlattenParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2678), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.AndParser = function(parser, __meta, __extmap, __hash) {
  this.parser = parser;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.AndParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.AndParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2690, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2694 = k2690;
  var G__2694__$1 = G__2694 instanceof cljs.core.Keyword ? G__2694.fqn : null;
  switch(G__2694__$1) {
    case "parser":
      return self__.parser;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2690, else__4383__auto__);
  }
};
petitparser.parsers.AndParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2695) {
    var vec__2696 = p__2695;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2696, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2696, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.AndParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.AndParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null)], null), self__.__extmap));
};
petitparser.parsers.AndParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.AndParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var result = petitparser.parsers.parse_on.call(null, self__.parser, stream);
  petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
  return result;
};
petitparser.parsers.AndParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2689) {
  var self__ = this;
  var G__2689__$1 = this;
  return new cljs.core.RecordIter(0, G__2689__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.AndParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.AndParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.AndParser(self__.parser, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.AndParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.AndParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -237081987 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.AndParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2691, other2692) {
  var self__ = this;
  var this2691__$1 = this;
  return !(other2692 == null) && this2691__$1.constructor === other2692.constructor && cljs.core._EQ_.call(null, this2691__$1.parser, other2692.parser) && cljs.core._EQ_.call(null, this2691__$1.__extmap, other2692.__extmap);
};
petitparser.parsers.AndParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.AndParser(self__.parser, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.AndParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2689) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2699 = cljs.core.keyword_identical_QMARK_;
  var expr__2700 = k__4388__auto__;
  if (cljs.core.truth_(pred__2699.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2700))) {
    return new petitparser.parsers.AndParser(G__2689, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.AndParser(self__.parser, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2689), null);
  }
};
petitparser.parsers.AndParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null)], null), self__.__extmap));
};
petitparser.parsers.AndParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2689) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.AndParser(self__.parser, G__2689, self__.__extmap, self__.__hash);
};
petitparser.parsers.AndParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.AndParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null)], null);
};
petitparser.parsers.AndParser.cljs$lang$type = true;
petitparser.parsers.AndParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/AndParser", null, 1, null);
};
petitparser.parsers.AndParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/AndParser");
};
petitparser.parsers.__GT_AndParser = function petitparser$parsers$__GT_AndParser(parser) {
  return new petitparser.parsers.AndParser(parser, null, null, null);
};
petitparser.parsers.map__GT_AndParser = function petitparser$parsers$map__GT_AndParser(G__2693) {
  var extmap__4419__auto__ = function() {
    var G__2702 = cljs.core.dissoc.call(null, G__2693, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
    if (cljs.core.record_QMARK_.call(null, G__2693)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2702);
    } else {
      return G__2702;
    }
  }();
  return new petitparser.parsers.AndParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2693), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.EndParser = function(parser, __meta, __extmap, __hash) {
  this.parser = parser;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.EndParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.EndParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2705, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2709 = k2705;
  var G__2709__$1 = G__2709 instanceof cljs.core.Keyword ? G__2709.fqn : null;
  switch(G__2709__$1) {
    case "parser":
      return self__.parser;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2705, else__4383__auto__);
  }
};
petitparser.parsers.EndParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2710) {
    var vec__2711 = p__2710;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2711, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2711, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.EndParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.EndParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null)], null), self__.__extmap));
};
petitparser.parsers.EndParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.EndParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var result = petitparser.parsers.parse_on.call(null, self__.parser, stream);
  if (cljs.core.truth_(function() {
    var or__4126__auto__ = petitparser.results.failure_QMARK_.call(null, result);
    if (cljs.core.truth_(or__4126__auto__)) {
      return or__4126__auto__;
    } else {
      return petitparser.input_stream.end_QMARK_.call(null, stream);
    }
  }())) {
    return result;
  } else {
    var fail = petitparser.results.failure.call(null, petitparser.input_stream.position.call(null, stream), "End of input expected");
    petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
    return fail;
  }
};
petitparser.parsers.EndParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2704) {
  var self__ = this;
  var G__2704__$1 = this;
  return new cljs.core.RecordIter(0, G__2704__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.EndParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.EndParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.EndParser(self__.parser, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.EndParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.EndParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 1312968100 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.EndParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2706, other2707) {
  var self__ = this;
  var this2706__$1 = this;
  return !(other2707 == null) && this2706__$1.constructor === other2707.constructor && cljs.core._EQ_.call(null, this2706__$1.parser, other2707.parser) && cljs.core._EQ_.call(null, this2706__$1.__extmap, other2707.__extmap);
};
petitparser.parsers.EndParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.EndParser(self__.parser, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.EndParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2704) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2714 = cljs.core.keyword_identical_QMARK_;
  var expr__2715 = k__4388__auto__;
  if (cljs.core.truth_(pred__2714.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2715))) {
    return new petitparser.parsers.EndParser(G__2704, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.EndParser(self__.parser, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2704), null);
  }
};
petitparser.parsers.EndParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null)], null), self__.__extmap));
};
petitparser.parsers.EndParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2704) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.EndParser(self__.parser, G__2704, self__.__extmap, self__.__hash);
};
petitparser.parsers.EndParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.EndParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null)], null);
};
petitparser.parsers.EndParser.cljs$lang$type = true;
petitparser.parsers.EndParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/EndParser", null, 1, null);
};
petitparser.parsers.EndParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/EndParser");
};
petitparser.parsers.__GT_EndParser = function petitparser$parsers$__GT_EndParser(parser) {
  return new petitparser.parsers.EndParser(parser, null, null, null);
};
petitparser.parsers.map__GT_EndParser = function petitparser$parsers$map__GT_EndParser(G__2708) {
  var extmap__4419__auto__ = function() {
    var G__2717 = cljs.core.dissoc.call(null, G__2708, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
    if (cljs.core.record_QMARK_.call(null, G__2708)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2717);
    } else {
      return G__2717;
    }
  }();
  return new petitparser.parsers.EndParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2708), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.RepeatingParser = function(parser, min, max, __meta, __extmap, __hash) {
  this.parser = parser;
  this.min = min;
  this.max = max;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2720, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2724 = k2720;
  var G__2724__$1 = G__2724 instanceof cljs.core.Keyword ? G__2724.fqn : null;
  switch(G__2724__$1) {
    case "parser":
      return self__.parser;
      break;
    case "min":
      return self__.min;
      break;
    case "max":
      return self__.max;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2720, else__4383__auto__);
  }
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2725) {
    var vec__2726 = p__2725;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2726, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2726, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.RepeatingParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "min", "min", 444991522), self__.min], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "max", "max", 61366548), self__.max], null)], null), self__.__extmap));
};
petitparser.parsers.RepeatingParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.RepeatingParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var elements = cljs.core.volatile_BANG_.call(null, cljs.core.PersistentVector.EMPTY);
  var failure = cljs.core.volatile_BANG_.call(null, null);
  var count_2734 = 0;
  while (true) {
    if (count_2734 < self__.min) {
      var result_2735 = petitparser.parsers.parse_on.call(null, self__.parser, stream);
      if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result_2735))) {
        elements.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.call(null, elements.cljs$core$IDeref$_deref$arity$1(null), petitparser.results.actual_result.call(null, result_2735)));
        var G__2736 = count_2734 + 1;
        count_2734 = G__2736;
        continue;
      } else {
        petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
        cljs.core.vreset_BANG_.call(null, failure, result_2735);
      }
    } else {
    }
    break;
  }
  if (cljs.core.truth_(cljs.core.deref.call(null, failure))) {
    return cljs.core.deref.call(null, failure);
  } else {
    var count_2737 = 0;
    while (true) {
      if (count_2737 < self__.max) {
        var result_2738 = petitparser.parsers.parse_on.call(null, self__.parser, stream);
        if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result_2738))) {
          elements.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.call(null, elements.cljs$core$IDeref$_deref$arity$1(null), petitparser.results.actual_result.call(null, result_2738)));
          var G__2739 = count_2737 + 1;
          count_2737 = G__2739;
          continue;
        } else {
        }
      } else {
      }
      break;
    }
    return petitparser.results.success.call(null, cljs.core.deref.call(null, elements));
  }
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2719) {
  var self__ = this;
  var G__2719__$1 = this;
  return new cljs.core.RecordIter(0, G__2719__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "min", "min", 444991522), new cljs.core.Keyword(null, "max", "max", 61366548)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.RepeatingParser(self__.parser, self__.min, self__.max, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -70399146 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2721, other2722) {
  var self__ = this;
  var this2721__$1 = this;
  return !(other2722 == null) && this2721__$1.constructor === other2722.constructor && cljs.core._EQ_.call(null, this2721__$1.parser, other2722.parser) && cljs.core._EQ_.call(null, this2721__$1.min, other2722.min) && cljs.core._EQ_.call(null, this2721__$1.max, other2722.max) && cljs.core._EQ_.call(null, this2721__$1.__extmap, other2722.__extmap);
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "min", "min", 444991522), null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), null, new cljs.core.Keyword(null, "max", "max", 61366548), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.RepeatingParser(self__.parser, self__.min, self__.max, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2719) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2729 = cljs.core.keyword_identical_QMARK_;
  var expr__2730 = k__4388__auto__;
  if (cljs.core.truth_(pred__2729.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2730))) {
    return new petitparser.parsers.RepeatingParser(G__2719, self__.min, self__.max, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2729.call(null, new cljs.core.Keyword(null, "min", "min", 444991522), expr__2730))) {
      return new petitparser.parsers.RepeatingParser(self__.parser, G__2719, self__.max, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2729.call(null, new cljs.core.Keyword(null, "max", "max", 61366548), expr__2730))) {
        return new petitparser.parsers.RepeatingParser(self__.parser, self__.min, G__2719, self__.__meta, self__.__extmap, null);
      } else {
        return new petitparser.parsers.RepeatingParser(self__.parser, self__.min, self__.max, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2719), null);
      }
    }
  }
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "min", "min", 444991522), self__.min, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "max", "max", 61366548), self__.max, null)], null), self__.__extmap));
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2719) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.RepeatingParser(self__.parser, self__.min, self__.max, G__2719, self__.__extmap, self__.__hash);
};
petitparser.parsers.RepeatingParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.RepeatingParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null), cljs.core.with_meta(new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null))], null);
};
petitparser.parsers.RepeatingParser.cljs$lang$type = true;
petitparser.parsers.RepeatingParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/RepeatingParser", null, 1, null);
};
petitparser.parsers.RepeatingParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/RepeatingParser");
};
petitparser.parsers.__GT_RepeatingParser = function petitparser$parsers$__GT_RepeatingParser(parser, min, max) {
  return new petitparser.parsers.RepeatingParser(parser, min, max, null, null, null);
};
petitparser.parsers.map__GT_RepeatingParser = function petitparser$parsers$map__GT_RepeatingParser(G__2723) {
  var extmap__4419__auto__ = function() {
    var G__2732 = cljs.core.dissoc.call(null, G__2723, new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "min", "min", 444991522), new cljs.core.Keyword(null, "max", "max", 61366548));
    if (cljs.core.record_QMARK_.call(null, G__2723)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2732);
    } else {
      return G__2732;
    }
  }();
  return new petitparser.parsers.RepeatingParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2723), (new cljs.core.Keyword(null, "min", "min", 444991522)).cljs$core$IFn$_invoke$arity$1(G__2723), (new cljs.core.Keyword(null, "max", "max", 61366548)).cljs$core$IFn$_invoke$arity$1(G__2723), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.GreedyRepeatingParser = function(parser, min, max, limit, __meta, __extmap, __hash) {
  this.parser = parser;
  this.min = min;
  this.max = max;
  this.limit = limit;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2741, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2745 = k2741;
  var G__2745__$1 = G__2745 instanceof cljs.core.Keyword ? G__2745.fqn : null;
  switch(G__2745__$1) {
    case "parser":
      return self__.parser;
      break;
    case "min":
      return self__.min;
      break;
    case "max":
      return self__.max;
      break;
    case "limit":
      return self__.limit;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2741, else__4383__auto__);
  }
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2746) {
    var vec__2747 = p__2746;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2747, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2747, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.GreedyRepeatingParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "min", "min", 444991522), self__.min], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "max", "max", 61366548), self__.max], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "limit", "limit", -1355822363), self__.limit], null)], null), self__.__extmap));
};
petitparser.parsers.GreedyRepeatingParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.GreedyRepeatingParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var elements = cljs.core.volatile_BANG_.call(null, cljs.core.PersistentVector.EMPTY);
  var return$ = cljs.core.volatile_BANG_.call(null, null);
  var count_2755 = 0;
  while (true) {
    if (count_2755 < self__.min) {
      var result_2756 = petitparser.parsers.parse_on.call(null, self__.parser, stream);
      if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result_2756))) {
        elements.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.call(null, elements.cljs$core$IDeref$_deref$arity$1(null), petitparser.results.actual_result.call(null, result_2756)));
        var G__2757 = count_2755 + 1;
        count_2755 = G__2757;
        continue;
      } else {
        petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
        cljs.core.vreset_BANG_.call(null, return$, result_2756);
      }
    } else {
    }
    break;
  }
  if (cljs.core.truth_(cljs.core.deref.call(null, return$))) {
    return cljs.core.deref.call(null, return$);
  } else {
    var positions = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.input_stream.position.call(null, stream)], null));
    var count_2758 = cljs.core.count.call(null, cljs.core.deref.call(null, elements));
    while (true) {
      if (count_2758 < self__.max) {
        var result_2759 = petitparser.parsers.parse_on.call(null, self__.parser, stream);
        if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result_2759))) {
          elements.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.call(null, elements.cljs$core$IDeref$_deref$arity$1(null), petitparser.results.actual_result.call(null, result_2759)));
          positions.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.call(null, positions.cljs$core$IDeref$_deref$arity$1(null), petitparser.input_stream.position.call(null, stream)));
          var G__2760 = count_2758 + 1;
          count_2758 = G__2760;
          continue;
        } else {
        }
      } else {
      }
      break;
    }
    var count_2761 = cljs.core.count.call(null, cljs.core.deref.call(null, positions));
    while (true) {
      if (count_2761 > 0) {
        petitparser.input_stream.reset_position_BANG_.call(null, stream, cljs.core.last.call(null, cljs.core.deref.call(null, positions)));
        var result_2762 = petitparser.parsers.parse_on.call(null, self__.limit, stream);
        if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result_2762))) {
          petitparser.input_stream.reset_position_BANG_.call(null, stream, cljs.core.last.call(null, cljs.core.deref.call(null, positions)));
          cljs.core.vreset_BANG_.call(null, return$, petitparser.results.success.call(null, cljs.core.deref.call(null, elements)));
        } else {
          if (cljs.core.empty_QMARK_.call(null, cljs.core.deref.call(null, elements))) {
            petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
            cljs.core.vreset_BANG_.call(null, return$, result_2762);
          } else {
            elements.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.pop.call(null, elements.cljs$core$IDeref$_deref$arity$1(null)));
            positions.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.pop.call(null, positions.cljs$core$IDeref$_deref$arity$1(null)));
            var G__2763 = count_2761 - 1;
            count_2761 = G__2763;
            continue;
          }
        }
      } else {
      }
      break;
    }
    if (cljs.core.truth_(cljs.core.deref.call(null, return$))) {
      return cljs.core.deref.call(null, return$);
    } else {
      return petitparser.results.failure.call(null, start, "Overflow");
    }
  }
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2740) {
  var self__ = this;
  var G__2740__$1 = this;
  return new cljs.core.RecordIter(0, G__2740__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "min", "min", 444991522), new cljs.core.Keyword(null, "max", "max", 61366548), new cljs.core.Keyword(null, "limit", "limit", -1355822363)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.GreedyRepeatingParser(self__.parser, self__.min, self__.max, self__.limit, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 27921179 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2742, other2743) {
  var self__ = this;
  var this2742__$1 = this;
  return !(other2743 == null) && this2742__$1.constructor === other2743.constructor && cljs.core._EQ_.call(null, this2742__$1.parser, other2743.parser) && cljs.core._EQ_.call(null, this2742__$1.min, other2743.min) && cljs.core._EQ_.call(null, this2742__$1.max, other2743.max) && cljs.core._EQ_.call(null, this2742__$1.limit, other2743.limit) && cljs.core._EQ_.call(null, this2742__$1.__extmap, other2743.__extmap);
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "min", "min", 444991522), null, new cljs.core.Keyword(null, "limit", "limit", -1355822363), null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), null, new cljs.core.Keyword(null, "max", "max", 61366548), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.GreedyRepeatingParser(self__.parser, self__.min, self__.max, self__.limit, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2740) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2750 = cljs.core.keyword_identical_QMARK_;
  var expr__2751 = k__4388__auto__;
  if (cljs.core.truth_(pred__2750.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2751))) {
    return new petitparser.parsers.GreedyRepeatingParser(G__2740, self__.min, self__.max, self__.limit, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2750.call(null, new cljs.core.Keyword(null, "min", "min", 444991522), expr__2751))) {
      return new petitparser.parsers.GreedyRepeatingParser(self__.parser, G__2740, self__.max, self__.limit, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2750.call(null, new cljs.core.Keyword(null, "max", "max", 61366548), expr__2751))) {
        return new petitparser.parsers.GreedyRepeatingParser(self__.parser, self__.min, G__2740, self__.limit, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2750.call(null, new cljs.core.Keyword(null, "limit", "limit", -1355822363), expr__2751))) {
          return new petitparser.parsers.GreedyRepeatingParser(self__.parser, self__.min, self__.max, G__2740, self__.__meta, self__.__extmap, null);
        } else {
          return new petitparser.parsers.GreedyRepeatingParser(self__.parser, self__.min, self__.max, self__.limit, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2740), null);
        }
      }
    }
  }
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "min", "min", 444991522), self__.min, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "max", "max", 61366548), self__.max, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "limit", 
  "limit", -1355822363), self__.limit, null)], null), self__.__extmap));
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2740) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.GreedyRepeatingParser(self__.parser, self__.min, self__.max, self__.limit, G__2740, self__.__extmap, self__.__hash);
};
petitparser.parsers.GreedyRepeatingParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.GreedyRepeatingParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null), cljs.core.with_meta(new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), new cljs.core.Symbol(null, "limit", "limit", 284709164, null)], null);
};
petitparser.parsers.GreedyRepeatingParser.cljs$lang$type = true;
petitparser.parsers.GreedyRepeatingParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/GreedyRepeatingParser", null, 1, null);
};
petitparser.parsers.GreedyRepeatingParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/GreedyRepeatingParser");
};
petitparser.parsers.__GT_GreedyRepeatingParser = function petitparser$parsers$__GT_GreedyRepeatingParser(parser, min, max, limit) {
  return new petitparser.parsers.GreedyRepeatingParser(parser, min, max, limit, null, null, null);
};
petitparser.parsers.map__GT_GreedyRepeatingParser = function petitparser$parsers$map__GT_GreedyRepeatingParser(G__2744) {
  var extmap__4419__auto__ = function() {
    var G__2753 = cljs.core.dissoc.call(null, G__2744, new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "min", "min", 444991522), new cljs.core.Keyword(null, "max", "max", 61366548), new cljs.core.Keyword(null, "limit", "limit", -1355822363));
    if (cljs.core.record_QMARK_.call(null, G__2744)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2753);
    } else {
      return G__2753;
    }
  }();
  return new petitparser.parsers.GreedyRepeatingParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2744), (new cljs.core.Keyword(null, "min", "min", 444991522)).cljs$core$IFn$_invoke$arity$1(G__2744), (new cljs.core.Keyword(null, "max", "max", 61366548)).cljs$core$IFn$_invoke$arity$1(G__2744), (new cljs.core.Keyword(null, "limit", "limit", -1355822363)).cljs$core$IFn$_invoke$arity$1(G__2744), null, cljs.core.not_empty.call(null, extmap__4419__auto__), 
  null);
};
petitparser.parsers.LazyRepeatingParser = function(parser, min, max, limit, __meta, __extmap, __hash) {
  this.parser = parser;
  this.min = min;
  this.max = max;
  this.limit = limit;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2765, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2769 = k2765;
  var G__2769__$1 = G__2769 instanceof cljs.core.Keyword ? G__2769.fqn : null;
  switch(G__2769__$1) {
    case "parser":
      return self__.parser;
      break;
    case "min":
      return self__.min;
      break;
    case "max":
      return self__.max;
      break;
    case "limit":
      return self__.limit;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2765, else__4383__auto__);
  }
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2770) {
    var vec__2771 = p__2770;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2771, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2771, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.LazyRepeatingParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "min", "min", 444991522), self__.min], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "max", "max", 61366548), self__.max], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "limit", "limit", -1355822363), self__.limit], null)], null), self__.__extmap));
};
petitparser.parsers.LazyRepeatingParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.LazyRepeatingParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var elements = cljs.core.volatile_BANG_.call(null, cljs.core.PersistentVector.EMPTY);
  var return$ = cljs.core.volatile_BANG_.call(null, null);
  var matches_limit_QMARK_ = function() {
    var start__$1 = petitparser.input_stream.position.call(null, stream);
    var result = petitparser.parsers.parse_on.call(null, self__.limit, stream);
    petitparser.input_stream.reset_position_BANG_.call(null, stream, start__$1);
    return petitparser.results.success_QMARK_.call(null, result);
  };
  var count_2779 = 0;
  while (true) {
    if (count_2779 < self__.min) {
      var result_2780 = petitparser.parsers.parse_on.call(null, self__.parser, stream);
      if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result_2780))) {
        elements.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.call(null, elements.cljs$core$IDeref$_deref$arity$1(null), petitparser.results.actual_result.call(null, result_2780)));
        var G__2781 = count_2779 + 1;
        count_2779 = G__2781;
        continue;
      } else {
        petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
        cljs.core.vreset_BANG_.call(null, return$, result_2780);
      }
    } else {
    }
    break;
  }
  if (cljs.core.truth_(cljs.core.deref.call(null, return$))) {
    return cljs.core.deref.call(null, return$);
  } else {
    var count_2782 = cljs.core.count.call(null, cljs.core.deref.call(null, elements));
    while (true) {
      if (cljs.core.truth_(matches_limit_QMARK_.call(null))) {
      } else {
        if (count_2782 >= self__.max) {
          petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
          cljs.core.vreset_BANG_.call(null, return$, petitparser.results.failure.call(null, start, "Overflow"));
        } else {
          var result_2783 = petitparser.parsers.parse_on.call(null, self__.parser, stream);
          if (cljs.core.truth_(petitparser.results.failure_QMARK_.call(null, result_2783))) {
            petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
            cljs.core.vreset_BANG_.call(null, return$, result_2783);
          } else {
            elements.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.call(null, elements.cljs$core$IDeref$_deref$arity$1(null), petitparser.results.actual_result.call(null, result_2783)));
            var G__2784 = count_2782 + 1;
            count_2782 = G__2784;
            continue;
          }
        }
      }
      break;
    }
    if (cljs.core.truth_(cljs.core.deref.call(null, return$))) {
      return cljs.core.deref.call(null, return$);
    } else {
      return petitparser.results.success.call(null, cljs.core.deref.call(null, elements));
    }
  }
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2764) {
  var self__ = this;
  var G__2764__$1 = this;
  return new cljs.core.RecordIter(0, G__2764__$1, 4, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "min", "min", 444991522), new cljs.core.Keyword(null, "max", "max", 61366548), new cljs.core.Keyword(null, "limit", "limit", -1355822363)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.LazyRepeatingParser(self__.parser, self__.min, self__.max, self__.limit, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 4 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 1614859227 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2766, other2767) {
  var self__ = this;
  var this2766__$1 = this;
  return !(other2767 == null) && this2766__$1.constructor === other2767.constructor && cljs.core._EQ_.call(null, this2766__$1.parser, other2767.parser) && cljs.core._EQ_.call(null, this2766__$1.min, other2767.min) && cljs.core._EQ_.call(null, this2766__$1.max, other2767.max) && cljs.core._EQ_.call(null, this2766__$1.limit, other2767.limit) && cljs.core._EQ_.call(null, this2766__$1.__extmap, other2767.__extmap);
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null, "min", "min", 444991522), null, new cljs.core.Keyword(null, "limit", "limit", -1355822363), null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), null, new cljs.core.Keyword(null, "max", "max", 61366548), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.LazyRepeatingParser(self__.parser, self__.min, self__.max, self__.limit, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2764) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2774 = cljs.core.keyword_identical_QMARK_;
  var expr__2775 = k__4388__auto__;
  if (cljs.core.truth_(pred__2774.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2775))) {
    return new petitparser.parsers.LazyRepeatingParser(G__2764, self__.min, self__.max, self__.limit, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2774.call(null, new cljs.core.Keyword(null, "min", "min", 444991522), expr__2775))) {
      return new petitparser.parsers.LazyRepeatingParser(self__.parser, G__2764, self__.max, self__.limit, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2774.call(null, new cljs.core.Keyword(null, "max", "max", 61366548), expr__2775))) {
        return new petitparser.parsers.LazyRepeatingParser(self__.parser, self__.min, G__2764, self__.limit, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__2774.call(null, new cljs.core.Keyword(null, "limit", "limit", -1355822363), expr__2775))) {
          return new petitparser.parsers.LazyRepeatingParser(self__.parser, self__.min, self__.max, G__2764, self__.__meta, self__.__extmap, null);
        } else {
          return new petitparser.parsers.LazyRepeatingParser(self__.parser, self__.min, self__.max, self__.limit, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2764), null);
        }
      }
    }
  }
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "min", "min", 444991522), self__.min, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "max", "max", 61366548), self__.max, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "limit", 
  "limit", -1355822363), self__.limit, null)], null), self__.__extmap));
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2764) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.LazyRepeatingParser(self__.parser, self__.min, self__.max, self__.limit, G__2764, self__.__extmap, self__.__hash);
};
petitparser.parsers.LazyRepeatingParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.LazyRepeatingParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null), cljs.core.with_meta(new cljs.core.Symbol(null, "min", "min", 2085523049, null), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), cljs.core.with_meta(new cljs.core.Symbol(null, "max", "max", 1701898075, null), new cljs.core.PersistentArrayMap(null, 
  1, [new cljs.core.Keyword(null, "tag", "tag", -1290361223), new cljs.core.Symbol(null, "long", "long", 1469079434, null)], null)), new cljs.core.Symbol(null, "limit", "limit", 284709164, null)], null);
};
petitparser.parsers.LazyRepeatingParser.cljs$lang$type = true;
petitparser.parsers.LazyRepeatingParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/LazyRepeatingParser", null, 1, null);
};
petitparser.parsers.LazyRepeatingParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/LazyRepeatingParser");
};
petitparser.parsers.__GT_LazyRepeatingParser = function petitparser$parsers$__GT_LazyRepeatingParser(parser, min, max, limit) {
  return new petitparser.parsers.LazyRepeatingParser(parser, min, max, limit, null, null, null);
};
petitparser.parsers.map__GT_LazyRepeatingParser = function petitparser$parsers$map__GT_LazyRepeatingParser(G__2768) {
  var extmap__4419__auto__ = function() {
    var G__2777 = cljs.core.dissoc.call(null, G__2768, new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "min", "min", 444991522), new cljs.core.Keyword(null, "max", "max", 61366548), new cljs.core.Keyword(null, "limit", "limit", -1355822363));
    if (cljs.core.record_QMARK_.call(null, G__2768)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2777);
    } else {
      return G__2777;
    }
  }();
  return new petitparser.parsers.LazyRepeatingParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2768), (new cljs.core.Keyword(null, "min", "min", 444991522)).cljs$core$IFn$_invoke$arity$1(G__2768), (new cljs.core.Keyword(null, "max", "max", 61366548)).cljs$core$IFn$_invoke$arity$1(G__2768), (new cljs.core.Keyword(null, "limit", "limit", -1355822363)).cljs$core$IFn$_invoke$arity$1(G__2768), null, cljs.core.not_empty.call(null, extmap__4419__auto__), 
  null);
};
petitparser.parsers.NotParser = function(parser, __meta, __extmap, __hash) {
  this.parser = parser;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.NotParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.NotParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2786, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2790 = k2786;
  var G__2790__$1 = G__2790 instanceof cljs.core.Keyword ? G__2790.fqn : null;
  switch(G__2790__$1) {
    case "parser":
      return self__.parser;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2786, else__4383__auto__);
  }
};
petitparser.parsers.NotParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2791) {
    var vec__2792 = p__2791;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2792, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2792, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.NotParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.NotParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null)], null), self__.__extmap));
};
petitparser.parsers.NotParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.NotParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var result = petitparser.parsers.parse_on.call(null, self__.parser, stream);
  petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
  if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result))) {
    return petitparser.results.failure.call(null, petitparser.input_stream.position.call(null, stream), "");
  } else {
    return petitparser.results.success.call(null, null);
  }
};
petitparser.parsers.NotParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2785) {
  var self__ = this;
  var G__2785__$1 = this;
  return new cljs.core.RecordIter(0, G__2785__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.NotParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.NotParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.NotParser(self__.parser, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.NotParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.NotParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -972156211 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.NotParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2787, other2788) {
  var self__ = this;
  var this2787__$1 = this;
  return !(other2788 == null) && this2787__$1.constructor === other2788.constructor && cljs.core._EQ_.call(null, this2787__$1.parser, other2788.parser) && cljs.core._EQ_.call(null, this2787__$1.__extmap, other2788.__extmap);
};
petitparser.parsers.NotParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.NotParser(self__.parser, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.NotParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2785) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2795 = cljs.core.keyword_identical_QMARK_;
  var expr__2796 = k__4388__auto__;
  if (cljs.core.truth_(pred__2795.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2796))) {
    return new petitparser.parsers.NotParser(G__2785, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.NotParser(self__.parser, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2785), null);
  }
};
petitparser.parsers.NotParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null)], null), self__.__extmap));
};
petitparser.parsers.NotParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2785) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.NotParser(self__.parser, G__2785, self__.__extmap, self__.__hash);
};
petitparser.parsers.NotParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.NotParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null)], null);
};
petitparser.parsers.NotParser.cljs$lang$type = true;
petitparser.parsers.NotParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/NotParser", null, 1, null);
};
petitparser.parsers.NotParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/NotParser");
};
petitparser.parsers.__GT_NotParser = function petitparser$parsers$__GT_NotParser(parser) {
  return new petitparser.parsers.NotParser(parser, null, null, null);
};
petitparser.parsers.map__GT_NotParser = function petitparser$parsers$map__GT_NotParser(G__2789) {
  var extmap__4419__auto__ = function() {
    var G__2798 = cljs.core.dissoc.call(null, G__2789, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
    if (cljs.core.record_QMARK_.call(null, G__2789)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2798);
    } else {
      return G__2798;
    }
  }();
  return new petitparser.parsers.NotParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2789), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.OptionalParser = function(parser, __meta, __extmap, __hash) {
  this.parser = parser;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.OptionalParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.OptionalParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2801, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2805 = k2801;
  var G__2805__$1 = G__2805 instanceof cljs.core.Keyword ? G__2805.fqn : null;
  switch(G__2805__$1) {
    case "parser":
      return self__.parser;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2801, else__4383__auto__);
  }
};
petitparser.parsers.OptionalParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2806) {
    var vec__2807 = p__2806;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2807, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2807, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.OptionalParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.OptionalParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null)], null), self__.__extmap));
};
petitparser.parsers.OptionalParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.OptionalParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var result = petitparser.parsers.parse_on.call(null, self__.parser, stream);
  if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, result))) {
    return result;
  } else {
    return petitparser.results.success.call(null, null);
  }
};
petitparser.parsers.OptionalParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2800) {
  var self__ = this;
  var G__2800__$1 = this;
  return new cljs.core.RecordIter(0, G__2800__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.OptionalParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.OptionalParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.OptionalParser(self__.parser, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.OptionalParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.OptionalParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -609477018 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.OptionalParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2802, other2803) {
  var self__ = this;
  var this2802__$1 = this;
  return !(other2803 == null) && this2802__$1.constructor === other2803.constructor && cljs.core._EQ_.call(null, this2802__$1.parser, other2803.parser) && cljs.core._EQ_.call(null, this2802__$1.__extmap, other2803.__extmap);
};
petitparser.parsers.OptionalParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.OptionalParser(self__.parser, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.OptionalParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2800) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2810 = cljs.core.keyword_identical_QMARK_;
  var expr__2811 = k__4388__auto__;
  if (cljs.core.truth_(pred__2810.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2811))) {
    return new petitparser.parsers.OptionalParser(G__2800, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.OptionalParser(self__.parser, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2800), null);
  }
};
petitparser.parsers.OptionalParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null)], null), self__.__extmap));
};
petitparser.parsers.OptionalParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2800) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.OptionalParser(self__.parser, G__2800, self__.__extmap, self__.__hash);
};
petitparser.parsers.OptionalParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.OptionalParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null)], null);
};
petitparser.parsers.OptionalParser.cljs$lang$type = true;
petitparser.parsers.OptionalParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/OptionalParser", null, 1, null);
};
petitparser.parsers.OptionalParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/OptionalParser");
};
petitparser.parsers.__GT_OptionalParser = function petitparser$parsers$__GT_OptionalParser(parser) {
  return new petitparser.parsers.OptionalParser(parser, null, null, null);
};
petitparser.parsers.map__GT_OptionalParser = function petitparser$parsers$map__GT_OptionalParser(G__2804) {
  var extmap__4419__auto__ = function() {
    var G__2813 = cljs.core.dissoc.call(null, G__2804, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
    if (cljs.core.record_QMARK_.call(null, G__2804)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2813);
    } else {
      return G__2813;
    }
  }();
  return new petitparser.parsers.OptionalParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2804), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.TokenParser = function(parser, __meta, __extmap, __hash) {
  this.parser = parser;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.TokenParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.TokenParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2816, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2820 = k2816;
  var G__2820__$1 = G__2820 instanceof cljs.core.Keyword ? G__2820.fqn : null;
  switch(G__2820__$1) {
    case "parser":
      return self__.parser;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2816, else__4383__auto__);
  }
};
petitparser.parsers.TokenParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2821) {
    var vec__2822 = p__2821;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2822, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2822, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.TokenParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.TokenParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null)], null), self__.__extmap));
};
petitparser.parsers.TokenParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.TokenParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var result = petitparser.parsers.parse_on.call(null, self__.parser, stream);
  if (cljs.core.truth_(petitparser.results.failure_QMARK_.call(null, result))) {
    return result;
  } else {
    var token = petitparser.token.make_token.call(null, petitparser.input_stream.source.call(null, stream), start, petitparser.input_stream.position.call(null, stream) - start, petitparser.results.actual_result.call(null, result));
    return petitparser.results.success.call(null, token);
  }
};
petitparser.parsers.TokenParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2815) {
  var self__ = this;
  var G__2815__$1 = this;
  return new cljs.core.RecordIter(0, G__2815__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.TokenParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.TokenParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.TokenParser(self__.parser, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.TokenParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.TokenParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -87554770 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.TokenParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2817, other2818) {
  var self__ = this;
  var this2817__$1 = this;
  return !(other2818 == null) && this2817__$1.constructor === other2818.constructor && cljs.core._EQ_.call(null, this2817__$1.parser, other2818.parser) && cljs.core._EQ_.call(null, this2817__$1.__extmap, other2818.__extmap);
};
petitparser.parsers.TokenParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.TokenParser(self__.parser, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.TokenParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2815) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2825 = cljs.core.keyword_identical_QMARK_;
  var expr__2826 = k__4388__auto__;
  if (cljs.core.truth_(pred__2825.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2826))) {
    return new petitparser.parsers.TokenParser(G__2815, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.TokenParser(self__.parser, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2815), null);
  }
};
petitparser.parsers.TokenParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null)], null), self__.__extmap));
};
petitparser.parsers.TokenParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2815) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.TokenParser(self__.parser, G__2815, self__.__extmap, self__.__hash);
};
petitparser.parsers.TokenParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.TokenParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null)], null);
};
petitparser.parsers.TokenParser.cljs$lang$type = true;
petitparser.parsers.TokenParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/TokenParser", null, 1, null);
};
petitparser.parsers.TokenParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/TokenParser");
};
petitparser.parsers.__GT_TokenParser = function petitparser$parsers$__GT_TokenParser(parser) {
  return new petitparser.parsers.TokenParser(parser, null, null, null);
};
petitparser.parsers.map__GT_TokenParser = function petitparser$parsers$map__GT_TokenParser(G__2819) {
  var extmap__4419__auto__ = function() {
    var G__2828 = cljs.core.dissoc.call(null, G__2819, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
    if (cljs.core.record_QMARK_.call(null, G__2819)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2828);
    } else {
      return G__2828;
    }
  }();
  return new petitparser.parsers.TokenParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2819), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.ActionParser = function(parser, function$, __meta, __extmap, __hash) {
  this.parser = parser;
  this.function$ = function$;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.ActionParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.ActionParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2831, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2835 = k2831;
  var G__2835__$1 = G__2835 instanceof cljs.core.Keyword ? G__2835.fqn : null;
  switch(G__2835__$1) {
    case "parser":
      return self__.parser;
      break;
    case "function":
      return self__.function$;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2831, else__4383__auto__);
  }
};
petitparser.parsers.ActionParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2836) {
    var vec__2837 = p__2836;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2837, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2837, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.ActionParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.ActionParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "function", "function", -2127255473), self__.function$], null)], null), self__.__extmap));
};
petitparser.parsers.ActionParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.ActionParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var result = petitparser.parsers.parse_on.call(null, self__.parser, stream);
  if (cljs.core.truth_(petitparser.results.failure_QMARK_.call(null, result))) {
    return result;
  } else {
    return petitparser.results.success.call(null, self__.function$.call(null, petitparser.results.actual_result.call(null, result)));
  }
};
petitparser.parsers.ActionParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2830) {
  var self__ = this;
  var G__2830__$1 = this;
  return new cljs.core.RecordIter(0, G__2830__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "function", "function", -2127255473)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.ActionParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.ActionParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.ActionParser(self__.parser, self__.function$, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.ActionParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.ActionParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 1212351203 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.ActionParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2832, other2833) {
  var self__ = this;
  var this2832__$1 = this;
  return !(other2833 == null) && this2832__$1.constructor === other2833.constructor && cljs.core._EQ_.call(null, this2832__$1.parser, other2833.parser) && cljs.core._EQ_.call(null, this2832__$1.function, other2833.function) && cljs.core._EQ_.call(null, this2832__$1.__extmap, other2833.__extmap);
};
petitparser.parsers.ActionParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "function", "function", -2127255473), null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.ActionParser(self__.parser, self__.function$, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.ActionParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2830) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2840 = cljs.core.keyword_identical_QMARK_;
  var expr__2841 = k__4388__auto__;
  if (cljs.core.truth_(pred__2840.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2841))) {
    return new petitparser.parsers.ActionParser(G__2830, self__.function$, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2840.call(null, new cljs.core.Keyword(null, "function", "function", -2127255473), expr__2841))) {
      return new petitparser.parsers.ActionParser(self__.parser, G__2830, self__.__meta, self__.__extmap, null);
    } else {
      return new petitparser.parsers.ActionParser(self__.parser, self__.function$, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2830), null);
    }
  }
};
petitparser.parsers.ActionParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "function", "function", -2127255473), self__.function$, null)], null), self__.__extmap));
};
petitparser.parsers.ActionParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2830) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.ActionParser(self__.parser, self__.function$, G__2830, self__.__extmap, self__.__hash);
};
petitparser.parsers.ActionParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.ActionParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null), new cljs.core.Symbol(null, "function", "function", -486723946, null)], null);
};
petitparser.parsers.ActionParser.cljs$lang$type = true;
petitparser.parsers.ActionParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/ActionParser", null, 1, null);
};
petitparser.parsers.ActionParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/ActionParser");
};
petitparser.parsers.__GT_ActionParser = function petitparser$parsers$__GT_ActionParser(parser, function$) {
  return new petitparser.parsers.ActionParser(parser, function$, null, null, null);
};
petitparser.parsers.map__GT_ActionParser = function petitparser$parsers$map__GT_ActionParser(G__2834) {
  var extmap__4419__auto__ = function() {
    var G__2843 = cljs.core.dissoc.call(null, G__2834, new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "function", "function", -2127255473));
    if (cljs.core.record_QMARK_.call(null, G__2834)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2843);
    } else {
      return G__2843;
    }
  }();
  return new petitparser.parsers.ActionParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2834), (new cljs.core.Keyword(null, "function", "function", -2127255473)).cljs$core$IFn$_invoke$arity$1(G__2834), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.TrimmingParser = function(parser, trimmer, __meta, __extmap, __hash) {
  this.parser = parser;
  this.trimmer = trimmer;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2846, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2850 = k2846;
  var G__2850__$1 = G__2850 instanceof cljs.core.Keyword ? G__2850.fqn : null;
  switch(G__2850__$1) {
    case "parser":
      return self__.parser;
      break;
    case "trimmer":
      return self__.trimmer;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2846, else__4383__auto__);
  }
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2851) {
    var vec__2852 = p__2851;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2852, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2852, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.TrimmingParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "trimmer", "trimmer", -1533707574), self__.trimmer], null)], null), self__.__extmap));
};
petitparser.parsers.TrimmingParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.TrimmingParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var trim = function() {
    while (true) {
      if (cljs.core.truth_(petitparser.results.success_QMARK_.call(null, petitparser.parsers.parse_on.call(null, self__.trimmer, stream)))) {
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  trim.call(null);
  var result = petitparser.parsers.parse_on.call(null, self__.parser, stream);
  if (cljs.core.truth_(petitparser.results.failure_QMARK_.call(null, result))) {
    petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
    return result;
  } else {
    trim.call(null);
    return result;
  }
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2845) {
  var self__ = this;
  var G__2845__$1 = this;
  return new cljs.core.RecordIter(0, G__2845__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "trimmer", "trimmer", -1533707574)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.TrimmingParser(self__.parser, self__.trimmer, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -1585731910 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2847, other2848) {
  var self__ = this;
  var this2847__$1 = this;
  return !(other2848 == null) && this2847__$1.constructor === other2848.constructor && cljs.core._EQ_.call(null, this2847__$1.parser, other2848.parser) && cljs.core._EQ_.call(null, this2847__$1.trimmer, other2848.trimmer) && cljs.core._EQ_.call(null, this2847__$1.__extmap, other2848.__extmap);
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "trimmer", "trimmer", -1533707574), null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.TrimmingParser(self__.parser, self__.trimmer, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2845) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2855 = cljs.core.keyword_identical_QMARK_;
  var expr__2856 = k__4388__auto__;
  if (cljs.core.truth_(pred__2855.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2856))) {
    return new petitparser.parsers.TrimmingParser(G__2845, self__.trimmer, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2855.call(null, new cljs.core.Keyword(null, "trimmer", "trimmer", -1533707574), expr__2856))) {
      return new petitparser.parsers.TrimmingParser(self__.parser, G__2845, self__.__meta, self__.__extmap, null);
    } else {
      return new petitparser.parsers.TrimmingParser(self__.parser, self__.trimmer, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2845), null);
    }
  }
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "trimmer", "trimmer", -1533707574), self__.trimmer, null)], null), self__.__extmap));
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2845) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.TrimmingParser(self__.parser, self__.trimmer, G__2845, self__.__extmap, self__.__hash);
};
petitparser.parsers.TrimmingParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.TrimmingParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null), new cljs.core.Symbol(null, "trimmer", "trimmer", 106823953, null)], null);
};
petitparser.parsers.TrimmingParser.cljs$lang$type = true;
petitparser.parsers.TrimmingParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/TrimmingParser", null, 1, null);
};
petitparser.parsers.TrimmingParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/TrimmingParser");
};
petitparser.parsers.__GT_TrimmingParser = function petitparser$parsers$__GT_TrimmingParser(parser, trimmer) {
  return new petitparser.parsers.TrimmingParser(parser, trimmer, null, null, null);
};
petitparser.parsers.map__GT_TrimmingParser = function petitparser$parsers$map__GT_TrimmingParser(G__2849) {
  var extmap__4419__auto__ = function() {
    var G__2858 = cljs.core.dissoc.call(null, G__2849, new cljs.core.Keyword(null, "parser", "parser", -1543495310), new cljs.core.Keyword(null, "trimmer", "trimmer", -1533707574));
    if (cljs.core.record_QMARK_.call(null, G__2849)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2858);
    } else {
      return G__2858;
    }
  }();
  return new petitparser.parsers.TrimmingParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2849), (new cljs.core.Keyword(null, "trimmer", "trimmer", -1533707574)).cljs$core$IFn$_invoke$arity$1(G__2849), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.PredicateObjectParser = function(function$, message, __meta, __extmap, __hash) {
  this.function$ = function$;
  this.message = message;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2861, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2865 = k2861;
  var G__2865__$1 = G__2865 instanceof cljs.core.Keyword ? G__2865.fqn : null;
  switch(G__2865__$1) {
    case "function":
      return self__.function$;
      break;
    case "message":
      return self__.message;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2861, else__4383__auto__);
  }
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2866) {
    var vec__2867 = p__2866;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2867, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2867, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.PredicateObjectParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "function", "function", -2127255473), self__.function$], null), new cljs.core.PersistentVector(null, 2, 5, 
  cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "message", "message", -406056002), self__.message], null)], null), self__.__extmap));
};
petitparser.parsers.PredicateObjectParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.PredicateObjectParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  if (cljs.core.truth_(!petitparser.input_stream.end_QMARK_.call(null, stream) ? self__.function$.call(null, petitparser.input_stream.peek.call(null, stream)) : false)) {
    return petitparser.results.success.call(null, petitparser.input_stream.next_BANG_.call(null, stream));
  } else {
    return petitparser.results.failure.call(null, petitparser.input_stream.position.call(null, stream), self__.message);
  }
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2860) {
  var self__ = this;
  var G__2860__$1 = this;
  return new cljs.core.RecordIter(0, G__2860__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "function", "function", -2127255473), new cljs.core.Keyword(null, "message", "message", -406056002)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.PredicateObjectParser(self__.function$, self__.message, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -2133606842 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2862, other2863) {
  var self__ = this;
  var this2862__$1 = this;
  return !(other2863 == null) && this2862__$1.constructor === other2863.constructor && cljs.core._EQ_.call(null, this2862__$1.function, other2863.function) && cljs.core._EQ_.call(null, this2862__$1.message, other2863.message) && cljs.core._EQ_.call(null, this2862__$1.__extmap, other2863.__extmap);
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "function", "function", -2127255473), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.PredicateObjectParser(self__.function$, self__.message, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2860) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2870 = cljs.core.keyword_identical_QMARK_;
  var expr__2871 = k__4388__auto__;
  if (cljs.core.truth_(pred__2870.call(null, new cljs.core.Keyword(null, "function", "function", -2127255473), expr__2871))) {
    return new petitparser.parsers.PredicateObjectParser(G__2860, self__.message, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2870.call(null, new cljs.core.Keyword(null, "message", "message", -406056002), expr__2871))) {
      return new petitparser.parsers.PredicateObjectParser(self__.function$, G__2860, self__.__meta, self__.__extmap, null);
    } else {
      return new petitparser.parsers.PredicateObjectParser(self__.function$, self__.message, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2860), null);
    }
  }
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "function", "function", -2127255473), self__.function$, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "message", "message", -406056002), self__.message, null)], null), self__.__extmap));
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2860) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.PredicateObjectParser(self__.function$, self__.message, G__2860, self__.__extmap, self__.__hash);
};
petitparser.parsers.PredicateObjectParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.PredicateObjectParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "function", "function", -486723946, null), new cljs.core.Symbol(null, "message", "message", 1234475525, null)], null);
};
petitparser.parsers.PredicateObjectParser.cljs$lang$type = true;
petitparser.parsers.PredicateObjectParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/PredicateObjectParser", null, 1, null);
};
petitparser.parsers.PredicateObjectParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/PredicateObjectParser");
};
petitparser.parsers.__GT_PredicateObjectParser = function petitparser$parsers$__GT_PredicateObjectParser(function$, message) {
  return new petitparser.parsers.PredicateObjectParser(function$, message, null, null, null);
};
petitparser.parsers.map__GT_PredicateObjectParser = function petitparser$parsers$map__GT_PredicateObjectParser(G__2864) {
  var extmap__4419__auto__ = function() {
    var G__2873 = cljs.core.dissoc.call(null, G__2864, new cljs.core.Keyword(null, "function", "function", -2127255473), new cljs.core.Keyword(null, "message", "message", -406056002));
    if (cljs.core.record_QMARK_.call(null, G__2864)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2873);
    } else {
      return G__2873;
    }
  }();
  return new petitparser.parsers.PredicateObjectParser((new cljs.core.Keyword(null, "function", "function", -2127255473)).cljs$core$IFn$_invoke$arity$1(G__2864), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(G__2864), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.PredicateSequenceParser = function(function$, message, count, __meta, __extmap, __hash) {
  this.function$ = function$;
  this.message = message;
  this.count = count;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2876, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2880 = k2876;
  var G__2880__$1 = G__2880 instanceof cljs.core.Keyword ? G__2880.fqn : null;
  switch(G__2880__$1) {
    case "function":
      return self__.function$;
      break;
    case "message":
      return self__.message;
      break;
    case "count":
      return self__.count;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2876, else__4383__auto__);
  }
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2881) {
    var vec__2882 = p__2881;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2882, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2882, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.PredicateSequenceParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "function", "function", -2127255473), self__.function$], null), new cljs.core.PersistentVector(null, 2, 
  5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "message", "message", -406056002), self__.message], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "count", "count", 2139924085), self__.count], null)], null), self__.__extmap));
};
petitparser.parsers.PredicateSequenceParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.PredicateSequenceParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  var start = petitparser.input_stream.position.call(null, stream);
  var result = petitparser.input_stream.take_BANG_.call(null, stream, self__.count);
  if (cljs.core.truth_(cljs.core._EQ_.call(null, self__.count, result.length) ? self__.function$.call(null, result) : false)) {
    return petitparser.results.success.call(null, result);
  } else {
    petitparser.input_stream.reset_position_BANG_.call(null, stream, start);
    return petitparser.results.failure.call(null, petitparser.input_stream.position.call(null, stream), self__.message);
  }
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2875) {
  var self__ = this;
  var G__2875__$1 = this;
  return new cljs.core.RecordIter(0, G__2875__$1, 3, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "function", "function", -2127255473), new cljs.core.Keyword(null, "message", "message", -406056002), new cljs.core.Keyword(null, "count", "count", 2139924085)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.PredicateSequenceParser(self__.function$, self__.message, self__.count, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 3 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return 1335497470 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2877, other2878) {
  var self__ = this;
  var this2877__$1 = this;
  return !(other2878 == null) && this2877__$1.constructor === other2878.constructor && cljs.core._EQ_.call(null, this2877__$1.function, other2878.function) && cljs.core._EQ_.call(null, this2877__$1.message, other2878.message) && cljs.core._EQ_.call(null, this2877__$1.count, other2878.count) && cljs.core._EQ_.call(null, this2877__$1.__extmap, other2878.__extmap);
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "function", "function", -2127255473), null, new cljs.core.Keyword(null, "count", "count", 2139924085), null, new cljs.core.Keyword(null, "message", "message", -406056002), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.PredicateSequenceParser(self__.function$, self__.message, self__.count, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2875) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2885 = cljs.core.keyword_identical_QMARK_;
  var expr__2886 = k__4388__auto__;
  if (cljs.core.truth_(pred__2885.call(null, new cljs.core.Keyword(null, "function", "function", -2127255473), expr__2886))) {
    return new petitparser.parsers.PredicateSequenceParser(G__2875, self__.message, self__.count, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2885.call(null, new cljs.core.Keyword(null, "message", "message", -406056002), expr__2886))) {
      return new petitparser.parsers.PredicateSequenceParser(self__.function$, G__2875, self__.count, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__2885.call(null, new cljs.core.Keyword(null, "count", "count", 2139924085), expr__2886))) {
        return new petitparser.parsers.PredicateSequenceParser(self__.function$, self__.message, G__2875, self__.__meta, self__.__extmap, null);
      } else {
        return new petitparser.parsers.PredicateSequenceParser(self__.function$, self__.message, self__.count, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2875), null);
      }
    }
  }
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "function", "function", -2127255473), self__.function$, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "message", "message", -406056002), self__.message, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "count", "count", 2139924085), self__.count, null)], null), self__.__extmap));
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2875) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.PredicateSequenceParser(self__.function$, self__.message, self__.count, G__2875, self__.__extmap, self__.__hash);
};
petitparser.parsers.PredicateSequenceParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.PredicateSequenceParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "function", "function", -486723946, null), new cljs.core.Symbol(null, "message", "message", 1234475525, null), new cljs.core.Symbol(null, "count", "count", -514511684, null)], null);
};
petitparser.parsers.PredicateSequenceParser.cljs$lang$type = true;
petitparser.parsers.PredicateSequenceParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/PredicateSequenceParser", null, 1, null);
};
petitparser.parsers.PredicateSequenceParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/PredicateSequenceParser");
};
petitparser.parsers.__GT_PredicateSequenceParser = function petitparser$parsers$__GT_PredicateSequenceParser(function$, message, count) {
  return new petitparser.parsers.PredicateSequenceParser(function$, message, count, null, null, null);
};
petitparser.parsers.map__GT_PredicateSequenceParser = function petitparser$parsers$map__GT_PredicateSequenceParser(G__2879) {
  var extmap__4419__auto__ = function() {
    var G__2888 = cljs.core.dissoc.call(null, G__2879, new cljs.core.Keyword(null, "function", "function", -2127255473), new cljs.core.Keyword(null, "message", "message", -406056002), new cljs.core.Keyword(null, "count", "count", 2139924085));
    if (cljs.core.record_QMARK_.call(null, G__2879)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2888);
    } else {
      return G__2888;
    }
  }();
  return new petitparser.parsers.PredicateSequenceParser((new cljs.core.Keyword(null, "function", "function", -2127255473)).cljs$core$IFn$_invoke$arity$1(G__2879), (new cljs.core.Keyword(null, "message", "message", -406056002)).cljs$core$IFn$_invoke$arity$1(G__2879), (new cljs.core.Keyword(null, "count", "count", 2139924085)).cljs$core$IFn$_invoke$arity$1(G__2879), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.PlaceholderParser = function(key, __meta, __extmap, __hash) {
  this.key = key;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2891, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2895 = k2891;
  var G__2895__$1 = G__2895 instanceof cljs.core.Keyword ? G__2895.fqn : null;
  switch(G__2895__$1) {
    case "key":
      return self__.key;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2891, else__4383__auto__);
  }
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2896) {
    var vec__2897 = p__2896;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2897, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2897, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.PlaceholderParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "key", "key", -1516042587), self__.key], null)], null), self__.__extmap));
};
petitparser.parsers.PlaceholderParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.PlaceholderParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  return petitparser.results.failure.call(null, petitparser.input_stream.position.call(null, stream), ["Parser not found for keyword ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.key)].join(""));
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2890) {
  var self__ = this;
  var G__2890__$1 = this;
  return new cljs.core.RecordIter(0, G__2890__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "key", "key", -1516042587)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.PlaceholderParser(self__.key, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -131645049 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2892, other2893) {
  var self__ = this;
  var this2892__$1 = this;
  return !(other2893 == null) && this2892__$1.constructor === other2893.constructor && cljs.core._EQ_.call(null, this2892__$1.key, other2893.key) && cljs.core._EQ_.call(null, this2892__$1.__extmap, other2893.__extmap);
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "key", "key", -1516042587), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.PlaceholderParser(self__.key, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2890) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2900 = cljs.core.keyword_identical_QMARK_;
  var expr__2901 = k__4388__auto__;
  if (cljs.core.truth_(pred__2900.call(null, new cljs.core.Keyword(null, "key", "key", -1516042587), expr__2901))) {
    return new petitparser.parsers.PlaceholderParser(G__2890, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.PlaceholderParser(self__.key, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2890), null);
  }
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "key", "key", -1516042587), self__.key, null)], null), self__.__extmap));
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2890) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.PlaceholderParser(self__.key, G__2890, self__.__extmap, self__.__hash);
};
petitparser.parsers.PlaceholderParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.PlaceholderParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "key", "key", 124488940, null)], null);
};
petitparser.parsers.PlaceholderParser.cljs$lang$type = true;
petitparser.parsers.PlaceholderParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/PlaceholderParser", null, 1, null);
};
petitparser.parsers.PlaceholderParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/PlaceholderParser");
};
petitparser.parsers.__GT_PlaceholderParser = function petitparser$parsers$__GT_PlaceholderParser(key) {
  return new petitparser.parsers.PlaceholderParser(key, null, null, null);
};
petitparser.parsers.map__GT_PlaceholderParser = function petitparser$parsers$map__GT_PlaceholderParser(G__2894) {
  var extmap__4419__auto__ = function() {
    var G__2903 = cljs.core.dissoc.call(null, G__2894, new cljs.core.Keyword(null, "key", "key", -1516042587));
    if (cljs.core.record_QMARK_.call(null, G__2894)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2903);
    } else {
      return G__2903;
    }
  }();
  return new petitparser.parsers.PlaceholderParser((new cljs.core.Keyword(null, "key", "key", -1516042587)).cljs$core$IFn$_invoke$arity$1(G__2894), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.DelegateParser = function(parser, __meta, __extmap, __hash) {
  this.parser = parser;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.DelegateParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.DelegateParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2906, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2910 = k2906;
  var G__2910__$1 = G__2910 instanceof cljs.core.Keyword ? G__2910.fqn : null;
  switch(G__2910__$1) {
    case "parser":
      return self__.parser;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2906, else__4383__auto__);
  }
};
petitparser.parsers.DelegateParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2911) {
    var vec__2912 = p__2911;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2912, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2912, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.DelegateParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.DelegateParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser], null)], null), self__.__extmap));
};
petitparser.parsers.DelegateParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.DelegateParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  return petitparser.parsers.parse_on.call(null, cljs.core.deref.call(null, self__.parser), stream);
};
petitparser.parsers.DelegateParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2905) {
  var self__ = this;
  var G__2905__$1 = this;
  return new cljs.core.RecordIter(0, G__2905__$1, 1, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parser", "parser", -1543495310)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.DelegateParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.DelegateParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.DelegateParser(self__.parser, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.DelegateParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 1 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.DelegateParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -1581892866 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.DelegateParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2907, other2908) {
  var self__ = this;
  var this2907__$1 = this;
  return !(other2908 == null) && this2907__$1.constructor === other2908.constructor && cljs.core._EQ_.call(null, this2907__$1.parser, other2908.parser) && cljs.core._EQ_.call(null, this2907__$1.__extmap, other2908.__extmap);
};
petitparser.parsers.DelegateParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "parser", "parser", -1543495310), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.DelegateParser(self__.parser, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.DelegateParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2905) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2915 = cljs.core.keyword_identical_QMARK_;
  var expr__2916 = k__4388__auto__;
  if (cljs.core.truth_(pred__2915.call(null, new cljs.core.Keyword(null, "parser", "parser", -1543495310), expr__2916))) {
    return new petitparser.parsers.DelegateParser(G__2905, self__.__meta, self__.__extmap, null);
  } else {
    return new petitparser.parsers.DelegateParser(self__.parser, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2905), null);
  }
};
petitparser.parsers.DelegateParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parser", "parser", -1543495310), self__.parser, null)], null), self__.__extmap));
};
petitparser.parsers.DelegateParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2905) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.DelegateParser(self__.parser, G__2905, self__.__extmap, self__.__hash);
};
petitparser.parsers.DelegateParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.DelegateParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parser", "parser", 97036217, null)], null);
};
petitparser.parsers.DelegateParser.cljs$lang$type = true;
petitparser.parsers.DelegateParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/DelegateParser", null, 1, null);
};
petitparser.parsers.DelegateParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/DelegateParser");
};
petitparser.parsers.__GT_DelegateParser = function petitparser$parsers$__GT_DelegateParser(parser) {
  return new petitparser.parsers.DelegateParser(parser, null, null, null);
};
petitparser.parsers.map__GT_DelegateParser = function petitparser$parsers$map__GT_DelegateParser(G__2909) {
  var extmap__4419__auto__ = function() {
    var G__2918 = cljs.core.dissoc.call(null, G__2909, new cljs.core.Keyword(null, "parser", "parser", -1543495310));
    if (cljs.core.record_QMARK_.call(null, G__2909)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2918);
    } else {
      return G__2918;
    }
  }();
  return new petitparser.parsers.DelegateParser((new cljs.core.Keyword(null, "parser", "parser", -1543495310)).cljs$core$IFn$_invoke$arity$1(G__2909), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
petitparser.parsers.CompositeParser = function(parsers, start, __meta, __extmap, __hash) {
  this.parsers = parsers;
  this.start = start;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2230716170;
  this.cljs$lang$protocol_mask$partition1$ = 139264;
};
petitparser.parsers.CompositeParser.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4380__auto__, k__4381__auto__) {
  var self__ = this;
  var this__4380__auto____$1 = this;
  return this__4380__auto____$1.cljs$core$ILookup$_lookup$arity$3(null, k__4381__auto__, null);
};
petitparser.parsers.CompositeParser.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4382__auto__, k2921, else__4383__auto__) {
  var self__ = this;
  var this__4382__auto____$1 = this;
  var G__2925 = k2921;
  var G__2925__$1 = G__2925 instanceof cljs.core.Keyword ? G__2925.fqn : null;
  switch(G__2925__$1) {
    case "parsers":
      return self__.parsers;
      break;
    case "start":
      return self__.start;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k2921, else__4383__auto__);
  }
};
petitparser.parsers.CompositeParser.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(this__4399__auto__, f__4400__auto__, init__4401__auto__) {
  var self__ = this;
  var this__4399__auto____$1 = this;
  return cljs.core.reduce.call(null, function(ret__4402__auto__, p__2926) {
    var vec__2927 = p__2926;
    var k__4403__auto__ = cljs.core.nth.call(null, vec__2927, 0, null);
    var v__4404__auto__ = cljs.core.nth.call(null, vec__2927, 1, null);
    return f__4400__auto__.call(null, ret__4402__auto__, k__4403__auto__, v__4404__auto__);
  }, init__4401__auto__, this__4399__auto____$1);
};
petitparser.parsers.CompositeParser.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4394__auto__, writer__4395__auto__, opts__4396__auto__) {
  var self__ = this;
  var this__4394__auto____$1 = this;
  var pr_pair__4397__auto__ = function(keyval__4398__auto__) {
    return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, cljs.core.pr_writer, "", " ", "", opts__4396__auto__, keyval__4398__auto__);
  };
  return cljs.core.pr_sequential_writer.call(null, writer__4395__auto__, pr_pair__4397__auto__, "#petitparser.parsers.CompositeParser{", ", ", "}", opts__4396__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parsers", "parsers", -804353827), self__.parsers], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, 
  [new cljs.core.Keyword(null, "start", "start", -355208981), self__.start], null)], null), self__.__extmap));
};
petitparser.parsers.CompositeParser.prototype.petitparser$parsers$Parser$ = cljs.core.PROTOCOL_SENTINEL;
petitparser.parsers.CompositeParser.prototype.petitparser$parsers$Parser$parse_on$arity$2 = function(self, stream) {
  var self__ = this;
  var self__$1 = this;
  return petitparser.parsers.parse_on.call(null, self__.start, stream);
};
petitparser.parsers.CompositeParser.prototype.cljs$core$IIterable$_iterator$arity$1 = function(G__2920) {
  var self__ = this;
  var G__2920__$1 = this;
  return new cljs.core.RecordIter(0, G__2920__$1, 2, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "parsers", "parsers", -804353827), new cljs.core.Keyword(null, "start", "start", -355208981)], null), cljs.core.truth_(self__.__extmap) ? cljs.core._iterator.call(null, self__.__extmap) : cljs.core.nil_iter.call(null));
};
petitparser.parsers.CompositeParser.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4378__auto__) {
  var self__ = this;
  var this__4378__auto____$1 = this;
  return self__.__meta;
};
petitparser.parsers.CompositeParser.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4375__auto__) {
  var self__ = this;
  var this__4375__auto____$1 = this;
  return new petitparser.parsers.CompositeParser(self__.parsers, self__.start, self__.__meta, self__.__extmap, self__.__hash);
};
petitparser.parsers.CompositeParser.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4384__auto__) {
  var self__ = this;
  var this__4384__auto____$1 = this;
  return 2 + cljs.core.count.call(null, self__.__extmap);
};
petitparser.parsers.CompositeParser.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4376__auto__) {
  var self__ = this;
  var this__4376__auto____$1 = this;
  var h__4238__auto__ = self__.__hash;
  if (!(h__4238__auto__ == null)) {
    return h__4238__auto__;
  } else {
    var h__4238__auto____$1 = function(coll__4377__auto__) {
      return -106678529 ^ cljs.core.hash_unordered_coll.call(null, coll__4377__auto__);
    }.call(null, this__4376__auto____$1);
    self__.__hash = h__4238__auto____$1;
    return h__4238__auto____$1;
  }
};
petitparser.parsers.CompositeParser.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this2922, other2923) {
  var self__ = this;
  var this2922__$1 = this;
  return !(other2923 == null) && this2922__$1.constructor === other2923.constructor && cljs.core._EQ_.call(null, this2922__$1.parsers, other2923.parsers) && cljs.core._EQ_.call(null, this2922__$1.start, other2923.start) && cljs.core._EQ_.call(null, this2922__$1.__extmap, other2923.__extmap);
};
petitparser.parsers.CompositeParser.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4389__auto__, k__4390__auto__) {
  var self__ = this;
  var this__4389__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "start", "start", -355208981), null, new cljs.core.Keyword(null, "parsers", "parsers", -804353827), null], null), null), k__4390__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core._with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4389__auto____$1), self__.__meta), k__4390__auto__);
  } else {
    return new petitparser.parsers.CompositeParser(self__.parsers, self__.start, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4390__auto__)), null);
  }
};
petitparser.parsers.CompositeParser.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4387__auto__, k__4388__auto__, G__2920) {
  var self__ = this;
  var this__4387__auto____$1 = this;
  var pred__2930 = cljs.core.keyword_identical_QMARK_;
  var expr__2931 = k__4388__auto__;
  if (cljs.core.truth_(pred__2930.call(null, new cljs.core.Keyword(null, "parsers", "parsers", -804353827), expr__2931))) {
    return new petitparser.parsers.CompositeParser(G__2920, self__.start, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__2930.call(null, new cljs.core.Keyword(null, "start", "start", -355208981), expr__2931))) {
      return new petitparser.parsers.CompositeParser(self__.parsers, G__2920, self__.__meta, self__.__extmap, null);
    } else {
      return new petitparser.parsers.CompositeParser(self__.parsers, self__.start, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4388__auto__, G__2920), null);
    }
  }
};
petitparser.parsers.CompositeParser.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4392__auto__) {
  var self__ = this;
  var this__4392__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.MapEntry(new cljs.core.Keyword(null, "parsers", "parsers", -804353827), self__.parsers, null), new cljs.core.MapEntry(new cljs.core.Keyword(null, "start", "start", -355208981), self__.start, null)], null), self__.__extmap));
};
petitparser.parsers.CompositeParser.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4379__auto__, G__2920) {
  var self__ = this;
  var this__4379__auto____$1 = this;
  return new petitparser.parsers.CompositeParser(self__.parsers, self__.start, G__2920, self__.__extmap, self__.__hash);
};
petitparser.parsers.CompositeParser.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4385__auto__, entry__4386__auto__) {
  var self__ = this;
  var this__4385__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4386__auto__)) {
    return this__4385__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null, cljs.core._nth.call(null, entry__4386__auto__, 0), cljs.core._nth.call(null, entry__4386__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4385__auto____$1, entry__4386__auto__);
  }
};
petitparser.parsers.CompositeParser.getBasis = function() {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null, "parsers", "parsers", 836177700, null), new cljs.core.Symbol(null, "start", "start", 1285322546, null)], null);
};
petitparser.parsers.CompositeParser.cljs$lang$type = true;
petitparser.parsers.CompositeParser.cljs$lang$ctorPrSeq = function(this__4423__auto__) {
  return new cljs.core.List(null, "petitparser.parsers/CompositeParser", null, 1, null);
};
petitparser.parsers.CompositeParser.cljs$lang$ctorPrWriter = function(this__4423__auto__, writer__4424__auto__) {
  return cljs.core._write.call(null, writer__4424__auto__, "petitparser.parsers/CompositeParser");
};
petitparser.parsers.__GT_CompositeParser = function petitparser$parsers$__GT_CompositeParser(parsers, start) {
  return new petitparser.parsers.CompositeParser(parsers, start, null, null, null);
};
petitparser.parsers.map__GT_CompositeParser = function petitparser$parsers$map__GT_CompositeParser(G__2924) {
  var extmap__4419__auto__ = function() {
    var G__2933 = cljs.core.dissoc.call(null, G__2924, new cljs.core.Keyword(null, "parsers", "parsers", -804353827), new cljs.core.Keyword(null, "start", "start", -355208981));
    if (cljs.core.record_QMARK_.call(null, G__2924)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, G__2933);
    } else {
      return G__2933;
    }
  }();
  return new petitparser.parsers.CompositeParser((new cljs.core.Keyword(null, "parsers", "parsers", -804353827)).cljs$core$IFn$_invoke$arity$1(G__2924), (new cljs.core.Keyword(null, "start", "start", -355208981)).cljs$core$IFn$_invoke$arity$1(G__2924), null, cljs.core.not_empty.call(null, extmap__4419__auto__), null);
};
goog.provide("clojure.walk");
goog.require("cljs.core");
clojure.walk.walk = function clojure$walk$walk(inner, outer, form) {
  if (cljs.core.list_QMARK_.call(null, form)) {
    return outer.call(null, cljs.core.apply.call(null, cljs.core.list, cljs.core.map.call(null, inner, form)));
  } else {
    if (cljs.core.map_entry_QMARK_.call(null, form)) {
      return outer.call(null, new cljs.core.MapEntry(inner.call(null, cljs.core.key.call(null, form)), inner.call(null, cljs.core.val.call(null, form)), null));
    } else {
      if (cljs.core.seq_QMARK_.call(null, form)) {
        return outer.call(null, cljs.core.doall.call(null, cljs.core.map.call(null, inner, form)));
      } else {
        if (cljs.core.record_QMARK_.call(null, form)) {
          return outer.call(null, cljs.core.reduce.call(null, function(r, x) {
            return cljs.core.conj.call(null, r, inner.call(null, x));
          }, form, form));
        } else {
          if (cljs.core.coll_QMARK_.call(null, form)) {
            return outer.call(null, cljs.core.into.call(null, cljs.core.empty.call(null, form), cljs.core.map.call(null, inner, form)));
          } else {
            return outer.call(null, form);
          }
        }
      }
    }
  }
};
clojure.walk.postwalk = function clojure$walk$postwalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.postwalk, f), f, form);
};
clojure.walk.prewalk = function clojure$walk$prewalk(f, form) {
  return clojure.walk.walk.call(null, cljs.core.partial.call(null, clojure.walk.prewalk, f), cljs.core.identity, f.call(null, form));
};
clojure.walk.keywordize_keys = function clojure$walk$keywordize_keys(m) {
  var f = function(p__17206) {
    var vec__17207 = p__17206;
    var k = cljs.core.nth.call(null, vec__17207, 0, null);
    var v = cljs.core.nth.call(null, vec__17207, 1, null);
    if (typeof k === "string") {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.stringify_keys = function clojure$walk$stringify_keys(m) {
  var f = function(p__17210) {
    var vec__17211 = p__17210;
    var k = cljs.core.nth.call(null, vec__17211, 0, null);
    var v = cljs.core.nth.call(null, vec__17211, 1, null);
    if (k instanceof cljs.core.Keyword) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name.call(null, k), v], null);
    } else {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, v], null);
    }
  };
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.map_QMARK_.call(null, x)) {
      return cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, f, x));
    } else {
      return x;
    }
  }, m);
};
clojure.walk.prewalk_replace = function clojure$walk$prewalk_replace(smap, form) {
  return clojure.walk.prewalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
clojure.walk.postwalk_replace = function clojure$walk$postwalk_replace(smap, form) {
  return clojure.walk.postwalk.call(null, function(x) {
    if (cljs.core.contains_QMARK_.call(null, smap, x)) {
      return smap.call(null, x);
    } else {
      return x;
    }
  }, form);
};
goog.provide("petitparser.core");
goog.require("cljs.core");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.walk");
goog.require("petitparser.parsers");
goog.require("petitparser.results");
goog.require("petitparser.input_stream");
goog.require("petitparser.token");
petitparser.core.MAX_VALUE = Number.MAX_SAFE_INTEGER;
petitparser.core.as_parser = function petitparser$core$as_parser(obj) {
  if (typeof obj === "string") {
    return new petitparser.parsers.LiteralSequenceParser(obj, obj.length);
  } else {
    if (obj instanceof cljs.core.Keyword) {
      return new petitparser.parsers.PlaceholderParser(obj);
    } else {
      if (cljs.core.vector_QMARK_.call(null, obj)) {
        return new petitparser.parsers.SequenceParser(cljs.core.mapv.call(null, petitparser.core.as_parser, obj));
      } else {
        if (!(obj == null) ? false || cljs.core.PROTOCOL_SENTINEL === obj.petitparser$parsers$Parser$ ? true : !obj.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, petitparser.parsers.Parser, obj) : false : cljs.core.native_satisfies_QMARK_.call(null, petitparser.parsers.Parser, obj)) {
          return obj;
        } else {
          return null;
        }
      }
    }
  }
};
petitparser.core.seq = function petitparser$core$seq(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___2959 = arguments.length;
  var i__4737__auto___2960 = 0;
  while (true) {
    if (i__4737__auto___2960 < len__4736__auto___2959) {
      args__4742__auto__.push(arguments[i__4737__auto___2960]);
      var G__2961 = i__4737__auto___2960 + 1;
      i__4737__auto___2960 = G__2961;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return petitparser.core.seq.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
petitparser.core.seq.cljs$core$IFn$_invoke$arity$variadic = function(parsers) {
  return petitparser.core.as_parser.call(null, parsers);
};
petitparser.core.seq.cljs$lang$maxFixedArity = 0;
petitparser.core.seq.cljs$lang$applyTo = function(seq2958) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2958));
};
petitparser.core.or = function petitparser$core$or(var_args) {
  var args__4742__auto__ = [];
  var len__4736__auto___2963 = arguments.length;
  var i__4737__auto___2964 = 0;
  while (true) {
    if (i__4737__auto___2964 < len__4736__auto___2963) {
      args__4742__auto__.push(arguments[i__4737__auto___2964]);
      var G__2965 = i__4737__auto___2964 + 1;
      i__4737__auto___2964 = G__2965;
      continue;
    } else {
    }
    break;
  }
  var argseq__4743__auto__ = 0 < args__4742__auto__.length ? new cljs.core.IndexedSeq(args__4742__auto__.slice(0), 0, null) : null;
  return petitparser.core.or.cljs$core$IFn$_invoke$arity$variadic(argseq__4743__auto__);
};
petitparser.core.or.cljs$core$IFn$_invoke$arity$variadic = function(parsers) {
  return new petitparser.parsers.ChoiceParser(cljs.core.mapv.call(null, petitparser.core.as_parser, parsers));
};
petitparser.core.or.cljs$lang$maxFixedArity = 0;
petitparser.core.or.cljs$lang$applyTo = function(seq2962) {
  var self__4724__auto__ = this;
  return self__4724__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq.call(null, seq2962));
};
petitparser.core.and = function petitparser$core$and(parser) {
  return new petitparser.parsers.AndParser(petitparser.core.as_parser.call(null, parser));
};
petitparser.core.flatten = function petitparser$core$flatten(parser) {
  return new petitparser.parsers.FlattenParser(petitparser.core.as_parser.call(null, parser));
};
petitparser.core.end = function petitparser$core$end(parser) {
  return new petitparser.parsers.EndParser(petitparser.core.as_parser.call(null, parser));
};
petitparser.core.star = function petitparser$core$star(parser) {
  return new petitparser.parsers.RepeatingParser(petitparser.core.as_parser.call(null, parser), 0, petitparser.core.MAX_VALUE);
};
petitparser.core.plus = function petitparser$core$plus(parser) {
  return new petitparser.parsers.RepeatingParser(petitparser.core.as_parser.call(null, parser), 1, petitparser.core.MAX_VALUE);
};
petitparser.core.times = function petitparser$core$times(parser, n) {
  return new petitparser.parsers.RepeatingParser(petitparser.core.as_parser.call(null, parser), n, n);
};
petitparser.core.min = function petitparser$core$min(parser, n) {
  return new petitparser.parsers.RepeatingParser(petitparser.core.as_parser.call(null, parser), n, petitparser.core.MAX_VALUE);
};
petitparser.core.max = function petitparser$core$max(parser, n) {
  return new petitparser.parsers.RepeatingParser(petitparser.core.as_parser.call(null, parser), 0, n);
};
petitparser.core.plus_greedy = function petitparser$core$plus_greedy(parser, limit) {
  return new petitparser.parsers.GreedyRepeatingParser(petitparser.core.as_parser.call(null, parser), 1, petitparser.core.MAX_VALUE, petitparser.core.as_parser.call(null, limit));
};
petitparser.core.star_greedy = function petitparser$core$star_greedy(parser, limit) {
  return new petitparser.parsers.GreedyRepeatingParser(petitparser.core.as_parser.call(null, parser), 0, petitparser.core.MAX_VALUE, petitparser.core.as_parser.call(null, limit));
};
petitparser.core.plus_lazy = function petitparser$core$plus_lazy(parser, limit) {
  return new petitparser.parsers.LazyRepeatingParser(petitparser.core.as_parser.call(null, parser), 1, petitparser.core.MAX_VALUE, petitparser.core.as_parser.call(null, limit));
};
petitparser.core.star_lazy = function petitparser$core$star_lazy(parser, limit) {
  return new petitparser.parsers.LazyRepeatingParser(petitparser.core.as_parser.call(null, parser), 0, petitparser.core.MAX_VALUE, petitparser.core.as_parser.call(null, limit));
};
petitparser.core.min_greedy = function petitparser$core$min_greedy(parser, min, limit) {
  return new petitparser.parsers.GreedyRepeatingParser(petitparser.core.as_parser.call(null, parser), min, petitparser.core.MAX_VALUE, petitparser.core.as_parser.call(null, limit));
};
petitparser.core.max_greedy = function petitparser$core$max_greedy(parser, max, limit) {
  return new petitparser.parsers.GreedyRepeatingParser(petitparser.core.as_parser.call(null, parser), 0, max, petitparser.core.as_parser.call(null, limit));
};
petitparser.core.min_lazy = function petitparser$core$min_lazy(parser, min, limit) {
  return new petitparser.parsers.LazyRepeatingParser(petitparser.core.as_parser.call(null, parser), min, petitparser.core.MAX_VALUE, petitparser.core.as_parser.call(null, limit));
};
petitparser.core.max_lazy = function petitparser$core$max_lazy(parser, max, limit) {
  return new petitparser.parsers.LazyRepeatingParser(petitparser.core.as_parser.call(null, parser), 0, max, petitparser.core.as_parser.call(null, limit));
};
petitparser.core.not = function petitparser$core$not(parser) {
  return new petitparser.parsers.NotParser(petitparser.core.as_parser.call(null, parser));
};
petitparser.core.optional = function petitparser$core$optional(parser) {
  return new petitparser.parsers.OptionalParser(petitparser.core.as_parser.call(null, parser));
};
petitparser.core.token = function petitparser$core$token(parser) {
  return new petitparser.parsers.TokenParser(petitparser.core.as_parser.call(null, parser));
};
petitparser.core.transform = function petitparser$core$transform(parser, function$) {
  return new petitparser.parsers.ActionParser(petitparser.core.as_parser.call(null, parser), function$);
};
petitparser.core.predicate = function petitparser$core$predicate(function$, message) {
  return new petitparser.parsers.PredicateObjectParser(function$, message);
};
petitparser.core.digit_QMARK_ = function petitparser$core$digit_QMARK_(chr) {
  return false;
};
petitparser.core.letter_QMARK_ = function petitparser$core$letter_QMARK_(chr) {
  return false;
};
petitparser.core.letter_or_digit_QMARK_ = function petitparser$core$letter_or_digit_QMARK_(chr) {
  return false;
};
petitparser.core.whitespace_QMARK_ = function petitparser$core$whitespace_QMARK_(chr) {
  return false;
};
petitparser.core.any = petitparser.core.predicate.call(null, cljs.core.constantly.call(null, true), "Input expected");
petitparser.core.digit = petitparser.core.predicate.call(null, petitparser.core.digit_QMARK_, "Digit expected");
petitparser.core.letter = petitparser.core.predicate.call(null, petitparser.core.letter_QMARK_, "Letter expected");
petitparser.core.word = petitparser.core.predicate.call(null, petitparser.core.letter_or_digit_QMARK_, "Letter or digit expected");
petitparser.core.space = petitparser.core.predicate.call(null, petitparser.core.whitespace_QMARK_, "White space expected");
petitparser.core.trim = function petitparser$core$trim(var_args) {
  var G__2967 = arguments.length;
  switch(G__2967) {
    case 1:
      return petitparser.core.trim.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return petitparser.core.trim.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
petitparser.core.trim.cljs$core$IFn$_invoke$arity$1 = function(parser) {
  return petitparser.core.trim.call(null, parser, petitparser.core.space);
};
petitparser.core.trim.cljs$core$IFn$_invoke$arity$2 = function(parser, trimmer) {
  return new petitparser.parsers.TrimmingParser(petitparser.core.as_parser.call(null, parser), petitparser.core.as_parser.call(null, trimmer));
};
petitparser.core.trim.cljs$lang$maxFixedArity = 2;
petitparser.core.predicate_sequence = function petitparser$core$predicate_sequence(function$, message, count) {
  return new petitparser.parsers.PredicateSequenceParser(function$, message, count);
};
petitparser.core.case_insensitive = function petitparser$core$case_insensitive(parser) {
  if (parser instanceof petitparser.parsers.LiteralObjectParser) {
    var literal = parser.literal;
    if (cljs.core._EQ_.call(null, clojure.string.upper_case.call(null, literal), clojure.string.lower_case.call(null, literal))) {
      return parser;
    } else {
      var lower = clojure.string.lower_case.call(null, literal);
      return petitparser.core.predicate.call(null, function(char$) {
        return cljs.core._EQ_.call(null, lower, clojure.string.lower_case.call(null, char$));
      }, ["Literal '", lower, "' expected"].join(""));
    }
  } else {
    if (parser instanceof petitparser.parsers.LiteralSequenceParser) {
      var literal = parser.literal;
      if (cljs.core._EQ_.call(null, clojure.string.upper_case.call(null, literal), clojure.string.lower_case.call(null, literal))) {
        return parser;
      } else {
        var lower = clojure.string.lower_case.call(null, literal);
        return petitparser.core.predicate_sequence.call(null, function(str) {
          return cljs.core._EQ_.call(null, lower, clojure.string.lower_case.call(null, str));
        }, ["Literal '", lower, "' expected"].join(""), lower.length);
      }
    } else {
      if (!(parser == null) ? false || cljs.core.PROTOCOL_SENTINEL === parser.petitparser$parsers$Parser$ ? true : !parser.cljs$lang$protocol_mask$partition$ ? cljs.core.native_satisfies_QMARK_.call(null, petitparser.parsers.Parser, parser) : false : cljs.core.native_satisfies_QMARK_.call(null, petitparser.parsers.Parser, parser)) {
        return clojure.walk.prewalk.call(null, function(each) {
          if (each instanceof petitparser.parsers.LiteralSequenceParser || each instanceof petitparser.parsers.LiteralObjectParser) {
            return petitparser.core.case_insensitive.call(null, each);
          } else {
            return each;
          }
        }, parser);
      } else {
        return petitparser.core.case_insensitive.call(null, petitparser.core.as_parser.call(null, parser));
      }
    }
  }
};
petitparser.core.negate = function petitparser$core$negate(parser) {
  return petitparser.core.transform.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.not.call(null, parser), petitparser.core.any], null), cljs.core.second);
};
petitparser.core.separated_by = function petitparser$core$separated_by(parser, separator) {
  return petitparser.core.transform.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [parser, petitparser.core.star.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator, parser], null))], null), function(p__2970) {
    var vec__2971 = p__2970;
    var f = cljs.core.nth.call(null, vec__2971, 0, null);
    var s = cljs.core.nth.call(null, vec__2971, 1, null);
    var G__2977 = cljs.core.first.call(null, s);
    var vec__2978 = G__2977;
    var p0 = cljs.core.nth.call(null, vec__2978, 0, null);
    var p1 = cljs.core.nth.call(null, vec__2978, 1, null);
    var rest = cljs.core.next.call(null, s);
    var result = cljs.core.transient$.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [f], null));
    var G__2977__$1 = G__2977;
    var rest__$1 = rest;
    var result__$1 = result;
    while (true) {
      var vec__2984 = G__2977__$1;
      var p0__$1 = cljs.core.nth.call(null, vec__2984, 0, null);
      var p1__$1 = cljs.core.nth.call(null, vec__2984, 1, null);
      var rest__$2 = rest__$1;
      var result__$2 = result__$1;
      if (cljs.core.truth_(p0__$1)) {
        var G__2987 = cljs.core.first.call(null, rest__$2);
        var G__2988 = cljs.core.next.call(null, rest__$2);
        var G__2989 = cljs.core.conj_BANG_.call(null, cljs.core.conj_BANG_.call(null, result__$2, p0__$1), p1__$1);
        G__2977__$1 = G__2987;
        rest__$1 = G__2988;
        result__$1 = G__2989;
        continue;
      } else {
        return cljs.core.persistent_BANG_.call(null, result__$2);
      }
      break;
    }
  });
};
petitparser.core.delegate = function petitparser$core$delegate() {
  return new petitparser.parsers.DelegateParser(cljs.core.atom.call(null, null));
};
petitparser.core.resolve_BANG_ = function petitparser$core$resolve_BANG_(delegate, parser) {
  return cljs.core.reset_BANG_.call(null, delegate.parser, parser);
};
petitparser.core.compose = function petitparser$core$compose(var_args) {
  var G__2991 = arguments.length;
  switch(G__2991) {
    case 1:
      return petitparser.core.compose.cljs$core$IFn$_invoke$arity$1(arguments[0]);
      break;
    case 2:
      return petitparser.core.compose.cljs$core$IFn$_invoke$arity$2(arguments[0], arguments[1]);
      break;
    case 3:
      return petitparser.core.compose.cljs$core$IFn$_invoke$arity$3(arguments[0], arguments[1], arguments[2]);
      break;
    default:
      throw new Error(["Invalid arity: ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(""));
  }
};
petitparser.core.compose.cljs$core$IFn$_invoke$arity$1 = function(grammar) {
  return petitparser.core.compose.call(null, grammar, cljs.core.PersistentArrayMap.EMPTY);
};
petitparser.core.compose.cljs$core$IFn$_invoke$arity$2 = function(grammar, transformations) {
  return petitparser.core.compose.call(null, grammar, transformations, new cljs.core.Keyword(null, "start", "start", -355208981));
};
petitparser.core.compose.cljs$core$IFn$_invoke$arity$3 = function(grammar, transformations, start) {
  var parser = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__2992) {
    var vec__2993 = p__2992;
    var key = cljs.core.nth.call(null, vec__2993, 0, null);
    var _ = cljs.core.nth.call(null, vec__2993, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, petitparser.core.delegate.call(null)], null);
  }, grammar));
  var actual_grammar = cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.map.call(null, function(p__2996) {
    var vec__2997 = p__2996;
    var key = cljs.core.nth.call(null, vec__2997, 0, null);
    var val = cljs.core.nth.call(null, vec__2997, 1, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key, clojure.walk.prewalk.call(null, function(each) {
      if (each instanceof petitparser.parsers.PlaceholderParser) {
        var placeholder = each;
        var key__$1 = placeholder.key;
        var or__4126__auto__ = cljs.core.get.call(null, parser, key__$1);
        if (cljs.core.truth_(or__4126__auto__)) {
          return or__4126__auto__;
        } else {
          throw cljs.core.ex_info.call(null, ["Grammar not found for keyword ", cljs.core.str.cljs$core$IFn$_invoke$arity$1(key__$1)].join(""), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "grammar", "grammar", 1881328267), grammar], null));
        }
      } else {
        return each;
      }
    }, petitparser.core.as_parser.call(null, val))], null);
  }, grammar));
  var seq__3000_3005 = cljs.core.seq.call(null, cljs.core.keys.call(null, actual_grammar));
  var chunk__3001_3006 = null;
  var count__3002_3007 = 0;
  var i__3003_3008 = 0;
  while (true) {
    if (i__3003_3008 < count__3002_3007) {
      var key_3009 = cljs.core._nth.call(null, chunk__3001_3006, i__3003_3008);
      petitparser.core.resolve_BANG_.call(null, cljs.core.get.call(null, parser, key_3009), function() {
        var temp__5733__auto__ = cljs.core.get.call(null, transformations, key_3009);
        if (cljs.core.truth_(temp__5733__auto__)) {
          var tran = temp__5733__auto__;
          return petitparser.core.transform.call(null, cljs.core.get.call(null, actual_grammar, key_3009), tran);
        } else {
          return cljs.core.get.call(null, actual_grammar, key_3009);
        }
      }());
      var G__3010 = seq__3000_3005;
      var G__3011 = chunk__3001_3006;
      var G__3012 = count__3002_3007;
      var G__3013 = i__3003_3008 + 1;
      seq__3000_3005 = G__3010;
      chunk__3001_3006 = G__3011;
      count__3002_3007 = G__3012;
      i__3003_3008 = G__3013;
      continue;
    } else {
      var temp__5735__auto___3014 = cljs.core.seq.call(null, seq__3000_3005);
      if (temp__5735__auto___3014) {
        var seq__3000_3015__$1 = temp__5735__auto___3014;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__3000_3015__$1)) {
          var c__4556__auto___3016 = cljs.core.chunk_first.call(null, seq__3000_3015__$1);
          var G__3017 = cljs.core.chunk_rest.call(null, seq__3000_3015__$1);
          var G__3018 = c__4556__auto___3016;
          var G__3019 = cljs.core.count.call(null, c__4556__auto___3016);
          var G__3020 = 0;
          seq__3000_3005 = G__3017;
          chunk__3001_3006 = G__3018;
          count__3002_3007 = G__3019;
          i__3003_3008 = G__3020;
          continue;
        } else {
          var key_3021 = cljs.core.first.call(null, seq__3000_3015__$1);
          petitparser.core.resolve_BANG_.call(null, cljs.core.get.call(null, parser, key_3021), function() {
            var temp__5733__auto__ = cljs.core.get.call(null, transformations, key_3021);
            if (cljs.core.truth_(temp__5733__auto__)) {
              var tran = temp__5733__auto__;
              return petitparser.core.transform.call(null, cljs.core.get.call(null, actual_grammar, key_3021), tran);
            } else {
              return cljs.core.get.call(null, actual_grammar, key_3021);
            }
          }());
          var G__3022 = cljs.core.next.call(null, seq__3000_3015__$1);
          var G__3023 = null;
          var G__3024 = 0;
          var G__3025 = 0;
          seq__3000_3005 = G__3022;
          chunk__3001_3006 = G__3023;
          count__3002_3007 = G__3024;
          i__3003_3008 = G__3025;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new petitparser.parsers.CompositeParser(parser, start.call(null, parser));
};
petitparser.core.compose.cljs$lang$maxFixedArity = 3;
petitparser.core.parse_on = petitparser.parsers.parse_on;
petitparser.core.parse = function petitparser$core$parse(parser, src) {
  return petitparser.results.actual_result.call(null, petitparser.core.parse_on.call(null, parser, petitparser.input_stream.make_stream.call(null, src)));
};
petitparser.core.matches_QMARK_ = function petitparser$core$matches_QMARK_(parser, src) {
  return petitparser.results.success_QMARK_.call(null, petitparser.core.parse_on.call(null, parser, petitparser.input_stream.make_stream.call(null, src)));
};
goog.provide("petitparser.core_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("clojure.string");
goog.require("petitparser.core");
goog.require("petitparser.input_stream");
goog.require("petitparser.token");
goog.require("petitparser.results");
petitparser.core_test.a_test = function petitparser$core_test$a_test() {
  return cljs.test.test_var.call(null, petitparser.core_test.a_test.cljs$lang$var);
};
petitparser.core_test.a_test.cljs$lang$test = function() {
  cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.conj, "FIXME, I fail.");
  try {
    try {
      var values__3876__auto__ = new cljs.core.List(null, 0, new cljs.core.List(null, 0, null, 1, null), 2, null);
      var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
      if (cljs.core.truth_(result__3877__auto__)) {
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 16, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 12, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, 0), 12, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
      } else {
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 16, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 12, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, 0), 12, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, 
        "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
      }
      return result__3877__auto__;
    } catch (e4402) {
      var t__3927__auto__ = e4402;
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 16, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 12, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, 0), 12, t__3927__auto__, null]));
    }
  } finally {
    cljs.test.update_current_env_BANG_.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "testing-contexts", "testing-contexts", -1485646523)], null), cljs.core.rest);
  }
};
petitparser.core_test.a_test.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.a_test;
}, new cljs.core.Symbol("petitparser.core-test", "a-test", "petitparser.core-test/a-test", 875546232, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "a-test", "a-test", -2141883395, null), "test\\petitparser\\core_test.cljc", 16, 1, 10, 10, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.a_test) ? 
petitparser.core_test.a_test.cljs$lang$test : null]));
petitparser.core_test.literal_object_parser = function petitparser$core_test$literal_object_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.literal_object_parser.cljs$lang$var);
};
petitparser.core_test.literal_object_parser.cljs$lang$test = function() {
  var pp = petitparser.core.as_parser.call(null, "a");
  try {
    var values__3876__auto___4406 = new cljs.core.List(null, "a", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "a"), null, 1, null), 2, null);
    var result__3877__auto___4407 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4406);
    if (cljs.core.truth_(result__3877__auto___4407)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 16, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a")), 16, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4406), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 16, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a")), 16, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4406), null, 1, null), 2, null), null]));
    }
  } catch (e4403) {
    var t__3927__auto___4408 = e4403;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 16, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a")), 16, t__3927__auto___4408, 
    null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "b");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 17, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 19, null, null]));
    } catch (e4405) {
      if (e4405 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4405;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Literal '\w' expected/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 17, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 19, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 17, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 19, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4405;
      }
    }
  } catch (e4404) {
    var t__3927__auto__ = e4404;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 17, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 19, t__3927__auto__, null]));
  }
};
petitparser.core_test.literal_object_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.literal_object_parser;
}, new cljs.core.Symbol("petitparser.core-test", "literal-object-parser", "petitparser.core-test/literal-object-parser", 1566665078, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "literal-object-parser", "literal-object-parser", -918233875, null), "test\\petitparser\\core_test.cljc", 31, 
1, 14, 14, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.literal_object_parser) ? petitparser.core_test.literal_object_parser.cljs$lang$test : null]));
petitparser.core_test.literal_sequence_parser = function petitparser$core_test$literal_sequence_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.literal_sequence_parser.cljs$lang$var);
};
petitparser.core_test.literal_sequence_parser.cljs$lang$test = function() {
  var pp = petitparser.core.as_parser.call(null, "abc");
  try {
    var values__3876__auto___4412 = new cljs.core.List(null, "abc", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abc"), null, 1, null), 2, null);
    var result__3877__auto___4413 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4412);
    if (cljs.core.truth_(result__3877__auto___4413)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 23, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 23, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4412), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 23, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 23, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4412), null, 1, null), 2, null), null]));
    }
  } catch (e4409) {
    var t__3927__auto___4414 = e4409;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 23, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 23, 
    t__3927__auto___4414, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "abd");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 24, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abd")), 26, null, null]));
    } catch (e4411) {
      if (e4411 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4411;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Literal '\w+' expected/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 24, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abd")), 26, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 24, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abd")), 26, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4411;
      }
    }
  } catch (e4410) {
    var t__3927__auto__ = e4410;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 24, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abd")), 26, t__3927__auto__, null]));
  }
};
petitparser.core_test.literal_sequence_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.literal_sequence_parser;
}, new cljs.core.Symbol("petitparser.core-test", "literal-sequence-parser", "petitparser.core-test/literal-sequence-parser", -2130660748, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "literal-sequence-parser", "literal-sequence-parser", 1831549423, null), "test\\petitparser\\core_test.cljc", 
33, 1, 21, 21, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.literal_sequence_parser) ? petitparser.core_test.literal_sequence_parser.cljs$lang$test : null]));
petitparser.core_test.sequence_parser = function petitparser$core_test$sequence_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.sequence_parser.cljs$lang$var);
};
petitparser.core_test.sequence_parser.cljs$lang$test = function() {
  var pp = petitparser.core.as_parser.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", "b", "c"], null));
  try {
    var values__3876__auto___4418 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", "b", "c"], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abc"), null, 1, null), 2, null);
    var result__3877__auto___4419 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4418);
    if (cljs.core.truth_(result__3877__auto___4419)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 30, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", "b", "c"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
      478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 30, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4418), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 30, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", "b", "c"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
      478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 30, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4418), null, 1, null), 2, null), null]));
    }
  } catch (e4415) {
    var t__3927__auto___4420 = e4415;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 30, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["a", "b", "c"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
    478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 30, t__3927__auto___4420, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "abd");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 31, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abd")), 33, null, null]));
    } catch (e4417) {
      if (e4417 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4417;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Literal '\w+' expected/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 31, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abd")), 33, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 31, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abd")), 33, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4417;
      }
    }
  } catch (e4416) {
    var t__3927__auto__ = e4416;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 31, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abd")), 33, t__3927__auto__, null]));
  }
};
petitparser.core_test.sequence_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.sequence_parser;
}, new cljs.core.Symbol("petitparser.core-test", "sequence-parser", "petitparser.core-test/sequence-parser", -379394854, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "sequence-parser", "sequence-parser", 1967947359, null), "test\\petitparser\\core_test.cljc", 25, 1, 28, 28, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.sequence_parser) ? petitparser.core_test.sequence_parser.cljs$lang$test : null]));
petitparser.core_test.choice_parser = function petitparser$core_test$choice_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.choice_parser.cljs$lang$var);
};
petitparser.core_test.choice_parser.cljs$lang$test = function() {
  var pp = petitparser.core.or.call(null, "perro", "gato");
  try {
    var values__3876__auto___4424 = new cljs.core.List(null, "perro", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "perro"), null, 1, null), 2, null);
    var result__3877__auto___4425 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4424);
    if (cljs.core.truth_(result__3877__auto___4425)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 38, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "perro", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "perro")), 
      38, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4424), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 38, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "perro", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "perro")), 
      38, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4424), null, 1, null), 2, null), null]));
    }
  } catch (e4421) {
    var t__3927__auto___4426 = e4421;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 38, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "perro", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "perro")), 
    38, t__3927__auto___4426, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "ratón");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 39, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ratón")), 41, null, null]));
    } catch (e4423) {
      if (e4423 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4423;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Literal '\w+' expected/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 39, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ratón")), 41, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 39, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ratón")), 41, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4423;
      }
    }
  } catch (e4422) {
    var t__3927__auto__ = e4422;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 39, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ratón")), 41, t__3927__auto__, null]));
  }
};
petitparser.core_test.choice_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.choice_parser;
}, new cljs.core.Symbol("petitparser.core-test", "choice-parser", "petitparser.core-test/choice-parser", 1436163608, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "choice-parser", "choice-parser", 968659101, null), "test\\petitparser\\core_test.cljc", 23, 1, 35, 35, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.choice_parser) ? petitparser.core_test.choice_parser.cljs$lang$test : null]));
petitparser.core_test.flatten_parser = function petitparser$core_test$flatten_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.flatten_parser.cljs$lang$var);
};
petitparser.core_test.flatten_parser.cljs$lang$test = function() {
  var pp = petitparser.core.flatten.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.or.call(null, "perro", "gato", "león"), petitparser.core.or.call(null, "_", " ", "-", "/"), petitparser.core.or.call(null, "hambriento", "cansado", "feliz")], null));
  try {
    var values__3876__auto__ = new cljs.core.List(null, "gato feliz", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "gato feliz!!!"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 55, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 47, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "gato feliz", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "gato feliz!!!")), 
      47, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 55, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 47, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "gato feliz", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "gato feliz!!!")), 
      47, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4427) {
    var t__3927__auto__ = e4427;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 55, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 47, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "gato feliz", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "gato feliz!!!")), 
    47, t__3927__auto__, null]));
  }
};
petitparser.core_test.flatten_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.flatten_parser;
}, new cljs.core.Symbol("petitparser.core-test", "flatten-parser", "petitparser.core-test/flatten-parser", 794827347, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "flatten-parser", "flatten-parser", -2096451626, null), "test\\petitparser\\core_test.cljc", 24, 1, 43, 43, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.flatten_parser) ? petitparser.core_test.flatten_parser.cljs$lang$test : null]));
petitparser.core_test.and_parser = function petitparser$core_test$and_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.and_parser.cljs$lang$var);
};
petitparser.core_test.and_parser.cljs$lang$test = function() {
  var pp = petitparser.core.as_parser.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", petitparser.core.and.call(null, "bar")], null));
  var stream = petitparser.input_stream.make_stream.call(null, "foobar");
  var result = petitparser.results.actual_result.call(null, petitparser.core.parse_on.call(null, pp, stream));
  try {
    var values__3876__auto___4430 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "bar"], null), new cljs.core.List(null, result, null, 1, null), 2, null);
    var result__3877__auto___4431 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4430);
    if (cljs.core.truth_(result__3877__auto___4431)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 53, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "bar"], null), new cljs.core.Symbol(null, "result", "result", -1239343558, 
      null)), 53, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4430), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 53, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "bar"], null), new cljs.core.Symbol(null, "result", "result", -1239343558, 
      null)), 53, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4430), null, 1, null), 2, null), null]));
    }
  } catch (e4428) {
    var t__3927__auto___4432 = e4428;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 53, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "bar"], null), new cljs.core.Symbol(null, "result", "result", -1239343558, 
    null)), 53, t__3927__auto___4432, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, 3, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 54, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      54, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 54, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      54, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4429) {
    var t__3927__auto__ = e4429;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 54, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    54, t__3927__auto__, null]));
  }
};
petitparser.core_test.and_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.and_parser;
}, new cljs.core.Symbol("petitparser.core-test", "and-parser", "petitparser.core-test/and-parser", -2071406104, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "and-parser", "and-parser", 1756261997, null), "test\\petitparser\\core_test.cljc", 20, 1, 49, 49, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.and_parser) ? 
petitparser.core_test.and_parser.cljs$lang$test : null]));
petitparser.core_test.end_parser = function petitparser$core_test$end_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.end_parser.cljs$lang$var);
};
petitparser.core_test.end_parser.cljs$lang$test = function() {
  var pp = petitparser.core.end.call(null, "foo");
  try {
    var values__3876__auto___4436 = new cljs.core.List(null, "foo", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foo"), null, 1, null), 2, null);
    var result__3877__auto___4437 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4436);
    if (cljs.core.truth_(result__3877__auto___4437)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 58, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo")), 58, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4436), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 58, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo")), 58, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4436), null, 1, null), 2, null), null]));
    }
  } catch (e4433) {
    var t__3927__auto___4438 = e4433;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 58, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo")), 58, 
    t__3927__auto___4438, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "foobar");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 59, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /End of input expected/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foobar")), 61, null, null]));
    } catch (e4435) {
      if (e4435 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4435;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /End of input expected/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 59, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /End of input expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foobar")), 61, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 59, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /End of input expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foobar")), 61, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4435;
      }
    }
  } catch (e4434) {
    var t__3927__auto__ = e4434;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 59, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /End of input expected/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foobar")), 61, t__3927__auto__, null]));
  }
};
petitparser.core_test.end_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.end_parser;
}, new cljs.core.Symbol("petitparser.core-test", "end-parser", "petitparser.core-test/end-parser", -1891972544, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "end-parser", "end-parser", 467687365, null), "test\\petitparser\\core_test.cljc", 20, 1, 56, 56, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.end_parser) ? 
petitparser.core_test.end_parser.cljs$lang$test : null]));
petitparser.core_test.repeating_parser_star = function petitparser$core_test$repeating_parser_star() {
  return cljs.test.test_var.call(null, petitparser.core_test.repeating_parser_star.cljs$lang$var);
};
petitparser.core_test.repeating_parser_star.cljs$lang$test = function() {
  var pp = petitparser.core.star.call(null, "foo");
  try {
    var values__3876__auto___4441 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foofoofoo"), null, 1, null), 2, null);
    var result__3877__auto___4442 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4441);
    if (cljs.core.truth_(result__3877__auto___4442)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 65, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 65, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4441), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 65, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 65, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4441), null, 1, null), 2, null), null]));
    }
  } catch (e4439) {
    var t__3927__auto___4443 = e4439;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 65, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 65, t__3927__auto___4443, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, petitparser.core.parse.call(null, pp, ""), null, 1, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core.empty_QMARK_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 34, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 66, cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "")), 66, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 34, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 66, cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "")), 66, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4440) {
    var t__3927__auto__ = e4440;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 34, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 66, cljs.core.list(new cljs.core.Symbol(null, "empty?", "empty?", 76408555, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "")), 66, t__3927__auto__, 
    null]));
  }
};
petitparser.core_test.repeating_parser_star.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.repeating_parser_star;
}, new cljs.core.Symbol("petitparser.core-test", "repeating-parser-star", "petitparser.core-test/repeating-parser-star", 589331755, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "repeating-parser-star", "repeating-parser-star", -1218592608, null), "test\\petitparser\\core_test.cljc", 
31, 1, 63, 63, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.repeating_parser_star) ? petitparser.core_test.repeating_parser_star.cljs$lang$test : null]));
petitparser.core_test.repeating_parser_plus = function petitparser$core_test$repeating_parser_plus() {
  return cljs.test.test_var.call(null, petitparser.core_test.repeating_parser_plus.cljs$lang$var);
};
petitparser.core_test.repeating_parser_plus.cljs$lang$test = function() {
  var pp = petitparser.core.plus.call(null, "foo");
  try {
    var values__3876__auto___4447 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foofoofoo"), null, 1, null), 2, null);
    var result__3877__auto___4448 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4447);
    if (cljs.core.truth_(result__3877__auto___4448)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 70, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 70, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4447), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 70, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 70, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4447), null, 1, null), 2, null), null]));
    }
  } catch (e4444) {
    var t__3927__auto___4449 = e4444;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 70, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 70, t__3927__auto___4449, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "bar");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 71, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "bar")), 73, null, null]));
    } catch (e4446) {
      if (e4446 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4446;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Literal '\w+' expected/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 71, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "bar")), 73, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 71, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "bar")), 73, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4446;
      }
    }
  } catch (e4445) {
    var t__3927__auto__ = e4445;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 71, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "bar")), 73, t__3927__auto__, null]));
  }
};
petitparser.core_test.repeating_parser_plus.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.repeating_parser_plus;
}, new cljs.core.Symbol("petitparser.core-test", "repeating-parser-plus", "petitparser.core-test/repeating-parser-plus", 1156234930, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "repeating-parser-plus", "repeating-parser-plus", -791207113, null), "test\\petitparser\\core_test.cljc", 31, 
1, 68, 68, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.repeating_parser_plus) ? petitparser.core_test.repeating_parser_plus.cljs$lang$test : null]));
petitparser.core_test.repeating_parser_times = function petitparser$core_test$repeating_parser_times() {
  return cljs.test.test_var.call(null, petitparser.core_test.repeating_parser_times.cljs$lang$var);
};
petitparser.core_test.repeating_parser_times.cljs$lang$test = function() {
  var pp = petitparser.core.times.call(null, "foo", 3);
  try {
    var values__3876__auto___4453 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foofoofoo"), null, 1, null), 2, null);
    var result__3877__auto___4454 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4453);
    if (cljs.core.truth_(result__3877__auto___4454)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 77, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 77, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4453), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 77, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 77, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4453), null, 1, null), 2, null), null]));
    }
  } catch (e4450) {
    var t__3927__auto___4455 = e4450;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 77, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 77, t__3927__auto___4455, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "foofoo");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 78, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 80, null, null]));
    } catch (e4452) {
      if (e4452 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4452;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Literal '\w+' expected/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 78, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 80, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 78, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 80, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4452;
      }
    }
  } catch (e4451) {
    var t__3927__auto__ = e4451;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 78, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 80, t__3927__auto__, null]));
  }
};
petitparser.core_test.repeating_parser_times.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.repeating_parser_times;
}, new cljs.core.Symbol("petitparser.core-test", "repeating-parser-times", "petitparser.core-test/repeating-parser-times", -1304326754, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "repeating-parser-times", "repeating-parser-times", 1315379989, null), "test\\petitparser\\core_test.cljc", 
32, 1, 75, 75, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.repeating_parser_times) ? petitparser.core_test.repeating_parser_times.cljs$lang$test : null]));
petitparser.core_test.repeating_parser_min = function petitparser$core_test$repeating_parser_min() {
  return cljs.test.test_var.call(null, petitparser.core_test.repeating_parser_min.cljs$lang$var);
};
petitparser.core_test.repeating_parser_min.cljs$lang$test = function() {
  var pp = petitparser.core.end.call(null, petitparser.core.min.call(null, "foo", 3));
  try {
    var values__3876__auto___4460 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foofoofoo"), null, 1, null), 2, null);
    var result__3877__auto___4461 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4460);
    if (cljs.core.truth_(result__3877__auto___4461)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 84, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 84, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4460), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 84, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 84, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4460), null, 1, null), 2, null), null]));
    }
  } catch (e4456) {
    var t__3927__auto___4462 = e4456;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 84, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 84, t__3927__auto___4462, null]));
  }
  try {
    var values__3876__auto___4463 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo", "foo"], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foofoofoofoo"), null, 1, null), 2, null);
    var result__3877__auto___4464 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4463);
    if (cljs.core.truth_(result__3877__auto___4464)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 67, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 85, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoofoo")), 85, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4463), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 67, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 85, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoofoo")), 85, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4463), null, 1, null), 2, null), null]));
    }
  } catch (e4457) {
    var t__3927__auto___4465 = e4457;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 67, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 85, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoofoo")), 85, t__3927__auto___4465, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "foofoo");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 86, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 88, null, null]));
    } catch (e4459) {
      if (e4459 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4459;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /Literal '\w+' expected/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 86, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 88, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 86, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 88, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4459;
      }
    }
  } catch (e4458) {
    var t__3927__auto__ = e4458;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 50, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 86, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /Literal '\w+' expected/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 88, t__3927__auto__, null]));
  }
};
petitparser.core_test.repeating_parser_min.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.repeating_parser_min;
}, new cljs.core.Symbol("petitparser.core-test", "repeating-parser-min", "petitparser.core-test/repeating-parser-min", -1307583313, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "repeating-parser-min", "repeating-parser-min", 241443362, null), "test\\petitparser\\core_test.cljc", 30, 
1, 82, 82, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.repeating_parser_min) ? petitparser.core_test.repeating_parser_min.cljs$lang$test : null]));
petitparser.core_test.repeating_parser_max = function petitparser$core_test$repeating_parser_max() {
  return cljs.test.test_var.call(null, petitparser.core_test.repeating_parser_max.cljs$lang$var);
};
petitparser.core_test.repeating_parser_max.cljs$lang$test = function() {
  var pp = petitparser.core.end.call(null, petitparser.core.max.call(null, "foo", 3));
  try {
    var values__3876__auto___4470 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foofoofoo"), null, 1, null), 2, null);
    var result__3877__auto___4471 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4470);
    if (cljs.core.truth_(result__3877__auto___4471)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 92, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 92, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4470), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 92, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 92, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4470), null, 1, null), 2, null), null]));
    }
  } catch (e4466) {
    var t__3927__auto___4472 = e4466;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 92, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoo")), 92, t__3927__auto___4472, null]));
  }
  try {
    var values__3876__auto___4473 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo"], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foofoo"), null, 1, null), 2, null);
    var result__3877__auto___4474 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4473);
    if (cljs.core.truth_(result__3877__auto___4474)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 93, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
      478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 93, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4473), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 93, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
      478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 93, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4473), null, 1, null), 2, null), null]));
    }
  } catch (e4467) {
    var t__3927__auto___4475 = e4467;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 93, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", "foo"], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
    478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoo")), 93, t__3927__auto___4475, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "foofoofoofoo");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 56, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 94, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /End of input expected/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoofoo")), 96, null, null]));
    } catch (e4469) {
      if (e4469 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4469;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /End of input expected/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 56, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 94, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /End of input expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoofoo")), 96, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 56, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 94, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /End of input expected/, 
          cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoofoo")), 96, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4469;
      }
    }
  } catch (e4468) {
    var t__3927__auto__ = e4468;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 56, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 94, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /End of input expected/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foofoofoofoo")), 96, t__3927__auto__, null]));
  }
};
petitparser.core_test.repeating_parser_max.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.repeating_parser_max;
}, new cljs.core.Symbol("petitparser.core-test", "repeating-parser-max", "petitparser.core-test/repeating-parser-max", 1087812720, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "repeating-parser-max", "repeating-parser-max", -726451723, null), "test\\petitparser\\core_test.cljc", 30, 
1, 90, 90, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.repeating_parser_max) ? petitparser.core_test.repeating_parser_max.cljs$lang$test : null]));
petitparser.core_test.not_parser = function petitparser$core_test$not_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.not_parser.cljs$lang$var);
};
petitparser.core_test.not_parser.cljs$lang$test = function() {
  var pp = petitparser.core.not.call(null, "a");
  try {
    var values__3876__auto___4479 = new cljs.core.List(null, petitparser.core.parse.call(null, pp, "b"), null, 1, null);
    var result__3877__auto___4480 = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__3876__auto___4479);
    if (cljs.core.truth_(result__3877__auto___4480)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 100, cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 100, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__3876__auto___4479), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 100, cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 100, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__3876__auto___4479), null, 1, null), 2, null), null]));
    }
  } catch (e4476) {
    var t__3927__auto___4481 = e4476;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 100, cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 100, t__3927__auto___4481, 
    null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "a");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 101, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /.+/, cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a")), 103, null, null]));
    } catch (e4478) {
      if (e4478 instanceof clojure.lang.ExceptionInfo) {
        var e__3920__auto__ = e4478;
        var m__3921__auto__ = e__3920__auto__.message;
        if (cljs.core.truth_(cljs.core.re_find.call(null, /.+/, m__3921__auto__))) {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 101, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /.+/, cljs.core.list(new cljs.core.Symbol("pp", 
          "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a")), 103, e__3920__auto__, null]));
        } else {
          cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
          new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 101, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /.+/, cljs.core.list(new cljs.core.Symbol("pp", 
          "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a")), 103, e__3920__auto__, null]));
        }
        return e__3920__auto__;
      } else {
        throw e4478;
      }
    }
  } catch (e4477) {
    var t__3927__auto__ = e4477;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 101, cljs.core.list(new cljs.core.Symbol(null, "thrown-with-msg?", "thrown-with-msg?", 1169763203, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), /.+/, cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a")), 103, t__3927__auto__, null]));
  }
};
petitparser.core_test.not_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.not_parser;
}, new cljs.core.Symbol("petitparser.core-test", "not-parser", "petitparser.core-test/not-parser", -670597217, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), 
new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "not-parser", "not-parser", 1944241428, null), "test\\petitparser\\core_test.cljc", 20, 1, 98, 98, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.not_parser) ? 
petitparser.core_test.not_parser.cljs$lang$test : null]));
petitparser.core_test.not_parser_does_not_consume_the_stream = function petitparser$core_test$not_parser_does_not_consume_the_stream() {
  return cljs.test.test_var.call(null, petitparser.core_test.not_parser_does_not_consume_the_stream.cljs$lang$var);
};
petitparser.core_test.not_parser_does_not_consume_the_stream.cljs$lang$test = function() {
  var stream = petitparser.input_stream.make_stream.call(null, "b");
  var pp = petitparser.core.not.call(null, "a");
  var result = petitparser.core.parse_on.call(null, pp, stream);
  try {
    var values__3876__auto__ = new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core.zero_QMARK_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 109, cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      109, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 109, cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      109, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4482) {
    var t__3927__auto__ = e4482;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 109, cljs.core.list(new cljs.core.Symbol(null, "zero?", "zero?", 325758897, null), cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    109, t__3927__auto__, null]));
  }
};
petitparser.core_test.not_parser_does_not_consume_the_stream.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.not_parser_does_not_consume_the_stream;
}, new cljs.core.Symbol("petitparser.core-test", "not-parser-does-not-consume-the-stream", "petitparser.core-test/not-parser-does-not-consume-the-stream", -851886611, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "not-parser-does-not-consume-the-stream", "not-parser-does-not-consume-the-stream", 
2032126570, null), "test\\petitparser\\core_test.cljc", 48, 1, 105, 105, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.not_parser_does_not_consume_the_stream) ? petitparser.core_test.not_parser_does_not_consume_the_stream.cljs$lang$test : null]));
petitparser.core_test.optional_parser = function petitparser$core_test$optional_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.optional_parser.cljs$lang$var);
};
petitparser.core_test.optional_parser.cljs$lang$test = function() {
  var pp = petitparser.core.optional.call(null, "foo");
  try {
    var values__3876__auto___4485 = new cljs.core.List(null, "foo", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foo"), null, 1, null), 2, null);
    var result__3877__auto___4486 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4485);
    if (cljs.core.truth_(result__3877__auto___4486)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 113, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo")), 113, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4485), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 113, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo")), 113, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4485), null, 1, null), 2, null), null]));
    }
  } catch (e4483) {
    var t__3927__auto___4487 = e4483;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 113, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo")), 113, 
    t__3927__auto___4487, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, petitparser.core.parse.call(null, pp, "bar"), null, 1, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core.nil_QMARK_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 114, cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "bar")), 114, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 114, cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "bar")), 114, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4484) {
    var t__3927__auto__ = e4484;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 114, cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "bar")), 114, t__3927__auto__, 
    null]));
  }
};
petitparser.core_test.optional_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.optional_parser;
}, new cljs.core.Symbol("petitparser.core-test", "optional-parser", "petitparser.core-test/optional-parser", -1865680652, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "optional-parser", "optional-parser", 1687194995, null), "test\\petitparser\\core_test.cljc", 25, 1, 111, 111, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.optional_parser) ? petitparser.core_test.optional_parser.cljs$lang$test : null]));
petitparser.core_test.token_parser = function petitparser$core_test$token_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.token_parser.cljs$lang$var);
};
petitparser.core_test.token_parser.cljs$lang$test = function() {
  var pp = petitparser.core.token.call(null, "foo");
  var token = petitparser.core.parse.call(null, pp, "foo");
  try {
    var values__3876__auto___4492 = new cljs.core.List(null, 0, new cljs.core.List(null, petitparser.token.start.call(null, token), null, 1, null), 2, null);
    var result__3877__auto___4493 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4492);
    if (cljs.core.truth_(result__3877__auto___4493)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 119, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("t", "start", "t/start", 1285322662, null), new cljs.core.Symbol(null, "token", "token", 429068312, null))), 119, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4492), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 119, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("t", "start", "t/start", 1285322662, null), new cljs.core.Symbol(null, "token", "token", 429068312, null))), 119, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4492), null, 1, null), 2, null), null]));
    }
  } catch (e4488) {
    var t__3927__auto___4494 = e4488;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 119, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("t", "start", "t/start", 1285322662, null), new cljs.core.Symbol(null, "token", "token", 429068312, null))), 119, t__3927__auto___4494, 
    null]));
  }
  try {
    var values__3876__auto___4495 = new cljs.core.List(null, 3, new cljs.core.List(null, petitparser.token.count.call(null, token), null, 1, null), 2, null);
    var result__3877__auto___4496 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4495);
    if (cljs.core.truth_(result__3877__auto___4496)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 120, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("t", "count", "t/count", -514511864, null), new cljs.core.Symbol(null, "token", "token", 429068312, null))), 120, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4495), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 120, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("t", "count", "t/count", -514511864, null), new cljs.core.Symbol(null, "token", "token", 429068312, null))), 120, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4495), null, 1, null), 2, null), null]));
    }
  } catch (e4489) {
    var t__3927__auto___4497 = e4489;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 120, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("t", "count", "t/count", -514511864, null), new cljs.core.Symbol(null, "token", "token", 429068312, null))), 120, t__3927__auto___4497, 
    null]));
  }
  try {
    var values__3876__auto___4498 = new cljs.core.List(null, "foo", new cljs.core.List(null, petitparser.token.parsed_value.call(null, token), null, 1, null), 2, null);
    var result__3877__auto___4499 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4498);
    if (cljs.core.truth_(result__3877__auto___4499)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 121, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("t", "parsed-value", "t/parsed-value", -687504465, null), new cljs.core.Symbol(null, "token", "token", 429068312, 
      null))), 121, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4498), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 121, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("t", "parsed-value", "t/parsed-value", -687504465, null), new cljs.core.Symbol(null, "token", "token", 429068312, 
      null))), 121, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4498), null, 1, null), 2, null), null]));
    }
  } catch (e4490) {
    var t__3927__auto___4500 = e4490;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 121, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("t", "parsed-value", "t/parsed-value", -687504465, null), new cljs.core.Symbol(null, "token", "token", 429068312, 
    null))), 121, t__3927__auto___4500, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, "foo", new cljs.core.List(null, petitparser.token.input_value.call(null, token), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 122, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("t", "input-value", "t/input-value", -79422958, null), new cljs.core.Symbol(null, "token", "token", 429068312, null))), 
      122, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 122, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("t", "input-value", "t/input-value", -79422958, null), new cljs.core.Symbol(null, "token", "token", 429068312, null))), 
      122, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4491) {
    var t__3927__auto__ = e4491;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 122, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo", cljs.core.list(new cljs.core.Symbol("t", "input-value", "t/input-value", -79422958, null), new cljs.core.Symbol(null, "token", "token", 429068312, null))), 
    122, t__3927__auto__, null]));
  }
};
petitparser.core_test.token_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.token_parser;
}, new cljs.core.Symbol("petitparser.core-test", "token-parser", "petitparser.core-test/token-parser", -64362502, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "token-parser", "token-parser", -1878222223, null), "test\\petitparser\\core_test.cljc", 22, 1, 116, 116, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.token_parser) ? petitparser.core_test.token_parser.cljs$lang$test : null]));
petitparser.core_test.action_parser_with_one_arg = function petitparser$core_test$action_parser_with_one_arg() {
  return cljs.test.test_var.call(null, petitparser.core_test.action_parser_with_one_arg.cljs$lang$var);
};
petitparser.core_test.action_parser_with_one_arg.cljs$lang$test = function() {
  var pp = petitparser.core.transform.call(null, petitparser.core.token.call(null, "foo"), function(token) {
    return clojure.string.upper_case.call(null, petitparser.token.input_value.call(null, token));
  });
  try {
    var values__3876__auto__ = new cljs.core.List(null, "FOO", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foo"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 127, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "FOO", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo")), 127, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 127, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "FOO", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo")), 127, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4501) {
    var t__3927__auto__ = e4501;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 127, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "FOO", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo")), 127, 
    t__3927__auto__, null]));
  }
};
petitparser.core_test.action_parser_with_one_arg.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.action_parser_with_one_arg;
}, new cljs.core.Symbol("petitparser.core-test", "action-parser-with-one-arg", "petitparser.core-test/action-parser-with-one-arg", 1317054198, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "action-parser-with-one-arg", "action-parser-with-one-arg", -756599941, null), "test\\petitparser\\core_test.cljc", 
36, 1, 124, 124, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.action_parser_with_one_arg) ? petitparser.core_test.action_parser_with_one_arg.cljs$lang$test : null]));
petitparser.core_test.action_parser_with_n_args = function petitparser$core_test$action_parser_with_n_args() {
  return cljs.test.test_var.call(null, petitparser.core_test.action_parser_with_n_args.cljs$lang$var);
};
petitparser.core_test.action_parser_with_n_args.cljs$lang$test = function() {
  var pp = petitparser.core.transform.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.token.call(null, "foo"), petitparser.core.token.call(null, "bar"), petitparser.core.token.call(null, "baz")], null), function(p__4502) {
    var vec__4503 = p__4502;
    var t1 = cljs.core.nth.call(null, vec__4503, 0, null);
    var t2 = cljs.core.nth.call(null, vec__4503, 1, null);
    var t3 = cljs.core.nth.call(null, vec__4503, 2, null);
    return petitparser.core_test.format.call(null, "%s -\x3e %s -\x3e %s", petitparser.token.input_value.call(null, t1), petitparser.token.input_value.call(null, t2), petitparser.token.input_value.call(null, t3));
  });
  try {
    var values__3876__auto__ = new cljs.core.List(null, "foo -\x3e bar -\x3e baz", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foobarbaz"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 138, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo -\x3e bar -\x3e baz", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, 
      null), "foobarbaz")), 138, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 138, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo -\x3e bar -\x3e baz", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, 
      null), "foobarbaz")), 138, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4506) {
    var t__3927__auto__ = e4506;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 58, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 138, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo -\x3e bar -\x3e baz", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, 
    null), "foobarbaz")), 138, t__3927__auto__, null]));
  }
};
petitparser.core_test.action_parser_with_n_args.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.action_parser_with_n_args;
}, new cljs.core.Symbol("petitparser.core-test", "action-parser-with-n-args", "petitparser.core-test/action-parser-with-n-args", 1822513950, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "action-parser-with-n-args", "action-parser-with-n-args", -1735742055, null), "test\\petitparser\\core_test.cljc", 
35, 1, 129, 129, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.action_parser_with_n_args) ? petitparser.core_test.action_parser_with_n_args.cljs$lang$test : null]));
petitparser.core_test.predicate_parser = function petitparser$core_test$predicate_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.predicate_parser.cljs$lang$var);
};
petitparser.core_test.predicate_parser.cljs$lang$test = function() {
  var pp = petitparser.core.predicate.call(null, function(chr) {
    return !(clojure.string.index_of.call(null, "aeiouAEIOU", chr) == null);
  }, "Vowel expected");
  try {
    var values__3876__auto___4509 = new cljs.core.List(null, pp, new cljs.core.List(null, "a", null, 1, null), 2, null);
    var result__3877__auto___4510 = cljs.core.apply.call(null, petitparser.core.matches_QMARK_, values__3876__auto___4509);
    if (cljs.core.truth_(result__3877__auto___4510)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 29, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 143, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a"), 143, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 
      231236662, null), values__3876__auto___4509), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 29, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 143, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a"), 143, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), 
      new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), values__3876__auto___4509), null, 1, null), 2, null), null]));
    }
  } catch (e4507) {
    var t__3927__auto___4511 = e4507;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 29, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 143, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a"), 143, t__3927__auto___4511, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, petitparser.core.matches_QMARK_.call(null, pp, "b"), null, 1, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core.not, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 144, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 144, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 144, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 144, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4508) {
    var t__3927__auto__ = e4508;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 144, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "b")), 144, t__3927__auto__, 
    null]));
  }
};
petitparser.core_test.predicate_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.predicate_parser;
}, new cljs.core.Symbol("petitparser.core-test", "predicate-parser", "petitparser.core-test/predicate-parser", -1989967941, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "predicate-parser", "predicate-parser", 487191088, null), "test\\petitparser\\core_test.cljc", 26, 1, 140, 140, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.predicate_parser) ? petitparser.core_test.predicate_parser.cljs$lang$test : null]));
petitparser.core_test.case_insensitive = function petitparser$core_test$case_insensitive() {
  return cljs.test.test_var.call(null, petitparser.core_test.case_insensitive.cljs$lang$var);
};
petitparser.core_test.case_insensitive.cljs$lang$test = function() {
  var pp_4518 = petitparser.core.flatten.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.case_insensitive.call(null, "f"), petitparser.core.case_insensitive.call(null, "o"), petitparser.core.case_insensitive.call(null, "o"), petitparser.core.case_insensitive.call(null, "!")], null));
  try {
    var values__3876__auto___4519 = new cljs.core.List(null, "Foo!", new cljs.core.List(null, petitparser.core.parse.call(null, pp_4518, "Foo!"), null, 1, null), 2, null);
    var result__3877__auto___4520 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4519);
    if (cljs.core.truth_(result__3877__auto___4520)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 151, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Foo!")), 151, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4519), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 151, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Foo!")), 151, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4519), null, 1, null), 2, null), null]));
    }
  } catch (e4512) {
    var t__3927__auto___4521 = e4512;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 151, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Foo!")), 151, 
    t__3927__auto___4521, null]));
  }
  try {
    var values__3876__auto___4522 = new cljs.core.List(null, "FOO!", new cljs.core.List(null, petitparser.core.parse.call(null, pp_4518, "FOO!"), null, 1, null), 2, null);
    var result__3877__auto___4523 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4522);
    if (cljs.core.truth_(result__3877__auto___4523)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 152, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "FOO!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "FOO!")), 152, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4522), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 152, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "FOO!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "FOO!")), 152, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4522), null, 1, null), 2, null), null]));
    }
  } catch (e4513) {
    var t__3927__auto___4524 = e4513;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 152, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "FOO!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "FOO!")), 152, 
    t__3927__auto___4524, null]));
  }
  try {
    var values__3876__auto___4525 = new cljs.core.List(null, "foo!", new cljs.core.List(null, petitparser.core.parse.call(null, pp_4518, "foo!"), null, 1, null), 2, null);
    var result__3877__auto___4526 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4525);
    if (cljs.core.truth_(result__3877__auto___4526)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 153, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo!")), 153, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4525), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 153, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo!")), 153, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4525), null, 1, null), 2, null), null]));
    }
  } catch (e4514) {
    var t__3927__auto___4527 = e4514;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 153, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo!")), 153, 
    t__3927__auto___4527, null]));
  }
  var pp = petitparser.core.case_insensitive.call(null, "foo!");
  try {
    var values__3876__auto___4528 = new cljs.core.List(null, "Foo!", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "Foo!"), null, 1, null), 2, null);
    var result__3877__auto___4529 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4528);
    if (cljs.core.truth_(result__3877__auto___4529)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 155, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Foo!")), 155, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4528), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 155, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Foo!")), 155, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4528), null, 1, null), 2, null), null]));
    }
  } catch (e4515) {
    var t__3927__auto___4530 = e4515;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 155, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "Foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Foo!")), 155, 
    t__3927__auto___4530, null]));
  }
  try {
    var values__3876__auto___4531 = new cljs.core.List(null, "FOO!", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "FOO!"), null, 1, null), 2, null);
    var result__3877__auto___4532 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4531);
    if (cljs.core.truth_(result__3877__auto___4532)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 156, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "FOO!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "FOO!")), 156, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4531), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 156, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "FOO!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "FOO!")), 156, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4531), null, 1, null), 2, null), null]));
    }
  } catch (e4516) {
    var t__3927__auto___4533 = e4516;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 156, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "FOO!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "FOO!")), 156, 
    t__3927__auto___4533, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, "foo!", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "foo!"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 157, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo!")), 157, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 157, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo!")), 157, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4517) {
    var t__3927__auto__ = e4517;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 157, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "foo!", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "foo!")), 157, 
    t__3927__auto__, null]));
  }
};
petitparser.core_test.case_insensitive.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.case_insensitive;
}, new cljs.core.Symbol("petitparser.core-test", "case-insensitive", "petitparser.core-test/case-insensitive", -159494725, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "case-insensitive", "case-insensitive", 1247397636, null), "test\\petitparser\\core_test.cljc", 26, 1, 146, 146, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.case_insensitive) ? petitparser.core_test.case_insensitive.cljs$lang$test : null]));
petitparser.core_test.case_insensitive_applied_at_the_top = function petitparser$core_test$case_insensitive_applied_at_the_top() {
  return cljs.test.test_var.call(null, petitparser.core_test.case_insensitive_applied_at_the_top.cljs$lang$var);
};
petitparser.core_test.case_insensitive_applied_at_the_top.cljs$lang$test = function() {
  var pp = petitparser.core.case_insensitive.call(null, petitparser.core.transform.call(null, new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.or.call(null, "foo", "bar"), petitparser.core.plus.call(null, petitparser.core.space), petitparser.core.flatten.call(null, petitparser.core.plus.call(null, petitparser.core.digit)), petitparser.core.optional.call(null, "!")], null), function(p__4534) {
    var vec__4535 = p__4534;
    var word = cljs.core.nth.call(null, vec__4535, 0, null);
    var _ = cljs.core.nth.call(null, vec__4535, 1, null);
    var num = cljs.core.nth.call(null, vec__4535, 2, null);
    var ___$1 = cljs.core.nth.call(null, vec__4535, 3, null);
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [clojure.string.lower_case.call(null, word), petitparser.core_test.read_string.call(null, num)], null);
  }));
  try {
    var values__3876__auto___4542 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", 4], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "Foo 4!"), null, 1, null), 2, null);
    var result__3877__auto___4543 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4542);
    if (cljs.core.truth_(result__3877__auto___4543)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 167, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", 4], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
      478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Foo 4!")), 167, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4542), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 167, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", 4], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
      478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Foo 4!")), 167, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4542), null, 1, null), 2, null), null]));
    }
  } catch (e4538) {
    var t__3927__auto___4544 = e4538;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 45, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 167, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["foo", 4], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
    478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Foo 4!")), 167, t__3927__auto___4544, null]));
  }
  try {
    var values__3876__auto___4545 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", 432], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "BAR      432"), null, 1, null), 2, null);
    var result__3877__auto___4546 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4545);
    if (cljs.core.truth_(result__3877__auto___4546)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 53, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 168, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", 432], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
      478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "BAR      432")), 168, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4545), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 53, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 168, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", 432], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
      478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "BAR      432")), 168, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4545), null, 1, null), 2, null), null]));
    }
  } catch (e4539) {
    var t__3927__auto___4547 = e4539;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 53, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 168, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["bar", 432], null), cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 
    478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "BAR      432")), 168, t__3927__auto___4547, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "Baz 56");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 169, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Baz 56")), 170, null, null]));
    } catch (e4541) {
      if (e4541 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto__ = e4541;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 169, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Baz 56")), 170, e__3914__auto__, null]));
        return e__3914__auto__;
      } else {
        throw e4541;
      }
    }
  } catch (e4540) {
    var t__3927__auto__ = e4540;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 169, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "Baz 56")), 170, t__3927__auto__, null]));
  }
};
petitparser.core_test.case_insensitive_applied_at_the_top.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.case_insensitive_applied_at_the_top;
}, new cljs.core.Symbol("petitparser.core-test", "case-insensitive-applied-at-the-top", "petitparser.core-test/case-insensitive-applied-at-the-top", 956017884, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "case-insensitive-applied-at-the-top", "case-insensitive-applied-at-the-top", -1801050537, 
null), "test\\petitparser\\core_test.cljc", 45, 1, 159, 159, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.case_insensitive_applied_at_the_top) ? petitparser.core_test.case_insensitive_applied_at_the_top.cljs$lang$test : null]));
petitparser.core_test.greedy_repeating_parser_plus = function petitparser$core_test$greedy_repeating_parser_plus() {
  return cljs.test.test_var.call(null, petitparser.core_test.greedy_repeating_parser_plus.cljs$lang$var);
};
petitparser.core_test.greedy_repeating_parser_plus.cljs$lang$test = function() {
  var pp = petitparser.core.transform.call(null, petitparser.core.end.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.flatten.call(null, petitparser.core.plus_greedy.call(null, petitparser.core.word, petitparser.core.or.call(null, petitparser.core.case_insensitive.call(null, "upper"), petitparser.core.case_insensitive.call(null, "lower")))), petitparser.core.flatten.call(null, petitparser.core.or.call(null, petitparser.core.case_insensitive.call(null, 
  "upper"), petitparser.core.case_insensitive.call(null, "lower")))], null)), function(p__4548) {
    var vec__4549 = p__4548;
    var word = cljs.core.nth.call(null, vec__4549, 0, null);
    var case_STAR_ = cljs.core.nth.call(null, vec__4549, 1, null);
    var pred__4552 = cljs.core._EQ_;
    var expr__4553 = clojure.string.lower_case.call(null, case_STAR_);
    if (cljs.core.truth_(pred__4552.call(null, "lower", expr__4553))) {
      return clojure.string.lower_case.call(null, word);
    } else {
      if (cljs.core.truth_(pred__4552.call(null, "upper", expr__4553))) {
        return clojure.string.upper_case.call(null, word);
      } else {
        return "WAT";
      }
    }
  });
  try {
    var values__3876__auto___4559 = new cljs.core.List(null, "abcupperlowerupper", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcupperLowerUPPERlower"), null, 1, null), 2, null);
    var result__3877__auto___4560 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4559);
    if (cljs.core.truth_(result__3877__auto___4560)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 73, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 183, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcupperlowerupper", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "abcupperLowerUPPERlower")), 183, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4559), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 73, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 183, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcupperlowerupper", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "abcupperLowerUPPERlower")), 183, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4559), null, 1, null), 2, null), null]));
    }
  } catch (e4555) {
    var t__3927__auto___4561 = e4555;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 73, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 183, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcupperlowerupper", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "abcupperLowerUPPERlower")), 183, t__3927__auto___4561, null]));
  }
  try {
    var values__3876__auto___4562 = new cljs.core.List(null, "ABC", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcupper"), null, 1, null), 2, null);
    var result__3877__auto___4563 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4562);
    if (cljs.core.truth_(result__3877__auto___4563)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 184, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
      184, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4562), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 184, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
      184, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4562), null, 1, null), 2, null), null]));
    }
  } catch (e4556) {
    var t__3927__auto___4564 = e4556;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 184, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
    184, t__3927__auto___4564, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "upper");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 185, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 186, null, null]));
    } catch (e4558) {
      if (e4558 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto__ = e4558;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 185, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 186, e__3914__auto__, null]));
        return e__3914__auto__;
      } else {
        throw e4558;
      }
    }
  } catch (e4557) {
    var t__3927__auto__ = e4557;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 185, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 186, t__3927__auto__, null]));
  }
};
petitparser.core_test.greedy_repeating_parser_plus.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.greedy_repeating_parser_plus;
}, new cljs.core.Symbol("petitparser.core-test", "greedy-repeating-parser-plus", "petitparser.core-test/greedy-repeating-parser-plus", 350057031, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "greedy-repeating-parser-plus", "greedy-repeating-parser-plus", 2029060032, null), "test\\petitparser\\core_test.cljc", 
38, 1, 172, 172, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.greedy_repeating_parser_plus) ? petitparser.core_test.greedy_repeating_parser_plus.cljs$lang$test : null]));
petitparser.core_test.greedy_repeating_parser_star = function petitparser$core_test$greedy_repeating_parser_star() {
  return cljs.test.test_var.call(null, petitparser.core_test.greedy_repeating_parser_star.cljs$lang$var);
};
petitparser.core_test.greedy_repeating_parser_star.cljs$lang$test = function() {
  var pp = petitparser.core.transform.call(null, petitparser.core.end.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.flatten.call(null, petitparser.core.star_greedy.call(null, petitparser.core.word, petitparser.core.or.call(null, petitparser.core.case_insensitive.call(null, "upper"), petitparser.core.case_insensitive.call(null, "lower")))), petitparser.core.flatten.call(null, petitparser.core.or.call(null, petitparser.core.case_insensitive.call(null, 
  "upper"), petitparser.core.case_insensitive.call(null, "lower")))], null)), function(p__4565) {
    var vec__4566 = p__4565;
    var word = cljs.core.nth.call(null, vec__4566, 0, null);
    var case_STAR_ = cljs.core.nth.call(null, vec__4566, 1, null);
    var pred__4569 = cljs.core._EQ_;
    var expr__4570 = clojure.string.lower_case.call(null, case_STAR_);
    if (cljs.core.truth_(pred__4569.call(null, "lower", expr__4570))) {
      return clojure.string.lower_case.call(null, word);
    } else {
      if (cljs.core.truth_(pred__4569.call(null, "upper", expr__4570))) {
        return clojure.string.upper_case.call(null, word);
      } else {
        return "WAT";
      }
    }
  });
  try {
    var values__3876__auto___4575 = new cljs.core.List(null, "abcupperlowerupper", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcupperLowerUPPERlower"), null, 1, null), 2, null);
    var result__3877__auto___4576 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4575);
    if (cljs.core.truth_(result__3877__auto___4576)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 73, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 199, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcupperlowerupper", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "abcupperLowerUPPERlower")), 199, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4575), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 73, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 199, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcupperlowerupper", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "abcupperLowerUPPERlower")), 199, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4575), null, 1, null), 2, null), null]));
    }
  } catch (e4572) {
    var t__3927__auto___4577 = e4572;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 73, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 199, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcupperlowerupper", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "abcupperLowerUPPERlower")), 199, t__3927__auto___4577, null]));
  }
  try {
    var values__3876__auto___4578 = new cljs.core.List(null, "ABC", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcupper"), null, 1, null), 2, null);
    var result__3877__auto___4579 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4578);
    if (cljs.core.truth_(result__3877__auto___4579)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 200, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
      200, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4578), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 200, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
      200, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4578), null, 1, null), 2, null), null]));
    }
  } catch (e4573) {
    var t__3927__auto___4580 = e4573;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 200, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
    200, t__3927__auto___4580, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, "", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "upper"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 201, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 201, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 201, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 201, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4574) {
    var t__3927__auto__ = e4574;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 201, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 201, 
    t__3927__auto__, null]));
  }
};
petitparser.core_test.greedy_repeating_parser_star.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.greedy_repeating_parser_star;
}, new cljs.core.Symbol("petitparser.core-test", "greedy-repeating-parser-star", "petitparser.core-test/greedy-repeating-parser-star", -1123449075, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "greedy-repeating-parser-star", "greedy-repeating-parser-star", 685185168, null), "test\\petitparser\\core_test.cljc", 
38, 1, 188, 188, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.greedy_repeating_parser_star) ? petitparser.core_test.greedy_repeating_parser_star.cljs$lang$test : null]));
petitparser.core_test.lazy_repeating_parser_plus = function petitparser$core_test$lazy_repeating_parser_plus() {
  return cljs.test.test_var.call(null, petitparser.core_test.lazy_repeating_parser_plus.cljs$lang$var);
};
petitparser.core_test.lazy_repeating_parser_plus.cljs$lang$test = function() {
  var pp = petitparser.core.transform.call(null, petitparser.core.end.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.flatten.call(null, petitparser.core.plus_lazy.call(null, petitparser.core.any, petitparser.core.or.call(null, petitparser.core.case_insensitive.call(null, "upper"), petitparser.core.case_insensitive.call(null, "lower")))), petitparser.core.flatten.call(null, petitparser.core.or.call(null, petitparser.core.case_insensitive.call(null, 
  "upper"), petitparser.core.case_insensitive.call(null, "lower")))], null)), function(p__4581) {
    var vec__4582 = p__4581;
    var word = cljs.core.nth.call(null, vec__4582, 0, null);
    var case_STAR_ = cljs.core.nth.call(null, vec__4582, 1, null);
    var pred__4585 = cljs.core._EQ_;
    var expr__4586 = clojure.string.lower_case.call(null, case_STAR_);
    if (cljs.core.truth_(pred__4585.call(null, "lower", expr__4586))) {
      return clojure.string.lower_case.call(null, word);
    } else {
      if (cljs.core.truth_(pred__4585.call(null, "upper", expr__4586))) {
        return clojure.string.upper_case.call(null, word);
      } else {
        return "WAT";
      }
    }
  });
  try {
    var values__3876__auto___4594 = new cljs.core.List(null, " abc! ", new cljs.core.List(null, petitparser.core.parse.call(null, pp, " abc! LOWER"), null, 1, null), 2, null);
    var result__3877__auto___4595 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4594);
    if (cljs.core.truth_(result__3877__auto___4595)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 214, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), " abc! ", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " abc! LOWER")), 
      214, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4594), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 214, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), " abc! ", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " abc! LOWER")), 
      214, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4594), null, 1, null), 2, null), null]));
    }
  } catch (e4588) {
    var t__3927__auto___4596 = e4588;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 214, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), " abc! ", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " abc! LOWER")), 
    214, t__3927__auto___4596, null]));
  }
  try {
    var values__3876__auto___4597 = new cljs.core.List(null, "ABC", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcupper"), null, 1, null), 2, null);
    var result__3877__auto___4598 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4597);
    if (cljs.core.truth_(result__3877__auto___4598)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 215, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
      215, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4597), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 215, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
      215, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4597), null, 1, null), 2, null), null]));
    }
  } catch (e4589) {
    var t__3927__auto___4599 = e4589;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 215, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
    215, t__3927__auto___4599, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "upper");
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 216, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 217, null, null]));
    } catch (e4591) {
      if (e4591 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto___4600 = e4591;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 216, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 217, e__3914__auto___4600, null]));
      } else {
        throw e4591;
      }
    }
  } catch (e4590) {
    var t__3927__auto___4601 = e4590;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 216, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 217, t__3927__auto___4601, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "abcupperLOWER");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 48, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 218, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupperLOWER")), 219, null, null]));
    } catch (e4593) {
      if (e4593 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto__ = e4593;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 48, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 218, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupperLOWER")), 219, e__3914__auto__, null]));
        return e__3914__auto__;
      } else {
        throw e4593;
      }
    }
  } catch (e4592) {
    var t__3927__auto__ = e4592;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 48, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 218, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupperLOWER")), 219, t__3927__auto__, null]));
  }
};
petitparser.core_test.lazy_repeating_parser_plus.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.lazy_repeating_parser_plus;
}, new cljs.core.Symbol("petitparser.core-test", "lazy-repeating-parser-plus", "petitparser.core-test/lazy-repeating-parser-plus", 848228258, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "lazy-repeating-parser-plus", "lazy-repeating-parser-plus", -647923161, null), "test\\petitparser\\core_test.cljc", 
36, 1, 203, 203, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.lazy_repeating_parser_plus) ? petitparser.core_test.lazy_repeating_parser_plus.cljs$lang$test : null]));
petitparser.core_test.lazy_repeating_parser_star = function petitparser$core_test$lazy_repeating_parser_star() {
  return cljs.test.test_var.call(null, petitparser.core_test.lazy_repeating_parser_star.cljs$lang$var);
};
petitparser.core_test.lazy_repeating_parser_star.cljs$lang$test = function() {
  var pp = petitparser.core.transform.call(null, petitparser.core.end.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.flatten.call(null, petitparser.core.star_lazy.call(null, petitparser.core.any, petitparser.core.or.call(null, petitparser.core.case_insensitive.call(null, "upper"), petitparser.core.case_insensitive.call(null, "lower")))), petitparser.core.flatten.call(null, petitparser.core.or.call(null, petitparser.core.case_insensitive.call(null, 
  "upper"), petitparser.core.case_insensitive.call(null, "lower")))], null)), function(p__4602) {
    var vec__4603 = p__4602;
    var word = cljs.core.nth.call(null, vec__4603, 0, null);
    var case_STAR_ = cljs.core.nth.call(null, vec__4603, 1, null);
    var pred__4606 = cljs.core._EQ_;
    var expr__4607 = clojure.string.lower_case.call(null, case_STAR_);
    if (cljs.core.truth_(pred__4606.call(null, "lower", expr__4607))) {
      return clojure.string.lower_case.call(null, word);
    } else {
      if (cljs.core.truth_(pred__4606.call(null, "upper", expr__4607))) {
        return clojure.string.upper_case.call(null, word);
      } else {
        return "WAT";
      }
    }
  });
  try {
    var values__3876__auto___4614 = new cljs.core.List(null, " abc! ", new cljs.core.List(null, petitparser.core.parse.call(null, pp, " abc! LOWER"), null, 1, null), 2, null);
    var result__3877__auto___4615 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4614);
    if (cljs.core.truth_(result__3877__auto___4615)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 232, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), " abc! ", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " abc! LOWER")), 
      232, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4614), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 232, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), " abc! ", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " abc! LOWER")), 
      232, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4614), null, 1, null), 2, null), null]));
    }
  } catch (e4609) {
    var t__3927__auto___4616 = e4609;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 49, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 232, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), " abc! ", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " abc! LOWER")), 
    232, t__3927__auto___4616, null]));
  }
  try {
    var values__3876__auto___4617 = new cljs.core.List(null, "ABC", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcupper"), null, 1, null), 2, null);
    var result__3877__auto___4618 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4617);
    if (cljs.core.truth_(result__3877__auto___4618)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 233, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
      233, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4617), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 233, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
      233, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4617), null, 1, null), 2, null), null]));
    }
  } catch (e4610) {
    var t__3927__auto___4619 = e4610;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 233, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ABC", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupper")), 
    233, t__3927__auto___4619, null]));
  }
  try {
    var values__3876__auto___4620 = new cljs.core.List(null, "", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "upper"), null, 1, null), 2, null);
    var result__3877__auto___4621 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4620);
    if (cljs.core.truth_(result__3877__auto___4621)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 234, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 234, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4620), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 234, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 234, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4620), null, 1, null), 2, null), null]));
    }
  } catch (e4611) {
    var t__3927__auto___4622 = e4611;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 234, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "upper")), 234, 
    t__3927__auto___4622, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "abcupperlower");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 48, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 235, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupperlower")), 236, null, null]));
    } catch (e4613) {
      if (e4613 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto__ = e4613;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 48, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 235, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupperlower")), 236, e__3914__auto__, null]));
        return e__3914__auto__;
      } else {
        throw e4613;
      }
    }
  } catch (e4612) {
    var t__3927__auto__ = e4612;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 48, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 235, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcupperlower")), 236, t__3927__auto__, null]));
  }
};
petitparser.core_test.lazy_repeating_parser_star.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.lazy_repeating_parser_star;
}, new cljs.core.Symbol("petitparser.core-test", "lazy-repeating-parser-star", "petitparser.core-test/lazy-repeating-parser-star", 743877370, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "lazy-repeating-parser-star", "lazy-repeating-parser-star", -1339285121, null), "test\\petitparser\\core_test.cljc", 
36, 1, 221, 221, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.lazy_repeating_parser_star) ? petitparser.core_test.lazy_repeating_parser_star.cljs$lang$test : null]));
petitparser.core_test.negate_parser = function petitparser$core_test$negate_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.negate_parser.cljs$lang$var);
};
petitparser.core_test.negate_parser.cljs$lang$test = function() {
  var pp = petitparser.core.seq.call(null, petitparser.core.negate.call(null, petitparser.core.digit), petitparser.core.digit);
  try {
    var values__3876__auto___4627 = new cljs.core.List(null, pp, new cljs.core.List(null, "a2", null, 1, null), 2, null);
    var result__3877__auto___4628 = cljs.core.apply.call(null, petitparser.core.matches_QMARK_, values__3876__auto___4627);
    if (cljs.core.truth_(result__3877__auto___4628)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 241, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a2"), 241, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 
      231236662, null), values__3876__auto___4627), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 241, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a2"), 241, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), 
      new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), values__3876__auto___4627), null, 1, null), 2, null), null]));
    }
  } catch (e4623) {
    var t__3927__auto___4629 = e4623;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 241, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "a2"), 241, t__3927__auto___4629, null]));
  }
  try {
    var values__3876__auto___4630 = new cljs.core.List(null, pp, new cljs.core.List(null, "?2", null, 1, null), 2, null);
    var result__3877__auto___4631 = cljs.core.apply.call(null, petitparser.core.matches_QMARK_, values__3876__auto___4630);
    if (cljs.core.truth_(result__3877__auto___4631)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 242, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "?2"), 242, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 
      231236662, null), values__3876__auto___4630), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 242, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "?2"), 242, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), 
      new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), values__3876__auto___4630), null, 1, null), 2, null), null]));
    }
  } catch (e4624) {
    var t__3927__auto___4632 = e4624;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 30, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 242, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "?2"), 242, t__3927__auto___4632, null]));
  }
  try {
    var values__3876__auto___4633 = new cljs.core.List(null, petitparser.core.matches_QMARK_.call(null, pp, "22"), null, 1, null);
    var result__3877__auto___4634 = cljs.core.apply.call(null, cljs.core.not, values__3876__auto___4633);
    if (cljs.core.truth_(result__3877__auto___4634)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 243, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "22")), 243, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto___4633), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 243, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "22")), 243, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto___4633), null, 1, null), 2, null), null]));
    }
  } catch (e4625) {
    var t__3927__auto___4635 = e4625;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 243, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "22")), 243, t__3927__auto___4635, 
    null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, petitparser.core.matches_QMARK_.call(null, pp, "2a"), null, 1, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core.not, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 244, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2a")), 244, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 244, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2a")), 244, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4626) {
    var t__3927__auto__ = e4626;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 244, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2a")), 244, t__3927__auto__, 
    null]));
  }
};
petitparser.core_test.negate_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.negate_parser;
}, new cljs.core.Symbol("petitparser.core-test", "negate-parser", "petitparser.core-test/negate-parser", -180485298, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "negate-parser", "negate-parser", -1726433079, null), "test\\petitparser\\core_test.cljc", 23, 1, 238, 238, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.negate_parser) ? petitparser.core_test.negate_parser.cljs$lang$test : null]));
petitparser.core_test.trimming_parser = function petitparser$core_test$trimming_parser() {
  return cljs.test.test_var.call(null, petitparser.core_test.trimming_parser.cljs$lang$var);
};
petitparser.core_test.trimming_parser.cljs$lang$test = function() {
  var pp = petitparser.core.trim.call(null, "+", petitparser.core.digit);
  try {
    var values__3876__auto___4644 = new cljs.core.List(null, "+", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "01234+56789"), null, 1, null), 2, null);
    var result__3877__auto___4645 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4644);
    if (cljs.core.truth_(result__3877__auto___4645)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 248, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "01234+56789")), 
      248, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4644), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 248, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "01234+56789")), 
      248, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4644), null, 1, null), 2, null), null]));
    }
  } catch (e4636) {
    var t__3927__auto___4646 = e4636;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 43, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 248, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "01234+56789")), 
    248, t__3927__auto___4646, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, "+", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "+"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 249, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "+")), 249, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), function() {
        try {
          try {
            petitparser.core.parse.call(null, pp, "1.1");
            return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
            1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 250, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
            "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.1")), 251, null, null]));
          } catch (e4641) {
            if (e4641 instanceof clojure.lang.ExceptionInfo) {
              var e__3914__auto__ = e4641;
              cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
              new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 250, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
              "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.1")), 251, e__3914__auto__, null]));
              return e__3914__auto__;
            } else {
              throw e4641;
            }
          }
        } catch (e4640) {
          var t__3927__auto__ = e4640;
          return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
          1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 250, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
          "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.1")), 251, t__3927__auto__, null]));
        }
      }()]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 249, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "+")), 249, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), function() {
        try {
          try {
            petitparser.core.parse.call(null, pp, "1.1");
            return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
            1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 250, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
            "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.1")), 251, null, null]));
          } catch (e4643) {
            if (e4643 instanceof clojure.lang.ExceptionInfo) {
              var e__3914__auto__ = e4643;
              cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
              new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 250, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
              "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.1")), 251, e__3914__auto__, null]));
              return e__3914__auto__;
            } else {
              throw e4643;
            }
          }
        } catch (e4642) {
          var t__3927__auto__ = e4642;
          return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
          1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 250, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
          "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.1")), 251, t__3927__auto__, null]));
        }
      }()]));
    }
    return result__3877__auto__;
  } catch (e4637) {
    var t__3927__auto__ = e4637;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 249, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "+")), 249, t__3927__auto__, 
    function() {
      try {
        try {
          petitparser.core.parse.call(null, pp, "1.1");
          return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
          1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 250, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
          "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.1")), 251, null, null]));
        } catch (e4639) {
          if (e4639 instanceof clojure.lang.ExceptionInfo) {
            var e__3914__auto__ = e4639;
            cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
            new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 250, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
            "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.1")), 251, e__3914__auto__, null]));
            return e__3914__auto__;
          } else {
            throw e4639;
          }
        }
      } catch (e4638) {
        var t__3927__auto____$1 = e4638;
        return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
        1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 250, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
        "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.1")), 251, t__3927__auto____$1, null]));
      }
    }()]));
  }
};
petitparser.core_test.trimming_parser.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.trimming_parser;
}, new cljs.core.Symbol("petitparser.core-test", "trimming-parser", "petitparser.core-test/trimming-parser", -1918793799, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "trimming-parser", "trimming-parser", 960822534, null), "test\\petitparser\\core_test.cljc", 25, 1, 246, 246, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.trimming_parser) ? petitparser.core_test.trimming_parser.cljs$lang$test : null]));
petitparser.core_test.trimming_parser_2 = function petitparser$core_test$trimming_parser_2() {
  return cljs.test.test_var.call(null, petitparser.core_test.trimming_parser_2.cljs$lang$var);
};
petitparser.core_test.trimming_parser_2.cljs$lang$test = function() {
  var pp = petitparser.core.trim.call(null, "+");
  try {
    var values__3876__auto___4655 = new cljs.core.List(null, "+", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "\t\n\r + \r\n\t"), null, 1, null), 2, null);
    var result__3877__auto___4656 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4655);
    if (cljs.core.truth_(result__3877__auto___4656)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 255, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "\t\n\r + \r\n\t")), 
      255, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4655), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 255, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "\t\n\r + \r\n\t")), 
      255, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4655), null, 1, null), 2, null), null]));
    }
  } catch (e4647) {
    var t__3927__auto___4657 = e4647;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 255, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "\t\n\r + \r\n\t")), 
    255, t__3927__auto___4657, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, "+", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "+"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 256, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "+")), 256, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), function() {
        try {
          try {
            petitparser.core.parse.call(null, pp, " . ");
            return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
            1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 13, 257, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
            "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " . ")), 258, null, null]));
          } catch (e4652) {
            if (e4652 instanceof clojure.lang.ExceptionInfo) {
              var e__3914__auto__ = e4652;
              cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
              new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 13, 257, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
              "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " . ")), 258, e__3914__auto__, null]));
              return e__3914__auto__;
            } else {
              throw e4652;
            }
          }
        } catch (e4651) {
          var t__3927__auto__ = e4651;
          return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
          1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "error", "error", -978969032), 13, 257, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
          "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " . ")), 258, t__3927__auto__, null]));
        }
      }()]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 256, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "+")), 256, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), function() {
        try {
          try {
            petitparser.core.parse.call(null, pp, " . ");
            return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
            1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 13, 257, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
            "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " . ")), 258, null, null]));
          } catch (e4654) {
            if (e4654 instanceof clojure.lang.ExceptionInfo) {
              var e__3914__auto__ = e4654;
              cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
              new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 13, 257, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
              "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " . ")), 258, e__3914__auto__, null]));
              return e__3914__auto__;
            } else {
              throw e4654;
            }
          }
        } catch (e4653) {
          var t__3927__auto__ = e4653;
          return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
          1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "error", "error", -978969032), 13, 257, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
          "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " . ")), 258, t__3927__auto__, null]));
        }
      }()]));
    }
    return result__3877__auto__;
  } catch (e4648) {
    var t__3927__auto__ = e4648;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 256, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "+", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "+")), 256, t__3927__auto__, 
    function() {
      try {
        try {
          petitparser.core.parse.call(null, pp, " . ");
          return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
          1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 13, 257, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
          "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " . ")), 258, null, null]));
        } catch (e4650) {
          if (e4650 instanceof clojure.lang.ExceptionInfo) {
            var e__3914__auto__ = e4650;
            cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
            new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 13, 257, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
            "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " . ")), 258, e__3914__auto__, null]));
            return e__3914__auto__;
          } else {
            throw e4650;
          }
        }
      } catch (e4649) {
        var t__3927__auto____$1 = e4649;
        return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 
        1837326455), new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 42, new cljs.core.Keyword(null, "error", "error", -978969032), 13, 257, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", 
        "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), " . ")), 258, t__3927__auto____$1, null]));
      }
    }()]));
  }
};
petitparser.core_test.trimming_parser_2.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.trimming_parser_2;
}, new cljs.core.Symbol("petitparser.core-test", "trimming-parser-2", "petitparser.core-test/trimming-parser-2", 1261382885, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", 
"line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "trimming-parser-2", "trimming-parser-2", -1220257176, null), "test\\petitparser\\core_test.cljc", 27, 1, 253, 253, 
cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.trimming_parser_2) ? petitparser.core_test.trimming_parser_2.cljs$lang$test : null]));
petitparser.core_test.greedy_repeating_parser_min = function petitparser$core_test$greedy_repeating_parser_min() {
  return cljs.test.test_var.call(null, petitparser.core_test.greedy_repeating_parser_min.cljs$lang$var);
};
petitparser.core_test.greedy_repeating_parser_min.cljs$lang$test = function() {
  var pp = petitparser.core.transform.call(null, petitparser.core.end.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.flatten.call(null, petitparser.core.min_greedy.call(null, petitparser.core.any, 3, petitparser.core.case_insensitive.call(null, "END"))), petitparser.core.case_insensitive.call(null, "END")], null)), cljs.core.first);
  try {
    var values__3876__auto___4669 = new cljs.core.List(null, "abc", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcEND"), null, 1, null), 2, null);
    var result__3877__auto___4670 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4669);
    if (cljs.core.truth_(result__3877__auto___4670)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 266, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcEND")), 
      266, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4669), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 266, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcEND")), 
      266, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4669), null, 1, null), 2, null), null]));
    }
  } catch (e4658) {
    var t__3927__auto___4671 = e4658;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 266, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcEND")), 
    266, t__3927__auto___4671, null]));
  }
  try {
    var values__3876__auto___4672 = new cljs.core.List(null, "abcdef", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcdefEND"), null, 1, null), 2, null);
    var result__3877__auto___4673 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4672);
    if (cljs.core.truth_(result__3877__auto___4673)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 267, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcdef", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcdefEND")), 
      267, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4672), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 267, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcdef", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcdefEND")), 
      267, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4672), null, 1, null), 2, null), null]));
    }
  } catch (e4659) {
    var t__3927__auto___4674 = e4659;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 267, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcdef", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcdefEND")), 
    267, t__3927__auto___4674, null]));
  }
  try {
    var values__3876__auto___4675 = new cljs.core.List(null, "end", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "endEND"), null, 1, null), 2, null);
    var result__3877__auto___4676 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4675);
    if (cljs.core.truth_(result__3877__auto___4676)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 268, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "end", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "endEND")), 
      268, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4675), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 268, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "end", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "endEND")), 
      268, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4675), null, 1, null), 2, null), null]));
    }
  } catch (e4660) {
    var t__3927__auto___4677 = e4660;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 268, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "end", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "endEND")), 
    268, t__3927__auto___4677, null]));
  }
  try {
    var values__3876__auto___4678 = new cljs.core.List(null, "abcend", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcendEND"), null, 1, null), 2, null);
    var result__3877__auto___4679 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4678);
    if (cljs.core.truth_(result__3877__auto___4679)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 269, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcend", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcendEND")), 
      269, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4678), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 269, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcend", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcendEND")), 
      269, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4678), null, 1, null), 2, null), null]));
    }
  } catch (e4661) {
    var t__3927__auto___4680 = e4661;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 269, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abcend", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcendEND")), 
    269, t__3927__auto___4680, null]));
  }
  try {
    var values__3876__auto___4681 = new cljs.core.List(null, "ENDabc", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "ENDabcEND"), null, 1, null), 2, null);
    var result__3877__auto___4682 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4681);
    if (cljs.core.truth_(result__3877__auto___4682)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 270, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ENDabc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ENDabcEND")), 
      270, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4681), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 270, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ENDabc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ENDabcEND")), 
      270, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4681), null, 1, null), 2, null), null]));
    }
  } catch (e4662) {
    var t__3927__auto___4683 = e4662;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 270, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "ENDabc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ENDabcEND")), 
    270, t__3927__auto___4683, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "abc");
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 271, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 272, null, null]));
    } catch (e4664) {
      if (e4664 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto___4684 = e4664;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 271, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 272, e__3914__auto___4684, null]));
      } else {
        throw e4664;
      }
    }
  } catch (e4663) {
    var t__3927__auto___4685 = e4663;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 271, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 272, t__3927__auto___4685, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "END");
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 273, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "END")), 274, null, null]));
    } catch (e4666) {
      if (e4666 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto___4686 = e4666;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 273, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "END")), 274, e__3914__auto___4686, null]));
      } else {
        throw e4666;
      }
    }
  } catch (e4665) {
    var t__3927__auto___4687 = e4665;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 273, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "END")), 274, t__3927__auto___4687, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "abend");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 275, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abend")), 276, null, null]));
    } catch (e4668) {
      if (e4668 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto__ = e4668;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 275, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abend")), 276, e__3914__auto__, null]));
        return e__3914__auto__;
      } else {
        throw e4668;
      }
    }
  } catch (e4667) {
    var t__3927__auto__ = e4667;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 275, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abend")), 276, t__3927__auto__, null]));
  }
};
petitparser.core_test.greedy_repeating_parser_min.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.greedy_repeating_parser_min;
}, new cljs.core.Symbol("petitparser.core-test", "greedy-repeating-parser-min", "petitparser.core-test/greedy-repeating-parser-min", -1772543676, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "greedy-repeating-parser-min", "greedy-repeating-parser-min", 570668227, null), "test\\petitparser\\core_test.cljc", 
37, 1, 260, 260, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.greedy_repeating_parser_min) ? petitparser.core_test.greedy_repeating_parser_min.cljs$lang$test : null]));
petitparser.core_test.greedy_repeating_parser_max = function petitparser$core_test$greedy_repeating_parser_max() {
  return cljs.test.test_var.call(null, petitparser.core_test.greedy_repeating_parser_max.cljs$lang$var);
};
petitparser.core_test.greedy_repeating_parser_max.cljs$lang$test = function() {
  var pp = petitparser.core.transform.call(null, petitparser.core.end.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.flatten.call(null, petitparser.core.max_greedy.call(null, petitparser.core.any, 3, petitparser.core.case_insensitive.call(null, "END"))), petitparser.core.case_insensitive.call(null, "END")], null)), cljs.core.first);
  try {
    var values__3876__auto___4698 = new cljs.core.List(null, "abc", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "abcEND"), null, 1, null), 2, null);
    var result__3877__auto___4699 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4698);
    if (cljs.core.truth_(result__3877__auto___4699)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 284, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcEND")), 
      284, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4698), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 284, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcEND")), 
      284, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4698), null, 1, null), 2, null), null]));
    }
  } catch (e4688) {
    var t__3927__auto___4700 = e4688;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 284, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcEND")), 
    284, t__3927__auto___4700, null]));
  }
  try {
    var values__3876__auto___4701 = new cljs.core.List(null, "a", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "aEND"), null, 1, null), 2, null);
    var result__3877__auto___4702 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4701);
    if (cljs.core.truth_(result__3877__auto___4702)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 285, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "aEND")), 285, 
      cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4701), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 285, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "aEND")), 285, 
      new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4701), null, 1, null), 2, null), null]));
    }
  } catch (e4689) {
    var t__3927__auto___4703 = e4689;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 37, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 285, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "aEND")), 285, 
    t__3927__auto___4703, null]));
  }
  try {
    var values__3876__auto___4704 = new cljs.core.List(null, "", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "END"), null, 1, null), 2, null);
    var result__3877__auto___4705 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4704);
    if (cljs.core.truth_(result__3877__auto___4705)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 286, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "END")), 286, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4704), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 286, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "END")), 286, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4704), null, 1, null), 2, null), null]));
    }
  } catch (e4690) {
    var t__3927__auto___4706 = e4690;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 286, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "END")), 286, t__3927__auto___4706, 
    null]));
  }
  try {
    var values__3876__auto___4707 = new cljs.core.List(null, "end", new cljs.core.List(null, petitparser.core.parse.call(null, pp, "endEND"), null, 1, null), 2, null);
    var result__3877__auto___4708 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4707);
    if (cljs.core.truth_(result__3877__auto___4708)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 287, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "end", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "endEND")), 
      287, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4707), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 287, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "end", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "endEND")), 
      287, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4707), null, 1, null), 2, null), null]));
    }
  } catch (e4691) {
    var t__3927__auto___4709 = e4691;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 287, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "end", cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "endEND")), 
    287, t__3927__auto___4709, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "abcendEND");
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 44, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 288, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcendEND")), 289, null, null]));
    } catch (e4693) {
      if (e4693 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto___4710 = e4693;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 44, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 288, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcendEND")), 289, e__3914__auto___4710, null]));
      } else {
        throw e4693;
      }
    }
  } catch (e4692) {
    var t__3927__auto___4711 = e4692;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 44, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 288, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abcendEND")), 289, t__3927__auto___4711, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "ENDabcEND");
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 44, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 290, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ENDabcEND")), 291, null, null]));
    } catch (e4695) {
      if (e4695 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto___4712 = e4695;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 44, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 290, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ENDabcEND")), 291, e__3914__auto___4712, null]));
      } else {
        throw e4695;
      }
    }
  } catch (e4694) {
    var t__3927__auto___4713 = e4694;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 44, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 290, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "ENDabcEND")), 291, t__3927__auto___4713, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "abc");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 292, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 293, null, null]));
    } catch (e4697) {
      if (e4697 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto__ = e4697;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 292, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 293, e__3914__auto__, null]));
        return e__3914__auto__;
      } else {
        throw e4697;
      }
    }
  } catch (e4696) {
    var t__3927__auto__ = e4696;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 292, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "abc")), 293, t__3927__auto__, null]));
  }
};
petitparser.core_test.greedy_repeating_parser_max.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.greedy_repeating_parser_max;
}, new cljs.core.Symbol("petitparser.core-test", "greedy-repeating-parser-max", "petitparser.core-test/greedy-repeating-parser-max", -2047477311, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "greedy-repeating-parser-max", "greedy-repeating-parser-max", 299594564, null), "test\\petitparser\\core_test.cljc", 
37, 1, 278, 278, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.core_test.greedy_repeating_parser_max) ? petitparser.core_test.greedy_repeating_parser_max.cljs$lang$test : null]));
petitparser.core_test.separated_by = function petitparser$core_test$separated_by() {
  return cljs.test.test_var.call(null, petitparser.core_test.separated_by.cljs$lang$var);
};
petitparser.core_test.separated_by.cljs$lang$test = function() {
  var pp = petitparser.core.end.call(null, petitparser.core.separated_by.call(null, petitparser.core.digit, ","));
  try {
    var values__3876__auto___4717 = new cljs.core.List(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3", ",", "4", ",", "5"], null), new cljs.core.List(null, petitparser.core.parse.call(null, pp, "3,4,5"), null, 1, null), 2, null);
    var result__3877__auto___4718 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4717);
    if (cljs.core.truth_(result__3877__auto___4718)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 34, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 297, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3", ",", "4", ",", "5"], null), cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "3,4,5")), 298, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4717), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 34, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 297, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3", ",", "4", ",", "5"], null), cljs.core.list(new cljs.core.Symbol("pp", 
      "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "3,4,5")), 298, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4717), null, 1, null), 2, null), null]));
    }
  } catch (e4714) {
    var t__3927__auto___4719 = e4714;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 34, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 297, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, ["3", ",", "4", ",", "5"], null), cljs.core.list(new cljs.core.Symbol("pp", 
    "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "3,4,5")), 298, t__3927__auto___4719, null]));
  }
  try {
    try {
      petitparser.core.parse.call(null, pp, "3,4,5,");
      return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 299, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
      "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "3,4,5,")), 300, null, null]));
    } catch (e4716) {
      if (e4716 instanceof clojure.lang.ExceptionInfo) {
        var e__3914__auto__ = e4716;
        cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
        new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 299, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
        "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "3,4,5,")), 300, e__3914__auto__, null]));
        return e__3914__auto__;
      } else {
        throw e4716;
      }
    }
  } catch (e4715) {
    var t__3927__auto__ = e4715;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 299, cljs.core.list(new cljs.core.Symbol(null, "thrown?", "thrown?", 839971709, null), new cljs.core.Symbol(null, "clojure.lang.ExceptionInfo", "clojure.lang.ExceptionInfo", -550564927, null), cljs.core.list(new cljs.core.Symbol("pp", "parse", 
    "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "3,4,5,")), 300, t__3927__auto__, null]));
  }
};
petitparser.core_test.separated_by.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.separated_by;
}, new cljs.core.Symbol("petitparser.core-test", "separated-by", "petitparser.core-test/separated-by", 1695347517, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "separated-by", "separated-by", -1859551824, null), "test\\petitparser\\core_test.cljc", 22, 1, 295, 295, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.separated_by) ? petitparser.core_test.separated_by.cljs$lang$test : null]));
petitparser.core_test.separated_by_2 = function petitparser$core_test$separated_by_2() {
  return cljs.test.test_var.call(null, petitparser.core_test.separated_by_2.cljs$lang$var);
};
petitparser.core_test.separated_by_2.cljs$lang$test = function() {
  var identifier = petitparser.core.or.call(null, petitparser.core.transform.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, ["[", petitparser.core.flatten.call(null, petitparser.core.plus.call(null, petitparser.core.predicate.call(null, function(p1__4720_SHARP_) {
    return cljs.core.not_EQ_.call(null, "[", p1__4720_SHARP_) && cljs.core.not_EQ_.call(null, "]", p1__4720_SHARP_);
  }, "Any except square brackets expected"))), "]"], null), function(p__4721) {
    var vec__4722 = p__4721;
    var left = cljs.core.nth.call(null, vec__4722, 0, null);
    var body = cljs.core.nth.call(null, vec__4722, 1, null);
    var right = cljs.core.nth.call(null, vec__4722, 2, null);
    return body;
  }), petitparser.core.flatten.call(null, petitparser.core.plus.call(null, petitparser.core.or.call(null, petitparser.core.word, "_"))));
  var ws = petitparser.core.space;
  var pp = petitparser.core.separated_by.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.star.call(null, ws), identifier, petitparser.core.star.call(null, ws), petitparser.core.or.call(null, petitparser.core.case_insensitive.call(null, "ASC"), petitparser.core.case_insensitive.call(null, "DESC")), petitparser.core.star.call(null, ws)], null), ",");
  try {
    var values__3876__auto___4728 = new cljs.core.List(null, pp, new cljs.core.List(null, "[id] ASC", null, 1, null), 2, null);
    var result__3877__auto___4729 = cljs.core.apply.call(null, petitparser.core.matches_QMARK_, values__3876__auto___4728);
    if (cljs.core.truth_(result__3877__auto___4729)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 320, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "[id] ASC"), 320, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 
      231236662, null), values__3876__auto___4728), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 320, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "[id] ASC"), 320, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, 
      null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), values__3876__auto___4728), null, 1, null), 2, null), null]));
    }
  } catch (e4725) {
    var t__3927__auto___4730 = e4725;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 320, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "[id] ASC"), 320, t__3927__auto___4730, null]));
  }
  try {
    var values__3876__auto___4731 = new cljs.core.List(null, pp, new cljs.core.List(null, "\n\t[id] ASC, [model] desc", null, 1, null), 2, null);
    var result__3877__auto___4732 = cljs.core.apply.call(null, petitparser.core.matches_QMARK_, values__3876__auto___4731);
    if (cljs.core.truth_(result__3877__auto___4732)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 53, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 321, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "\n\t[id] ASC, [model] desc"), 321, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", 
      "pp/matches?", 231236662, null), values__3876__auto___4731), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 53, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 321, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "\n\t[id] ASC, [model] desc"), 321, new cljs.core.List(null, new cljs.core.Symbol(null, "not", 
      "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), values__3876__auto___4731), null, 1, null), 2, null), null]));
    }
  } catch (e4726) {
    var t__3927__auto___4733 = e4726;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 53, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 321, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "\n\t[id] ASC, [model] desc"), 321, t__3927__auto___4733, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, pp, new cljs.core.List(null, "[id]ASC,[model]desc", null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, petitparser.core.matches_QMARK_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 322, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "[id]ASC,[model]desc"), 322, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", 
      "pp/matches?", 231236662, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 322, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "[id]ASC,[model]desc"), 322, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 
      1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4727) {
    var t__3927__auto__ = e4727;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\core_test.cljc", 47, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 322, cljs.core.list(new cljs.core.Symbol("pp", "matches?", "pp/matches?", 231236662, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "[id]ASC,[model]desc"), 322, t__3927__auto__, null]));
  }
};
petitparser.core_test.separated_by_2.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.core_test.separated_by_2;
}, new cljs.core.Symbol("petitparser.core-test", "separated-by-2", "petitparser.core-test/separated-by-2", -847866075, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 
212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.core-test", "petitparser.core-test", 1314057716, null), new cljs.core.Symbol(null, "separated-by-2", "separated-by-2", 1630210466, null), "test\\petitparser\\core_test.cljc", 24, 1, 302, 302, cljs.core.List.EMPTY, 
null, cljs.core.truth_(petitparser.core_test.separated_by_2) ? petitparser.core_test.separated_by_2.cljs$lang$test : null]));
goog.provide("petitparser.arithmetic_parser_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("clojure.string");
goog.require("petitparser.core");
goog.require("petitparser.input_stream");
goog.require("petitparser.token");
goog.require("petitparser.results");
petitparser.arithmetic_parser_test.grammar = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "primary", "primary", 817773892), new cljs.core.Keyword(null, "factors", "factors", 1107817380), new cljs.core.Keyword(null, "number", "number", 1570378438), new cljs.core.Keyword(null, "terms", "terms", -1556977978), new cljs.core.Keyword(null, "addition", "addition", 1756544008), new cljs.core.Keyword(null, "parentheses", "parentheses", 17909609), new cljs.core.Keyword(null, "start", 
"start", -355208981), new cljs.core.Keyword(null, "addition-ops", "addition-ops", 933059307), new cljs.core.Keyword(null, "power-ops", "power-ops", -108582803), new cljs.core.Keyword(null, "power", "power", -937852079), new cljs.core.Keyword(null, "multiplication", "multiplication", 1090197524), new cljs.core.Keyword(null, "multiplication-ops", "multiplication-ops", -2100707171)], [petitparser.core.or.call(null, new cljs.core.Keyword(null, "number", "number", 1570378438), new cljs.core.Keyword(null, 
"parentheses", "parentheses", 17909609)), petitparser.core.or.call(null, new cljs.core.Keyword(null, "multiplication", "multiplication", 1090197524), new cljs.core.Keyword(null, "power", "power", -937852079)), petitparser.core.trim.call(null, petitparser.core.flatten.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.optional.call(null, "-"), petitparser.core.plus.call(null, petitparser.core.digit), petitparser.core.optional.call(null, new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [".", petitparser.core.plus.call(null, petitparser.core.digit)], null))], null))), petitparser.core.or.call(null, new cljs.core.Keyword(null, "addition", "addition", 1756544008), new cljs.core.Keyword(null, "factors", "factors", 1107817380)), petitparser.core.separated_by.call(null, new cljs.core.Keyword(null, "factors", "factors", 1107817380), new cljs.core.Keyword(null, "addition-ops", "addition-ops", 933059307)), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.trim.call(null, "("), new cljs.core.Keyword(null, "terms", "terms", -1556977978), petitparser.core.trim.call(null, ")")], null), petitparser.core.end.call(null, new cljs.core.Keyword(null, "terms", "terms", -1556977978)), petitparser.core.trim.call(null, petitparser.core.or.call(null, "+", "-")), petitparser.core.trim.call(null, "^"), petitparser.core.separated_by.call(null, new cljs.core.Keyword(null, "primary", "primary", 817773892), 
new cljs.core.Keyword(null, "power-ops", "power-ops", -108582803)), petitparser.core.separated_by.call(null, new cljs.core.Keyword(null, "power", "power", -937852079), new cljs.core.Keyword(null, "multiplication-ops", "multiplication-ops", -2100707171)), petitparser.core.trim.call(null, petitparser.core.or.call(null, "*", "/"))]);
petitparser.arithmetic_parser_test.operations = new cljs.core.PersistentArrayMap(null, 5, ["+", cljs.core._PLUS_, "-", cljs.core._, "*", cljs.core._STAR_, "/", cljs.core._SLASH_, "^", function(a, b) {
  return Math.pow(b, a);
}], null);
petitparser.arithmetic_parser_test.reduce_operands = function petitparser$arithmetic_parser_test$reduce_operands(nodes) {
  var total = cljs.core.first.call(null, nodes);
  var pairs = cljs.core.partition.call(null, 2, cljs.core.next.call(null, nodes));
  return cljs.core.reduce.call(null, function(sub, p__4098) {
    var vec__4099 = p__4098;
    var op = cljs.core.nth.call(null, vec__4099, 0, null);
    var n = cljs.core.nth.call(null, vec__4099, 1, null);
    return op.call(null, sub, n);
  }, total, pairs);
};
petitparser.arithmetic_parser_test.transformations = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "number", "number", 1570378438), parseFloat, new cljs.core.Keyword(null, "parentheses", "parentheses", 17909609), cljs.core.second, new cljs.core.Keyword(null, "addition", "addition", 1756544008), petitparser.arithmetic_parser_test.reduce_operands, new cljs.core.Keyword(null, "multiplication", "multiplication", 1090197524), petitparser.arithmetic_parser_test.reduce_operands, 
new cljs.core.Keyword(null, "power", "power", -937852079), cljs.core.comp.call(null, petitparser.arithmetic_parser_test.reduce_operands, cljs.core.reverse), new cljs.core.Keyword(null, "addition-ops", "addition-ops", 933059307), petitparser.arithmetic_parser_test.operations, new cljs.core.Keyword(null, "multiplication-ops", "multiplication-ops", -2100707171), petitparser.arithmetic_parser_test.operations, new cljs.core.Keyword(null, "power-ops", "power-ops", -108582803), petitparser.arithmetic_parser_test.operations], 
null);
petitparser.arithmetic_parser_test.pp = petitparser.core.compose.call(null, petitparser.arithmetic_parser_test.grammar, petitparser.arithmetic_parser_test.transformations);
petitparser.arithmetic_parser_test.number_test = function petitparser$arithmetic_parser_test$number_test() {
  return cljs.test.test_var.call(null, petitparser.arithmetic_parser_test.number_test.cljs$lang$var);
};
petitparser.arithmetic_parser_test.number_test.cljs$lang$test = function() {
  try {
    var values__3876__auto___4110 = new cljs.core.List(null, 0.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "0"), null, 1, null), 2, null);
    var result__3877__auto___4111 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4110);
    if (cljs.core.truth_(result__3877__auto___4111)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 32, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 50, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "0")), 
      50, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4110), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 32, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 50, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "0")), 
      50, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4110), null, 1, null), 2, null), null]));
    }
  } catch (e4102) {
    var t__3927__auto___4112 = e4102;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 32, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 50, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "0")), 
    50, t__3927__auto___4112, null]));
  }
  try {
    var values__3876__auto___4113 = new cljs.core.List(null, 0.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "0.0"), null, 1, null), 2, null);
    var result__3877__auto___4114 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4113);
    if (cljs.core.truth_(result__3877__auto___4114)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 51, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "0.0")), 
      51, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4113), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 51, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "0.0")), 
      51, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4113), null, 1, null), 2, null), null]));
    }
  } catch (e4103) {
    var t__3927__auto___4115 = e4103;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 51, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "0.0")), 
    51, t__3927__auto___4115, null]));
  }
  try {
    var values__3876__auto___4116 = new cljs.core.List(null, 1.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1"), null, 1, null), 2, null);
    var result__3877__auto___4117 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4116);
    if (cljs.core.truth_(result__3877__auto___4117)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 32, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 52, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1")), 
      52, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4116), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 32, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 52, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1")), 
      52, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4116), null, 1, null), 2, null), null]));
    }
  } catch (e4104) {
    var t__3927__auto___4118 = e4104;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 32, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 52, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1")), 
    52, t__3927__auto___4118, null]));
  }
  try {
    var values__3876__auto___4119 = new cljs.core.List(null, 1.2, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1.2"), null, 1, null), 2, null);
    var result__3877__auto___4120 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4119);
    if (cljs.core.truth_(result__3877__auto___4120)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 53, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.2, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.2")), 
      53, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4119), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 53, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.2, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.2")), 
      53, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4119), null, 1, null), 2, null), null]));
    }
  } catch (e4105) {
    var t__3927__auto___4121 = e4105;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 53, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.2, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.2")), 
    53, t__3927__auto___4121, null]));
  }
  try {
    var values__3876__auto___4122 = new cljs.core.List(null, 34.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "34"), null, 1, null), 2, null);
    var result__3877__auto___4123 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4122);
    if (cljs.core.truth_(result__3877__auto___4123)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 54, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 34.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "34")), 
      54, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4122), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 54, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 34.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "34")), 
      54, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4122), null, 1, null), 2, null), null]));
    }
  } catch (e4106) {
    var t__3927__auto___4124 = e4106;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 54, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 34.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "34")), 
    54, t__3927__auto___4124, null]));
  }
  try {
    var values__3876__auto___4125 = new cljs.core.List(null, 56.78, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "56.78"), null, 1, null), 2, null);
    var result__3877__auto___4126 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4125);
    if (cljs.core.truth_(result__3877__auto___4126)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 55, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 56.78, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "56.78")), 55, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4125), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 55, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 56.78, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "56.78")), 55, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4125), null, 1, null), 2, null), null]));
    }
  } catch (e4107) {
    var t__3927__auto___4127 = e4107;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 55, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 56.78, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "56.78")), 55, t__3927__auto___4127, null]));
  }
  try {
    var values__3876__auto___4128 = new cljs.core.List(null, -9, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "-9"), null, 1, null), 2, null);
    var result__3877__auto___4129 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4128);
    if (cljs.core.truth_(result__3877__auto___4129)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 56, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -9, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-9")), 
      56, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4128), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 56, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -9, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-9")), 
      56, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4128), null, 1, null), 2, null), null]));
    }
  } catch (e4108) {
    var t__3927__auto___4130 = e4108;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 56, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -9, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-9")), 
    56, t__3927__auto___4130, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, -9.9, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "-9.9"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 57, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -9.9, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-9.9")), 
      57, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 57, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -9.9, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-9.9")), 
      57, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4109) {
    var t__3927__auto__ = e4109;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 57, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -9.9, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-9.9")), 
    57, t__3927__auto__, null]));
  }
};
petitparser.arithmetic_parser_test.number_test.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.arithmetic_parser_test.number_test;
}, new cljs.core.Symbol("petitparser.arithmetic-parser-test", "number-test", "petitparser.arithmetic-parser-test/number-test", 141806227, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.arithmetic-parser-test", "petitparser.arithmetic-parser-test", -1011107552, null), new cljs.core.Symbol(null, "number-test", "number-test", -1494073391, null), "test\\petitparser\\arithmetic_parser_test.cljc", 
21, 1, 49, 49, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.arithmetic_parser_test.number_test) ? petitparser.arithmetic_parser_test.number_test.cljs$lang$test : null]));
petitparser.arithmetic_parser_test.addition_test = function petitparser$arithmetic_parser_test$addition_test() {
  return cljs.test.test_var.call(null, petitparser.arithmetic_parser_test.addition_test.cljs$lang$var);
};
petitparser.arithmetic_parser_test.addition_test.cljs$lang$test = function() {
  try {
    var values__3876__auto___4140 = new cljs.core.List(null, 3.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 + 2"), null, 1, null), 2, null);
    var result__3877__auto___4141 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4140);
    if (cljs.core.truth_(result__3877__auto___4141)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 60, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2")), 
      60, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4140), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 60, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2")), 
      60, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4140), null, 1, null), 2, null), null]));
    }
  } catch (e4131) {
    var t__3927__auto___4142 = e4131;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 60, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2")), 
    60, t__3927__auto___4142, null]));
  }
  try {
    var values__3876__auto___4143 = new cljs.core.List(null, 3.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "2 + 1"), null, 1, null), 2, null);
    var result__3877__auto___4144 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4143);
    if (cljs.core.truth_(result__3877__auto___4144)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 61, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 + 1")), 
      61, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4143), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 61, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 + 1")), 
      61, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4143), null, 1, null), 2, null), null]));
    }
  } catch (e4132) {
    var t__3927__auto___4145 = e4132;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 61, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 + 1")), 
    61, t__3927__auto___4145, null]));
  }
  try {
    var values__3876__auto___4146 = new cljs.core.List(null, 3.3, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 + 2.3"), null, 1, null), 2, null);
    var result__3877__auto___4147 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4146);
    if (cljs.core.truth_(result__3877__auto___4147)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 62, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.3, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2.3")), 
      62, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4146), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 62, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.3, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2.3")), 
      62, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4146), null, 1, null), 2, null), null]));
    }
  } catch (e4133) {
    var t__3927__auto___4148 = e4133;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 62, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.3, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2.3")), 
    62, t__3927__auto___4148, null]));
  }
  try {
    var values__3876__auto___4149 = new cljs.core.List(null, 3.3, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "2.3 + 1"), null, 1, null), 2, null);
    var result__3877__auto___4150 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4149);
    if (cljs.core.truth_(result__3877__auto___4150)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 63, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.3, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2.3 + 1")), 
      63, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4149), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 63, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.3, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2.3 + 1")), 
      63, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4149), null, 1, null), 2, null), null]));
    }
  } catch (e4134) {
    var t__3927__auto___4151 = e4134;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 63, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.3, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2.3 + 1")), 
    63, t__3927__auto___4151, null]));
  }
  try {
    var values__3876__auto___4152 = new cljs.core.List(null, -1, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 + -2"), null, 1, null), 2, null);
    var result__3877__auto___4153 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4152);
    if (cljs.core.truth_(result__3877__auto___4153)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 64, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -1, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + -2")), 
      64, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4152), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 64, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -1, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + -2")), 
      64, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4152), null, 1, null), 2, null), null]));
    }
  } catch (e4135) {
    var t__3927__auto___4154 = e4135;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 64, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -1, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + -2")), 
    64, t__3927__auto___4154, null]));
  }
  try {
    var values__3876__auto___4155 = new cljs.core.List(null, -1, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "-2 + 1"), null, 1, null), 2, null);
    var result__3877__auto___4156 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4155);
    if (cljs.core.truth_(result__3877__auto___4156)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 65, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -1, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-2 + 1")), 
      65, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4155), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 65, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -1, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-2 + 1")), 
      65, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4155), null, 1, null), 2, null), null]));
    }
  } catch (e4136) {
    var t__3927__auto___4157 = e4136;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 65, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -1, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-2 + 1")), 
    65, t__3927__auto___4157, null]));
  }
  try {
    var values__3876__auto___4158 = new cljs.core.List(null, 6.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 + 2 + 3"), null, 1, null), 2, null);
    var result__3877__auto___4159 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4158);
    if (cljs.core.truth_(result__3877__auto___4159)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 66, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2 + 3")), 
      66, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4158), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 66, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2 + 3")), 
      66, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4158), null, 1, null), 2, null), null]));
    }
  } catch (e4137) {
    var t__3927__auto___4160 = e4137;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 66, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2 + 3")), 
    66, t__3927__auto___4160, null]));
  }
  try {
    var values__3876__auto___4161 = new cljs.core.List(null, 10.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 + 2 + 3 + 4"), null, 1, null), 2, null);
    var result__3877__auto___4162 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4161);
    if (cljs.core.truth_(result__3877__auto___4162)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 67, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2 + 3 + 4")), 
      67, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4161), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 67, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2 + 3 + 4")), 
      67, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4161), null, 1, null), 2, null), null]));
    }
  } catch (e4138) {
    var t__3927__auto___4163 = e4138;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 67, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2 + 3 + 4")), 
    67, t__3927__auto___4163, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, 15.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 + 2 + 3 + 4 + 5"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 49, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 68, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 15.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2 + 3 + 4 + 5")), 
      68, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 49, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 68, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 15.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2 + 3 + 4 + 5")), 
      68, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4139) {
    var t__3927__auto__ = e4139;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 49, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 68, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 15.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 + 2 + 3 + 4 + 5")), 
    68, t__3927__auto__, null]));
  }
};
petitparser.arithmetic_parser_test.addition_test.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.arithmetic_parser_test.addition_test;
}, new cljs.core.Symbol("petitparser.arithmetic-parser-test", "addition-test", "petitparser.arithmetic-parser-test/addition-test", -723241654, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.arithmetic-parser-test", "petitparser.arithmetic-parser-test", -1011107552, null), new cljs.core.Symbol(null, "addition-test", "addition-test", 90482580, null), "test\\petitparser\\arithmetic_parser_test.cljc", 
23, 1, 59, 59, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.arithmetic_parser_test.addition_test) ? petitparser.arithmetic_parser_test.addition_test.cljs$lang$test : null]));
petitparser.arithmetic_parser_test.division_test = function petitparser$arithmetic_parser_test$division_test() {
  return cljs.test.test_var.call(null, petitparser.arithmetic_parser_test.division_test.cljs$lang$var);
};
petitparser.arithmetic_parser_test.division_test.cljs$lang$test = function() {
  try {
    var values__3876__auto___4169 = new cljs.core.List(null, 4.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "12 / 3"), null, 1, null), 2, null);
    var result__3877__auto___4170 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4169);
    if (cljs.core.truth_(result__3877__auto___4170)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 71, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "12 / 3")), 
      71, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4169), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 71, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "12 / 3")), 
      71, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4169), null, 1, null), 2, null), null]));
    }
  } catch (e4164) {
    var t__3927__auto___4171 = e4164;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 71, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "12 / 3")), 
    71, t__3927__auto___4171, null]));
  }
  try {
    var values__3876__auto___4172 = new cljs.core.List(null, 4.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "-16 / -4"), null, 1, null), 2, null);
    var result__3877__auto___4173 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4172);
    if (cljs.core.truth_(result__3877__auto___4173)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 39, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 72, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-16 / -4")), 
      72, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4172), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 39, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 72, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-16 / -4")), 
      72, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4172), null, 1, null), 2, null), null]));
    }
  } catch (e4165) {
    var t__3927__auto___4174 = e4165;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 39, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 72, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-16 / -4")), 
    72, t__3927__auto___4174, null]));
  }
  try {
    var values__3876__auto___4175 = new cljs.core.List(null, 25.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "100 / 2 / 2"), null, 1, null), 2, null);
    var result__3877__auto___4176 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4175);
    if (cljs.core.truth_(result__3877__auto___4176)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 43, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 73, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 25.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "100 / 2 / 2")), 
      73, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4175), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 43, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 73, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 25.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "100 / 2 / 2")), 
      73, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4175), null, 1, null), 2, null), null]));
    }
  } catch (e4166) {
    var t__3927__auto___4177 = e4166;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 43, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 73, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 25.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "100 / 2 / 2")), 
    73, t__3927__auto___4177, null]));
  }
  try {
    var values__3876__auto___4178 = new cljs.core.List(null, 5.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "100 / 2 / 2 / 5"), null, 1, null), 2, null);
    var result__3877__auto___4179 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4178);
    if (cljs.core.truth_(result__3877__auto___4179)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 46, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 74, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 5.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "100 / 2 / 2 / 5")), 
      74, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4178), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 46, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 74, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 5.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "100 / 2 / 2 / 5")), 
      74, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4178), null, 1, null), 2, null), null]));
    }
  } catch (e4167) {
    var t__3927__auto___4180 = e4167;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 46, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 74, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 5.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "100 / 2 / 2 / 5")), 
    74, t__3927__auto___4180, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, 1.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "100 / 2 / 2 / 5 / 5"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 50, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 75, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "100 / 2 / 2 / 5 / 5")), 
      75, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 50, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 75, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "100 / 2 / 2 / 5 / 5")), 
      75, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4168) {
    var t__3927__auto__ = e4168;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 50, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 75, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "100 / 2 / 2 / 5 / 5")), 
    75, t__3927__auto__, null]));
  }
};
petitparser.arithmetic_parser_test.division_test.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.arithmetic_parser_test.division_test;
}, new cljs.core.Symbol("petitparser.arithmetic-parser-test", "division-test", "petitparser.arithmetic-parser-test/division-test", -2022881978, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.arithmetic-parser-test", "petitparser.arithmetic-parser-test", -1011107552, null), new cljs.core.Symbol(null, "division-test", "division-test", 1458432920, null), "test\\petitparser\\arithmetic_parser_test.cljc", 
23, 1, 70, 70, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.arithmetic_parser_test.division_test) ? petitparser.arithmetic_parser_test.division_test.cljs$lang$test : null]));
petitparser.arithmetic_parser_test.multiplication_test = function petitparser$arithmetic_parser_test$multiplication_test() {
  return cljs.test.test_var.call(null, petitparser.arithmetic_parser_test.multiplication_test.cljs$lang$var);
};
petitparser.arithmetic_parser_test.multiplication_test.cljs$lang$test = function() {
  try {
    var values__3876__auto___4186 = new cljs.core.List(null, 6.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "2 * 3"), null, 1, null), 2, null);
    var result__3877__auto___4187 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4186);
    if (cljs.core.truth_(result__3877__auto___4187)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 78, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 * 3")), 
      78, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4186), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 78, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 * 3")), 
      78, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4186), null, 1, null), 2, null), null]));
    }
  } catch (e4181) {
    var t__3927__auto___4188 = e4181;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 78, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 * 3")), 
    78, t__3927__auto___4188, null]));
  }
  try {
    var values__3876__auto___4189 = new cljs.core.List(null, -8, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "2 * -4"), null, 1, null), 2, null);
    var result__3877__auto___4190 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4189);
    if (cljs.core.truth_(result__3877__auto___4190)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 79, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -8, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 * -4")), 
      79, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4189), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 79, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -8, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 * -4")), 
      79, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4189), null, 1, null), 2, null), null]));
    }
  } catch (e4182) {
    var t__3927__auto___4191 = e4182;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 79, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -8, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 * -4")), 
    79, t__3927__auto___4191, null]));
  }
  try {
    var values__3876__auto___4192 = new cljs.core.List(null, 6.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 * 2 * 3"), null, 1, null), 2, null);
    var result__3877__auto___4193 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4192);
    if (cljs.core.truth_(result__3877__auto___4193)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 80, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 * 2 * 3")), 
      80, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4192), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 80, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 * 2 * 3")), 
      80, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4192), null, 1, null), 2, null), null]));
    }
  } catch (e4183) {
    var t__3927__auto___4194 = e4183;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 80, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 * 2 * 3")), 
    80, t__3927__auto___4194, null]));
  }
  try {
    var values__3876__auto___4195 = new cljs.core.List(null, 24.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 * 2 * 3 * 4"), null, 1, null), 2, null);
    var result__3877__auto___4196 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4195);
    if (cljs.core.truth_(result__3877__auto___4196)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 81, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 24.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 * 2 * 3 * 4")), 
      81, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4195), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 81, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 24.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 * 2 * 3 * 4")), 
      81, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4195), null, 1, null), 2, null), null]));
    }
  } catch (e4184) {
    var t__3927__auto___4197 = e4184;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 81, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 24.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 * 2 * 3 * 4")), 
    81, t__3927__auto___4197, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, 120.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 * 2 * 3 * 4 * 5"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 50, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 82, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 120.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "1 * 2 * 3 * 4 * 5")), 82, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 50, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 82, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 120.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "1 * 2 * 3 * 4 * 5")), 82, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4185) {
    var t__3927__auto__ = e4185;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 50, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 82, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 120.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "1 * 2 * 3 * 4 * 5")), 82, t__3927__auto__, null]));
  }
};
petitparser.arithmetic_parser_test.multiplication_test.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.arithmetic_parser_test.multiplication_test;
}, new cljs.core.Symbol("petitparser.arithmetic-parser-test", "multiplication-test", "petitparser.arithmetic-parser-test/multiplication-test", 860296339, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.arithmetic-parser-test", "petitparser.arithmetic-parser-test", -1011107552, null), new cljs.core.Symbol(null, "multiplication-test", "multiplication-test", -457137195, null), "test\\petitparser\\arithmetic_parser_test.cljc", 
29, 1, 77, 77, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.arithmetic_parser_test.multiplication_test) ? petitparser.arithmetic_parser_test.multiplication_test.cljs$lang$test : null]));
petitparser.arithmetic_parser_test.pow_test = function petitparser$arithmetic_parser_test$pow_test() {
  return cljs.test.test_var.call(null, petitparser.arithmetic_parser_test.pow_test.cljs$lang$var);
};
petitparser.arithmetic_parser_test.pow_test.cljs$lang$test = function() {
  try {
    var values__3876__auto___4205 = new cljs.core.List(null, 8.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "2 ^ 3"), null, 1, null), 2, null);
    var result__3877__auto___4206 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4205);
    if (cljs.core.truth_(result__3877__auto___4206)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 85, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 8.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 ^ 3")), 
      85, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4205), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 85, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 8.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 ^ 3")), 
      85, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4205), null, 1, null), 2, null), null]));
    }
  } catch (e4198) {
    var t__3927__auto___4207 = e4198;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 85, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 8.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 ^ 3")), 
    85, t__3927__auto___4207, null]));
  }
  try {
    var values__3876__auto___4208 = new cljs.core.List(null, -8, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "-2 ^ 3"), null, 1, null), 2, null);
    var result__3877__auto___4209 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4208);
    if (cljs.core.truth_(result__3877__auto___4209)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 86, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -8, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-2 ^ 3")), 
      86, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4208), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 86, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -8, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-2 ^ 3")), 
      86, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4208), null, 1, null), 2, null), null]));
    }
  } catch (e4199) {
    var t__3927__auto___4210 = e4199;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 86, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -8, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-2 ^ 3")), 
    86, t__3927__auto___4210, null]));
  }
  try {
    var values__3876__auto___4211 = new cljs.core.List(null, -.125, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "-2 ^ -3"), null, 1, null), 2, null);
    var result__3877__auto___4212 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4211);
    if (cljs.core.truth_(result__3877__auto___4212)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 87, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -.125, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "-2 ^ -3")), 87, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4211), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 87, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -.125, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "-2 ^ -3")), 87, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4211), null, 1, null), 2, null), null]));
    }
  } catch (e4200) {
    var t__3927__auto___4213 = e4200;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 87, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -.125, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "-2 ^ -3")), 87, t__3927__auto___4213, null]));
  }
  try {
    var values__3876__auto___4214 = new cljs.core.List(null, 64.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "4 ^ 3"), null, 1, null), 2, null);
    var result__3877__auto___4215 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4214);
    if (cljs.core.truth_(result__3877__auto___4215)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 88, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 64.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "4 ^ 3")), 
      88, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4214), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 88, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 64.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "4 ^ 3")), 
      88, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4214), null, 1, null), 2, null), null]));
    }
  } catch (e4201) {
    var t__3927__auto___4216 = e4201;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 88, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 64.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "4 ^ 3")), 
    88, t__3927__auto___4216, null]));
  }
  try {
    var values__3876__auto___4217 = new cljs.core.List(null, 262144.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "4 ^ 3 ^ 2"), null, 1, null), 2, null);
    var result__3877__auto___4218 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4217);
    if (cljs.core.truth_(result__3877__auto___4218)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 89, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 262144.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "4 ^ 3 ^ 2")), 89, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4217), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 89, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 262144.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "4 ^ 3 ^ 2")), 89, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4217), null, 1, null), 2, null), null]));
    }
  } catch (e4202) {
    var t__3927__auto___4219 = e4202;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 89, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 262144.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "4 ^ 3 ^ 2")), 89, t__3927__auto___4219, null]));
  }
  try {
    var values__3876__auto___4220 = new cljs.core.List(null, 262144.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "4 ^ 3 ^ 2 ^ 1"), null, 1, null), 2, null);
    var result__3877__auto___4221 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4220);
    if (cljs.core.truth_(result__3877__auto___4221)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 49, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 90, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 262144.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "4 ^ 3 ^ 2 ^ 1")), 90, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4220), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 49, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 90, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 262144.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "4 ^ 3 ^ 2 ^ 1")), 90, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4220), null, 1, null), 2, null), null]));
    }
  } catch (e4203) {
    var t__3927__auto___4222 = e4203;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 49, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 90, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 262144.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "4 ^ 3 ^ 2 ^ 1")), 90, t__3927__auto___4222, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, 262144.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "4 ^ 3 ^ 2 ^ 1 ^ 0"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 53, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 91, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 262144.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "4 ^ 3 ^ 2 ^ 1 ^ 0")), 91, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 53, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 91, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 262144.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "4 ^ 3 ^ 2 ^ 1 ^ 0")), 91, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4204) {
    var t__3927__auto__ = e4204;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 53, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 91, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 262144.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "4 ^ 3 ^ 2 ^ 1 ^ 0")), 91, t__3927__auto__, null]));
  }
};
petitparser.arithmetic_parser_test.pow_test.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.arithmetic_parser_test.pow_test;
}, new cljs.core.Symbol("petitparser.arithmetic-parser-test", "pow-test", "petitparser.arithmetic-parser-test/pow-test", -1440511983, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.arithmetic-parser-test", "petitparser.arithmetic-parser-test", -1011107552, null), new cljs.core.Symbol(null, "pow-test", "pow-test", -73195689, null), "test\\petitparser\\arithmetic_parser_test.cljc", 
18, 1, 84, 84, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.arithmetic_parser_test.pow_test) ? petitparser.arithmetic_parser_test.pow_test.cljs$lang$test : null]));
petitparser.arithmetic_parser_test.subtraction_test = function petitparser$arithmetic_parser_test$subtraction_test() {
  return cljs.test.test_var.call(null, petitparser.arithmetic_parser_test.subtraction_test.cljs$lang$var);
};
petitparser.arithmetic_parser_test.subtraction_test.cljs$lang$test = function() {
  try {
    var values__3876__auto___4230 = new cljs.core.List(null, -1, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 - 2"), null, 1, null), 2, null);
    var result__3877__auto___4231 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4230);
    if (cljs.core.truth_(result__3877__auto___4231)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 94, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -1, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2")), 
      94, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4230), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 94, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -1, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2")), 
      94, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4230), null, 1, null), 2, null), null]));
    }
  } catch (e4223) {
    var t__3927__auto___4232 = e4223;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 94, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -1, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2")), 
    94, t__3927__auto___4232, null]));
  }
  try {
    var values__3876__auto___4233 = new cljs.core.List(null, 0.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1.2 - 1.2"), null, 1, null), 2, null);
    var result__3877__auto___4234 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4233);
    if (cljs.core.truth_(result__3877__auto___4234)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 95, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.2 - 1.2")), 
      95, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4233), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 95, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.2 - 1.2")), 
      95, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4233), null, 1, null), 2, null), null]));
    }
  } catch (e4224) {
    var t__3927__auto___4235 = e4224;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 95, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1.2 - 1.2")), 
    95, t__3927__auto___4235, null]));
  }
  try {
    var values__3876__auto___4236 = new cljs.core.List(null, 3.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 - -2"), null, 1, null), 2, null);
    var result__3877__auto___4237 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4236);
    if (cljs.core.truth_(result__3877__auto___4237)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 96, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - -2")), 
      96, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4236), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 96, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - -2")), 
      96, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4236), null, 1, null), 2, null), null]));
    }
  } catch (e4225) {
    var t__3927__auto___4238 = e4225;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 37, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 96, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - -2")), 
    96, t__3927__auto___4238, null]));
  }
  try {
    var values__3876__auto___4239 = new cljs.core.List(null, 1.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "-1 - -2"), null, 1, null), 2, null);
    var result__3877__auto___4240 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4239);
    if (cljs.core.truth_(result__3877__auto___4240)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 97, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-1 - -2")), 
      97, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4239), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 97, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-1 - -2")), 
      97, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4239), null, 1, null), 2, null), null]));
    }
  } catch (e4226) {
    var t__3927__auto___4241 = e4226;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 97, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "-1 - -2")), 
    97, t__3927__auto___4241, null]));
  }
  try {
    var values__3876__auto___4242 = new cljs.core.List(null, -4, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 - 2 - 3"), null, 1, null), 2, null);
    var result__3877__auto___4243 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4242);
    if (cljs.core.truth_(result__3877__auto___4243)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 98, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -4, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2 - 3")), 
      98, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4242), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 98, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -4, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2 - 3")), 
      98, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4242), null, 1, null), 2, null), null]));
    }
  } catch (e4227) {
    var t__3927__auto___4244 = e4227;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 98, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -4, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2 - 3")), 
    98, t__3927__auto___4244, null]));
  }
  try {
    var values__3876__auto___4245 = new cljs.core.List(null, -8, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 - 2 - 3 - 4"), null, 1, null), 2, null);
    var result__3877__auto___4246 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4245);
    if (cljs.core.truth_(result__3877__auto___4246)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 99, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -8, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2 - 3 - 4")), 
      99, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4245), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 99, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -8, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2 - 3 - 4")), 
      99, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4245), null, 1, null), 2, null), null]));
    }
  } catch (e4228) {
    var t__3927__auto___4247 = e4228;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 45, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 99, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -8, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2 - 3 - 4")), 
    99, t__3927__auto___4247, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, -13, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "1 - 2 - 3 - 4 - 5"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 50, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 100, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -13, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2 - 3 - 4 - 5")), 
      100, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 50, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 100, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -13, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2 - 3 - 4 - 5")), 
      100, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4229) {
    var t__3927__auto__ = e4229;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 50, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 100, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), -13, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "1 - 2 - 3 - 4 - 5")), 
    100, t__3927__auto__, null]));
  }
};
petitparser.arithmetic_parser_test.subtraction_test.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.arithmetic_parser_test.subtraction_test;
}, new cljs.core.Symbol("petitparser.arithmetic-parser-test", "subtraction-test", "petitparser.arithmetic-parser-test/subtraction-test", 714548858, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.arithmetic-parser-test", "petitparser.arithmetic-parser-test", -1011107552, null), new cljs.core.Symbol(null, "subtraction-test", "subtraction-test", -2079010556, null), "test\\petitparser\\arithmetic_parser_test.cljc", 
26, 1, 93, 93, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.arithmetic_parser_test.subtraction_test) ? petitparser.arithmetic_parser_test.subtraction_test.cljs$lang$test : null]));
petitparser.arithmetic_parser_test.priority_test = function petitparser$arithmetic_parser_test$priority_test() {
  return cljs.test.test_var.call(null, petitparser.arithmetic_parser_test.priority_test.cljs$lang$var);
};
petitparser.arithmetic_parser_test.priority_test.cljs$lang$test = function() {
  try {
    var values__3876__auto___4252 = new cljs.core.List(null, 10.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "2 * 3 + 4"), null, 1, null), 2, null);
    var result__3877__auto___4253 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4252);
    if (cljs.core.truth_(result__3877__auto___4253)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 103, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "2 * 3 + 4")), 103, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4252), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 103, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "2 * 3 + 4")), 103, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4252), null, 1, null), 2, null), null]));
    }
  } catch (e4248) {
    var t__3927__auto___4254 = e4248;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 103, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 10.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "2 * 3 + 4")), 103, t__3927__auto___4254, null]));
  }
  try {
    var values__3876__auto___4255 = new cljs.core.List(null, 14.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "2 + 3 * 4"), null, 1, null), 2, null);
    var result__3877__auto___4256 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4255);
    if (cljs.core.truth_(result__3877__auto___4256)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 104, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 14.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "2 + 3 * 4")), 104, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4255), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 104, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 14.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "2 + 3 * 4")), 104, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4255), null, 1, null), 2, null), null]));
    }
  } catch (e4249) {
    var t__3927__auto___4257 = e4249;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 41, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 104, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 14.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "2 + 3 * 4")), 104, t__3927__auto___4257, null]));
  }
  try {
    var values__3876__auto___4258 = new cljs.core.List(null, 6.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "6 / 3 + 4"), null, 1, null), 2, null);
    var result__3877__auto___4259 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4258);
    if (cljs.core.truth_(result__3877__auto___4259)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 105, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "6 / 3 + 4")), 
      105, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4258), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 105, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "6 / 3 + 4")), 
      105, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4258), null, 1, null), 2, null), null]));
    }
  } catch (e4250) {
    var t__3927__auto___4260 = e4250;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 105, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 6.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "6 / 3 + 4")), 
    105, t__3927__auto___4260, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, 5.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "2 + 6 / 2"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 106, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 5.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 + 6 / 2")), 
      106, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 106, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 5.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 + 6 / 2")), 
      106, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4251) {
    var t__3927__auto__ = e4251;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 106, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 5.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "2 + 6 / 2")), 
    106, t__3927__auto__, null]));
  }
};
petitparser.arithmetic_parser_test.priority_test.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.arithmetic_parser_test.priority_test;
}, new cljs.core.Symbol("petitparser.arithmetic-parser-test", "priority-test", "petitparser.arithmetic-parser-test/priority-test", 1517760450, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.arithmetic-parser-test", "petitparser.arithmetic-parser-test", -1011107552, null), new cljs.core.Symbol(null, "priority-test", "priority-test", -386491260, null), "test\\petitparser\\arithmetic_parser_test.cljc", 
23, 1, 102, 102, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.arithmetic_parser_test.priority_test) ? petitparser.arithmetic_parser_test.priority_test.cljs$lang$test : null]));
petitparser.arithmetic_parser_test.parens_test = function petitparser$arithmetic_parser_test$parens_test() {
  return cljs.test.test_var.call(null, petitparser.arithmetic_parser_test.parens_test.cljs$lang$var);
};
petitparser.arithmetic_parser_test.parens_test.cljs$lang$test = function() {
  try {
    var values__3876__auto___4269 = new cljs.core.List(null, 1.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "(1)"), null, 1, null), 2, null);
    var result__3877__auto___4270 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4269);
    if (cljs.core.truth_(result__3877__auto___4270)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 109, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "(1)")), 
      109, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4269), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 109, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "(1)")), 
      109, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4269), null, 1, null), 2, null), null]));
    }
  } catch (e4261) {
    var t__3927__auto___4271 = e4261;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 34, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 109, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "(1)")), 
    109, t__3927__auto___4271, null]));
  }
  try {
    var values__3876__auto___4272 = new cljs.core.List(null, 3.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "(1 + 2)"), null, 1, null), 2, null);
    var result__3877__auto___4273 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4272);
    if (cljs.core.truth_(result__3877__auto___4273)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 110, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "(1 + 2)")), 
      110, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4272), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 110, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "(1 + 2)")), 
      110, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4272), null, 1, null), 2, null), null]));
    }
  } catch (e4262) {
    var t__3927__auto___4274 = e4262;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 110, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "(1 + 2)")), 
    110, t__3927__auto___4274, null]));
  }
  try {
    var values__3876__auto___4275 = new cljs.core.List(null, 1.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "((1))"), null, 1, null), 2, null);
    var result__3877__auto___4276 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4275);
    if (cljs.core.truth_(result__3877__auto___4276)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 111, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "((1))")), 
      111, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4275), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 111, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "((1))")), 
      111, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4275), null, 1, null), 2, null), null]));
    }
  } catch (e4263) {
    var t__3927__auto___4277 = e4263;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 111, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "((1))")), 
    111, t__3927__auto___4277, null]));
  }
  try {
    var values__3876__auto___4278 = new cljs.core.List(null, 3.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "((1 + 2))"), null, 1, null), 2, null);
    var result__3877__auto___4279 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4278);
    if (cljs.core.truth_(result__3877__auto___4279)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 112, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "((1 + 2))")), 
      112, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4278), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 112, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "((1 + 2))")), 
      112, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4278), null, 1, null), 2, null), null]));
    }
  } catch (e4264) {
    var t__3927__auto___4280 = e4264;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 40, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 112, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "((1 + 2))")), 
    112, t__3927__auto___4280, null]));
  }
  try {
    var values__3876__auto___4281 = new cljs.core.List(null, 14.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "2 * (3 + 4)"), null, 1, null), 2, null);
    var result__3877__auto___4282 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4281);
    if (cljs.core.truth_(result__3877__auto___4282)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 43, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 113, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 14.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "2 * (3 + 4)")), 113, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4281), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 43, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 113, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 14.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "2 * (3 + 4)")), 113, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4281), null, 1, null), 2, null), null]));
    }
  } catch (e4265) {
    var t__3927__auto___4283 = e4265;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 43, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 113, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 14.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "2 * (3 + 4)")), 113, t__3927__auto___4283, null]));
  }
  try {
    var values__3876__auto___4284 = new cljs.core.List(null, 20.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "(2 + 3) * 4"), null, 1, null), 2, null);
    var result__3877__auto___4285 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4284);
    if (cljs.core.truth_(result__3877__auto___4285)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 43, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 114, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "(2 + 3) * 4")), 114, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4284), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 43, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 114, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
      "(2 + 3) * 4")), 114, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4284), null, 1, null), 2, null), null]));
    }
  } catch (e4266) {
    var t__3927__auto___4286 = e4266;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 43, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 114, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 20.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), 
    "(2 + 3) * 4")), 114, t__3927__auto___4286, null]));
  }
  try {
    var values__3876__auto___4287 = new cljs.core.List(null, 1.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "6 / (2 + 4)"), null, 1, null), 2, null);
    var result__3877__auto___4288 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4287);
    if (cljs.core.truth_(result__3877__auto___4288)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 42, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 115, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "6 / (2 + 4)")), 
      115, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4287), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 42, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 115, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "6 / (2 + 4)")), 
      115, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4287), null, 1, null), 2, null), null]));
    }
  } catch (e4267) {
    var t__3927__auto___4289 = e4267;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 42, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 115, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "6 / (2 + 4)")), 
    115, t__3927__auto___4289, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, 4.0, new cljs.core.List(null, petitparser.core.parse.call(null, petitparser.arithmetic_parser_test.pp, "(2 + 6) / 2"), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 42, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 7, 116, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "(2 + 6) / 2")), 
      116, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 42, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 7, 116, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "(2 + 6) / 2")), 
      116, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4268) {
    var t__3927__auto__ = e4268;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\arithmetic_parser_test.cljc", 42, new cljs.core.Keyword(null, "error", "error", -978969032), 7, 116, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 4.0, cljs.core.list(new cljs.core.Symbol("pp", "parse", "pp/parse", 478379708, null), new cljs.core.Symbol(null, "pp", "pp", 927842543, null), "(2 + 6) / 2")), 
    116, t__3927__auto__, null]));
  }
};
petitparser.arithmetic_parser_test.parens_test.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.arithmetic_parser_test.parens_test;
}, new cljs.core.Symbol("petitparser.arithmetic-parser-test", "parens-test", "petitparser.arithmetic-parser-test/parens-test", 1977790892, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.arithmetic-parser-test", "petitparser.arithmetic-parser-test", -1011107552, null), new cljs.core.Symbol(null, "parens-test", "parens-test", -1503518994, null), "test\\petitparser\\arithmetic_parser_test.cljc", 
21, 1, 108, 108, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.arithmetic_parser_test.parens_test) ? petitparser.arithmetic_parser_test.parens_test.cljs$lang$test : null]));
goog.provide("petitparser.input_stream_test");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("petitparser.input_stream");
petitparser.input_stream_test.next_BANG__increments_position = function petitparser$input_stream_test$next_BANG__increments_position() {
  return cljs.test.test_var.call(null, petitparser.input_stream_test.next_BANG__increments_position.cljs$lang$var);
};
petitparser.input_stream_test.next_BANG__increments_position.cljs$lang$test = function() {
  var stream = petitparser.input_stream.make_stream.call(null, "abc");
  try {
    var values__3876__auto___4299 = new cljs.core.List(null, 0, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4300 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4299);
    if (cljs.core.truth_(result__3877__auto___4300)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 8, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 8, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4299), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 8, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 8, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4299), null, 1, null), 2, null), null]));
    }
  } catch (e4292) {
    var t__3927__auto___4301 = e4292;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 8, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 8, t__3927__auto___4301, null]));
  }
  try {
    var values__3876__auto___4302 = new cljs.core.List(null, "a", new cljs.core.List(null, petitparser.input_stream.next_BANG_.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4303 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4302);
    if (cljs.core.truth_(result__3877__auto___4303)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 9, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      9, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4302), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 9, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      9, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4302), null, 1, null), 2, null), null]));
    }
  } catch (e4293) {
    var t__3927__auto___4304 = e4293;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 9, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    9, t__3927__auto___4304, null]));
  }
  try {
    var values__3876__auto___4305 = new cljs.core.List(null, 1, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4306 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4305);
    if (cljs.core.truth_(result__3877__auto___4306)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 10, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 10, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4305), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 10, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 10, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4305), null, 1, null), 2, null), null]));
    }
  } catch (e4294) {
    var t__3927__auto___4307 = e4294;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 10, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 10, t__3927__auto___4307, null]));
  }
  try {
    var values__3876__auto___4308 = new cljs.core.List(null, "b", new cljs.core.List(null, petitparser.input_stream.next_BANG_.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4309 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4308);
    if (cljs.core.truth_(result__3877__auto___4309)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 11, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "b", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      11, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4308), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 11, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "b", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      11, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4308), null, 1, null), 2, null), null]));
    }
  } catch (e4295) {
    var t__3927__auto___4310 = e4295;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 11, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "b", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    11, t__3927__auto___4310, null]));
  }
  try {
    var values__3876__auto___4311 = new cljs.core.List(null, 2, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4312 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4311);
    if (cljs.core.truth_(result__3877__auto___4312)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 12, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 12, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4311), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 12, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 12, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4311), null, 1, null), 2, null), null]));
    }
  } catch (e4296) {
    var t__3927__auto___4313 = e4296;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 12, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 12, t__3927__auto___4313, null]));
  }
  try {
    var values__3876__auto___4314 = new cljs.core.List(null, "c", new cljs.core.List(null, petitparser.input_stream.next_BANG_.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4315 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4314);
    if (cljs.core.truth_(result__3877__auto___4315)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 13, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      13, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4314), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 13, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      13, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4314), null, 1, null), 2, null), null]));
    }
  } catch (e4297) {
    var t__3927__auto___4316 = e4297;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 13, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    13, t__3927__auto___4316, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, 3, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 14, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 14, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 14, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 14, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4298) {
    var t__3927__auto__ = e4298;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 14, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 14, t__3927__auto__, null]));
  }
};
petitparser.input_stream_test.next_BANG__increments_position.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.input_stream_test.next_BANG__increments_position;
}, new cljs.core.Symbol("petitparser.input-stream-test", "next!-increments-position", "petitparser.input-stream-test/next!-increments-position", 18003210, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, 
"line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "next!-increments-position", "next!-increments-position", 1216987075, null), "test\\petitparser\\input_stream_test.cljc", 
35, 1, 6, 6, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.next_BANG__increments_position) ? petitparser.input_stream_test.next_BANG__increments_position.cljs$lang$test : null]));
petitparser.input_stream_test.peek_does_not_increment_position = function petitparser$input_stream_test$peek_does_not_increment_position() {
  return cljs.test.test_var.call(null, petitparser.input_stream_test.peek_does_not_increment_position.cljs$lang$var);
};
petitparser.input_stream_test.peek_does_not_increment_position.cljs$lang$test = function() {
  var stream = petitparser.input_stream.make_stream.call(null, "abc");
  try {
    var values__3876__auto___4321 = new cljs.core.List(null, 0, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4322 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4321);
    if (cljs.core.truth_(result__3877__auto___4322)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 18, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 18, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4321), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 18, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 18, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4321), null, 1, null), 2, null), null]));
    }
  } catch (e4317) {
    var t__3927__auto___4323 = e4317;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 18, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 18, t__3927__auto___4323, null]));
  }
  try {
    var values__3876__auto___4324 = new cljs.core.List(null, "a", new cljs.core.List(null, petitparser.input_stream.peek.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4325 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4324);
    if (cljs.core.truth_(result__3877__auto___4325)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 32, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 19, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "peek", "in/peek", 1349139481, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      19, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4324), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 32, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 19, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "peek", "in/peek", 1349139481, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      19, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4324), null, 1, null), 2, null), null]));
    }
  } catch (e4318) {
    var t__3927__auto___4326 = e4318;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 32, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 19, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "peek", "in/peek", 1349139481, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    19, t__3927__auto___4326, null]));
  }
  try {
    var values__3876__auto___4327 = new cljs.core.List(null, 0, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4328 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4327);
    if (cljs.core.truth_(result__3877__auto___4328)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 20, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 20, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4327), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 20, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 20, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4327), null, 1, null), 2, null), null]));
    }
  } catch (e4319) {
    var t__3927__auto___4329 = e4319;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 20, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 20, t__3927__auto___4329, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, "a", new cljs.core.List(null, petitparser.input_stream.peek.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 32, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 21, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "peek", "in/peek", 1349139481, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      21, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 32, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 21, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "peek", "in/peek", 1349139481, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      21, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4320) {
    var t__3927__auto__ = e4320;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 32, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 21, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "peek", "in/peek", 1349139481, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    21, t__3927__auto__, null]));
  }
};
petitparser.input_stream_test.peek_does_not_increment_position.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.input_stream_test.peek_does_not_increment_position;
}, new cljs.core.Symbol("petitparser.input-stream-test", "peek-does-not-increment-position", "petitparser.input-stream-test/peek-does-not-increment-position", -1968767563, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "peek-does-not-increment-position", "peek-does-not-increment-position", 
1380841340, null), "test\\petitparser\\input_stream_test.cljc", 42, 1, 16, 16, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.peek_does_not_increment_position) ? petitparser.input_stream_test.peek_does_not_increment_position.cljs$lang$test : null]));
petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily = function petitparser$input_stream_test$reset_position_BANG__allows_to_move_the_cursor_arbitrarily() {
  return cljs.test.test_var.call(null, petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily.cljs$lang$var);
};
petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily.cljs$lang$test = function() {
  var stream = petitparser.input_stream.make_stream.call(null, "abc");
  try {
    var values__3876__auto___4339 = new cljs.core.List(null, 0, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4340 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4339);
    if (cljs.core.truth_(result__3877__auto___4340)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 25, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 25, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4339), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 25, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 25, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4339), null, 1, null), 2, null), null]));
    }
  } catch (e4330) {
    var t__3927__auto___4341 = e4330;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 25, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 0, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 25, t__3927__auto___4341, null]));
  }
  try {
    var values__3876__auto___4342 = new cljs.core.List(null, "a", new cljs.core.List(null, petitparser.input_stream.next_BANG_.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4343 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4342);
    if (cljs.core.truth_(result__3877__auto___4343)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 26, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      26, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4342), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 26, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      26, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4342), null, 1, null), 2, null), null]));
    }
  } catch (e4331) {
    var t__3927__auto___4344 = e4331;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 26, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "a", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    26, t__3927__auto___4344, null]));
  }
  try {
    var values__3876__auto___4345 = new cljs.core.List(null, 1, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4346 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4345);
    if (cljs.core.truth_(result__3877__auto___4346)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 27, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 27, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4345), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 27, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 27, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4345), null, 1, null), 2, null), null]));
    }
  } catch (e4332) {
    var t__3927__auto___4347 = e4332;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 27, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 27, t__3927__auto___4347, null]));
  }
  try {
    var values__3876__auto___4348 = new cljs.core.List(null, "b", new cljs.core.List(null, petitparser.input_stream.next_BANG_.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4349 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4348);
    if (cljs.core.truth_(result__3877__auto___4349)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 28, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "b", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      28, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4348), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 28, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "b", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      28, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4348), null, 1, null), 2, null), null]));
    }
  } catch (e4333) {
    var t__3927__auto___4350 = e4333;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 28, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "b", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    28, t__3927__auto___4350, null]));
  }
  petitparser.input_stream.reset_position_BANG_.call(null, stream, 1);
  try {
    var values__3876__auto___4351 = new cljs.core.List(null, 1, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4352 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4351);
    if (cljs.core.truth_(result__3877__auto___4352)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 30, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 30, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4351), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 30, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 30, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4351), null, 1, null), 2, null), null]));
    }
  } catch (e4334) {
    var t__3927__auto___4353 = e4334;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 30, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 1, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 30, t__3927__auto___4353, null]));
  }
  try {
    var values__3876__auto___4354 = new cljs.core.List(null, "b", new cljs.core.List(null, petitparser.input_stream.next_BANG_.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4355 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4354);
    if (cljs.core.truth_(result__3877__auto___4355)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 31, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "b", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      31, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4354), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 31, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "b", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      31, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4354), null, 1, null), 2, null), null]));
    }
  } catch (e4335) {
    var t__3927__auto___4356 = e4335;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 31, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "b", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    31, t__3927__auto___4356, null]));
  }
  try {
    var values__3876__auto___4357 = new cljs.core.List(null, 2, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4358 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4357);
    if (cljs.core.truth_(result__3877__auto___4358)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 32, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 32, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4357), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 32, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 32, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4357), null, 1, null), 2, null), null]));
    }
  } catch (e4336) {
    var t__3927__auto___4359 = e4336;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 32, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 2, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 32, t__3927__auto___4359, null]));
  }
  try {
    var values__3876__auto___4360 = new cljs.core.List(null, "c", new cljs.core.List(null, petitparser.input_stream.next_BANG_.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto___4361 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4360);
    if (cljs.core.truth_(result__3877__auto___4361)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 33, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      33, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4360), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 33, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
      33, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4360), null, 1, null), 2, null), null]));
    }
  } catch (e4337) {
    var t__3927__auto___4362 = e4337;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 33, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 33, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "c", cljs.core.list(new cljs.core.Symbol("in", "next!", "in/next!", -1677055701, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 
    33, t__3927__auto___4362, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, 3, new cljs.core.List(null, petitparser.input_stream.position.call(null, stream), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 34, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 34, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 34, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
      null))), 34, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4338) {
    var t__3927__auto__ = e4338;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 34, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), 3, cljs.core.list(new cljs.core.Symbol("in", "position", "in/position", -371207270, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, 
    null))), 34, t__3927__auto__, null]));
  }
};
petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily;
}, new cljs.core.Symbol("petitparser.input-stream-test", "reset-position!-allows-to-move-the-cursor-arbitrarily", "petitparser.input-stream-test/reset-position!-allows-to-move-the-cursor-arbitrarily", 1692518326, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, 
"column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "reset-position!-allows-to-move-the-cursor-arbitrarily", 
"reset-position!-allows-to-move-the-cursor-arbitrarily", -1404510775, null), "test\\petitparser\\input_stream_test.cljc", 63, 1, 23, 23, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily) ? petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily.cljs$lang$test : null]));
petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed = function petitparser$input_stream_test$end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed() {
  return cljs.test.test_var.call(null, petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed.cljs$lang$var);
};
petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed.cljs$lang$test = function() {
  var stream = petitparser.input_stream.make_stream.call(null, "abc");
  try {
    var values__3876__auto___4367 = new cljs.core.List(null, petitparser.input_stream.end_QMARK_.call(null, stream), null, 1, null);
    var result__3877__auto___4368 = cljs.core.apply.call(null, cljs.core.not, values__3876__auto___4367);
    if (cljs.core.truth_(result__3877__auto___4368)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 31, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 38, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 38, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto___4367), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 31, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 38, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 38, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto___4367), null, 1, null), 2, null), null]));
    }
  } catch (e4363) {
    var t__3927__auto___4369 = e4363;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 31, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 38, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 38, t__3927__auto___4369, 
    null]));
  }
  petitparser.input_stream.next_BANG_.call(null, stream);
  try {
    var values__3876__auto___4370 = new cljs.core.List(null, petitparser.input_stream.end_QMARK_.call(null, stream), null, 1, null);
    var result__3877__auto___4371 = cljs.core.apply.call(null, cljs.core.not, values__3876__auto___4370);
    if (cljs.core.truth_(result__3877__auto___4371)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 31, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 40, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 40, cljs.core.cons.call(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto___4370), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 31, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 40, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 40, new cljs.core.List(null, 
      new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), values__3876__auto___4370), null, 1, null), 2, null), null]));
    }
  } catch (e4364) {
    var t__3927__auto___4372 = e4364;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 31, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 40, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null))), 40, t__3927__auto___4372, 
    null]));
  }
  petitparser.input_stream.next_BANG_.call(null, stream);
  petitparser.input_stream.next_BANG_.call(null, stream);
  try {
    var values__3876__auto___4373 = new cljs.core.List(null, stream, null, 1, null);
    var result__3877__auto___4374 = cljs.core.apply.call(null, petitparser.input_stream.end_QMARK_, values__3876__auto___4373);
    if (cljs.core.truth_(result__3877__auto___4374)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 25, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 43, cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null)), 43, cljs.core.cons.call(null, new cljs.core.Symbol("in", "end?", "in/end?", 217138667, 
      null), values__3876__auto___4373), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 25, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 43, cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null)), 43, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, 
      null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), values__3876__auto___4373), null, 1, null), 2, null), null]));
    }
  } catch (e4365) {
    var t__3927__auto___4375 = e4365;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 25, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 43, cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null)), 43, t__3927__auto___4375, null]));
  }
  var n__4613__auto___4376 = 10;
  var n_4377 = 0;
  while (true) {
    if (n_4377 < n__4613__auto___4376) {
      petitparser.input_stream.next_BANG_.call(null, stream);
      var G__4378 = n_4377 + 1;
      n_4377 = G__4378;
      continue;
    } else {
    }
    break;
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, stream, null, 1, null);
    var result__3877__auto__ = cljs.core.apply.call(null, petitparser.input_stream.end_QMARK_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 25, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 46, cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null)), 46, cljs.core.cons.call(null, new cljs.core.Symbol("in", "end?", "in/end?", 217138667, 
      null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 25, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 46, cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null)), 46, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, 
      null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4366) {
    var t__3927__auto__ = e4366;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 25, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 46, cljs.core.list(new cljs.core.Symbol("in", "end?", "in/end?", 217138667, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null)), 46, t__3927__auto__, null]));
  }
};
petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed;
}, new cljs.core.Symbol("petitparser.input-stream-test", "end?-only-returns-true-after-the-entire-stream-has-been-consumed", "petitparser.input-stream-test/end?-only-returns-true-after-the-entire-stream-has-been-consumed", -2102378841, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 
1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, 
"end?-only-returns-true-after-the-entire-stream-has-been-consumed", "end?-only-returns-true-after-the-entire-stream-has-been-consumed", -904186772, null), "test\\petitparser\\input_stream_test.cljc", 74, 1, 36, 36, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed) ? petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed.cljs$lang$test : null]));
petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters = function petitparser$input_stream_test$take_BANG__returns_string_with_up_to_n_characters() {
  return cljs.test.test_var.call(null, petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters.cljs$lang$var);
};
petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters.cljs$lang$test = function() {
  var stream = petitparser.input_stream.make_stream.call(null, "abcdefghijklmnñopqrstuvwxyz");
  try {
    var values__3876__auto___4381 = new cljs.core.List(null, "abc", new cljs.core.List(null, petitparser.input_stream.take_BANG_.call(null, stream, 3), null, 1, null), 2, null);
    var result__3877__auto___4382 = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto___4381);
    if (cljs.core.truth_(result__3877__auto___4382)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 50, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      3)), 50, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4381), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 50, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      3)), 50, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto___4381), null, 1, null), 2, null), null]));
    }
  } catch (e4379) {
    var t__3927__auto___4383 = e4379;
    cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 50, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "abc", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
    3)), 50, t__3927__auto___4383, null]));
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, "def", new cljs.core.List(null, petitparser.input_stream.take_BANG_.call(null, stream, 3), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 51, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "def", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      3)), 51, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 51, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "def", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      3)), 51, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4380) {
    var t__3927__auto__ = e4380;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 51, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "def", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
    3)), 51, t__3927__auto__, null]));
  }
};
petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters;
}, new cljs.core.Symbol("petitparser.input-stream-test", "take!-returns-string-with-up-to-n-characters", "petitparser.input-stream-test/take!-returns-string-with-up-to-n-characters", 1226315235, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, 
"column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "take!-returns-string-with-up-to-n-characters", 
"take!-returns-string-with-up-to-n-characters", 276897706, null), "test\\petitparser\\input_stream_test.cljc", 54, 1, 48, 48, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters) ? petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters.cljs$lang$test : null]));
petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string = function petitparser$input_stream_test$take_BANG__on_empty_stream_returns_empty_string() {
  return cljs.test.test_var.call(null, petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string.cljs$lang$var);
};
petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string.cljs$lang$test = function() {
  var stream = petitparser.input_stream.make_stream.call(null, "");
  try {
    var values__3876__auto__ = new cljs.core.List(null, "", new cljs.core.List(null, petitparser.input_stream.take_BANG_.call(null, stream, 3), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 55, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      3)), 55, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 55, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      3)), 55, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4384) {
    var t__3927__auto__ = e4384;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 35, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 55, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
    3)), 55, t__3927__auto__, null]));
  }
};
petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string;
}, new cljs.core.Symbol("petitparser.input-stream-test", "take!-on-empty-stream-returns-empty-string", "petitparser.input-stream-test/take!-on-empty-stream-returns-empty-string", 927472690, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, 
"column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "take!-on-empty-stream-returns-empty-string", 
"take!-on-empty-stream-returns-empty-string", 2141657675, null), "test\\petitparser\\input_stream_test.cljc", 52, 1, 53, 53, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string) ? petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string.cljs$lang$test : null]));
petitparser.input_stream_test.take_BANG__stops_at_end_of_stream = function petitparser$input_stream_test$take_BANG__stops_at_end_of_stream() {
  return cljs.test.test_var.call(null, petitparser.input_stream_test.take_BANG__stops_at_end_of_stream.cljs$lang$var);
};
petitparser.input_stream_test.take_BANG__stops_at_end_of_stream.cljs$lang$test = function() {
  var stream = petitparser.input_stream.make_stream.call(null, "abc");
  petitparser.input_stream.next_BANG_.call(null, stream);
  try {
    var values__3876__auto__ = new cljs.core.List(null, "bc", new cljs.core.List(null, petitparser.input_stream.take_BANG_.call(null, stream, 30), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 38, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 60, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "bc", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      30)), 60, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 38, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 60, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "bc", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      30)), 60, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4385) {
    var t__3927__auto__ = e4385;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 38, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 60, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "bc", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
    30)), 60, t__3927__auto__, null]));
  }
};
petitparser.input_stream_test.take_BANG__stops_at_end_of_stream.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.input_stream_test.take_BANG__stops_at_end_of_stream;
}, new cljs.core.Symbol("petitparser.input-stream-test", "take!-stops-at-end-of-stream", "petitparser.input-stream-test/take!-stops-at-end-of-stream", -1352874507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "take!-stops-at-end-of-stream", "take!-stops-at-end-of-stream", 
401988524, null), "test\\petitparser\\input_stream_test.cljc", 38, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.take_BANG__stops_at_end_of_stream) ? petitparser.input_stream_test.take_BANG__stops_at_end_of_stream.cljs$lang$test : null]));
petitparser.input_stream_test.take_BANG__after_end_returns_empty_string = function petitparser$input_stream_test$take_BANG__after_end_returns_empty_string() {
  return cljs.test.test_var.call(null, petitparser.input_stream_test.take_BANG__after_end_returns_empty_string.cljs$lang$var);
};
petitparser.input_stream_test.take_BANG__after_end_returns_empty_string.cljs$lang$test = function() {
  var stream = petitparser.input_stream.make_stream.call(null, "abc");
  var n__4613__auto___4387 = 3;
  var n_4388 = 0;
  while (true) {
    if (n_4388 < n__4613__auto___4387) {
      petitparser.input_stream.next_BANG_.call(null, stream);
      var G__4389 = n_4388 + 1;
      n_4388 = G__4389;
      continue;
    } else {
    }
    break;
  }
  try {
    var values__3876__auto__ = new cljs.core.List(null, "", new cljs.core.List(null, petitparser.input_stream.take_BANG_.call(null, stream, 30), null, 1, null), 2, null);
    var result__3877__auto__ = cljs.core.apply.call(null, cljs.core._EQ_, values__3876__auto__);
    if (cljs.core.truth_(result__3877__auto__)) {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 36, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 9, 65, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      30)), 65, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null]));
    } else {
      cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
      new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 36, new cljs.core.Keyword(null, "fail", "fail", 1706214930), 9, 65, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
      30)), 65, new cljs.core.List(null, new cljs.core.Symbol(null, "not", "not", 1044554643, null), new cljs.core.List(null, cljs.core.cons.call(null, new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), values__3876__auto__), null, 1, null), 2, null), null]));
    }
    return result__3877__auto__;
  } catch (e4386) {
    var t__3927__auto__ = e4386;
    return cljs.test.report.call(null, cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "expected", "expected", 1583670997), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), 
    new cljs.core.Keyword(null, "actual", "actual", 107306363), new cljs.core.Keyword(null, "message", "message", -406056002)], ["D:\\RichoM\\clj-petitparser\\test\\petitparser\\input_stream_test.cljc", 36, new cljs.core.Keyword(null, "error", "error", -978969032), 9, 65, cljs.core.list(new cljs.core.Symbol(null, "\x3d", "\x3d", -1501502141, null), "", cljs.core.list(new cljs.core.Symbol("in", "take!", "in/take!", 626881824, null), new cljs.core.Symbol(null, "stream", "stream", -1119494121, null), 
    30)), 65, t__3927__auto__, null]));
  }
};
petitparser.input_stream_test.take_BANG__after_end_returns_empty_string.cljs$lang$var = new cljs.core.Var(function() {
  return petitparser.input_stream_test.take_BANG__after_end_returns_empty_string;
}, new cljs.core.Symbol("petitparser.input-stream-test", "take!-after-end-returns-empty-string", "petitparser.input-stream-test/take!-after-end-returns-empty-string", 440336502, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "take!-after-end-returns-empty-string", "take!-after-end-returns-empty-string", 
-1566177603, null), "test\\petitparser\\input_stream_test.cljc", 46, 1, 62, 62, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.take_BANG__after_end_returns_empty_string) ? petitparser.input_stream_test.take_BANG__after_end_returns_empty_string.cljs$lang$test : null]));
goog.provide("petitparser.test_runner");
goog.require("cljs.core");
goog.require("cljs.test");
goog.require("petitparser.input_stream_test");
cljs.core.enable_console_print_BANG_.call(null);
cljs.test.run_block.call(null, function() {
  var env4392 = cljs.test.empty_env.call(null);
  var summary4393 = cljs.core.volatile_BANG_.call(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "summary", "summary", 380847952), new cljs.core.Keyword(null, "fail", "fail", 1706214930), 0, new cljs.core.Keyword(null, "error", "error", -978969032), 0, new cljs.core.Keyword(null, "pass", "pass", 1574159993), 0, new cljs.core.Keyword(null, "test", "test", 577538877), 0], null));
  return cljs.core.concat.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.set_env_BANG_.call(null, env4392);
    cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "begin-test-ns", "begin-test-ns", -1701237033)], null));
    return cljs.test.block.call(null, function() {
      var env__3996__auto__ = cljs.test.get_current_env.call(null);
      return cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        if (env__3996__auto__ == null) {
          cljs.test.set_env_BANG_.call(null, cljs.test.empty_env.call(null));
        } else {
        }
        return null;
      }], null), cljs.test.test_vars_block.call(null, new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Var(function() {
        return petitparser.input_stream_test.next_BANG__increments_position;
      }, new cljs.core.Symbol("petitparser.input-stream-test", "next!-increments-position", "petitparser.input-stream-test/next!-increments-position", 18003210, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), 
      new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "next!-increments-position", "next!-increments-position", 
      1216987075, null), "test\\petitparser\\input_stream_test.cljc", 35, 1, 6, 6, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.next_BANG__increments_position) ? petitparser.input_stream_test.next_BANG__increments_position.cljs$lang$test : null])), new cljs.core.Var(function() {
        return petitparser.input_stream_test.peek_does_not_increment_position;
      }, new cljs.core.Symbol("petitparser.input-stream-test", "peek-does-not-increment-position", "petitparser.input-stream-test/peek-does-not-increment-position", -1968767563, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
      2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "peek-does-not-increment-position", "peek-does-not-increment-position", 
      1380841340, null), "test\\petitparser\\input_stream_test.cljc", 42, 1, 16, 16, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.peek_does_not_increment_position) ? petitparser.input_stream_test.peek_does_not_increment_position.cljs$lang$test : null])), new cljs.core.Var(function() {
        return petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily;
      }, new cljs.core.Symbol("petitparser.input-stream-test", "reset-position!-allows-to-move-the-cursor-arbitrarily", "petitparser.input-stream-test/reset-position!-allows-to-move-the-cursor-arbitrarily", 1692518326, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), 
      new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, 
      "reset-position!-allows-to-move-the-cursor-arbitrarily", "reset-position!-allows-to-move-the-cursor-arbitrarily", -1404510775, null), "test\\petitparser\\input_stream_test.cljc", 63, 1, 23, 23, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily) ? petitparser.input_stream_test.reset_position_BANG__allows_to_move_the_cursor_arbitrarily.cljs$lang$test : null])), new cljs.core.Var(function() {
        return petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed;
      }, new cljs.core.Symbol("petitparser.input-stream-test", "end?-only-returns-true-after-the-entire-stream-has-been-consumed", "petitparser.input-stream-test/end?-only-returns-true-after-the-entire-stream-has-been-consumed", -2102378841, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 
      1425389514), new cljs.core.Keyword(null, "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, 
      "end?-only-returns-true-after-the-entire-stream-has-been-consumed", "end?-only-returns-true-after-the-entire-stream-has-been-consumed", -904186772, null), "test\\petitparser\\input_stream_test.cljc", 74, 1, 36, 36, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed) ? petitparser.input_stream_test.end_QMARK__only_returns_true_after_the_entire_stream_has_been_consumed.cljs$lang$test : null])), new cljs.core.Var(function() {
        return petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters;
      }, new cljs.core.Symbol("petitparser.input-stream-test", "take!-returns-string-with-up-to-n-characters", "petitparser.input-stream-test/take!-returns-string-with-up-to-n-characters", 1226315235, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, 
      "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "take!-returns-string-with-up-to-n-characters", 
      "take!-returns-string-with-up-to-n-characters", 276897706, null), "test\\petitparser\\input_stream_test.cljc", 54, 1, 48, 48, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters) ? petitparser.input_stream_test.take_BANG__returns_string_with_up_to_n_characters.cljs$lang$test : null])), new cljs.core.Var(function() {
        return petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string;
      }, new cljs.core.Symbol("petitparser.input-stream-test", "take!-on-empty-stream-returns-empty-string", "petitparser.input-stream-test/take!-on-empty-stream-returns-empty-string", 927472690, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, 
      "column", "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "take!-on-empty-stream-returns-empty-string", 
      "take!-on-empty-stream-returns-empty-string", 2141657675, null), "test\\petitparser\\input_stream_test.cljc", 52, 1, 53, 53, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string) ? petitparser.input_stream_test.take_BANG__on_empty_stream_returns_empty_string.cljs$lang$test : null])), new cljs.core.Var(function() {
        return petitparser.input_stream_test.take_BANG__stops_at_end_of_stream;
      }, new cljs.core.Symbol("petitparser.input-stream-test", "take!-stops-at-end-of-stream", "petitparser.input-stream-test/take!-stops-at-end-of-stream", -1352874507, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", "column", 
      2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "take!-stops-at-end-of-stream", "take!-stops-at-end-of-stream", 
      401988524, null), "test\\petitparser\\input_stream_test.cljc", 38, 1, 57, 57, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.take_BANG__stops_at_end_of_stream) ? petitparser.input_stream_test.take_BANG__stops_at_end_of_stream.cljs$lang$test : null])), new cljs.core.Var(function() {
        return petitparser.input_stream_test.take_BANG__after_end_returns_empty_string;
      }, new cljs.core.Symbol("petitparser.input-stream-test", "take!-after-end-returns-empty-string", "petitparser.input-stream-test/take!-after-end-returns-empty-string", 440336502, null), cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Keyword(null, "name", "name", 1843675177), new cljs.core.Keyword(null, "file", "file", -1269645878), new cljs.core.Keyword(null, "end-column", "end-column", 1425389514), new cljs.core.Keyword(null, "column", 
      "column", 2078222095), new cljs.core.Keyword(null, "line", "line", 212345235), new cljs.core.Keyword(null, "end-line", "end-line", 1837326455), new cljs.core.Keyword(null, "arglists", "arglists", 1661989754), new cljs.core.Keyword(null, "doc", "doc", 1913296891), new cljs.core.Keyword(null, "test", "test", 577538877)], [new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Symbol(null, "take!-after-end-returns-empty-string", 
      "take!-after-end-returns-empty-string", -1566177603, null), "test\\petitparser\\input_stream_test.cljc", 46, 1, 62, 62, cljs.core.List.EMPTY, null, cljs.core.truth_(petitparser.input_stream_test.take_BANG__after_end_returns_empty_string) ? petitparser.input_stream_test.take_BANG__after_end_returns_empty_string.cljs$lang$test : null]))], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
        if (env__3996__auto__ == null) {
          return cljs.test.clear_env_BANG_.call(null);
        } else {
          return null;
        }
      }], null));
    }());
  }, function() {
    return cljs.test.do_report.call(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "ns", "ns", 441598760), new cljs.core.Symbol(null, "petitparser.input-stream-test", "petitparser.input-stream-test", 1409923339, null), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-test-ns", "end-test-ns", 1620675645)], null));
  }], null), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    return cljs.core._vreset_BANG_.call(null, summary4393, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core._PLUS_).call(null, cljs.core._deref.call(null, summary4393), (new cljs.core.Keyword(null, "report-counters", "report-counters", -1702609242)).cljs$core$IFn$_invoke$arity$1(cljs.test.get_and_clear_env_BANG_.call(null))));
  }], null)), new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
    cljs.test.set_env_BANG_.call(null, env4392);
    cljs.test.do_report.call(null, cljs.core.deref.call(null, summary4393));
    cljs.test.report.call(null, cljs.core.assoc.call(null, cljs.core.deref.call(null, summary4393), new cljs.core.Keyword(null, "type", "type", 1174270348), new cljs.core.Keyword(null, "end-run-tests", "end-run-tests", 267300563)));
    return cljs.test.clear_env_BANG_.call(null);
  }], null));
}());
goog.provide("test.arithmetic_parser");
goog.require("cljs.core");
goog.require("petitparser.core");
test.arithmetic_parser.grammar = cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null, "primary", "primary", 817773892), new cljs.core.Keyword(null, "factors", "factors", 1107817380), new cljs.core.Keyword(null, "number", "number", 1570378438), new cljs.core.Keyword(null, "terms", "terms", -1556977978), new cljs.core.Keyword(null, "addition", "addition", 1756544008), new cljs.core.Keyword(null, "parentheses", "parentheses", 17909609), new cljs.core.Keyword(null, "start", "start", -355208981), 
new cljs.core.Keyword(null, "addition-ops", "addition-ops", 933059307), new cljs.core.Keyword(null, "power-ops", "power-ops", -108582803), new cljs.core.Keyword(null, "power", "power", -937852079), new cljs.core.Keyword(null, "multiplication", "multiplication", 1090197524), new cljs.core.Keyword(null, "multiplication-ops", "multiplication-ops", -2100707171)], [petitparser.core.or.call(null, new cljs.core.Keyword(null, "number", "number", 1570378438), new cljs.core.Keyword(null, "parentheses", "parentheses", 
17909609)), petitparser.core.or.call(null, new cljs.core.Keyword(null, "multiplication", "multiplication", 1090197524), new cljs.core.Keyword(null, "power", "power", -937852079)), petitparser.core.trim.call(null, petitparser.core.flatten.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.optional.call(null, "-"), petitparser.core.plus.call(null, petitparser.core.digit), petitparser.core.optional.call(null, new cljs.core.PersistentVector(null, 
2, 5, cljs.core.PersistentVector.EMPTY_NODE, [".", petitparser.core.plus.call(null, petitparser.core.digit)], null))], null))), petitparser.core.or.call(null, new cljs.core.Keyword(null, "addition", "addition", 1756544008), new cljs.core.Keyword(null, "factors", "factors", 1107817380)), petitparser.core.separated_by.call(null, new cljs.core.Keyword(null, "factors", "factors", 1107817380), new cljs.core.Keyword(null, "addition-ops", "addition-ops", 933059307)), new cljs.core.PersistentVector(null, 
3, 5, cljs.core.PersistentVector.EMPTY_NODE, [petitparser.core.trim.call(null, "("), new cljs.core.Keyword(null, "terms", "terms", -1556977978), petitparser.core.trim.call(null, ")")], null), petitparser.core.end.call(null, new cljs.core.Keyword(null, "terms", "terms", -1556977978)), petitparser.core.trim.call(null, petitparser.core.or.call(null, "+", "-")), petitparser.core.trim.call(null, "^"), petitparser.core.separated_by.call(null, new cljs.core.Keyword(null, "primary", "primary", 817773892), 
new cljs.core.Keyword(null, "power-ops", "power-ops", -108582803)), petitparser.core.separated_by.call(null, new cljs.core.Keyword(null, "power", "power", -937852079), new cljs.core.Keyword(null, "multiplication-ops", "multiplication-ops", -2100707171)), petitparser.core.trim.call(null, petitparser.core.or.call(null, "*", "/"))]);
test.arithmetic_parser.operations = new cljs.core.PersistentArrayMap(null, 5, ["+", cljs.core._PLUS_, "-", cljs.core._, "*", cljs.core._STAR_, "/", cljs.core._SLASH_, "^", function(a, b) {
  return Math.pow(b, a);
}], null);
test.arithmetic_parser.reduce_operands = function test$arithmetic_parser$reduce_operands(nodes) {
  var total = cljs.core.first.call(null, nodes);
  var pairs = cljs.core.partition.call(null, 2, cljs.core.next.call(null, nodes));
  return cljs.core.reduce.call(null, function(sub, p__4396) {
    var vec__4397 = p__4396;
    var op = cljs.core.nth.call(null, vec__4397, 0, null);
    var n = cljs.core.nth.call(null, vec__4397, 1, null);
    return op.call(null, sub, n);
  }, total, pairs);
};
test.arithmetic_parser.transformations = new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null, "number", "number", 1570378438), parseFloat, new cljs.core.Keyword(null, "parentheses", "parentheses", 17909609), cljs.core.second, new cljs.core.Keyword(null, "addition", "addition", 1756544008), test.arithmetic_parser.reduce_operands, new cljs.core.Keyword(null, "multiplication", "multiplication", 1090197524), test.arithmetic_parser.reduce_operands, new cljs.core.Keyword(null, "power", 
"power", -937852079), cljs.core.comp.call(null, test.arithmetic_parser.reduce_operands, cljs.core.reverse), new cljs.core.Keyword(null, "addition-ops", "addition-ops", 933059307), test.arithmetic_parser.operations, new cljs.core.Keyword(null, "multiplication-ops", "multiplication-ops", -2100707171), test.arithmetic_parser.operations, new cljs.core.Keyword(null, "power-ops", "power-ops", -108582803), test.arithmetic_parser.operations], null);
test.arithmetic_parser.parser = petitparser.core.compose.call(null, test.arithmetic_parser.grammar, test.arithmetic_parser.transformations);
test.arithmetic_parser.parse = function test$arithmetic_parser$parse(str) {
  return petitparser.core.parse.call(null, test.arithmetic_parser.parser, str);
};
